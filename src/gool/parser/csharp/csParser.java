// $ANTLR 3.5 /Users/jeremie/ANTLR/cs.g 2014-01-13 15:05:31

  package gool.parser.csharp;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;


@SuppressWarnings("all")
public class csParser extends Parser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT", "Character_literal", 
		"DECIMAL_DIGIT", "DEFINE", "DEFINE_TOKEN", "DOC_LINE_COMMENT", "DOT", 
		"Decimal_digits", "Decimal_integer_literal", "ELIF", "ELSE_TOKEN", "ENDIF", 
		"ENDIF_TOKEN", "ENUM", "EscapeSequence", "Exponent_part", "FALSE", "GT", 
		"GooBall", "GooBallIdentifier", "HEX_DIGIT", "HEX_DIGITS", "Hex_number", 
		"IDENTIFIER", "IF", "IF_TOKEN", "INTEGER_TYPE_SUFFIX", "IdentifierPart", 
		"IdentifierStart", "LINE_COMMENT", "MINUS", "NULL", "NUMBER", "PP_AND_EXPRESSION", 
		"PP_CONDITIONAL", "PP_EQUALITY_EXPRESSION", "PP_EXPRESSION", "PP_OR_EXPRESSION", 
		"PP_PRIMARY_EXPRESSION", "PP_UNARY_EXPRESSION", "PREPROCESSOR_DIRECTIVE", 
		"PTR", "Pragma", "RPAREN", "Real_literal", "Real_type_suffix", "SEMI", 
		"STRINGLITERAL", "Sign", "TRUE", "TS", "UNDEF", "UNDEF_TOKEN", "USING", 
		"Verbatim_string_literal", "Verbatim_string_literal_character", "WS", 
		"'!'", "'!='", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "'*'", "'*='", 
		"'+'", "'++'", "'+='", "','", "'--'", "'-='", "'/'", "'/='", "':'", "'::'", 
		"'<'", "'<<'", "'<<='", "'<='", "'='", "'=='", "'=>'", "'>='", "'?'", 
		"'??'", "'['", "']'", "'^'", "'^='", "'__arglist'", "'abstract'", "'add'", 
		"'alias'", "'as'", "'ascending'", "'assembly'", "'base'", "'bool'", "'break'", 
		"'by'", "'byte'", "'case'", "'catch'", "'char'", "'checked'", "'class'", 
		"'const'", "'continue'", "'decimal'", "'default'", "'delegate'", "'descending'", 
		"'do'", "'double'", "'dynamic'", "'else'", "'equals'", "'event'", "'explicit'", 
		"'extern'", "'field'", "'finally'", "'fixed'", "'float'", "'for'", "'foreach'", 
		"'from'", "'get'", "'goto'", "'group'", "'implicit'", "'in'", "'int'", 
		"'interface'", "'internal'", "'into'", "'is'", "'join'", "'let'", "'lock'", 
		"'long'", "'method'", "'module'", "'namespace'", "'new'", "'object'", 
		"'on'", "'operator'", "'orderby'", "'out'", "'override'", "'param'", "'params'", 
		"'partial'", "'pragma'", "'private'", "'property'", "'protected'", "'public'", 
		"'readonly'", "'ref'", "'remove'", "'return'", "'sbyte'", "'sealed'", 
		"'select'", "'set'", "'short'", "'sizeof'", "'stackalloc'", "'static'", 
		"'string'", "'struct'", "'switch'", "'this'", "'throw'", "'try'", "'type'", 
		"'typeof'", "'uint'", "'ulong'", "'unchecked'", "'unsafe'", "'ushort'", 
		"'var'", "'virtual'", "'void'", "'volatile'", "'where'", "'while'", "'yield'", 
		"'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public static final int EOF=-1;
	public static final int T__61=61;
	public static final int T__62=62;
	public static final int T__63=63;
	public static final int T__64=64;
	public static final int T__65=65;
	public static final int T__66=66;
	public static final int T__67=67;
	public static final int T__68=68;
	public static final int T__69=69;
	public static final int T__70=70;
	public static final int T__71=71;
	public static final int T__72=72;
	public static final int T__73=73;
	public static final int T__74=74;
	public static final int T__75=75;
	public static final int T__76=76;
	public static final int T__77=77;
	public static final int T__78=78;
	public static final int T__79=79;
	public static final int T__80=80;
	public static final int T__81=81;
	public static final int T__82=82;
	public static final int T__83=83;
	public static final int T__84=84;
	public static final int T__85=85;
	public static final int T__86=86;
	public static final int T__87=87;
	public static final int T__88=88;
	public static final int T__89=89;
	public static final int T__90=90;
	public static final int T__91=91;
	public static final int T__92=92;
	public static final int T__93=93;
	public static final int T__94=94;
	public static final int T__95=95;
	public static final int T__96=96;
	public static final int T__97=97;
	public static final int T__98=98;
	public static final int T__99=99;
	public static final int T__100=100;
	public static final int T__101=101;
	public static final int T__102=102;
	public static final int T__103=103;
	public static final int T__104=104;
	public static final int T__105=105;
	public static final int T__106=106;
	public static final int T__107=107;
	public static final int T__108=108;
	public static final int T__109=109;
	public static final int T__110=110;
	public static final int T__111=111;
	public static final int T__112=112;
	public static final int T__113=113;
	public static final int T__114=114;
	public static final int T__115=115;
	public static final int T__116=116;
	public static final int T__117=117;
	public static final int T__118=118;
	public static final int T__119=119;
	public static final int T__120=120;
	public static final int T__121=121;
	public static final int T__122=122;
	public static final int T__123=123;
	public static final int T__124=124;
	public static final int T__125=125;
	public static final int T__126=126;
	public static final int T__127=127;
	public static final int T__128=128;
	public static final int T__129=129;
	public static final int T__130=130;
	public static final int T__131=131;
	public static final int T__132=132;
	public static final int T__133=133;
	public static final int T__134=134;
	public static final int T__135=135;
	public static final int T__136=136;
	public static final int T__137=137;
	public static final int T__138=138;
	public static final int T__139=139;
	public static final int T__140=140;
	public static final int T__141=141;
	public static final int T__142=142;
	public static final int T__143=143;
	public static final int T__144=144;
	public static final int T__145=145;
	public static final int T__146=146;
	public static final int T__147=147;
	public static final int T__148=148;
	public static final int T__149=149;
	public static final int T__150=150;
	public static final int T__151=151;
	public static final int T__152=152;
	public static final int T__153=153;
	public static final int T__154=154;
	public static final int T__155=155;
	public static final int T__156=156;
	public static final int T__157=157;
	public static final int T__158=158;
	public static final int T__159=159;
	public static final int T__160=160;
	public static final int T__161=161;
	public static final int T__162=162;
	public static final int T__163=163;
	public static final int T__164=164;
	public static final int T__165=165;
	public static final int T__166=166;
	public static final int T__167=167;
	public static final int T__168=168;
	public static final int T__169=169;
	public static final int T__170=170;
	public static final int T__171=171;
	public static final int T__172=172;
	public static final int T__173=173;
	public static final int T__174=174;
	public static final int T__175=175;
	public static final int T__176=176;
	public static final int T__177=177;
	public static final int T__178=178;
	public static final int T__179=179;
	public static final int T__180=180;
	public static final int T__181=181;
	public static final int T__182=182;
	public static final int T__183=183;
	public static final int T__184=184;
	public static final int T__185=185;
	public static final int T__186=186;
	public static final int T__187=187;
	public static final int T__188=188;
	public static final int T__189=189;
	public static final int T__190=190;
	public static final int T__191=191;
	public static final int T__192=192;
	public static final int T__193=193;
	public static final int T__194=194;
	public static final int T__195=195;
	public static final int T__196=196;
	public static final int T__197=197;
	public static final int T__198=198;
	public static final int T__199=199;
	public static final int T__200=200;
	public static final int T__201=201;
	public static final int T__202=202;
	public static final int COMMENT=4;
	public static final int Character_literal=5;
	public static final int DECIMAL_DIGIT=6;
	public static final int DEFINE=7;
	public static final int DEFINE_TOKEN=8;
	public static final int DOC_LINE_COMMENT=9;
	public static final int DOT=10;
	public static final int Decimal_digits=11;
	public static final int Decimal_integer_literal=12;
	public static final int ELIF=13;
	public static final int ELSE_TOKEN=14;
	public static final int ENDIF=15;
	public static final int ENDIF_TOKEN=16;
	public static final int ENUM=17;
	public static final int EscapeSequence=18;
	public static final int Exponent_part=19;
	public static final int FALSE=20;
	public static final int GT=21;
	public static final int GooBall=22;
	public static final int GooBallIdentifier=23;
	public static final int HEX_DIGIT=24;
	public static final int HEX_DIGITS=25;
	public static final int Hex_number=26;
	public static final int IDENTIFIER=27;
	public static final int IF=28;
	public static final int IF_TOKEN=29;
	public static final int INTEGER_TYPE_SUFFIX=30;
	public static final int IdentifierPart=31;
	public static final int IdentifierStart=32;
	public static final int LINE_COMMENT=33;
	public static final int MINUS=34;
	public static final int NULL=35;
	public static final int NUMBER=36;
	public static final int PP_AND_EXPRESSION=37;
	public static final int PP_CONDITIONAL=38;
	public static final int PP_EQUALITY_EXPRESSION=39;
	public static final int PP_EXPRESSION=40;
	public static final int PP_OR_EXPRESSION=41;
	public static final int PP_PRIMARY_EXPRESSION=42;
	public static final int PP_UNARY_EXPRESSION=43;
	public static final int PREPROCESSOR_DIRECTIVE=44;
	public static final int PTR=45;
	public static final int Pragma=46;
	public static final int RPAREN=47;
	public static final int Real_literal=48;
	public static final int Real_type_suffix=49;
	public static final int SEMI=50;
	public static final int STRINGLITERAL=51;
	public static final int Sign=52;
	public static final int TRUE=53;
	public static final int TS=54;
	public static final int UNDEF=55;
	public static final int UNDEF_TOKEN=56;
	public static final int USING=57;
	public static final int Verbatim_string_literal=58;
	public static final int Verbatim_string_literal_character=59;
	public static final int WS=60;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public csParser(TokenStream input) {
		this(input, new RecognizerSharedState());
	}
	public csParser(TokenStream input, RecognizerSharedState state) {
		super(input, state);
		this.state.ruleMemo = new HashMap[356+1];


	}

	protected TreeAdaptor adaptor = new CommonTreeAdaptor();

	public void setTreeAdaptor(TreeAdaptor adaptor) {
		this.adaptor = adaptor;
	}
	public TreeAdaptor getTreeAdaptor() {
		return adaptor;
	}
	@Override public String[] getTokenNames() { return csParser.tokenNames; }
	@Override public String getGrammarFileName() { return "/Users/jeremie/ANTLR/cs.g"; }


	public static class compilation_unit_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "compilation_unit"
	// /Users/jeremie/ANTLR/cs.g:23:1: compilation_unit : namespace_body[true] ;
	public final csParser.compilation_unit_return compilation_unit() throws RecognitionException {
		csParser.compilation_unit_return retval = new csParser.compilation_unit_return();
		retval.start = input.LT(1);
		int compilation_unit_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_body1 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:23:17: ( namespace_body[true] )
			// /Users/jeremie/ANTLR/cs.g:24:9: namespace_body[true]
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_namespace_body_in_compilation_unit82);
			namespace_body1=namespace_body(true);
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_body1.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 1, compilation_unit_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "compilation_unit"


	public static class namespace_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_declaration"
	// /Users/jeremie/ANTLR/cs.g:26:1: namespace_declaration : 'namespace' qualified_identifier namespace_block ( ';' )? ;
	public final csParser.namespace_declaration_return namespace_declaration() throws RecognitionException {
		csParser.namespace_declaration_return retval = new csParser.namespace_declaration_return();
		retval.start = input.LT(1);
		int namespace_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal2=null;
		Token char_literal5=null;
		ParserRuleReturnScope qualified_identifier3 =null;
		ParserRuleReturnScope namespace_block4 =null;

		CommonTree string_literal2_tree=null;
		CommonTree char_literal5_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:26:22: ( 'namespace' qualified_identifier namespace_block ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:27:9: 'namespace' qualified_identifier namespace_block ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal2=(Token)match(input,149,FOLLOW_149_in_namespace_declaration98); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal2_tree = (CommonTree)adaptor.create(string_literal2);
			adaptor.addChild(root_0, string_literal2_tree);
			}

			pushFollow(FOLLOW_qualified_identifier_in_namespace_declaration102);
			qualified_identifier3=qualified_identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, qualified_identifier3.getTree());

			pushFollow(FOLLOW_namespace_block_in_namespace_declaration106);
			namespace_block4=namespace_block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_block4.getTree());

			// /Users/jeremie/ANTLR/cs.g:27:64: ( ';' )?
			int alt1=2;
			int LA1_0 = input.LA(1);
			if ( (LA1_0==SEMI) ) {
				alt1=1;
			}
			switch (alt1) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:27:64: ';'
					{
					char_literal5=(Token)match(input,SEMI,FOLLOW_SEMI_in_namespace_declaration110); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal5_tree = (CommonTree)adaptor.create(char_literal5);
					adaptor.addChild(root_0, char_literal5_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 2, namespace_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_declaration"


	public static class namespace_block_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_block"
	// /Users/jeremie/ANTLR/cs.g:28:1: namespace_block : '{' namespace_body[false] '}' ;
	public final csParser.namespace_block_return namespace_block() throws RecognitionException {
		csParser.namespace_block_return retval = new csParser.namespace_block_return();
		retval.start = input.LT(1);
		int namespace_block_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal6=null;
		Token char_literal8=null;
		ParserRuleReturnScope namespace_body7 =null;

		CommonTree char_literal6_tree=null;
		CommonTree char_literal8_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:28:16: ( '{' namespace_body[false] '}' )
			// /Users/jeremie/ANTLR/cs.g:29:9: '{' namespace_body[false] '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal6=(Token)match(input,197,FOLLOW_197_in_namespace_block126); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal6_tree = (CommonTree)adaptor.create(char_literal6);
			adaptor.addChild(root_0, char_literal6_tree);
			}

			pushFollow(FOLLOW_namespace_body_in_namespace_block130);
			namespace_body7=namespace_body(false);
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_body7.getTree());

			char_literal8=(Token)match(input,201,FOLLOW_201_in_namespace_block135); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal8_tree = (CommonTree)adaptor.create(char_literal8);
			adaptor.addChild(root_0, char_literal8_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 3, namespace_block_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_block"


	public static class namespace_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_body"
	// /Users/jeremie/ANTLR/cs.g:30:1: namespace_body[boolean bGlobal] : ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? ;
	public final csParser.namespace_body_return namespace_body(boolean bGlobal) throws RecognitionException {
		csParser.namespace_body_return retval = new csParser.namespace_body_return();
		retval.start = input.LT(1);
		int namespace_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope extern_alias_directives9 =null;
		ParserRuleReturnScope using_directives10 =null;
		ParserRuleReturnScope global_attributes11 =null;
		ParserRuleReturnScope namespace_member_declarations12 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:30:32: ( ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )? )
			// /Users/jeremie/ANTLR/cs.g:31:9: ( extern_alias_directives )? ( using_directives )? ( global_attributes )? ( namespace_member_declarations )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:31:9: ( extern_alias_directives )?
			int alt2=2;
			int LA2_0 = input.LA(1);
			if ( (LA2_0==125) ) {
				int LA2_1 = input.LA(2);
				if ( (LA2_1==98) ) {
					alt2=1;
				}
			}
			switch (alt2) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:31:9: extern_alias_directives
					{
					pushFollow(FOLLOW_extern_alias_directives_in_namespace_body151);
					extern_alias_directives9=extern_alias_directives();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directives9.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:31:36: ( using_directives )?
			int alt3=2;
			int LA3_0 = input.LA(1);
			if ( (LA3_0==USING) ) {
				alt3=1;
			}
			switch (alt3) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:31:36: using_directives
					{
					pushFollow(FOLLOW_using_directives_in_namespace_body156);
					using_directives10=using_directives();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directives10.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:31:56: ( global_attributes )?
			int alt4=2;
			int LA4_0 = input.LA(1);
			if ( (LA4_0==91) ) {
				int LA4_1 = input.LA(2);
				if ( (LA4_1==101||LA4_1==148) ) {
					int LA4_3 = input.LA(3);
					if ( (LA4_3==79) ) {
						alt4=1;
					}
				}
			}
			switch (alt4) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:31:56: global_attributes
					{
					pushFollow(FOLLOW_global_attributes_in_namespace_body161);
					global_attributes11=global_attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attributes11.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:31:77: ( namespace_member_declarations )?
			int alt5=2;
			int LA5_0 = input.LA(1);
			if ( (LA5_0==ENUM||LA5_0==91||LA5_0==96||LA5_0==111||LA5_0==116||LA5_0==125||(LA5_0 >= 139 && LA5_0 <= 140)||(LA5_0 >= 149 && LA5_0 <= 150)||LA5_0==156||LA5_0==159||LA5_0==161||(LA5_0 >= 163 && LA5_0 <= 165)||LA5_0==170||LA5_0==176||LA5_0==178||LA5_0==188||LA5_0==191||LA5_0==193) ) {
				alt5=1;
			}
			switch (alt5) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:31:77: namespace_member_declarations
					{
					pushFollow(FOLLOW_namespace_member_declarations_in_namespace_body166);
					namespace_member_declarations12=namespace_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declarations12.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 4, namespace_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_body"


	public static class extern_alias_directives_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "extern_alias_directives"
	// /Users/jeremie/ANTLR/cs.g:32:1: extern_alias_directives : ( extern_alias_directive )+ ;
	public final csParser.extern_alias_directives_return extern_alias_directives() throws RecognitionException {
		csParser.extern_alias_directives_return retval = new csParser.extern_alias_directives_return();
		retval.start = input.LT(1);
		int extern_alias_directives_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope extern_alias_directive13 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:32:24: ( ( extern_alias_directive )+ )
			// /Users/jeremie/ANTLR/cs.g:33:9: ( extern_alias_directive )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:33:9: ( extern_alias_directive )+
			int cnt6=0;
			loop6:
			while (true) {
				int alt6=2;
				int LA6_0 = input.LA(1);
				if ( (LA6_0==125) ) {
					int LA6_2 = input.LA(2);
					if ( (LA6_2==98) ) {
						alt6=1;
					}

				}

				switch (alt6) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:33:9: extern_alias_directive
					{
					pushFollow(FOLLOW_extern_alias_directive_in_extern_alias_directives182);
					extern_alias_directive13=extern_alias_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directive13.getTree());

					}
					break;

				default :
					if ( cnt6 >= 1 ) break loop6;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(6, input);
					throw eee;
				}
				cnt6++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 5, extern_alias_directives_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "extern_alias_directives"


	public static class extern_alias_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "extern_alias_directive"
	// /Users/jeremie/ANTLR/cs.g:34:1: extern_alias_directive : 'extern' 'alias' identifier ';' ;
	public final csParser.extern_alias_directive_return extern_alias_directive() throws RecognitionException {
		csParser.extern_alias_directive_return retval = new csParser.extern_alias_directive_return();
		retval.start = input.LT(1);
		int extern_alias_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal14=null;
		Token string_literal15=null;
		Token char_literal17=null;
		ParserRuleReturnScope identifier16 =null;

		CommonTree string_literal14_tree=null;
		CommonTree string_literal15_tree=null;
		CommonTree char_literal17_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:34:23: ( 'extern' 'alias' identifier ';' )
			// /Users/jeremie/ANTLR/cs.g:35:9: 'extern' 'alias' identifier ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal14=(Token)match(input,125,FOLLOW_125_in_extern_alias_directive198); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal14_tree = (CommonTree)adaptor.create(string_literal14);
			adaptor.addChild(root_0, string_literal14_tree);
			}

			string_literal15=(Token)match(input,98,FOLLOW_98_in_extern_alias_directive202); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal15_tree = (CommonTree)adaptor.create(string_literal15);
			adaptor.addChild(root_0, string_literal15_tree);
			}

			pushFollow(FOLLOW_identifier_in_extern_alias_directive206);
			identifier16=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier16.getTree());

			char_literal17=(Token)match(input,SEMI,FOLLOW_SEMI_in_extern_alias_directive209); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal17_tree = (CommonTree)adaptor.create(char_literal17);
			adaptor.addChild(root_0, char_literal17_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 6, extern_alias_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "extern_alias_directive"


	public static class using_directives_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_directives"
	// /Users/jeremie/ANTLR/cs.g:36:1: using_directives : ( using_directive )+ ;
	public final csParser.using_directives_return using_directives() throws RecognitionException {
		csParser.using_directives_return retval = new csParser.using_directives_return();
		retval.start = input.LT(1);
		int using_directives_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope using_directive18 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:36:17: ( ( using_directive )+ )
			// /Users/jeremie/ANTLR/cs.g:37:9: ( using_directive )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:37:9: ( using_directive )+
			int cnt7=0;
			loop7:
			while (true) {
				int alt7=2;
				int LA7_0 = input.LA(1);
				if ( (LA7_0==USING) ) {
					alt7=1;
				}

				switch (alt7) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:37:9: using_directive
					{
					pushFollow(FOLLOW_using_directive_in_using_directives224);
					using_directive18=using_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directive18.getTree());

					}
					break;

				default :
					if ( cnt7 >= 1 ) break loop7;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(7, input);
					throw eee;
				}
				cnt7++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 7, using_directives_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_directives"


	public static class using_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_directive"
	// /Users/jeremie/ANTLR/cs.g:38:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
	public final csParser.using_directive_return using_directive() throws RecognitionException {
		csParser.using_directive_return retval = new csParser.using_directive_return();
		retval.start = input.LT(1);
		int using_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope using_alias_directive19 =null;
		ParserRuleReturnScope using_namespace_directive20 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:38:16: ( ( using_alias_directive | using_namespace_directive ) )
			// /Users/jeremie/ANTLR/cs.g:39:9: ( using_alias_directive | using_namespace_directive )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:39:9: ( using_alias_directive | using_namespace_directive )
			int alt8=2;
			int LA8_0 = input.LA(1);
			if ( (LA8_0==USING) ) {
				int LA8_1 = input.LA(2);
				if ( (LA8_1==IDENTIFIER||LA8_1==95||(LA8_1 >= 97 && LA8_1 <= 98)||(LA8_1 >= 100 && LA8_1 <= 101)||LA8_1==105||LA8_1==117||LA8_1==120||LA8_1==122||LA8_1==126||LA8_1==132||LA8_1==135||LA8_1==141||(LA8_1 >= 143 && LA8_1 <= 144)||(LA8_1 >= 147 && LA8_1 <= 148)||LA8_1==152||LA8_1==154||LA8_1==157||LA8_1==160||LA8_1==162||LA8_1==167||(LA8_1 >= 171 && LA8_1 <= 172)||LA8_1==183||LA8_1==190||LA8_1==194||LA8_1==196) ) {
					int LA8_2 = input.LA(3);
					if ( (LA8_2==85) ) {
						alt8=1;
					}
					else if ( (LA8_2==DOT||LA8_2==SEMI||(LA8_2 >= 80 && LA8_2 <= 81)) ) {
						alt8=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 8, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 8, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 8, 0, input);
				throw nvae;
			}

			switch (alt8) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:39:10: using_alias_directive
					{
					pushFollow(FOLLOW_using_alias_directive_in_using_directive241);
					using_alias_directive19=using_alias_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_alias_directive19.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:40:11: using_namespace_directive
					{
					pushFollow(FOLLOW_using_namespace_directive_in_using_directive253);
					using_namespace_directive20=using_namespace_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_namespace_directive20.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 8, using_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_directive"


	public static class using_alias_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_alias_directive"
	// /Users/jeremie/ANTLR/cs.g:41:1: using_alias_directive : 'using' identifier '=' namespace_or_type_name ';' ;
	public final csParser.using_alias_directive_return using_alias_directive() throws RecognitionException {
		csParser.using_alias_directive_return retval = new csParser.using_alias_directive_return();
		retval.start = input.LT(1);
		int using_alias_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal21=null;
		Token char_literal23=null;
		Token char_literal25=null;
		ParserRuleReturnScope identifier22 =null;
		ParserRuleReturnScope namespace_or_type_name24 =null;

		CommonTree string_literal21_tree=null;
		CommonTree char_literal23_tree=null;
		CommonTree char_literal25_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:41:22: ( 'using' identifier '=' namespace_or_type_name ';' )
			// /Users/jeremie/ANTLR/cs.g:42:9: 'using' identifier '=' namespace_or_type_name ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal21=(Token)match(input,USING,FOLLOW_USING_in_using_alias_directive269); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal21_tree = (CommonTree)adaptor.create(string_literal21);
			adaptor.addChild(root_0, string_literal21_tree);
			}

			pushFollow(FOLLOW_identifier_in_using_alias_directive280);
			identifier22=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier22.getTree());

			char_literal23=(Token)match(input,85,FOLLOW_85_in_using_alias_directive284); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal23_tree = (CommonTree)adaptor.create(char_literal23);
			adaptor.addChild(root_0, char_literal23_tree);
			}

			pushFollow(FOLLOW_namespace_or_type_name_in_using_alias_directive288);
			namespace_or_type_name24=namespace_or_type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name24.getTree());

			char_literal25=(Token)match(input,SEMI,FOLLOW_SEMI_in_using_alias_directive292); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal25_tree = (CommonTree)adaptor.create(char_literal25);
			adaptor.addChild(root_0, char_literal25_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 9, using_alias_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_alias_directive"


	public static class using_namespace_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_namespace_directive"
	// /Users/jeremie/ANTLR/cs.g:43:1: using_namespace_directive : 'using' namespace_name ';' ;
	public final csParser.using_namespace_directive_return using_namespace_directive() throws RecognitionException {
		csParser.using_namespace_directive_return retval = new csParser.using_namespace_directive_return();
		retval.start = input.LT(1);
		int using_namespace_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal26=null;
		Token char_literal28=null;
		ParserRuleReturnScope namespace_name27 =null;

		CommonTree string_literal26_tree=null;
		CommonTree char_literal28_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:43:26: ( 'using' namespace_name ';' )
			// /Users/jeremie/ANTLR/cs.g:44:9: 'using' namespace_name ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal26=(Token)match(input,USING,FOLLOW_USING_in_using_namespace_directive307); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal26_tree = (CommonTree)adaptor.create(string_literal26);
			adaptor.addChild(root_0, string_literal26_tree);
			}

			pushFollow(FOLLOW_namespace_name_in_using_namespace_directive311);
			namespace_name27=namespace_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_name27.getTree());

			char_literal28=(Token)match(input,SEMI,FOLLOW_SEMI_in_using_namespace_directive315); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal28_tree = (CommonTree)adaptor.create(char_literal28);
			adaptor.addChild(root_0, char_literal28_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 10, using_namespace_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_namespace_directive"


	public static class namespace_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:45:1: namespace_member_declarations : ( namespace_member_declaration )+ ;
	public final csParser.namespace_member_declarations_return namespace_member_declarations() throws RecognitionException {
		csParser.namespace_member_declarations_return retval = new csParser.namespace_member_declarations_return();
		retval.start = input.LT(1);
		int namespace_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_member_declaration29 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:45:30: ( ( namespace_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:46:9: ( namespace_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:46:9: ( namespace_member_declaration )+
			int cnt9=0;
			loop9:
			while (true) {
				int alt9=2;
				int LA9_0 = input.LA(1);
				if ( (LA9_0==ENUM||LA9_0==91||LA9_0==96||LA9_0==111||LA9_0==116||LA9_0==125||(LA9_0 >= 139 && LA9_0 <= 140)||(LA9_0 >= 149 && LA9_0 <= 150)||LA9_0==156||LA9_0==159||LA9_0==161||(LA9_0 >= 163 && LA9_0 <= 165)||LA9_0==170||LA9_0==176||LA9_0==178||LA9_0==188||LA9_0==191||LA9_0==193) ) {
					alt9=1;
				}

				switch (alt9) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:46:9: namespace_member_declaration
					{
					pushFollow(FOLLOW_namespace_member_declaration_in_namespace_member_declarations330);
					namespace_member_declaration29=namespace_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_member_declaration29.getTree());

					}
					break;

				default :
					if ( cnt9 >= 1 ) break loop9;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(9, input);
					throw eee;
				}
				cnt9++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 11, namespace_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_member_declarations"


	public static class namespace_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:47:1: namespace_member_declaration : ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration );
	public final csParser.namespace_member_declaration_return namespace_member_declaration() throws RecognitionException {
		csParser.namespace_member_declaration_return retval = new csParser.namespace_member_declaration_return();
		retval.start = input.LT(1);
		int namespace_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_declaration30 =null;
		ParserRuleReturnScope attributes31 =null;
		ParserRuleReturnScope modifiers32 =null;
		ParserRuleReturnScope type_declaration33 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:47:29: ( namespace_declaration | ( attributes )? ( modifiers )? type_declaration )
			int alt12=2;
			int LA12_0 = input.LA(1);
			if ( (LA12_0==149) ) {
				alt12=1;
			}
			else if ( (LA12_0==ENUM||LA12_0==91||LA12_0==96||LA12_0==111||LA12_0==116||LA12_0==125||(LA12_0 >= 139 && LA12_0 <= 140)||LA12_0==150||LA12_0==156||LA12_0==159||LA12_0==161||(LA12_0 >= 163 && LA12_0 <= 165)||LA12_0==170||LA12_0==176||LA12_0==178||LA12_0==188||LA12_0==191||LA12_0==193) ) {
				alt12=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 12, 0, input);
				throw nvae;
			}

			switch (alt12) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:48:9: namespace_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_namespace_declaration_in_namespace_member_declaration346);
					namespace_declaration30=namespace_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_declaration30.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:49:11: ( attributes )? ( modifiers )? type_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:49:11: ( attributes )?
					int alt10=2;
					int LA10_0 = input.LA(1);
					if ( (LA10_0==91) ) {
						alt10=1;
					}
					switch (alt10) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:49:11: attributes
							{
							pushFollow(FOLLOW_attributes_in_namespace_member_declaration358);
							attributes31=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes31.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:49:25: ( modifiers )?
					int alt11=2;
					int LA11_0 = input.LA(1);
					if ( (LA11_0==96||LA11_0==125||LA11_0==140||LA11_0==150||LA11_0==156||LA11_0==161||(LA11_0 >= 163 && LA11_0 <= 165)||LA11_0==170||LA11_0==176||LA11_0==188||LA11_0==191||LA11_0==193) ) {
						alt11=1;
					}
					switch (alt11) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:49:25: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_namespace_member_declaration363);
							modifiers32=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers32.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_type_declaration_in_namespace_member_declaration368);
					type_declaration33=type_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_declaration33.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 12, namespace_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_member_declaration"


	public static class type_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_declaration"
	// /Users/jeremie/ANTLR/cs.g:50:1: type_declaration : ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration );
	public final csParser.type_declaration_return type_declaration() throws RecognitionException {
		csParser.type_declaration_return retval = new csParser.type_declaration_return();
		retval.start = input.LT(1);
		int type_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal34=null;
		ParserRuleReturnScope class_declaration35 =null;
		ParserRuleReturnScope struct_declaration36 =null;
		ParserRuleReturnScope interface_declaration37 =null;
		ParserRuleReturnScope class_declaration38 =null;
		ParserRuleReturnScope struct_declaration39 =null;
		ParserRuleReturnScope interface_declaration40 =null;
		ParserRuleReturnScope enum_declaration41 =null;
		ParserRuleReturnScope delegate_declaration42 =null;

		CommonTree string_literal34_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:50:17: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) | class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration )
			int alt14=6;
			int LA14_0 = input.LA(1);
			if ( (LA14_0==159) && (synpred1_cs())) {
				alt14=1;
			}
			else if ( (LA14_0==111) ) {
				alt14=2;
			}
			else if ( (LA14_0==178) ) {
				alt14=3;
			}
			else if ( (LA14_0==139) ) {
				alt14=4;
			}
			else if ( (LA14_0==ENUM) ) {
				alt14=5;
			}
			else if ( (LA14_0==116) ) {
				alt14=6;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 14, 0, input);
				throw nvae;
			}

			switch (alt14) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:51:9: ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration )
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal34=(Token)match(input,159,FOLLOW_159_in_type_declaration389); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal34_tree = (CommonTree)adaptor.create(string_literal34);
					adaptor.addChild(root_0, string_literal34_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:51:36: ( class_declaration | struct_declaration | interface_declaration )
					int alt13=3;
					switch ( input.LA(1) ) {
					case 111:
						{
						alt13=1;
						}
						break;
					case 178:
						{
						alt13=2;
						}
						break;
					case 139:
						{
						alt13=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 13, 0, input);
						throw nvae;
					}
					switch (alt13) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:51:37: class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_type_declaration394);
							class_declaration35=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration35.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:52:67: struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_type_declaration462);
							struct_declaration36=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration36.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:53:67: interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_type_declaration530);
							interface_declaration37=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration37.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:54:11: class_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_class_declaration_in_type_declaration543);
					class_declaration38=class_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration38.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:55:11: struct_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_struct_declaration_in_type_declaration555);
					struct_declaration39=struct_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration39.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:56:11: interface_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_interface_declaration_in_type_declaration567);
					interface_declaration40=interface_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration40.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:57:11: enum_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_enum_declaration_in_type_declaration579);
					enum_declaration41=enum_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration41.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:58:11: delegate_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_delegate_declaration_in_type_declaration591);
					delegate_declaration42=delegate_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration42.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 13, type_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_declaration"


	public static class qualified_identifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qualified_identifier"
	// /Users/jeremie/ANTLR/cs.g:60:1: qualified_identifier : identifier ( '.' identifier )* ;
	public final csParser.qualified_identifier_return qualified_identifier() throws RecognitionException {
		csParser.qualified_identifier_return retval = new csParser.qualified_identifier_return();
		retval.start = input.LT(1);
		int qualified_identifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal44=null;
		ParserRuleReturnScope identifier43 =null;
		ParserRuleReturnScope identifier45 =null;

		CommonTree char_literal44_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:60:21: ( identifier ( '.' identifier )* )
			// /Users/jeremie/ANTLR/cs.g:61:9: identifier ( '.' identifier )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_qualified_identifier607);
			identifier43=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier43.getTree());

			// /Users/jeremie/ANTLR/cs.g:61:20: ( '.' identifier )*
			loop15:
			while (true) {
				int alt15=2;
				int LA15_0 = input.LA(1);
				if ( (LA15_0==DOT) ) {
					alt15=1;
				}

				switch (alt15) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:61:21: '.' identifier
					{
					char_literal44=(Token)match(input,DOT,FOLLOW_DOT_in_qualified_identifier610); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal44_tree = (CommonTree)adaptor.create(char_literal44);
					adaptor.addChild(root_0, char_literal44_tree);
					}

					pushFollow(FOLLOW_identifier_in_qualified_identifier612);
					identifier45=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier45.getTree());

					}
					break;

				default :
					break loop15;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 14, qualified_identifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qualified_identifier"


	public static class namespace_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_name"
	// /Users/jeremie/ANTLR/cs.g:62:1: namespace_name : namespace_or_type_name ;
	public final csParser.namespace_name_return namespace_name() throws RecognitionException {
		csParser.namespace_name_return retval = new csParser.namespace_name_return();
		retval.start = input.LT(1);
		int namespace_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_or_type_name46 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:63:9: ( namespace_or_type_name )
			// /Users/jeremie/ANTLR/cs.g:63:11: namespace_or_type_name
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_namespace_or_type_name_in_namespace_name630);
			namespace_or_type_name46=namespace_or_type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name46.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 15, namespace_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_name"


	public static class modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "modifiers"
	// /Users/jeremie/ANTLR/cs.g:65:1: modifiers : ( modifier )+ ;
	public final csParser.modifiers_return modifiers() throws RecognitionException {
		csParser.modifiers_return retval = new csParser.modifiers_return();
		retval.start = input.LT(1);
		int modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier47 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:65:10: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:66:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:66:9: ( modifier )+
			int cnt16=0;
			loop16:
			while (true) {
				int alt16=2;
				int LA16_0 = input.LA(1);
				if ( (LA16_0==96||LA16_0==125||LA16_0==140||LA16_0==150||LA16_0==156||LA16_0==161||(LA16_0 >= 163 && LA16_0 <= 165)||LA16_0==170||LA16_0==176||LA16_0==188||LA16_0==191||LA16_0==193) ) {
					alt16=1;
				}

				switch (alt16) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:66:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_modifiers646);
					modifier47=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier47.getTree());

					}
					break;

				default :
					if ( cnt16 >= 1 ) break loop16;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(16, input);
					throw eee;
				}
				cnt16++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 16, modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "modifiers"


	public static class modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "modifier"
	// /Users/jeremie/ANTLR/cs.g:67:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' );
	public final csParser.modifier_return modifier() throws RecognitionException {
		csParser.modifier_return retval = new csParser.modifier_return();
		retval.start = input.LT(1);
		int modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set48=null;

		CommonTree set48_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:67:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set48=input.LT(1);
			if ( input.LA(1)==96||input.LA(1)==125||input.LA(1)==140||input.LA(1)==150||input.LA(1)==156||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 165)||input.LA(1)==170||input.LA(1)==176||input.LA(1)==188||input.LA(1)==191||input.LA(1)==193 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set48));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 17, modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "modifier"


	public static class class_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:71:1: class_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) ;
	public final csParser.class_member_declaration_return class_member_declaration() throws RecognitionException {
		csParser.class_member_declaration_return retval = new csParser.class_member_declaration_return();
		retval.start = input.LT(1);
		int class_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal50=null;
		Token char_literal53=null;
		Token string_literal55=null;
		Token string_literal61=null;
		Token char_literal67=null;
		ParserRuleReturnScope m =null;
		ParserRuleReturnScope attributes49 =null;
		ParserRuleReturnScope type51 =null;
		ParserRuleReturnScope constant_declarators52 =null;
		ParserRuleReturnScope event_declaration54 =null;
		ParserRuleReturnScope method_declaration56 =null;
		ParserRuleReturnScope interface_declaration57 =null;
		ParserRuleReturnScope class_declaration58 =null;
		ParserRuleReturnScope struct_declaration59 =null;
		ParserRuleReturnScope interface_declaration60 =null;
		ParserRuleReturnScope method_declaration62 =null;
		ParserRuleReturnScope type63 =null;
		ParserRuleReturnScope method_declaration64 =null;
		ParserRuleReturnScope property_declaration65 =null;
		ParserRuleReturnScope type_name66 =null;
		ParserRuleReturnScope indexer_declaration68 =null;
		ParserRuleReturnScope indexer_declaration69 =null;
		ParserRuleReturnScope field_declaration70 =null;
		ParserRuleReturnScope operator_declaration71 =null;
		ParserRuleReturnScope class_declaration72 =null;
		ParserRuleReturnScope struct_declaration73 =null;
		ParserRuleReturnScope enum_declaration74 =null;
		ParserRuleReturnScope delegate_declaration75 =null;
		ParserRuleReturnScope conversion_operator_declaration76 =null;
		ParserRuleReturnScope constructor_declaration77 =null;
		ParserRuleReturnScope destructor_declaration78 =null;

		CommonTree string_literal50_tree=null;
		CommonTree char_literal53_tree=null;
		CommonTree string_literal55_tree=null;
		CommonTree string_literal61_tree=null;
		CommonTree char_literal67_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:71:25: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration ) )
			// /Users/jeremie/ANTLR/cs.g:72:9: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:72:9: ( attributes )?
			int alt17=2;
			int LA17_0 = input.LA(1);
			if ( (LA17_0==91) ) {
				alt17=1;
			}
			switch (alt17) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:72:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_class_member_declaration746);
					attributes49=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes49.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:73:10: (m= modifiers )?
			int alt18=2;
			int LA18_0 = input.LA(1);
			if ( (LA18_0==96||LA18_0==125||LA18_0==140||LA18_0==150||LA18_0==156||LA18_0==161||(LA18_0 >= 163 && LA18_0 <= 165)||LA18_0==170||LA18_0==176||LA18_0==188||LA18_0==191||LA18_0==193) ) {
				alt18=1;
			}
			switch (alt18) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:73:10: m= modifiers
					{
					pushFollow(FOLLOW_modifiers_in_class_member_declaration759);
					m=modifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:74:9: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | class_declaration | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration | destructor_declaration )
			int alt21=13;
			switch ( input.LA(1) ) {
			case 112:
				{
				alt21=1;
				}
				break;
			case 123:
				{
				alt21=2;
				}
				break;
			case 159:
				{
				alt21=3;
				}
				break;
			case 139:
				{
				alt21=4;
				}
				break;
			case 192:
				{
				int LA21_5 = input.LA(2);
				if ( (LA21_5==Character_literal||LA21_5==FALSE||(LA21_5 >= Hex_number && LA21_5 <= IDENTIFIER)||(LA21_5 >= NULL && LA21_5 <= NUMBER)||LA21_5==Real_literal||LA21_5==STRINGLITERAL||LA21_5==TRUE||LA21_5==Verbatim_string_literal||LA21_5==95||(LA21_5 >= 97 && LA21_5 <= 98)||(LA21_5 >= 100 && LA21_5 <= 101)||LA21_5==103||(LA21_5 >= 105 && LA21_5 <= 106)||LA21_5==109||LA21_5==114||LA21_5==117||(LA21_5 >= 119 && LA21_5 <= 120)||LA21_5==122||LA21_5==126||LA21_5==129||LA21_5==132||LA21_5==135||LA21_5==138||LA21_5==141||(LA21_5 >= 143 && LA21_5 <= 144)||(LA21_5 >= 146 && LA21_5 <= 148)||(LA21_5 >= 151 && LA21_5 <= 152)||LA21_5==154||LA21_5==157||LA21_5==160||LA21_5==162||LA21_5==167||LA21_5==169||(LA21_5 >= 171 && LA21_5 <= 173)||LA21_5==177||LA21_5==183||(LA21_5 >= 185 && LA21_5 <= 186)||(LA21_5 >= 189 && LA21_5 <= 190)||LA21_5==194||LA21_5==196) ) {
					alt21=5;
				}
				else if ( (LA21_5==69) ) {
					alt21=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 21, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt21=6;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA21_7 = input.LA(2);
				if ( (LA21_7==Character_literal||LA21_7==DOT||LA21_7==FALSE||(LA21_7 >= Hex_number && LA21_7 <= IDENTIFIER)||(LA21_7 >= NULL && LA21_7 <= NUMBER)||LA21_7==Real_literal||LA21_7==STRINGLITERAL||LA21_7==TRUE||LA21_7==Verbatim_string_literal||LA21_7==69||(LA21_7 >= 80 && LA21_7 <= 81)||LA21_7==89||LA21_7==91||LA21_7==95||(LA21_7 >= 97 && LA21_7 <= 98)||(LA21_7 >= 100 && LA21_7 <= 101)||LA21_7==103||(LA21_7 >= 105 && LA21_7 <= 106)||LA21_7==109||LA21_7==114||LA21_7==117||(LA21_7 >= 119 && LA21_7 <= 120)||LA21_7==122||LA21_7==126||LA21_7==129||LA21_7==132||LA21_7==135||LA21_7==138||LA21_7==141||(LA21_7 >= 143 && LA21_7 <= 144)||(LA21_7 >= 146 && LA21_7 <= 148)||(LA21_7 >= 151 && LA21_7 <= 154)||LA21_7==157||LA21_7==160||LA21_7==162||LA21_7==167||LA21_7==169||(LA21_7 >= 171 && LA21_7 <= 173)||LA21_7==177||LA21_7==180||LA21_7==183||(LA21_7 >= 185 && LA21_7 <= 186)||(LA21_7 >= 189 && LA21_7 <= 190)||LA21_7==194||LA21_7==196) ) {
					alt21=6;
				}
				else if ( (LA21_7==68) ) {
					alt21=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 21, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 111:
				{
				alt21=7;
				}
				break;
			case 178:
				{
				alt21=8;
				}
				break;
			case ENUM:
				{
				alt21=9;
				}
				break;
			case 116:
				{
				alt21=10;
				}
				break;
			case 124:
			case 136:
				{
				alt21=11;
				}
				break;
			case 202:
				{
				alt21=13;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 21, 0, input);
				throw nvae;
			}
			switch (alt21) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:74:11: 'const' type constant_declarators ';'
					{
					string_literal50=(Token)match(input,112,FOLLOW_112_in_class_member_declaration772); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal50_tree = (CommonTree)adaptor.create(string_literal50);
					adaptor.addChild(root_0, string_literal50_tree);
					}

					pushFollow(FOLLOW_type_in_class_member_declaration776);
					type51=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type51.getTree());

					pushFollow(FOLLOW_constant_declarators_in_class_member_declaration780);
					constant_declarators52=constant_declarators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators52.getTree());

					char_literal53=(Token)match(input,SEMI,FOLLOW_SEMI_in_class_member_declaration784); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal53_tree = (CommonTree)adaptor.create(char_literal53);
					adaptor.addChild(root_0, char_literal53_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:75:11: event_declaration
					{
					pushFollow(FOLLOW_event_declaration_in_class_member_declaration796);
					event_declaration54=event_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration54.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:76:11: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					{
					string_literal55=(Token)match(input,159,FOLLOW_159_in_class_member_declaration824); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal55_tree = (CommonTree)adaptor.create(string_literal55);
					adaptor.addChild(root_0, string_literal55_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:76:21: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					int alt19=4;
					switch ( input.LA(1) ) {
					case Character_literal:
					case FALSE:
					case Hex_number:
					case IDENTIFIER:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 103:
					case 105:
					case 106:
					case 109:
					case 114:
					case 117:
					case 119:
					case 120:
					case 122:
					case 126:
					case 129:
					case 132:
					case 135:
					case 138:
					case 141:
					case 143:
					case 144:
					case 146:
					case 147:
					case 148:
					case 151:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 169:
					case 171:
					case 172:
					case 173:
					case 177:
					case 183:
					case 185:
					case 186:
					case 189:
					case 190:
					case 194:
					case 196:
						{
						alt19=1;
						}
						break;
					case 139:
						{
						alt19=2;
						}
						break;
					case 111:
						{
						alt19=3;
						}
						break;
					case 178:
						{
						alt19=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 19, 0, input);
						throw nvae;
					}
					switch (alt19) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:76:22: method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_class_member_declaration827);
							method_declaration56=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration56.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:77:30: interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_class_member_declaration859);
							interface_declaration57=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration57.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:78:30: class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_class_member_declaration891);
							class_declaration58=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration58.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:79:30: struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_class_member_declaration923);
							struct_declaration59=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration59.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:80:11: interface_declaration
					{
					pushFollow(FOLLOW_interface_declaration_in_class_member_declaration936);
					interface_declaration60=interface_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration60.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:81:11: 'void' method_declaration
					{
					string_literal61=(Token)match(input,192,FOLLOW_192_in_class_member_declaration956); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal61_tree = (CommonTree)adaptor.create(string_literal61);
					adaptor.addChild(root_0, string_literal61_tree);
					}

					pushFollow(FOLLOW_method_declaration_in_class_member_declaration960);
					method_declaration62=method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration62.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:82:11: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
					{
					pushFollow(FOLLOW_type_in_class_member_declaration972);
					type63=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type63.getTree());

					// /Users/jeremie/ANTLR/cs.g:82:16: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
					int alt20=6;
					switch ( input.LA(1) ) {
					case 103:
					case 106:
					case 109:
					case 114:
					case 119:
					case 129:
					case 138:
					case 146:
					case 151:
					case 169:
					case 173:
					case 177:
					case 185:
					case 186:
					case 189:
						{
						int LA20_1 = input.LA(2);
						if ( (synpred2_cs()) ) {
							alt20=1;
						}
						else if ( (synpred3_cs()) ) {
							alt20=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 20, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						int LA20_2 = input.LA(2);
						if ( (synpred2_cs()) ) {
							alt20=1;
						}
						else if ( (synpred3_cs()) ) {
							alt20=2;
						}
						else if ( (synpred4_cs()) ) {
							alt20=3;
						}
						else if ( (true) ) {
							alt20=5;
						}

						}
						break;
					case Character_literal:
					case FALSE:
					case Hex_number:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
						{
						int LA20_3 = input.LA(2);
						if ( (synpred2_cs()) ) {
							alt20=1;
						}
						else if ( (synpred3_cs()) ) {
							alt20=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 20, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case 180:
						{
						alt20=4;
						}
						break;
					case 153:
						{
						alt20=6;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 20, 0, input);
						throw nvae;
					}
					switch (alt20) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:82:18: ( member_name '(' )=> method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_class_member_declaration986);
							method_declaration64=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration64.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:83:22: ( member_name '{' )=> property_declaration
							{
							pushFollow(FOLLOW_property_declaration_in_class_member_declaration1019);
							property_declaration65=property_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration65.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:84:22: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
							{
							pushFollow(FOLLOW_type_name_in_class_member_declaration1056);
							type_name66=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name66.getTree());

							char_literal67=(Token)match(input,DOT,FOLLOW_DOT_in_class_member_declaration1058); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal67_tree = (CommonTree)adaptor.create(char_literal67);
							adaptor.addChild(root_0, char_literal67_tree);
							}

							pushFollow(FOLLOW_indexer_declaration_in_class_member_declaration1060);
							indexer_declaration68=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration68.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:85:22: indexer_declaration
							{
							pushFollow(FOLLOW_indexer_declaration_in_class_member_declaration1083);
							indexer_declaration69=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration69.getTree());

							}
							break;
						case 5 :
							// /Users/jeremie/ANTLR/cs.g:86:18: field_declaration
							{
							pushFollow(FOLLOW_field_declaration_in_class_member_declaration1110);
							field_declaration70=field_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration70.getTree());

							}
							break;
						case 6 :
							// /Users/jeremie/ANTLR/cs.g:87:18: operator_declaration
							{
							pushFollow(FOLLOW_operator_declaration_in_class_member_declaration1135);
							operator_declaration71=operator_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declaration71.getTree());

							}
							break;

					}

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:91:11: class_declaration
					{
					pushFollow(FOLLOW_class_declaration_in_class_member_declaration1174);
					class_declaration72=class_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration72.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:92:11: struct_declaration
					{
					pushFollow(FOLLOW_struct_declaration_in_class_member_declaration1202);
					struct_declaration73=struct_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration73.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:93:11: enum_declaration
					{
					pushFollow(FOLLOW_enum_declaration_in_class_member_declaration1222);
					enum_declaration74=enum_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration74.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:94:11: delegate_declaration
					{
					pushFollow(FOLLOW_delegate_declaration_in_class_member_declaration1250);
					delegate_declaration75=delegate_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration75.getTree());

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:95:11: conversion_operator_declaration
					{
					pushFollow(FOLLOW_conversion_operator_declaration_in_class_member_declaration1270);
					conversion_operator_declaration76=conversion_operator_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declaration76.getTree());

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:96:11: constructor_declaration
					{
					pushFollow(FOLLOW_constructor_declaration_in_class_member_declaration1282);
					constructor_declaration77=constructor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration77.getTree());

					}
					break;
				case 13 :
					// /Users/jeremie/ANTLR/cs.g:97:11: destructor_declaration
					{
					pushFollow(FOLLOW_destructor_declaration_in_class_member_declaration1302);
					destructor_declaration78=destructor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_declaration78.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 18, class_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_member_declaration"


	public static class primary_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression"
	// /Users/jeremie/ANTLR/cs.g:101:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
	public final csParser.primary_expression_return primary_expression() throws RecognitionException {
		csParser.primary_expression_return retval = new csParser.primary_expression_return();
		retval.start = input.LT(1);
		int primary_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal79=null;
		Token string_literal82=null;
		Token string_literal87=null;
		ParserRuleReturnScope brackets80 =null;
		ParserRuleReturnScope primary_expression_part81 =null;
		ParserRuleReturnScope brackets83 =null;
		ParserRuleReturnScope primary_expression_part84 =null;
		ParserRuleReturnScope primary_expression_start85 =null;
		ParserRuleReturnScope primary_expression_part86 =null;
		ParserRuleReturnScope object_creation_expression88 =null;
		ParserRuleReturnScope primary_expression_part89 =null;
		ParserRuleReturnScope delegate_creation_expression90 =null;
		ParserRuleReturnScope object_creation_expression91 =null;
		ParserRuleReturnScope anonymous_object_creation_expression92 =null;
		ParserRuleReturnScope sizeof_expression93 =null;
		ParserRuleReturnScope checked_expression94 =null;
		ParserRuleReturnScope unchecked_expression95 =null;
		ParserRuleReturnScope default_value_expression96 =null;
		ParserRuleReturnScope anonymous_method_expression97 =null;

		CommonTree string_literal79_tree=null;
		CommonTree string_literal82_tree=null;
		CommonTree string_literal87_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:101:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
			int alt27=9;
			switch ( input.LA(1) ) {
			case 180:
				{
				int LA27_1 = input.LA(2);
				if ( (synpred5_cs()) ) {
					alt27=1;
				}
				else if ( (synpred6_cs()) ) {
					alt27=2;
				}
				else if ( (true) ) {
					alt27=3;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 68:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 184:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt27=3;
				}
				break;
			case 150:
				{
				alt27=4;
				}
				break;
			case 174:
				{
				alt27=5;
				}
				break;
			case 110:
				{
				alt27=6;
				}
				break;
			case 187:
				{
				alt27=7;
				}
				break;
			case 115:
				{
				alt27=8;
				}
				break;
			case 116:
				{
				alt27=9;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 27, 0, input);
				throw nvae;
			}
			switch (alt27) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:102:9: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal79=(Token)match(input,180,FOLLOW_180_in_primary_expression1349); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal79_tree = (CommonTree)adaptor.create(string_literal79);
					adaptor.addChild(root_0, string_literal79_tree);
					}

					pushFollow(FOLLOW_brackets_in_primary_expression1353);
					brackets80=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets80.getTree());

					// /Users/jeremie/ANTLR/cs.g:102:53: ( primary_expression_part )*
					loop22:
					while (true) {
						int alt22=2;
						int LA22_0 = input.LA(1);
						if ( (LA22_0==DOT||LA22_0==PTR||LA22_0==68||LA22_0==91) ) {
							alt22=1;
						}

						switch (alt22) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:102:53: primary_expression_part
							{
							pushFollow(FOLLOW_primary_expression_part_in_primary_expression1357);
							primary_expression_part81=primary_expression_part();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part81.getTree());

							}
							break;

						default :
							break loop22;
						}
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:103:11: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal82=(Token)match(input,180,FOLLOW_180_in_primary_expression1380); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal82_tree = (CommonTree)adaptor.create(string_literal82);
					adaptor.addChild(root_0, string_literal82_tree);
					}

					pushFollow(FOLLOW_brackets_in_primary_expression1384);
					brackets83=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets83.getTree());

					// /Users/jeremie/ANTLR/cs.g:103:54: ( primary_expression_part )*
					loop23:
					while (true) {
						int alt23=2;
						int LA23_0 = input.LA(1);
						if ( (LA23_0==DOT||LA23_0==PTR||LA23_0==68||LA23_0==91) ) {
							alt23=1;
						}

						switch (alt23) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:103:54: primary_expression_part
							{
							pushFollow(FOLLOW_primary_expression_part_in_primary_expression1388);
							primary_expression_part84=primary_expression_part();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part84.getTree());

							}
							break;

						default :
							break loop23;
						}
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:104:11: primary_expression_start ( primary_expression_part )*
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_primary_expression_start_in_primary_expression1401);
					primary_expression_start85=primary_expression_start();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_start85.getTree());

					// /Users/jeremie/ANTLR/cs.g:104:38: ( primary_expression_part )*
					loop24:
					while (true) {
						int alt24=2;
						int LA24_0 = input.LA(1);
						if ( (LA24_0==DOT||LA24_0==PTR||LA24_0==68||LA24_0==91) ) {
							alt24=1;
						}

						switch (alt24) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:104:38: primary_expression_part
							{
							pushFollow(FOLLOW_primary_expression_part_in_primary_expression1405);
							primary_expression_part86=primary_expression_part();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part86.getTree());

							}
							break;

						default :
							break loop24;
						}
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:105:11: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal87=(Token)match(input,150,FOLLOW_150_in_primary_expression1418); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal87_tree = (CommonTree)adaptor.create(string_literal87);
					adaptor.addChild(root_0, string_literal87_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:105:17: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
					int alt26=4;
					switch ( input.LA(1) ) {
					case 103:
					case 106:
					case 109:
					case 114:
					case 119:
					case 129:
					case 138:
					case 146:
					case 151:
					case 169:
					case 173:
					case 177:
					case 185:
					case 186:
					case 189:
						{
						int LA26_1 = input.LA(2);
						if ( (synpred7_cs()) ) {
							alt26=1;
						}
						else if ( (true) ) {
							alt26=3;
						}

						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						int LA26_2 = input.LA(2);
						if ( (synpred7_cs()) ) {
							alt26=1;
						}
						else if ( (synpred8_cs()) ) {
							alt26=2;
						}
						else if ( (true) ) {
							alt26=3;
						}

						}
						break;
					case 192:
						{
						int LA26_3 = input.LA(2);
						if ( (synpred7_cs()) ) {
							alt26=1;
						}
						else if ( (true) ) {
							alt26=3;
						}

						}
						break;
					case 197:
						{
						alt26=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 26, 0, input);
						throw nvae;
					}
					switch (alt26) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:105:21: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
							{
							pushFollow(FOLLOW_object_creation_expression_in_primary_expression1481);
							object_creation_expression88=object_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression88.getTree());

							// /Users/jeremie/ANTLR/cs.g:106:70: ( primary_expression_part )+
							int cnt25=0;
							loop25:
							while (true) {
								int alt25=2;
								int LA25_0 = input.LA(1);
								if ( (LA25_0==DOT||LA25_0==PTR||LA25_0==68||LA25_0==91) ) {
									alt25=1;
								}

								switch (alt25) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:106:70: primary_expression_part
									{
									pushFollow(FOLLOW_primary_expression_part_in_primary_expression1485);
									primary_expression_part89=primary_expression_part();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part89.getTree());

									}
									break;

								default :
									if ( cnt25 >= 1 ) break loop25;
									if (state.backtracking>0) {state.failed=true; return retval;}
									EarlyExitException eee = new EarlyExitException(25, input);
									throw eee;
								}
								cnt25++;
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:109:35: ( delegate_creation_expression )=> delegate_creation_expression
							{
							pushFollow(FOLLOW_delegate_creation_expression_in_primary_expression1611);
							delegate_creation_expression90=delegate_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_creation_expression90.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:110:35: object_creation_expression
							{
							pushFollow(FOLLOW_object_creation_expression_in_primary_expression1647);
							object_creation_expression91=object_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression91.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:111:35: anonymous_object_creation_expression
							{
							pushFollow(FOLLOW_anonymous_object_creation_expression_in_primary_expression1683);
							anonymous_object_creation_expression92=anonymous_object_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_creation_expression92.getTree());

							}
							break;

					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:112:11: sizeof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_sizeof_expression_in_primary_expression1752);
					sizeof_expression93=sizeof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sizeof_expression93.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:113:11: checked_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_checked_expression_in_primary_expression1812);
					checked_expression94=checked_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_expression94.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:114:11: unchecked_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_unchecked_expression_in_primary_expression1852);
					unchecked_expression95=unchecked_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_expression95.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:115:11: default_value_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_default_value_expression_in_primary_expression1890);
					default_value_expression96=default_value_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, default_value_expression96.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:116:11: anonymous_method_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_anonymous_method_expression_in_primary_expression1924);
					anonymous_method_expression97=anonymous_method_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_method_expression97.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 19, primary_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression"


	public static class primary_expression_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression_start"
	// /Users/jeremie/ANTLR/cs.g:119:1: primary_expression_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
	public final csParser.primary_expression_start_return primary_expression_start() throws RecognitionException {
		csParser.primary_expression_start_return retval = new csParser.primary_expression_start_return();
		retval.start = input.LT(1);
		int primary_expression_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal102=null;
		Token string_literal104=null;
		Token string_literal105=null;
		ParserRuleReturnScope predefined_type98 =null;
		ParserRuleReturnScope identifier99 =null;
		ParserRuleReturnScope generic_argument_list100 =null;
		ParserRuleReturnScope identifier101 =null;
		ParserRuleReturnScope identifier103 =null;
		ParserRuleReturnScope paren_expression106 =null;
		ParserRuleReturnScope typeof_expression107 =null;
		ParserRuleReturnScope literal108 =null;

		CommonTree string_literal102_tree=null;
		CommonTree string_literal104_tree=null;
		CommonTree string_literal105_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:119:25: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
			int alt29=8;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt29=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA29_2 = input.LA(2);
				if ( (synpred9_cs()) ) {
					alt29=2;
				}
				else if ( (true) ) {
					alt29=3;
				}

				}
				break;
			case 180:
				{
				alt29=4;
				}
				break;
			case 102:
				{
				alt29=5;
				}
				break;
			case 68:
				{
				alt29=6;
				}
				break;
			case 184:
				{
				alt29=7;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt29=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 29, 0, input);
				throw nvae;
			}
			switch (alt29) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:120:9: predefined_type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_predefined_type_in_primary_expression_start1972);
					predefined_type98=predefined_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type98.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:121:11: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_primary_expression_start1995);
					identifier99=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier99.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_primary_expression_start1999);
					generic_argument_list100=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list100.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:122:11: identifier ( '::' identifier )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_primary_expression_start2011);
					identifier101=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier101.getTree());

					// /Users/jeremie/ANTLR/cs.g:122:22: ( '::' identifier )?
					int alt28=2;
					int LA28_0 = input.LA(1);
					if ( (LA28_0==80) ) {
						alt28=1;
					}
					switch (alt28) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:122:23: '::' identifier
							{
							string_literal102=(Token)match(input,80,FOLLOW_80_in_primary_expression_start2014); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal102_tree = (CommonTree)adaptor.create(string_literal102);
							adaptor.addChild(root_0, string_literal102_tree);
							}

							pushFollow(FOLLOW_identifier_in_primary_expression_start2018);
							identifier103=identifier();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier103.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:123:11: 'this'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal104=(Token)match(input,180,FOLLOW_180_in_primary_expression_start2032); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal104_tree = (CommonTree)adaptor.create(string_literal104);
					adaptor.addChild(root_0, string_literal104_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:124:11: 'base'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal105=(Token)match(input,102,FOLLOW_102_in_primary_expression_start2045); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal105_tree = (CommonTree)adaptor.create(string_literal105);
					adaptor.addChild(root_0, string_literal105_tree);
					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:125:11: paren_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_paren_expression_in_primary_expression_start2057);
					paren_expression106=paren_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, paren_expression106.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:126:11: typeof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeof_expression_in_primary_expression_start2069);
					typeof_expression107=typeof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression107.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:127:11: literal
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_literal_in_primary_expression_start2094);
					literal108=literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal108.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 20, primary_expression_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression_start"


	public static class primary_expression_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression_part"
	// /Users/jeremie/ANTLR/cs.g:130:1: primary_expression_part : ( access_identifier | brackets_or_arguments );
	public final csParser.primary_expression_part_return primary_expression_part() throws RecognitionException {
		csParser.primary_expression_part_return retval = new csParser.primary_expression_part_return();
		retval.start = input.LT(1);
		int primary_expression_part_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_identifier109 =null;
		ParserRuleReturnScope brackets_or_arguments110 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:130:24: ( access_identifier | brackets_or_arguments )
			int alt30=2;
			int LA30_0 = input.LA(1);
			if ( (LA30_0==DOT||LA30_0==PTR) ) {
				alt30=1;
			}
			else if ( (LA30_0==68||LA30_0==91) ) {
				alt30=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 30, 0, input);
				throw nvae;
			}

			switch (alt30) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:131:10: access_identifier
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_access_identifier_in_primary_expression_part2119);
					access_identifier109=access_identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier109.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:132:11: brackets_or_arguments
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_brackets_or_arguments_in_primary_expression_part2131);
					brackets_or_arguments110=brackets_or_arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets_or_arguments110.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 21, primary_expression_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression_part"


	public static class access_identifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "access_identifier"
	// /Users/jeremie/ANTLR/cs.g:133:1: access_identifier : access_operator type_or_generic ;
	public final csParser.access_identifier_return access_identifier() throws RecognitionException {
		csParser.access_identifier_return retval = new csParser.access_identifier_return();
		retval.start = input.LT(1);
		int access_identifier_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_operator111 =null;
		ParserRuleReturnScope type_or_generic112 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:133:18: ( access_operator type_or_generic )
			// /Users/jeremie/ANTLR/cs.g:134:9: access_operator type_or_generic
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_access_operator_in_access_identifier2146);
			access_operator111=access_operator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, access_operator111.getTree());

			pushFollow(FOLLOW_type_or_generic_in_access_identifier2150);
			type_or_generic112=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic112.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 22, access_identifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "access_identifier"


	public static class access_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "access_operator"
	// /Users/jeremie/ANTLR/cs.g:135:1: access_operator : ( '.' | '->' );
	public final csParser.access_operator_return access_operator() throws RecognitionException {
		csParser.access_operator_return retval = new csParser.access_operator_return();
		retval.start = input.LT(1);
		int access_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set113=null;

		CommonTree set113_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:135:16: ( '.' | '->' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set113=input.LT(1);
			if ( input.LA(1)==DOT||input.LA(1)==PTR ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set113));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 23, access_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "access_operator"


	public static class brackets_or_arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "brackets_or_arguments"
	// /Users/jeremie/ANTLR/cs.g:137:1: brackets_or_arguments : ( brackets | arguments );
	public final csParser.brackets_or_arguments_return brackets_or_arguments() throws RecognitionException {
		csParser.brackets_or_arguments_return retval = new csParser.brackets_or_arguments_return();
		retval.start = input.LT(1);
		int brackets_or_arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope brackets114 =null;
		ParserRuleReturnScope arguments115 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:137:22: ( brackets | arguments )
			int alt31=2;
			int LA31_0 = input.LA(1);
			if ( (LA31_0==91) ) {
				alt31=1;
			}
			else if ( (LA31_0==68) ) {
				alt31=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 31, 0, input);
				throw nvae;
			}

			switch (alt31) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:138:9: brackets
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_brackets_in_brackets_or_arguments2186);
					brackets114=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets114.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:138:20: arguments
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_arguments_in_brackets_or_arguments2190);
					arguments115=arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments115.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 24, brackets_or_arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "brackets_or_arguments"


	public static class brackets_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "brackets"
	// /Users/jeremie/ANTLR/cs.g:139:1: brackets : '[' ( expression_list )? ']' ;
	public final csParser.brackets_return brackets() throws RecognitionException {
		csParser.brackets_return retval = new csParser.brackets_return();
		retval.start = input.LT(1);
		int brackets_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal116=null;
		Token char_literal118=null;
		ParserRuleReturnScope expression_list117 =null;

		CommonTree char_literal116_tree=null;
		CommonTree char_literal118_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:139:9: ( '[' ( expression_list )? ']' )
			// /Users/jeremie/ANTLR/cs.g:140:9: '[' ( expression_list )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal116=(Token)match(input,91,FOLLOW_91_in_brackets2205); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal116_tree = (CommonTree)adaptor.create(char_literal116);
			adaptor.addChild(root_0, char_literal116_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:140:15: ( expression_list )?
			int alt32=2;
			int LA32_0 = input.LA(1);
			if ( (LA32_0==Character_literal||LA32_0==FALSE||(LA32_0 >= Hex_number && LA32_0 <= IDENTIFIER)||(LA32_0 >= MINUS && LA32_0 <= NUMBER)||LA32_0==Real_literal||LA32_0==STRINGLITERAL||LA32_0==TRUE||LA32_0==Verbatim_string_literal||LA32_0==61||LA32_0==66||(LA32_0 >= 68 && LA32_0 <= 69)||(LA32_0 >= 71 && LA32_0 <= 72)||LA32_0==75||LA32_0==95||(LA32_0 >= 97 && LA32_0 <= 98)||(LA32_0 >= 100 && LA32_0 <= 103)||(LA32_0 >= 105 && LA32_0 <= 106)||(LA32_0 >= 109 && LA32_0 <= 110)||(LA32_0 >= 114 && LA32_0 <= 117)||(LA32_0 >= 119 && LA32_0 <= 120)||LA32_0==122||LA32_0==126||LA32_0==129||LA32_0==132||LA32_0==135||LA32_0==138||LA32_0==141||(LA32_0 >= 143 && LA32_0 <= 144)||(LA32_0 >= 146 && LA32_0 <= 148)||(LA32_0 >= 150 && LA32_0 <= 152)||LA32_0==154||LA32_0==157||LA32_0==160||LA32_0==162||LA32_0==167||LA32_0==169||(LA32_0 >= 171 && LA32_0 <= 174)||LA32_0==177||LA32_0==180||(LA32_0 >= 183 && LA32_0 <= 187)||(LA32_0 >= 189 && LA32_0 <= 190)||LA32_0==194||LA32_0==196||LA32_0==202) ) {
				alt32=1;
			}
			switch (alt32) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:140:15: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_brackets2209);
					expression_list117=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list117.getTree());

					}
					break;

			}

			char_literal118=(Token)match(input,92,FOLLOW_92_in_brackets2214); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal118_tree = (CommonTree)adaptor.create(char_literal118);
			adaptor.addChild(root_0, char_literal118_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 25, brackets_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "brackets"


	public static class paren_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "paren_expression"
	// /Users/jeremie/ANTLR/cs.g:141:1: paren_expression : '(' expression ')' ;
	public final csParser.paren_expression_return paren_expression() throws RecognitionException {
		csParser.paren_expression_return retval = new csParser.paren_expression_return();
		retval.start = input.LT(1);
		int paren_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal119=null;
		Token char_literal121=null;
		ParserRuleReturnScope expression120 =null;

		CommonTree char_literal119_tree=null;
		CommonTree char_literal121_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:141:17: ( '(' expression ')' )
			// /Users/jeremie/ANTLR/cs.g:142:9: '(' expression ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal119=(Token)match(input,68,FOLLOW_68_in_paren_expression2245); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal119_tree = (CommonTree)adaptor.create(char_literal119);
			adaptor.addChild(root_0, char_literal119_tree);
			}

			pushFollow(FOLLOW_expression_in_paren_expression2249);
			expression120=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression120.getTree());

			char_literal121=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_paren_expression2253); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal121_tree = (CommonTree)adaptor.create(char_literal121);
			adaptor.addChild(root_0, char_literal121_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 26, paren_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "paren_expression"


	public static class arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "arguments"
	// /Users/jeremie/ANTLR/cs.g:143:1: arguments : '(' ( argument_list )? ')' ;
	public final csParser.arguments_return arguments() throws RecognitionException {
		csParser.arguments_return retval = new csParser.arguments_return();
		retval.start = input.LT(1);
		int arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal122=null;
		Token char_literal124=null;
		ParserRuleReturnScope argument_list123 =null;

		CommonTree char_literal122_tree=null;
		CommonTree char_literal124_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:143:10: ( '(' ( argument_list )? ')' )
			// /Users/jeremie/ANTLR/cs.g:144:9: '(' ( argument_list )? ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal122=(Token)match(input,68,FOLLOW_68_in_arguments2269); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal122_tree = (CommonTree)adaptor.create(char_literal122);
			adaptor.addChild(root_0, char_literal122_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:144:15: ( argument_list )?
			int alt33=2;
			int LA33_0 = input.LA(1);
			if ( (LA33_0==Character_literal||LA33_0==FALSE||(LA33_0 >= Hex_number && LA33_0 <= IDENTIFIER)||(LA33_0 >= MINUS && LA33_0 <= NUMBER)||LA33_0==Real_literal||LA33_0==STRINGLITERAL||LA33_0==TRUE||LA33_0==Verbatim_string_literal||LA33_0==61||LA33_0==66||(LA33_0 >= 68 && LA33_0 <= 69)||(LA33_0 >= 71 && LA33_0 <= 72)||LA33_0==75||LA33_0==95||(LA33_0 >= 97 && LA33_0 <= 98)||(LA33_0 >= 100 && LA33_0 <= 103)||(LA33_0 >= 105 && LA33_0 <= 106)||(LA33_0 >= 109 && LA33_0 <= 110)||(LA33_0 >= 114 && LA33_0 <= 117)||(LA33_0 >= 119 && LA33_0 <= 120)||LA33_0==122||LA33_0==126||LA33_0==129||LA33_0==132||LA33_0==135||LA33_0==138||LA33_0==141||(LA33_0 >= 143 && LA33_0 <= 144)||(LA33_0 >= 146 && LA33_0 <= 148)||(LA33_0 >= 150 && LA33_0 <= 152)||(LA33_0 >= 154 && LA33_0 <= 155)||LA33_0==157||LA33_0==160||LA33_0==162||(LA33_0 >= 166 && LA33_0 <= 167)||LA33_0==169||(LA33_0 >= 171 && LA33_0 <= 174)||LA33_0==177||LA33_0==180||(LA33_0 >= 183 && LA33_0 <= 187)||(LA33_0 >= 189 && LA33_0 <= 190)||LA33_0==194||LA33_0==196||LA33_0==202) ) {
				alt33=1;
			}
			switch (alt33) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:144:15: argument_list
					{
					pushFollow(FOLLOW_argument_list_in_arguments2273);
					argument_list123=argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list123.getTree());

					}
					break;

			}

			char_literal124=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_arguments2278); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal124_tree = (CommonTree)adaptor.create(char_literal124);
			adaptor.addChild(root_0, char_literal124_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 27, arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "arguments"


	public static class argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument_list"
	// /Users/jeremie/ANTLR/cs.g:145:1: argument_list : argument ( ',' argument )* ;
	public final csParser.argument_list_return argument_list() throws RecognitionException {
		csParser.argument_list_return retval = new csParser.argument_list_return();
		retval.start = input.LT(1);
		int argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal126=null;
		ParserRuleReturnScope argument125 =null;
		ParserRuleReturnScope argument127 =null;

		CommonTree char_literal126_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:145:14: ( argument ( ',' argument )* )
			// /Users/jeremie/ANTLR/cs.g:146:9: argument ( ',' argument )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_argument_in_argument_list2294);
			argument125=argument();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, argument125.getTree());

			// /Users/jeremie/ANTLR/cs.g:146:18: ( ',' argument )*
			loop34:
			while (true) {
				int alt34=2;
				int LA34_0 = input.LA(1);
				if ( (LA34_0==74) ) {
					alt34=1;
				}

				switch (alt34) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:146:19: ',' argument
					{
					char_literal126=(Token)match(input,74,FOLLOW_74_in_argument_list2297); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal126_tree = (CommonTree)adaptor.create(char_literal126);
					adaptor.addChild(root_0, char_literal126_tree);
					}

					pushFollow(FOLLOW_argument_in_argument_list2299);
					argument127=argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument127.getTree());

					}
					break;

				default :
					break loop34;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 28, argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument_list"


	public static class argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument"
	// /Users/jeremie/ANTLR/cs.g:148:1: argument : ( argument_name argument_value | argument_value );
	public final csParser.argument_return argument() throws RecognitionException {
		csParser.argument_return retval = new csParser.argument_return();
		retval.start = input.LT(1);
		int argument_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope argument_name128 =null;
		ParserRuleReturnScope argument_value129 =null;
		ParserRuleReturnScope argument_value130 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:148:9: ( argument_name argument_value | argument_value )
			int alt35=2;
			switch ( input.LA(1) ) {
			case 132:
				{
				int LA35_1 = input.LA(2);
				if ( (LA35_1==79) ) {
					alt35=1;
				}
				else if ( (LA35_1==DOT||LA35_1==GT||LA35_1==IDENTIFIER||LA35_1==MINUS||LA35_1==PTR||LA35_1==RPAREN||(LA35_1 >= 62 && LA35_1 <= 78)||(LA35_1 >= 80 && LA35_1 <= 91)||(LA35_1 >= 93 && LA35_1 <= 95)||(LA35_1 >= 97 && LA35_1 <= 101)||LA35_1==103||(LA35_1 >= 105 && LA35_1 <= 106)||LA35_1==109||LA35_1==114||LA35_1==117||(LA35_1 >= 119 && LA35_1 <= 120)||LA35_1==122||LA35_1==126||LA35_1==129||LA35_1==132||LA35_1==135||LA35_1==138||(LA35_1 >= 141 && LA35_1 <= 144)||(LA35_1 >= 146 && LA35_1 <= 148)||(LA35_1 >= 151 && LA35_1 <= 152)||LA35_1==154||LA35_1==157||LA35_1==160||LA35_1==162||LA35_1==167||LA35_1==169||(LA35_1 >= 171 && LA35_1 <= 173)||LA35_1==177||LA35_1==183||(LA35_1 >= 185 && LA35_1 <= 186)||(LA35_1 >= 189 && LA35_1 <= 190)||LA35_1==192||LA35_1==194||LA35_1==196||(LA35_1 >= 198 && LA35_1 <= 200)) ) {
					alt35=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 35, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 155:
			case 166:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 202:
				{
				alt35=2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA35_3 = input.LA(2);
				if ( (LA35_3==79) ) {
					alt35=1;
				}
				else if ( (LA35_3==DOT||LA35_3==GT||LA35_3==MINUS||LA35_3==PTR||LA35_3==RPAREN||(LA35_3 >= 62 && LA35_3 <= 78)||(LA35_3 >= 80 && LA35_3 <= 91)||(LA35_3 >= 93 && LA35_3 <= 94)||LA35_3==99||LA35_3==142||(LA35_3 >= 198 && LA35_3 <= 200)) ) {
					alt35=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 35, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 35, 0, input);
				throw nvae;
			}
			switch (alt35) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:149:9: argument_name argument_value
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_argument_name_in_argument2316);
					argument_name128=argument_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_name128.getTree());

					pushFollow(FOLLOW_argument_value_in_argument2320);
					argument_value129=argument_value();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value129.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:150:11: argument_value
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_argument_value_in_argument2332);
					argument_value130=argument_value();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value130.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 29, argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument"


	public static class argument_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument_name"
	// /Users/jeremie/ANTLR/cs.g:151:1: argument_name : identifier ':' ;
	public final csParser.argument_name_return argument_name() throws RecognitionException {
		csParser.argument_name_return retval = new csParser.argument_name_return();
		retval.start = input.LT(1);
		int argument_name_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal132=null;
		ParserRuleReturnScope identifier131 =null;

		CommonTree char_literal132_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:151:14: ( identifier ':' )
			// /Users/jeremie/ANTLR/cs.g:152:9: identifier ':'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_argument_name2346);
			identifier131=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier131.getTree());

			char_literal132=(Token)match(input,79,FOLLOW_79_in_argument_name2350); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal132_tree = (CommonTree)adaptor.create(char_literal132);
			adaptor.addChild(root_0, char_literal132_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 30, argument_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument_name"


	public static class argument_value_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument_value"
	// /Users/jeremie/ANTLR/cs.g:153:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
	public final csParser.argument_value_return argument_value() throws RecognitionException {
		csParser.argument_value_return retval = new csParser.argument_value_return();
		retval.start = input.LT(1);
		int argument_value_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal135=null;
		ParserRuleReturnScope expression133 =null;
		ParserRuleReturnScope ref_variable_reference134 =null;
		ParserRuleReturnScope variable_reference136 =null;

		CommonTree string_literal135_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:153:15: ( expression | ref_variable_reference | 'out' variable_reference )
			int alt36=3;
			switch ( input.LA(1) ) {
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
			case 202:
				{
				alt36=1;
				}
				break;
			case 166:
				{
				alt36=2;
				}
				break;
			case 155:
				{
				alt36=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 36, 0, input);
				throw nvae;
			}
			switch (alt36) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:154:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_argument_value2365);
					expression133=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression133.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:155:11: ref_variable_reference
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_ref_variable_reference_in_argument_value2378);
					ref_variable_reference134=ref_variable_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ref_variable_reference134.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:156:11: 'out' variable_reference
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal135=(Token)match(input,155,FOLLOW_155_in_argument_value2391); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal135_tree = (CommonTree)adaptor.create(string_literal135);
					adaptor.addChild(root_0, string_literal135_tree);
					}

					pushFollow(FOLLOW_variable_reference_in_argument_value2395);
					variable_reference136=variable_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference136.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 31, argument_value_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument_value"


	public static class ref_variable_reference_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ref_variable_reference"
	// /Users/jeremie/ANTLR/cs.g:157:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
	public final csParser.ref_variable_reference_return ref_variable_reference() throws RecognitionException {
		csParser.ref_variable_reference_return retval = new csParser.ref_variable_reference_return();
		retval.start = input.LT(1);
		int ref_variable_reference_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal137=null;
		Token char_literal138=null;
		Token char_literal140=null;
		ParserRuleReturnScope type139 =null;
		ParserRuleReturnScope ref_variable_reference141 =null;
		ParserRuleReturnScope variable_reference142 =null;
		ParserRuleReturnScope variable_reference143 =null;

		CommonTree string_literal137_tree=null;
		CommonTree char_literal138_tree=null;
		CommonTree char_literal140_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:157:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
			// /Users/jeremie/ANTLR/cs.g:158:9: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal137=(Token)match(input,166,FOLLOW_166_in_ref_variable_reference2410); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal137_tree = (CommonTree)adaptor.create(string_literal137);
			adaptor.addChild(root_0, string_literal137_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:159:17: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			int alt38=2;
			int LA38_0 = input.LA(1);
			if ( (LA38_0==68) ) {
				int LA38_1 = input.LA(2);
				if ( (synpred10_cs()) ) {
					alt38=1;
				}
				else if ( (true) ) {
					alt38=2;
				}

			}
			else if ( (LA38_0==Character_literal||LA38_0==FALSE||(LA38_0 >= Hex_number && LA38_0 <= IDENTIFIER)||(LA38_0 >= MINUS && LA38_0 <= NUMBER)||LA38_0==Real_literal||LA38_0==STRINGLITERAL||LA38_0==TRUE||LA38_0==Verbatim_string_literal||LA38_0==61||LA38_0==66||LA38_0==69||(LA38_0 >= 71 && LA38_0 <= 72)||LA38_0==75||LA38_0==95||(LA38_0 >= 97 && LA38_0 <= 98)||(LA38_0 >= 100 && LA38_0 <= 103)||(LA38_0 >= 105 && LA38_0 <= 106)||(LA38_0 >= 109 && LA38_0 <= 110)||(LA38_0 >= 114 && LA38_0 <= 117)||(LA38_0 >= 119 && LA38_0 <= 120)||LA38_0==122||LA38_0==126||LA38_0==129||LA38_0==132||LA38_0==135||LA38_0==138||LA38_0==141||(LA38_0 >= 143 && LA38_0 <= 144)||(LA38_0 >= 146 && LA38_0 <= 148)||(LA38_0 >= 150 && LA38_0 <= 152)||LA38_0==154||LA38_0==157||LA38_0==160||LA38_0==162||LA38_0==167||LA38_0==169||(LA38_0 >= 171 && LA38_0 <= 174)||LA38_0==177||LA38_0==180||(LA38_0 >= 183 && LA38_0 <= 187)||(LA38_0 >= 189 && LA38_0 <= 190)||LA38_0==194||LA38_0==196||LA38_0==202) ) {
				alt38=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 38, 0, input);
				throw nvae;
			}

			switch (alt38) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:159:18: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
					{
					char_literal138=(Token)match(input,68,FOLLOW_68_in_ref_variable_reference2446); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal138_tree = (CommonTree)adaptor.create(char_literal138);
					adaptor.addChild(root_0, char_literal138_tree);
					}

					pushFollow(FOLLOW_type_in_ref_variable_reference2450);
					type139=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type139.getTree());

					char_literal140=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_ref_variable_reference2454); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal140_tree = (CommonTree)adaptor.create(char_literal140);
					adaptor.addChild(root_0, char_literal140_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:159:61: ( ref_variable_reference | variable_reference )
					int alt37=2;
					int LA37_0 = input.LA(1);
					if ( (LA37_0==166) ) {
						alt37=1;
					}
					else if ( (LA37_0==Character_literal||LA37_0==FALSE||(LA37_0 >= Hex_number && LA37_0 <= IDENTIFIER)||(LA37_0 >= MINUS && LA37_0 <= NUMBER)||LA37_0==Real_literal||LA37_0==STRINGLITERAL||LA37_0==TRUE||LA37_0==Verbatim_string_literal||LA37_0==61||LA37_0==66||(LA37_0 >= 68 && LA37_0 <= 69)||(LA37_0 >= 71 && LA37_0 <= 72)||LA37_0==75||LA37_0==95||(LA37_0 >= 97 && LA37_0 <= 98)||(LA37_0 >= 100 && LA37_0 <= 103)||(LA37_0 >= 105 && LA37_0 <= 106)||(LA37_0 >= 109 && LA37_0 <= 110)||(LA37_0 >= 114 && LA37_0 <= 117)||(LA37_0 >= 119 && LA37_0 <= 120)||LA37_0==122||LA37_0==126||LA37_0==129||LA37_0==132||LA37_0==135||LA37_0==138||LA37_0==141||(LA37_0 >= 143 && LA37_0 <= 144)||(LA37_0 >= 146 && LA37_0 <= 148)||(LA37_0 >= 150 && LA37_0 <= 152)||LA37_0==154||LA37_0==157||LA37_0==160||LA37_0==162||LA37_0==167||LA37_0==169||(LA37_0 >= 171 && LA37_0 <= 174)||LA37_0==177||LA37_0==180||(LA37_0 >= 183 && LA37_0 <= 187)||(LA37_0 >= 189 && LA37_0 <= 190)||LA37_0==194||LA37_0==196||LA37_0==202) ) {
						alt37=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 37, 0, input);
						throw nvae;
					}

					switch (alt37) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:159:62: ref_variable_reference
							{
							pushFollow(FOLLOW_ref_variable_reference_in_ref_variable_reference2459);
							ref_variable_reference141=ref_variable_reference();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, ref_variable_reference141.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:159:87: variable_reference
							{
							pushFollow(FOLLOW_variable_reference_in_ref_variable_reference2463);
							variable_reference142=variable_reference();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference142.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:161:19: variable_reference
					{
					pushFollow(FOLLOW_variable_reference_in_ref_variable_reference2688);
					variable_reference143=variable_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference143.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 32, ref_variable_reference_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ref_variable_reference"


	public static class variable_reference_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_reference"
	// /Users/jeremie/ANTLR/cs.g:163:1: variable_reference : expression ;
	public final csParser.variable_reference_return variable_reference() throws RecognitionException {
		csParser.variable_reference_return retval = new csParser.variable_reference_return();
		retval.start = input.LT(1);
		int variable_reference_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression144 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:163:19: ( expression )
			// /Users/jeremie/ANTLR/cs.g:164:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_variable_reference2712);
			expression144=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression144.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 33, variable_reference_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_reference"


	public static class rank_specifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "rank_specifiers"
	// /Users/jeremie/ANTLR/cs.g:165:1: rank_specifiers : ( rank_specifier )+ ;
	public final csParser.rank_specifiers_return rank_specifiers() throws RecognitionException {
		csParser.rank_specifiers_return retval = new csParser.rank_specifiers_return();
		retval.start = input.LT(1);
		int rank_specifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope rank_specifier145 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:165:16: ( ( rank_specifier )+ )
			// /Users/jeremie/ANTLR/cs.g:166:9: ( rank_specifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:166:9: ( rank_specifier )+
			int cnt39=0;
			loop39:
			while (true) {
				int alt39=2;
				int LA39_0 = input.LA(1);
				if ( (LA39_0==91) ) {
					int LA39_2 = input.LA(2);
					if ( (LA39_2==74||LA39_2==92) ) {
						alt39=1;
					}

				}

				switch (alt39) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:166:9: rank_specifier
					{
					pushFollow(FOLLOW_rank_specifier_in_rank_specifiers2727);
					rank_specifier145=rank_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier145.getTree());

					}
					break;

				default :
					if ( cnt39 >= 1 ) break loop39;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(39, input);
					throw eee;
				}
				cnt39++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 34, rank_specifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "rank_specifiers"


	public static class rank_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "rank_specifier"
	// /Users/jeremie/ANTLR/cs.g:167:1: rank_specifier : '[' ( dim_separators )? ']' ;
	public final csParser.rank_specifier_return rank_specifier() throws RecognitionException {
		csParser.rank_specifier_return retval = new csParser.rank_specifier_return();
		retval.start = input.LT(1);
		int rank_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal146=null;
		Token char_literal148=null;
		ParserRuleReturnScope dim_separators147 =null;

		CommonTree char_literal146_tree=null;
		CommonTree char_literal148_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:167:15: ( '[' ( dim_separators )? ']' )
			// /Users/jeremie/ANTLR/cs.g:168:9: '[' ( dim_separators )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal146=(Token)match(input,91,FOLLOW_91_in_rank_specifier2752); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal146_tree = (CommonTree)adaptor.create(char_literal146);
			adaptor.addChild(root_0, char_literal146_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:168:15: ( dim_separators )?
			int alt40=2;
			int LA40_0 = input.LA(1);
			if ( (LA40_0==74) ) {
				alt40=1;
			}
			switch (alt40) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:168:15: dim_separators
					{
					pushFollow(FOLLOW_dim_separators_in_rank_specifier2756);
					dim_separators147=dim_separators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dim_separators147.getTree());

					}
					break;

			}

			char_literal148=(Token)match(input,92,FOLLOW_92_in_rank_specifier2761); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal148_tree = (CommonTree)adaptor.create(char_literal148);
			adaptor.addChild(root_0, char_literal148_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 35, rank_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "rank_specifier"


	public static class dim_separators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "dim_separators"
	// /Users/jeremie/ANTLR/cs.g:169:1: dim_separators : ( ',' )+ ;
	public final csParser.dim_separators_return dim_separators() throws RecognitionException {
		csParser.dim_separators_return retval = new csParser.dim_separators_return();
		retval.start = input.LT(1);
		int dim_separators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal149=null;

		CommonTree char_literal149_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:169:15: ( ( ',' )+ )
			// /Users/jeremie/ANTLR/cs.g:170:9: ( ',' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:170:9: ( ',' )+
			int cnt41=0;
			loop41:
			while (true) {
				int alt41=2;
				int LA41_0 = input.LA(1);
				if ( (LA41_0==74) ) {
					alt41=1;
				}

				switch (alt41) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:170:9: ','
					{
					char_literal149=(Token)match(input,74,FOLLOW_74_in_dim_separators2777); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal149_tree = (CommonTree)adaptor.create(char_literal149);
					adaptor.addChild(root_0, char_literal149_tree);
					}

					}
					break;

				default :
					if ( cnt41 >= 1 ) break loop41;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(41, input);
					throw eee;
				}
				cnt41++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 36, dim_separators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "dim_separators"


	public static class delegate_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:172:1: delegate_creation_expression : type_name '(' type_name ')' ;
	public final csParser.delegate_creation_expression_return delegate_creation_expression() throws RecognitionException {
		csParser.delegate_creation_expression_return retval = new csParser.delegate_creation_expression_return();
		retval.start = input.LT(1);
		int delegate_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal151=null;
		Token char_literal153=null;
		ParserRuleReturnScope type_name150 =null;
		ParserRuleReturnScope type_name152 =null;

		CommonTree char_literal151_tree=null;
		CommonTree char_literal153_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:172:29: ( type_name '(' type_name ')' )
			// /Users/jeremie/ANTLR/cs.g:174:9: type_name '(' type_name ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_delegate_creation_expression2804);
			type_name150=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name150.getTree());

			char_literal151=(Token)match(input,68,FOLLOW_68_in_delegate_creation_expression2808); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal151_tree = (CommonTree)adaptor.create(char_literal151);
			adaptor.addChild(root_0, char_literal151_tree);
			}

			pushFollow(FOLLOW_type_name_in_delegate_creation_expression2812);
			type_name152=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name152.getTree());

			char_literal153=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delegate_creation_expression2816); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal153_tree = (CommonTree)adaptor.create(char_literal153);
			adaptor.addChild(root_0, char_literal153_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 37, delegate_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_creation_expression"


	public static class anonymous_object_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_object_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:175:1: anonymous_object_creation_expression : anonymous_object_initializer ;
	public final csParser.anonymous_object_creation_expression_return anonymous_object_creation_expression() throws RecognitionException {
		csParser.anonymous_object_creation_expression_return retval = new csParser.anonymous_object_creation_expression_return();
		retval.start = input.LT(1);
		int anonymous_object_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope anonymous_object_initializer154 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:175:37: ( anonymous_object_initializer )
			// /Users/jeremie/ANTLR/cs.g:177:9: anonymous_object_initializer
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression2841);
			anonymous_object_initializer154=anonymous_object_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_initializer154.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 38, anonymous_object_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_object_creation_expression"


	public static class anonymous_object_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_object_initializer"
	// /Users/jeremie/ANTLR/cs.g:178:1: anonymous_object_initializer : '{' ( member_declarator_list )? ( ',' )? '}' ;
	public final csParser.anonymous_object_initializer_return anonymous_object_initializer() throws RecognitionException {
		csParser.anonymous_object_initializer_return retval = new csParser.anonymous_object_initializer_return();
		retval.start = input.LT(1);
		int anonymous_object_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal155=null;
		Token char_literal157=null;
		Token char_literal158=null;
		ParserRuleReturnScope member_declarator_list156 =null;

		CommonTree char_literal155_tree=null;
		CommonTree char_literal157_tree=null;
		CommonTree char_literal158_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:178:29: ( '{' ( member_declarator_list )? ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:179:9: '{' ( member_declarator_list )? ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal155=(Token)match(input,197,FOLLOW_197_in_anonymous_object_initializer2857); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal155_tree = (CommonTree)adaptor.create(char_literal155);
			adaptor.addChild(root_0, char_literal155_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:179:15: ( member_declarator_list )?
			int alt42=2;
			int LA42_0 = input.LA(1);
			if ( (LA42_0==IDENTIFIER||LA42_0==95||(LA42_0 >= 97 && LA42_0 <= 98)||(LA42_0 >= 100 && LA42_0 <= 101)||LA42_0==105||LA42_0==117||LA42_0==120||LA42_0==122||LA42_0==126||LA42_0==132||LA42_0==135||LA42_0==141||(LA42_0 >= 143 && LA42_0 <= 144)||(LA42_0 >= 147 && LA42_0 <= 148)||LA42_0==152||LA42_0==154||LA42_0==157||LA42_0==160||LA42_0==162||LA42_0==167||(LA42_0 >= 171 && LA42_0 <= 172)||LA42_0==183||LA42_0==190||LA42_0==194||LA42_0==196) ) {
				alt42=1;
			}
			switch (alt42) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:179:15: member_declarator_list
					{
					pushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer2861);
					member_declarator_list156=member_declarator_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator_list156.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:179:41: ( ',' )?
			int alt43=2;
			int LA43_0 = input.LA(1);
			if ( (LA43_0==74) ) {
				alt43=1;
			}
			switch (alt43) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:179:41: ','
					{
					char_literal157=(Token)match(input,74,FOLLOW_74_in_anonymous_object_initializer2866); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal157_tree = (CommonTree)adaptor.create(char_literal157);
					adaptor.addChild(root_0, char_literal157_tree);
					}

					}
					break;

			}

			char_literal158=(Token)match(input,201,FOLLOW_201_in_anonymous_object_initializer2871); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal158_tree = (CommonTree)adaptor.create(char_literal158);
			adaptor.addChild(root_0, char_literal158_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 39, anonymous_object_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_object_initializer"


	public static class member_declarator_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_declarator_list"
	// /Users/jeremie/ANTLR/cs.g:180:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
	public final csParser.member_declarator_list_return member_declarator_list() throws RecognitionException {
		csParser.member_declarator_list_return retval = new csParser.member_declarator_list_return();
		retval.start = input.LT(1);
		int member_declarator_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal160=null;
		ParserRuleReturnScope member_declarator159 =null;
		ParserRuleReturnScope member_declarator161 =null;

		CommonTree char_literal160_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:180:23: ( member_declarator ( ',' member_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:181:9: member_declarator ( ',' member_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_declarator_in_member_declarator_list2886);
			member_declarator159=member_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator159.getTree());

			// /Users/jeremie/ANTLR/cs.g:181:28: ( ',' member_declarator )*
			loop44:
			while (true) {
				int alt44=2;
				int LA44_0 = input.LA(1);
				if ( (LA44_0==74) ) {
					int LA44_1 = input.LA(2);
					if ( (LA44_1==IDENTIFIER||LA44_1==95||(LA44_1 >= 97 && LA44_1 <= 98)||(LA44_1 >= 100 && LA44_1 <= 101)||LA44_1==105||LA44_1==117||LA44_1==120||LA44_1==122||LA44_1==126||LA44_1==132||LA44_1==135||LA44_1==141||(LA44_1 >= 143 && LA44_1 <= 144)||(LA44_1 >= 147 && LA44_1 <= 148)||LA44_1==152||LA44_1==154||LA44_1==157||LA44_1==160||LA44_1==162||LA44_1==167||(LA44_1 >= 171 && LA44_1 <= 172)||LA44_1==183||LA44_1==190||LA44_1==194||LA44_1==196) ) {
						alt44=1;
					}

				}

				switch (alt44) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:181:29: ',' member_declarator
					{
					char_literal160=(Token)match(input,74,FOLLOW_74_in_member_declarator_list2890); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal160_tree = (CommonTree)adaptor.create(char_literal160);
					adaptor.addChild(root_0, char_literal160_tree);
					}

					pushFollow(FOLLOW_member_declarator_in_member_declarator_list2892);
					member_declarator161=member_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator161.getTree());

					}
					break;

				default :
					break loop44;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 40, member_declarator_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_declarator_list"


	public static class member_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_declarator"
	// /Users/jeremie/ANTLR/cs.g:182:1: member_declarator : identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) ;
	public final csParser.member_declarator_return member_declarator() throws RecognitionException {
		csParser.member_declarator_return retval = new csParser.member_declarator_return();
		retval.start = input.LT(1);
		int member_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal164=null;
		Token char_literal166=null;
		ParserRuleReturnScope identifier162 =null;
		ParserRuleReturnScope generic_argument_list163 =null;
		ParserRuleReturnScope primary_or_array_creation_expression165 =null;
		ParserRuleReturnScope expression167 =null;

		CommonTree char_literal164_tree=null;
		CommonTree char_literal166_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:182:18: ( identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) )
			// /Users/jeremie/ANTLR/cs.g:183:9: identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_member_declarator2911);
			identifier162=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier162.getTree());

			// /Users/jeremie/ANTLR/cs.g:183:22: ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			int alt45=3;
			switch ( input.LA(1) ) {
			case 81:
				{
				alt45=1;
				}
				break;
			case DOT:
				{
				alt45=2;
				}
				break;
			case 85:
				{
				alt45=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 45, 0, input);
				throw nvae;
			}
			switch (alt45) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:183:23: generic_argument_list
					{
					pushFollow(FOLLOW_generic_argument_list_in_member_declarator2916);
					generic_argument_list163=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list163.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:184:36: ( '.' primary_or_array_creation_expression )
					{
					// /Users/jeremie/ANTLR/cs.g:184:36: ( '.' primary_or_array_creation_expression )
					// /Users/jeremie/ANTLR/cs.g:184:37: '.' primary_or_array_creation_expression
					{
					char_literal164=(Token)match(input,DOT,FOLLOW_DOT_in_member_declarator2954); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal164_tree = (CommonTree)adaptor.create(char_literal164);
					adaptor.addChild(root_0, char_literal164_tree);
					}

					pushFollow(FOLLOW_primary_or_array_creation_expression_in_member_declarator2958);
					primary_or_array_creation_expression165=primary_or_array_creation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_or_array_creation_expression165.getTree());

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:185:36: '=' expression
					{
					char_literal166=(Token)match(input,85,FOLLOW_85_in_member_declarator2996); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal166_tree = (CommonTree)adaptor.create(char_literal166);
					adaptor.addChild(root_0, char_literal166_tree);
					}

					pushFollow(FOLLOW_expression_in_member_declarator3000);
					expression167=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression167.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 41, member_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_declarator"


	public static class primary_or_array_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_or_array_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:186:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
	public final csParser.primary_or_array_creation_expression_return primary_or_array_creation_expression() throws RecognitionException {
		csParser.primary_or_array_creation_expression_return retval = new csParser.primary_or_array_creation_expression_return();
		retval.start = input.LT(1);
		int primary_or_array_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope array_creation_expression168 =null;
		ParserRuleReturnScope primary_expression169 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:186:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
			int alt46=2;
			int LA46_0 = input.LA(1);
			if ( (LA46_0==150) ) {
				int LA46_1 = input.LA(2);
				if ( (synpred11_cs()) ) {
					alt46=1;
				}
				else if ( (true) ) {
					alt46=2;
				}

			}
			else if ( (LA46_0==Character_literal||LA46_0==FALSE||(LA46_0 >= Hex_number && LA46_0 <= IDENTIFIER)||(LA46_0 >= NULL && LA46_0 <= NUMBER)||LA46_0==Real_literal||LA46_0==STRINGLITERAL||LA46_0==TRUE||LA46_0==Verbatim_string_literal||LA46_0==68||LA46_0==95||(LA46_0 >= 97 && LA46_0 <= 98)||(LA46_0 >= 100 && LA46_0 <= 103)||(LA46_0 >= 105 && LA46_0 <= 106)||(LA46_0 >= 109 && LA46_0 <= 110)||(LA46_0 >= 114 && LA46_0 <= 117)||(LA46_0 >= 119 && LA46_0 <= 120)||LA46_0==122||LA46_0==126||LA46_0==129||LA46_0==132||LA46_0==135||LA46_0==138||LA46_0==141||(LA46_0 >= 143 && LA46_0 <= 144)||(LA46_0 >= 146 && LA46_0 <= 148)||(LA46_0 >= 151 && LA46_0 <= 152)||LA46_0==154||LA46_0==157||LA46_0==160||LA46_0==162||LA46_0==167||LA46_0==169||(LA46_0 >= 171 && LA46_0 <= 174)||LA46_0==177||LA46_0==180||(LA46_0 >= 183 && LA46_0 <= 187)||(LA46_0 >= 189 && LA46_0 <= 190)||LA46_0==194||LA46_0==196) ) {
				alt46=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 46, 0, input);
				throw nvae;
			}

			switch (alt46) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:187:9: ( array_creation_expression )=> array_creation_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_array_creation_expression_in_primary_or_array_creation_expression3022);
					array_creation_expression168=array_creation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_creation_expression168.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:188:11: primary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_primary_expression_in_primary_or_array_creation_expression3034);
					primary_expression169=primary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression169.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 42, primary_or_array_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_or_array_creation_expression"


	public static class array_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "array_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:191:1: array_creation_expression : 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) ;
	public final csParser.array_creation_expression_return array_creation_expression() throws RecognitionException {
		csParser.array_creation_expression_return retval = new csParser.array_creation_expression_return();
		retval.start = input.LT(1);
		int array_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal170=null;
		Token char_literal172=null;
		Token char_literal174=null;
		ParserRuleReturnScope type171 =null;
		ParserRuleReturnScope expression_list173 =null;
		ParserRuleReturnScope rank_specifiers175 =null;
		ParserRuleReturnScope array_initializer176 =null;
		ParserRuleReturnScope arguments177 =null;
		ParserRuleReturnScope invocation_part178 =null;
		ParserRuleReturnScope invocation_part179 =null;
		ParserRuleReturnScope arguments180 =null;
		ParserRuleReturnScope array_initializer181 =null;
		ParserRuleReturnScope rank_specifier182 =null;
		ParserRuleReturnScope array_initializer183 =null;

		CommonTree string_literal170_tree=null;
		CommonTree char_literal172_tree=null;
		CommonTree char_literal174_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:191:26: ( 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) )
			// /Users/jeremie/ANTLR/cs.g:192:9: 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal170=(Token)match(input,150,FOLLOW_150_in_array_creation_expression3059); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal170_tree = (CommonTree)adaptor.create(string_literal170);
			adaptor.addChild(root_0, string_literal170_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:193:17: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			int alt52=2;
			int LA52_0 = input.LA(1);
			if ( (LA52_0==IDENTIFIER||LA52_0==95||(LA52_0 >= 97 && LA52_0 <= 98)||(LA52_0 >= 100 && LA52_0 <= 101)||LA52_0==103||(LA52_0 >= 105 && LA52_0 <= 106)||LA52_0==109||LA52_0==114||LA52_0==117||(LA52_0 >= 119 && LA52_0 <= 120)||LA52_0==122||LA52_0==126||LA52_0==129||LA52_0==132||LA52_0==135||LA52_0==138||LA52_0==141||(LA52_0 >= 143 && LA52_0 <= 144)||(LA52_0 >= 146 && LA52_0 <= 148)||(LA52_0 >= 151 && LA52_0 <= 152)||LA52_0==154||LA52_0==157||LA52_0==160||LA52_0==162||LA52_0==167||LA52_0==169||(LA52_0 >= 171 && LA52_0 <= 173)||LA52_0==177||LA52_0==183||(LA52_0 >= 185 && LA52_0 <= 186)||(LA52_0 >= 189 && LA52_0 <= 190)||LA52_0==192||LA52_0==194||LA52_0==196) ) {
				alt52=1;
			}
			else if ( (LA52_0==91) ) {
				alt52=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 52, 0, input);
				throw nvae;
			}

			switch (alt52) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:193:18: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
					{
					pushFollow(FOLLOW_type_in_array_creation_expression3081);
					type171=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type171.getTree());

					// /Users/jeremie/ANTLR/cs.g:193:25: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
					int alt51=2;
					int LA51_0 = input.LA(1);
					if ( (LA51_0==91) ) {
						alt51=1;
					}
					else if ( (LA51_0==197) ) {
						alt51=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 51, 0, input);
						throw nvae;
					}

					switch (alt51) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:193:26: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
							{
							char_literal172=(Token)match(input,91,FOLLOW_91_in_array_creation_expression3086); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal172_tree = (CommonTree)adaptor.create(char_literal172);
							adaptor.addChild(root_0, char_literal172_tree);
							}

							pushFollow(FOLLOW_expression_list_in_array_creation_expression3090);
							expression_list173=expression_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list173.getTree());

							char_literal174=(Token)match(input,92,FOLLOW_92_in_array_creation_expression3094); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal174_tree = (CommonTree)adaptor.create(char_literal174);
							adaptor.addChild(root_0, char_literal174_tree);
							}

							// /Users/jeremie/ANTLR/cs.g:194:41: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
							int alt50=2;
							alt50 = dfa50.predict(input);
							switch (alt50) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:194:43: ( rank_specifiers )? ( array_initializer )?
									{
									// /Users/jeremie/ANTLR/cs.g:194:43: ( rank_specifiers )?
									int alt47=2;
									int LA47_0 = input.LA(1);
									if ( (LA47_0==91) ) {
										alt47=1;
									}
									switch (alt47) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:194:43: rank_specifiers
											{
											pushFollow(FOLLOW_rank_specifiers_in_array_creation_expression3141);
											rank_specifiers175=rank_specifiers();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers175.getTree());

											}
											break;

									}

									// /Users/jeremie/ANTLR/cs.g:194:62: ( array_initializer )?
									int alt48=2;
									int LA48_0 = input.LA(1);
									if ( (LA48_0==197) ) {
										alt48=1;
									}
									switch (alt48) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:194:62: array_initializer
											{
											pushFollow(FOLLOW_array_initializer_in_array_creation_expression3146);
											array_initializer176=array_initializer();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer176.getTree());

											}
											break;

									}

									}
									break;
								case 2 :
									// /Users/jeremie/ANTLR/cs.g:196:43: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
									{
									// /Users/jeremie/ANTLR/cs.g:196:43: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
									loop49:
									while (true) {
										int alt49=3;
										int LA49_0 = input.LA(1);
										if ( (LA49_0==68) ) {
											int LA49_1 = input.LA(2);
											if ( (synpred12_cs()) ) {
												alt49=1;
											}

										}
										else if ( (LA49_0==DOT||LA49_0==PTR||LA49_0==91) ) {
											alt49=2;
										}

										switch (alt49) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:196:45: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
											{
											// /Users/jeremie/ANTLR/cs.g:196:45: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
											// /Users/jeremie/ANTLR/cs.g:196:46: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
											{
											pushFollow(FOLLOW_arguments_in_array_creation_expression3259);
											arguments177=arguments();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments177.getTree());

											pushFollow(FOLLOW_invocation_part_in_array_creation_expression3263);
											invocation_part178=invocation_part();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part178.getTree());

											}

											}
											break;
										case 2 :
											// /Users/jeremie/ANTLR/cs.g:197:45: invocation_part
											{
											pushFollow(FOLLOW_invocation_part_in_array_creation_expression3310);
											invocation_part179=invocation_part();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part179.getTree());

											}
											break;

										default :
											break loop49;
										}
									}

									pushFollow(FOLLOW_arguments_in_array_creation_expression3316);
									arguments180=arguments();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments180.getTree());

									}
									break;

							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:199:35: array_initializer
							{
							pushFollow(FOLLOW_array_initializer_in_array_creation_expression3450);
							array_initializer181=array_initializer();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer181.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:201:19: rank_specifier ( array_initializer )
					{
					pushFollow(FOLLOW_rank_specifier_in_array_creation_expression3520);
					rank_specifier182=rank_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier182.getTree());

					// /Users/jeremie/ANTLR/cs.g:202:25: ( array_initializer )
					// /Users/jeremie/ANTLR/cs.g:202:26: array_initializer
					{
					pushFollow(FOLLOW_array_initializer_in_array_creation_expression3550);
					array_initializer183=array_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer183.getTree());

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 43, array_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "array_creation_expression"


	public static class array_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "array_initializer"
	// /Users/jeremie/ANTLR/cs.g:205:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
	public final csParser.array_initializer_return array_initializer() throws RecognitionException {
		csParser.array_initializer_return retval = new csParser.array_initializer_return();
		retval.start = input.LT(1);
		int array_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal184=null;
		Token char_literal186=null;
		Token char_literal187=null;
		ParserRuleReturnScope variable_initializer_list185 =null;

		CommonTree char_literal184_tree=null;
		CommonTree char_literal186_tree=null;
		CommonTree char_literal187_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:205:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:206:9: '{' ( variable_initializer_list )? ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal184=(Token)match(input,197,FOLLOW_197_in_array_initializer3613); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal184_tree = (CommonTree)adaptor.create(char_literal184);
			adaptor.addChild(root_0, char_literal184_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:206:15: ( variable_initializer_list )?
			int alt53=2;
			int LA53_0 = input.LA(1);
			if ( (LA53_0==Character_literal||LA53_0==FALSE||(LA53_0 >= Hex_number && LA53_0 <= IDENTIFIER)||(LA53_0 >= MINUS && LA53_0 <= NUMBER)||LA53_0==Real_literal||LA53_0==STRINGLITERAL||LA53_0==TRUE||LA53_0==Verbatim_string_literal||LA53_0==61||LA53_0==66||(LA53_0 >= 68 && LA53_0 <= 69)||(LA53_0 >= 71 && LA53_0 <= 72)||LA53_0==75||LA53_0==95||(LA53_0 >= 97 && LA53_0 <= 98)||(LA53_0 >= 100 && LA53_0 <= 103)||(LA53_0 >= 105 && LA53_0 <= 106)||(LA53_0 >= 109 && LA53_0 <= 110)||(LA53_0 >= 114 && LA53_0 <= 117)||(LA53_0 >= 119 && LA53_0 <= 120)||LA53_0==122||LA53_0==126||LA53_0==129||LA53_0==132||LA53_0==135||LA53_0==138||LA53_0==141||(LA53_0 >= 143 && LA53_0 <= 144)||(LA53_0 >= 146 && LA53_0 <= 148)||(LA53_0 >= 150 && LA53_0 <= 152)||LA53_0==154||LA53_0==157||LA53_0==160||LA53_0==162||LA53_0==167||LA53_0==169||(LA53_0 >= 171 && LA53_0 <= 174)||LA53_0==177||LA53_0==180||(LA53_0 >= 183 && LA53_0 <= 187)||(LA53_0 >= 189 && LA53_0 <= 190)||LA53_0==194||(LA53_0 >= 196 && LA53_0 <= 197)||LA53_0==202) ) {
				alt53=1;
			}
			switch (alt53) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:206:15: variable_initializer_list
					{
					pushFollow(FOLLOW_variable_initializer_list_in_array_initializer3617);
					variable_initializer_list185=variable_initializer_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer_list185.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:206:44: ( ',' )?
			int alt54=2;
			int LA54_0 = input.LA(1);
			if ( (LA54_0==74) ) {
				alt54=1;
			}
			switch (alt54) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:206:44: ','
					{
					char_literal186=(Token)match(input,74,FOLLOW_74_in_array_initializer3622); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal186_tree = (CommonTree)adaptor.create(char_literal186);
					adaptor.addChild(root_0, char_literal186_tree);
					}

					}
					break;

			}

			char_literal187=(Token)match(input,201,FOLLOW_201_in_array_initializer3627); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal187_tree = (CommonTree)adaptor.create(char_literal187);
			adaptor.addChild(root_0, char_literal187_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 44, array_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "array_initializer"


	public static class variable_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:207:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
	public final csParser.variable_initializer_list_return variable_initializer_list() throws RecognitionException {
		csParser.variable_initializer_list_return retval = new csParser.variable_initializer_list_return();
		retval.start = input.LT(1);
		int variable_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal189=null;
		ParserRuleReturnScope variable_initializer188 =null;
		ParserRuleReturnScope variable_initializer190 =null;

		CommonTree char_literal189_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:207:26: ( variable_initializer ( ',' variable_initializer )* )
			// /Users/jeremie/ANTLR/cs.g:208:9: variable_initializer ( ',' variable_initializer )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list3642);
			variable_initializer188=variable_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer188.getTree());

			// /Users/jeremie/ANTLR/cs.g:208:30: ( ',' variable_initializer )*
			loop55:
			while (true) {
				int alt55=2;
				int LA55_0 = input.LA(1);
				if ( (LA55_0==74) ) {
					int LA55_1 = input.LA(2);
					if ( (LA55_1==Character_literal||LA55_1==FALSE||(LA55_1 >= Hex_number && LA55_1 <= IDENTIFIER)||(LA55_1 >= MINUS && LA55_1 <= NUMBER)||LA55_1==Real_literal||LA55_1==STRINGLITERAL||LA55_1==TRUE||LA55_1==Verbatim_string_literal||LA55_1==61||LA55_1==66||(LA55_1 >= 68 && LA55_1 <= 69)||(LA55_1 >= 71 && LA55_1 <= 72)||LA55_1==75||LA55_1==95||(LA55_1 >= 97 && LA55_1 <= 98)||(LA55_1 >= 100 && LA55_1 <= 103)||(LA55_1 >= 105 && LA55_1 <= 106)||(LA55_1 >= 109 && LA55_1 <= 110)||(LA55_1 >= 114 && LA55_1 <= 117)||(LA55_1 >= 119 && LA55_1 <= 120)||LA55_1==122||LA55_1==126||LA55_1==129||LA55_1==132||LA55_1==135||LA55_1==138||LA55_1==141||(LA55_1 >= 143 && LA55_1 <= 144)||(LA55_1 >= 146 && LA55_1 <= 148)||(LA55_1 >= 150 && LA55_1 <= 152)||LA55_1==154||LA55_1==157||LA55_1==160||LA55_1==162||LA55_1==167||LA55_1==169||(LA55_1 >= 171 && LA55_1 <= 174)||LA55_1==177||LA55_1==180||(LA55_1 >= 183 && LA55_1 <= 187)||(LA55_1 >= 189 && LA55_1 <= 190)||LA55_1==194||(LA55_1 >= 196 && LA55_1 <= 197)||LA55_1==202) ) {
						alt55=1;
					}

				}

				switch (alt55) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:208:31: ',' variable_initializer
					{
					char_literal189=(Token)match(input,74,FOLLOW_74_in_variable_initializer_list3645); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal189_tree = (CommonTree)adaptor.create(char_literal189);
					adaptor.addChild(root_0, char_literal189_tree);
					}

					pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list3647);
					variable_initializer190=variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer190.getTree());

					}
					break;

				default :
					break loop55;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 45, variable_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_initializer_list"


	public static class variable_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_initializer"
	// /Users/jeremie/ANTLR/cs.g:209:1: variable_initializer : ( expression | array_initializer );
	public final csParser.variable_initializer_return variable_initializer() throws RecognitionException {
		csParser.variable_initializer_return retval = new csParser.variable_initializer_return();
		retval.start = input.LT(1);
		int variable_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression191 =null;
		ParserRuleReturnScope array_initializer192 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:209:21: ( expression | array_initializer )
			int alt56=2;
			int LA56_0 = input.LA(1);
			if ( (LA56_0==Character_literal||LA56_0==FALSE||(LA56_0 >= Hex_number && LA56_0 <= IDENTIFIER)||(LA56_0 >= MINUS && LA56_0 <= NUMBER)||LA56_0==Real_literal||LA56_0==STRINGLITERAL||LA56_0==TRUE||LA56_0==Verbatim_string_literal||LA56_0==61||LA56_0==66||(LA56_0 >= 68 && LA56_0 <= 69)||(LA56_0 >= 71 && LA56_0 <= 72)||LA56_0==75||LA56_0==95||(LA56_0 >= 97 && LA56_0 <= 98)||(LA56_0 >= 100 && LA56_0 <= 103)||(LA56_0 >= 105 && LA56_0 <= 106)||(LA56_0 >= 109 && LA56_0 <= 110)||(LA56_0 >= 114 && LA56_0 <= 117)||(LA56_0 >= 119 && LA56_0 <= 120)||LA56_0==122||LA56_0==126||LA56_0==129||LA56_0==132||LA56_0==135||LA56_0==138||LA56_0==141||(LA56_0 >= 143 && LA56_0 <= 144)||(LA56_0 >= 146 && LA56_0 <= 148)||(LA56_0 >= 150 && LA56_0 <= 152)||LA56_0==154||LA56_0==157||LA56_0==160||LA56_0==162||LA56_0==167||LA56_0==169||(LA56_0 >= 171 && LA56_0 <= 174)||LA56_0==177||LA56_0==180||(LA56_0 >= 183 && LA56_0 <= 187)||(LA56_0 >= 189 && LA56_0 <= 190)||LA56_0==194||LA56_0==196||LA56_0==202) ) {
				alt56=1;
			}
			else if ( (LA56_0==197) ) {
				alt56=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 56, 0, input);
				throw nvae;
			}

			switch (alt56) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:210:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_variable_initializer3664);
					expression191=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression191.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:210:29: array_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_array_initializer_in_variable_initializer3675);
					array_initializer192=array_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer192.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 46, variable_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_initializer"


	public static class sizeof_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sizeof_expression"
	// /Users/jeremie/ANTLR/cs.g:211:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
	public final csParser.sizeof_expression_return sizeof_expression() throws RecognitionException {
		csParser.sizeof_expression_return retval = new csParser.sizeof_expression_return();
		retval.start = input.LT(1);
		int sizeof_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal193=null;
		Token char_literal194=null;
		Token char_literal196=null;
		ParserRuleReturnScope unmanaged_type195 =null;

		CommonTree string_literal193_tree=null;
		CommonTree char_literal194_tree=null;
		CommonTree char_literal196_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:211:18: ( 'sizeof' '(' unmanaged_type ')' )
			// /Users/jeremie/ANTLR/cs.g:212:9: 'sizeof' '(' unmanaged_type ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal193=(Token)match(input,174,FOLLOW_174_in_sizeof_expression3690); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal193_tree = (CommonTree)adaptor.create(string_literal193);
			adaptor.addChild(root_0, string_literal193_tree);
			}

			char_literal194=(Token)match(input,68,FOLLOW_68_in_sizeof_expression3694); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal194_tree = (CommonTree)adaptor.create(char_literal194);
			adaptor.addChild(root_0, char_literal194_tree);
			}

			pushFollow(FOLLOW_unmanaged_type_in_sizeof_expression3698);
			unmanaged_type195=unmanaged_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type195.getTree());

			char_literal196=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_sizeof_expression3702); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal196_tree = (CommonTree)adaptor.create(char_literal196);
			adaptor.addChild(root_0, char_literal196_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 47, sizeof_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "sizeof_expression"


	public static class checked_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "checked_expression"
	// /Users/jeremie/ANTLR/cs.g:213:1: checked_expression : 'checked' '(' expression ')' ;
	public final csParser.checked_expression_return checked_expression() throws RecognitionException {
		csParser.checked_expression_return retval = new csParser.checked_expression_return();
		retval.start = input.LT(1);
		int checked_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal197=null;
		Token char_literal198=null;
		Token char_literal200=null;
		ParserRuleReturnScope expression199 =null;

		CommonTree string_literal197_tree=null;
		CommonTree char_literal198_tree=null;
		CommonTree char_literal200_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:213:19: ( 'checked' '(' expression ')' )
			// /Users/jeremie/ANTLR/cs.g:214:9: 'checked' '(' expression ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal197=(Token)match(input,110,FOLLOW_110_in_checked_expression3717); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal197_tree = (CommonTree)adaptor.create(string_literal197);
			adaptor.addChild(root_0, string_literal197_tree);
			}

			char_literal198=(Token)match(input,68,FOLLOW_68_in_checked_expression3721); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal198_tree = (CommonTree)adaptor.create(char_literal198);
			adaptor.addChild(root_0, char_literal198_tree);
			}

			pushFollow(FOLLOW_expression_in_checked_expression3725);
			expression199=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression199.getTree());

			char_literal200=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_checked_expression3729); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal200_tree = (CommonTree)adaptor.create(char_literal200);
			adaptor.addChild(root_0, char_literal200_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 48, checked_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "checked_expression"


	public static class unchecked_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unchecked_expression"
	// /Users/jeremie/ANTLR/cs.g:215:1: unchecked_expression : 'unchecked' '(' expression ')' ;
	public final csParser.unchecked_expression_return unchecked_expression() throws RecognitionException {
		csParser.unchecked_expression_return retval = new csParser.unchecked_expression_return();
		retval.start = input.LT(1);
		int unchecked_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal201=null;
		Token char_literal202=null;
		Token char_literal204=null;
		ParserRuleReturnScope expression203 =null;

		CommonTree string_literal201_tree=null;
		CommonTree char_literal202_tree=null;
		CommonTree char_literal204_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:215:21: ( 'unchecked' '(' expression ')' )
			// /Users/jeremie/ANTLR/cs.g:216:9: 'unchecked' '(' expression ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal201=(Token)match(input,187,FOLLOW_187_in_unchecked_expression3745); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal201_tree = (CommonTree)adaptor.create(string_literal201);
			adaptor.addChild(root_0, string_literal201_tree);
			}

			char_literal202=(Token)match(input,68,FOLLOW_68_in_unchecked_expression3749); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal202_tree = (CommonTree)adaptor.create(char_literal202);
			adaptor.addChild(root_0, char_literal202_tree);
			}

			pushFollow(FOLLOW_expression_in_unchecked_expression3753);
			expression203=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression203.getTree());

			char_literal204=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unchecked_expression3757); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal204_tree = (CommonTree)adaptor.create(char_literal204);
			adaptor.addChild(root_0, char_literal204_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 49, unchecked_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unchecked_expression"


	public static class default_value_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "default_value_expression"
	// /Users/jeremie/ANTLR/cs.g:217:1: default_value_expression : 'default' '(' type ')' ;
	public final csParser.default_value_expression_return default_value_expression() throws RecognitionException {
		csParser.default_value_expression_return retval = new csParser.default_value_expression_return();
		retval.start = input.LT(1);
		int default_value_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal205=null;
		Token char_literal206=null;
		Token char_literal208=null;
		ParserRuleReturnScope type207 =null;

		CommonTree string_literal205_tree=null;
		CommonTree char_literal206_tree=null;
		CommonTree char_literal208_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:217:25: ( 'default' '(' type ')' )
			// /Users/jeremie/ANTLR/cs.g:218:9: 'default' '(' type ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal205=(Token)match(input,115,FOLLOW_115_in_default_value_expression3773); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal205_tree = (CommonTree)adaptor.create(string_literal205);
			adaptor.addChild(root_0, string_literal205_tree);
			}

			char_literal206=(Token)match(input,68,FOLLOW_68_in_default_value_expression3777); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal206_tree = (CommonTree)adaptor.create(char_literal206);
			adaptor.addChild(root_0, char_literal206_tree);
			}

			pushFollow(FOLLOW_type_in_default_value_expression3781);
			type207=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type207.getTree());

			char_literal208=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_default_value_expression3785); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal208_tree = (CommonTree)adaptor.create(char_literal208);
			adaptor.addChild(root_0, char_literal208_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 50, default_value_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "default_value_expression"


	public static class anonymous_method_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_method_expression"
	// /Users/jeremie/ANTLR/cs.g:219:1: anonymous_method_expression : 'delegate' ( explicit_anonymous_function_signature )? block ;
	public final csParser.anonymous_method_expression_return anonymous_method_expression() throws RecognitionException {
		csParser.anonymous_method_expression_return retval = new csParser.anonymous_method_expression_return();
		retval.start = input.LT(1);
		int anonymous_method_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal209=null;
		ParserRuleReturnScope explicit_anonymous_function_signature210 =null;
		ParserRuleReturnScope block211 =null;

		CommonTree string_literal209_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:219:28: ( 'delegate' ( explicit_anonymous_function_signature )? block )
			// /Users/jeremie/ANTLR/cs.g:220:9: 'delegate' ( explicit_anonymous_function_signature )? block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal209=(Token)match(input,116,FOLLOW_116_in_anonymous_method_expression3800); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal209_tree = (CommonTree)adaptor.create(string_literal209);
			adaptor.addChild(root_0, string_literal209_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:220:22: ( explicit_anonymous_function_signature )?
			int alt57=2;
			int LA57_0 = input.LA(1);
			if ( (LA57_0==68) ) {
				alt57=1;
			}
			switch (alt57) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:220:22: explicit_anonymous_function_signature
					{
					pushFollow(FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression3804);
					explicit_anonymous_function_signature210=explicit_anonymous_function_signature();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_signature210.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_block_in_anonymous_method_expression3809);
			block211=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block211.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 51, anonymous_method_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_method_expression"


	public static class explicit_anonymous_function_signature_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "explicit_anonymous_function_signature"
	// /Users/jeremie/ANTLR/cs.g:221:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
	public final csParser.explicit_anonymous_function_signature_return explicit_anonymous_function_signature() throws RecognitionException {
		csParser.explicit_anonymous_function_signature_return retval = new csParser.explicit_anonymous_function_signature_return();
		retval.start = input.LT(1);
		int explicit_anonymous_function_signature_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal212=null;
		Token char_literal214=null;
		ParserRuleReturnScope explicit_anonymous_function_parameter_list213 =null;

		CommonTree char_literal212_tree=null;
		CommonTree char_literal214_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:221:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
			// /Users/jeremie/ANTLR/cs.g:222:9: '(' ( explicit_anonymous_function_parameter_list )? ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal212=(Token)match(input,68,FOLLOW_68_in_explicit_anonymous_function_signature3823); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal212_tree = (CommonTree)adaptor.create(char_literal212);
			adaptor.addChild(root_0, char_literal212_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:222:15: ( explicit_anonymous_function_parameter_list )?
			int alt58=2;
			int LA58_0 = input.LA(1);
			if ( (LA58_0==IDENTIFIER||LA58_0==95||(LA58_0 >= 97 && LA58_0 <= 98)||(LA58_0 >= 100 && LA58_0 <= 101)||LA58_0==103||(LA58_0 >= 105 && LA58_0 <= 106)||LA58_0==109||LA58_0==114||LA58_0==117||(LA58_0 >= 119 && LA58_0 <= 120)||LA58_0==122||LA58_0==126||LA58_0==129||LA58_0==132||LA58_0==135||LA58_0==138||LA58_0==141||(LA58_0 >= 143 && LA58_0 <= 144)||(LA58_0 >= 146 && LA58_0 <= 148)||(LA58_0 >= 151 && LA58_0 <= 152)||(LA58_0 >= 154 && LA58_0 <= 155)||LA58_0==157||LA58_0==160||LA58_0==162||(LA58_0 >= 166 && LA58_0 <= 167)||LA58_0==169||(LA58_0 >= 171 && LA58_0 <= 173)||LA58_0==177||LA58_0==183||(LA58_0 >= 185 && LA58_0 <= 186)||(LA58_0 >= 189 && LA58_0 <= 190)||LA58_0==192||LA58_0==194||LA58_0==196) ) {
				alt58=1;
			}
			switch (alt58) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:222:15: explicit_anonymous_function_parameter_list
					{
					pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature3827);
					explicit_anonymous_function_parameter_list213=explicit_anonymous_function_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list213.getTree());

					}
					break;

			}

			char_literal214=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_explicit_anonymous_function_signature3832); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal214_tree = (CommonTree)adaptor.create(char_literal214);
			adaptor.addChild(root_0, char_literal214_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 52, explicit_anonymous_function_signature_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "explicit_anonymous_function_signature"


	public static class explicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "explicit_anonymous_function_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:223:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
	public final csParser.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list() throws RecognitionException {
		csParser.explicit_anonymous_function_parameter_list_return retval = new csParser.explicit_anonymous_function_parameter_list_return();
		retval.start = input.LT(1);
		int explicit_anonymous_function_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal216=null;
		ParserRuleReturnScope explicit_anonymous_function_parameter215 =null;
		ParserRuleReturnScope explicit_anonymous_function_parameter217 =null;

		CommonTree char_literal216_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:223:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:224:9: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3847);
			explicit_anonymous_function_parameter215=explicit_anonymous_function_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter215.getTree());

			// /Users/jeremie/ANTLR/cs.g:224:49: ( ',' explicit_anonymous_function_parameter )*
			loop59:
			while (true) {
				int alt59=2;
				int LA59_0 = input.LA(1);
				if ( (LA59_0==74) ) {
					alt59=1;
				}

				switch (alt59) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:224:50: ',' explicit_anonymous_function_parameter
					{
					char_literal216=(Token)match(input,74,FOLLOW_74_in_explicit_anonymous_function_parameter_list3852); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal216_tree = (CommonTree)adaptor.create(char_literal216);
					adaptor.addChild(root_0, char_literal216_tree);
					}

					pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3856);
					explicit_anonymous_function_parameter217=explicit_anonymous_function_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter217.getTree());

					}
					break;

				default :
					break loop59;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 53, explicit_anonymous_function_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "explicit_anonymous_function_parameter_list"


	public static class explicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "explicit_anonymous_function_parameter"
	// /Users/jeremie/ANTLR/cs.g:225:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
	public final csParser.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter() throws RecognitionException {
		csParser.explicit_anonymous_function_parameter_return retval = new csParser.explicit_anonymous_function_parameter_return();
		retval.start = input.LT(1);
		int explicit_anonymous_function_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope anonymous_function_parameter_modifier218 =null;
		ParserRuleReturnScope type219 =null;
		ParserRuleReturnScope identifier220 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:225:38: ( ( anonymous_function_parameter_modifier )? type identifier )
			// /Users/jeremie/ANTLR/cs.g:226:9: ( anonymous_function_parameter_modifier )? type identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:226:9: ( anonymous_function_parameter_modifier )?
			int alt60=2;
			int LA60_0 = input.LA(1);
			if ( (LA60_0==155||LA60_0==166) ) {
				alt60=1;
			}
			switch (alt60) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:226:9: anonymous_function_parameter_modifier
					{
					pushFollow(FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter3881);
					anonymous_function_parameter_modifier218=anonymous_function_parameter_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_parameter_modifier218.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_type_in_explicit_anonymous_function_parameter3886);
			type219=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type219.getTree());

			pushFollow(FOLLOW_identifier_in_explicit_anonymous_function_parameter3890);
			identifier220=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier220.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 54, explicit_anonymous_function_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "explicit_anonymous_function_parameter"


	public static class anonymous_function_parameter_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_function_parameter_modifier"
	// /Users/jeremie/ANTLR/cs.g:227:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
	public final csParser.anonymous_function_parameter_modifier_return anonymous_function_parameter_modifier() throws RecognitionException {
		csParser.anonymous_function_parameter_modifier_return retval = new csParser.anonymous_function_parameter_modifier_return();
		retval.start = input.LT(1);
		int anonymous_function_parameter_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set221=null;

		CommonTree set221_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:227:38: ( 'ref' | 'out' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set221=input.LT(1);
			if ( input.LA(1)==155||input.LA(1)==166 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set221));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 55, anonymous_function_parameter_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_function_parameter_modifier"


	public static class object_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "object_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:232:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
	public final csParser.object_creation_expression_return object_creation_expression() throws RecognitionException {
		csParser.object_creation_expression_return retval = new csParser.object_creation_expression_return();
		retval.start = input.LT(1);
		int object_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal223=null;
		Token char_literal225=null;
		ParserRuleReturnScope type222 =null;
		ParserRuleReturnScope argument_list224 =null;
		ParserRuleReturnScope object_or_collection_initializer226 =null;
		ParserRuleReturnScope object_or_collection_initializer227 =null;

		CommonTree char_literal223_tree=null;
		CommonTree char_literal225_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:232:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
			// /Users/jeremie/ANTLR/cs.g:234:9: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_object_creation_expression3935);
			type222=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type222.getTree());

			// /Users/jeremie/ANTLR/cs.g:235:17: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			int alt63=2;
			int LA63_0 = input.LA(1);
			if ( (LA63_0==68) ) {
				alt63=1;
			}
			else if ( (LA63_0==197) ) {
				alt63=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 63, 0, input);
				throw nvae;
			}

			switch (alt63) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:235:19: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
					{
					char_literal223=(Token)match(input,68,FOLLOW_68_in_object_creation_expression3958); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal223_tree = (CommonTree)adaptor.create(char_literal223);
					adaptor.addChild(root_0, char_literal223_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:235:25: ( argument_list )?
					int alt61=2;
					int LA61_0 = input.LA(1);
					if ( (LA61_0==Character_literal||LA61_0==FALSE||(LA61_0 >= Hex_number && LA61_0 <= IDENTIFIER)||(LA61_0 >= MINUS && LA61_0 <= NUMBER)||LA61_0==Real_literal||LA61_0==STRINGLITERAL||LA61_0==TRUE||LA61_0==Verbatim_string_literal||LA61_0==61||LA61_0==66||(LA61_0 >= 68 && LA61_0 <= 69)||(LA61_0 >= 71 && LA61_0 <= 72)||LA61_0==75||LA61_0==95||(LA61_0 >= 97 && LA61_0 <= 98)||(LA61_0 >= 100 && LA61_0 <= 103)||(LA61_0 >= 105 && LA61_0 <= 106)||(LA61_0 >= 109 && LA61_0 <= 110)||(LA61_0 >= 114 && LA61_0 <= 117)||(LA61_0 >= 119 && LA61_0 <= 120)||LA61_0==122||LA61_0==126||LA61_0==129||LA61_0==132||LA61_0==135||LA61_0==138||LA61_0==141||(LA61_0 >= 143 && LA61_0 <= 144)||(LA61_0 >= 146 && LA61_0 <= 148)||(LA61_0 >= 150 && LA61_0 <= 152)||(LA61_0 >= 154 && LA61_0 <= 155)||LA61_0==157||LA61_0==160||LA61_0==162||(LA61_0 >= 166 && LA61_0 <= 167)||LA61_0==169||(LA61_0 >= 171 && LA61_0 <= 174)||LA61_0==177||LA61_0==180||(LA61_0 >= 183 && LA61_0 <= 187)||(LA61_0 >= 189 && LA61_0 <= 190)||LA61_0==194||LA61_0==196||LA61_0==202) ) {
						alt61=1;
					}
					switch (alt61) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:235:25: argument_list
							{
							pushFollow(FOLLOW_argument_list_in_object_creation_expression3962);
							argument_list224=argument_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list224.getTree());

							}
							break;

					}

					char_literal225=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression3967); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal225_tree = (CommonTree)adaptor.create(char_literal225);
					adaptor.addChild(root_0, char_literal225_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:235:48: ( object_or_collection_initializer )?
					int alt62=2;
					int LA62_0 = input.LA(1);
					if ( (LA62_0==197) ) {
						alt62=1;
					}
					switch (alt62) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:235:48: object_or_collection_initializer
							{
							pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression3971);
							object_or_collection_initializer226=object_or_collection_initializer();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer226.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:236:21: object_or_collection_initializer
					{
					pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression3996);
					object_or_collection_initializer227=object_or_collection_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer227.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 56, object_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "object_creation_expression"


	public static class object_or_collection_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "object_or_collection_initializer"
	// /Users/jeremie/ANTLR/cs.g:238:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
	public final csParser.object_or_collection_initializer_return object_or_collection_initializer() throws RecognitionException {
		csParser.object_or_collection_initializer_return retval = new csParser.object_or_collection_initializer_return();
		retval.start = input.LT(1);
		int object_or_collection_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal228=null;
		ParserRuleReturnScope object_initializer229 =null;
		ParserRuleReturnScope collection_initializer230 =null;

		CommonTree char_literal228_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:238:33: ( '{' ( object_initializer | collection_initializer ) )
			// /Users/jeremie/ANTLR/cs.g:239:9: '{' ( object_initializer | collection_initializer )
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal228=(Token)match(input,197,FOLLOW_197_in_object_or_collection_initializer4022); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal228_tree = (CommonTree)adaptor.create(char_literal228);
			adaptor.addChild(root_0, char_literal228_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:239:14: ( object_initializer | collection_initializer )
			int alt64=2;
			switch ( input.LA(1) ) {
			case 132:
				{
				int LA64_1 = input.LA(2);
				if ( (LA64_1==85) ) {
					alt64=1;
				}
				else if ( (LA64_1==DOT||LA64_1==GT||LA64_1==IDENTIFIER||LA64_1==MINUS||LA64_1==PTR||(LA64_1 >= 62 && LA64_1 <= 63)||(LA64_1 >= 65 && LA64_1 <= 66)||(LA64_1 >= 68 && LA64_1 <= 69)||(LA64_1 >= 71 && LA64_1 <= 72)||(LA64_1 >= 74 && LA64_1 <= 75)||LA64_1==77||(LA64_1 >= 80 && LA64_1 <= 82)||LA64_1==84||(LA64_1 >= 86 && LA64_1 <= 91)||LA64_1==93||LA64_1==95||(LA64_1 >= 97 && LA64_1 <= 101)||LA64_1==103||(LA64_1 >= 105 && LA64_1 <= 106)||LA64_1==109||LA64_1==114||LA64_1==117||(LA64_1 >= 119 && LA64_1 <= 120)||LA64_1==122||LA64_1==126||LA64_1==129||LA64_1==132||LA64_1==135||LA64_1==138||(LA64_1 >= 141 && LA64_1 <= 144)||(LA64_1 >= 146 && LA64_1 <= 148)||(LA64_1 >= 151 && LA64_1 <= 152)||LA64_1==154||LA64_1==157||LA64_1==160||LA64_1==162||LA64_1==167||LA64_1==169||(LA64_1 >= 171 && LA64_1 <= 173)||LA64_1==177||LA64_1==183||(LA64_1 >= 185 && LA64_1 <= 186)||(LA64_1 >= 189 && LA64_1 <= 190)||LA64_1==192||LA64_1==194||LA64_1==196||LA64_1==198||(LA64_1 >= 200 && LA64_1 <= 201)) ) {
					alt64=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 64, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 74:
			case 201:
				{
				alt64=1;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 197:
			case 202:
				{
				alt64=2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA64_4 = input.LA(2);
				if ( (LA64_4==85) ) {
					alt64=1;
				}
				else if ( (LA64_4==DOT||LA64_4==GT||LA64_4==MINUS||LA64_4==PTR||(LA64_4 >= 62 && LA64_4 <= 63)||(LA64_4 >= 65 && LA64_4 <= 66)||(LA64_4 >= 68 && LA64_4 <= 69)||(LA64_4 >= 71 && LA64_4 <= 72)||(LA64_4 >= 74 && LA64_4 <= 75)||LA64_4==77||(LA64_4 >= 80 && LA64_4 <= 82)||LA64_4==84||(LA64_4 >= 86 && LA64_4 <= 91)||LA64_4==93||LA64_4==99||LA64_4==142||LA64_4==198||(LA64_4 >= 200 && LA64_4 <= 201)) ) {
					alt64=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 64, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 64, 0, input);
				throw nvae;
			}
			switch (alt64) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:239:15: object_initializer
					{
					pushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer4026);
					object_initializer229=object_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, object_initializer229.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:240:19: collection_initializer
					{
					pushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer4047);
					collection_initializer230=collection_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, collection_initializer230.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 57, object_or_collection_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "object_or_collection_initializer"


	public static class collection_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "collection_initializer"
	// /Users/jeremie/ANTLR/cs.g:241:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
	public final csParser.collection_initializer_return collection_initializer() throws RecognitionException {
		csParser.collection_initializer_return retval = new csParser.collection_initializer_return();
		retval.start = input.LT(1);
		int collection_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal232=null;
		Token char_literal233=null;
		ParserRuleReturnScope element_initializer_list231 =null;

		CommonTree char_literal232_tree=null;
		CommonTree char_literal233_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:241:23: ( element_initializer_list ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:242:9: element_initializer_list ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_element_initializer_list_in_collection_initializer4064);
			element_initializer_list231=element_initializer_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer_list231.getTree());

			// /Users/jeremie/ANTLR/cs.g:242:36: ( ',' )?
			int alt65=2;
			int LA65_0 = input.LA(1);
			if ( (LA65_0==74) ) {
				alt65=1;
			}
			switch (alt65) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:242:36: ','
					{
					char_literal232=(Token)match(input,74,FOLLOW_74_in_collection_initializer4068); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal232_tree = (CommonTree)adaptor.create(char_literal232);
					adaptor.addChild(root_0, char_literal232_tree);
					}

					}
					break;

			}

			char_literal233=(Token)match(input,201,FOLLOW_201_in_collection_initializer4073); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal233_tree = (CommonTree)adaptor.create(char_literal233);
			adaptor.addChild(root_0, char_literal233_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 58, collection_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "collection_initializer"


	public static class element_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "element_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:243:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
	public final csParser.element_initializer_list_return element_initializer_list() throws RecognitionException {
		csParser.element_initializer_list_return retval = new csParser.element_initializer_list_return();
		retval.start = input.LT(1);
		int element_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal235=null;
		ParserRuleReturnScope element_initializer234 =null;
		ParserRuleReturnScope element_initializer236 =null;

		CommonTree char_literal235_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:243:25: ( element_initializer ( ',' element_initializer )* )
			// /Users/jeremie/ANTLR/cs.g:244:9: element_initializer ( ',' element_initializer )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_element_initializer_in_element_initializer_list4089);
			element_initializer234=element_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer234.getTree());

			// /Users/jeremie/ANTLR/cs.g:244:30: ( ',' element_initializer )*
			loop66:
			while (true) {
				int alt66=2;
				int LA66_0 = input.LA(1);
				if ( (LA66_0==74) ) {
					int LA66_1 = input.LA(2);
					if ( (LA66_1==Character_literal||LA66_1==FALSE||(LA66_1 >= Hex_number && LA66_1 <= IDENTIFIER)||(LA66_1 >= MINUS && LA66_1 <= NUMBER)||LA66_1==Real_literal||LA66_1==STRINGLITERAL||LA66_1==TRUE||LA66_1==Verbatim_string_literal||LA66_1==61||LA66_1==66||(LA66_1 >= 68 && LA66_1 <= 69)||(LA66_1 >= 71 && LA66_1 <= 72)||LA66_1==75||LA66_1==95||(LA66_1 >= 97 && LA66_1 <= 98)||(LA66_1 >= 100 && LA66_1 <= 103)||(LA66_1 >= 105 && LA66_1 <= 106)||(LA66_1 >= 109 && LA66_1 <= 110)||(LA66_1 >= 114 && LA66_1 <= 117)||(LA66_1 >= 119 && LA66_1 <= 120)||LA66_1==122||LA66_1==126||LA66_1==129||LA66_1==132||LA66_1==135||LA66_1==138||LA66_1==141||(LA66_1 >= 143 && LA66_1 <= 144)||(LA66_1 >= 146 && LA66_1 <= 148)||(LA66_1 >= 150 && LA66_1 <= 152)||LA66_1==154||LA66_1==157||LA66_1==160||LA66_1==162||LA66_1==167||LA66_1==169||(LA66_1 >= 171 && LA66_1 <= 174)||LA66_1==177||LA66_1==180||(LA66_1 >= 183 && LA66_1 <= 187)||(LA66_1 >= 189 && LA66_1 <= 190)||LA66_1==194||(LA66_1 >= 196 && LA66_1 <= 197)||LA66_1==202) ) {
						alt66=1;
					}

				}

				switch (alt66) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:244:31: ',' element_initializer
					{
					char_literal235=(Token)match(input,74,FOLLOW_74_in_element_initializer_list4093); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal235_tree = (CommonTree)adaptor.create(char_literal235);
					adaptor.addChild(root_0, char_literal235_tree);
					}

					pushFollow(FOLLOW_element_initializer_in_element_initializer_list4095);
					element_initializer236=element_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer236.getTree());

					}
					break;

				default :
					break loop66;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 59, element_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "element_initializer_list"


	public static class element_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "element_initializer"
	// /Users/jeremie/ANTLR/cs.g:245:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
	public final csParser.element_initializer_return element_initializer() throws RecognitionException {
		csParser.element_initializer_return retval = new csParser.element_initializer_return();
		retval.start = input.LT(1);
		int element_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal238=null;
		Token char_literal240=null;
		ParserRuleReturnScope non_assignment_expression237 =null;
		ParserRuleReturnScope expression_list239 =null;

		CommonTree char_literal238_tree=null;
		CommonTree char_literal240_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:245:20: ( non_assignment_expression | '{' expression_list '}' )
			int alt67=2;
			int LA67_0 = input.LA(1);
			if ( (LA67_0==Character_literal||LA67_0==FALSE||(LA67_0 >= Hex_number && LA67_0 <= IDENTIFIER)||(LA67_0 >= MINUS && LA67_0 <= NUMBER)||LA67_0==Real_literal||LA67_0==STRINGLITERAL||LA67_0==TRUE||LA67_0==Verbatim_string_literal||LA67_0==61||LA67_0==66||(LA67_0 >= 68 && LA67_0 <= 69)||(LA67_0 >= 71 && LA67_0 <= 72)||LA67_0==75||LA67_0==95||(LA67_0 >= 97 && LA67_0 <= 98)||(LA67_0 >= 100 && LA67_0 <= 103)||(LA67_0 >= 105 && LA67_0 <= 106)||(LA67_0 >= 109 && LA67_0 <= 110)||(LA67_0 >= 114 && LA67_0 <= 117)||(LA67_0 >= 119 && LA67_0 <= 120)||LA67_0==122||LA67_0==126||LA67_0==129||LA67_0==132||LA67_0==135||LA67_0==138||LA67_0==141||(LA67_0 >= 143 && LA67_0 <= 144)||(LA67_0 >= 146 && LA67_0 <= 148)||(LA67_0 >= 150 && LA67_0 <= 152)||LA67_0==154||LA67_0==157||LA67_0==160||LA67_0==162||LA67_0==167||LA67_0==169||(LA67_0 >= 171 && LA67_0 <= 174)||LA67_0==177||LA67_0==180||(LA67_0 >= 183 && LA67_0 <= 187)||(LA67_0 >= 189 && LA67_0 <= 190)||LA67_0==194||LA67_0==196||LA67_0==202) ) {
				alt67=1;
			}
			else if ( (LA67_0==197) ) {
				alt67=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 67, 0, input);
				throw nvae;
			}

			switch (alt67) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:246:9: non_assignment_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_non_assignment_expression_in_element_initializer4113);
					non_assignment_expression237=non_assignment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression237.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:247:11: '{' expression_list '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal238=(Token)match(input,197,FOLLOW_197_in_element_initializer4126); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal238_tree = (CommonTree)adaptor.create(char_literal238);
					adaptor.addChild(root_0, char_literal238_tree);
					}

					pushFollow(FOLLOW_expression_list_in_element_initializer4130);
					expression_list239=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list239.getTree());

					char_literal240=(Token)match(input,201,FOLLOW_201_in_element_initializer4134); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal240_tree = (CommonTree)adaptor.create(char_literal240);
					adaptor.addChild(root_0, char_literal240_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 60, element_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "element_initializer"


	public static class object_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "object_initializer"
	// /Users/jeremie/ANTLR/cs.g:254:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
	public final csParser.object_initializer_return object_initializer() throws RecognitionException {
		csParser.object_initializer_return retval = new csParser.object_initializer_return();
		retval.start = input.LT(1);
		int object_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal242=null;
		Token char_literal243=null;
		ParserRuleReturnScope member_initializer_list241 =null;

		CommonTree char_literal242_tree=null;
		CommonTree char_literal243_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:254:19: ( ( member_initializer_list )? ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:255:9: ( member_initializer_list )? ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:255:9: ( member_initializer_list )?
			int alt68=2;
			int LA68_0 = input.LA(1);
			if ( (LA68_0==IDENTIFIER||LA68_0==95||(LA68_0 >= 97 && LA68_0 <= 98)||(LA68_0 >= 100 && LA68_0 <= 101)||LA68_0==105||LA68_0==117||LA68_0==120||LA68_0==122||LA68_0==126||LA68_0==132||LA68_0==135||LA68_0==141||(LA68_0 >= 143 && LA68_0 <= 144)||(LA68_0 >= 147 && LA68_0 <= 148)||LA68_0==152||LA68_0==154||LA68_0==157||LA68_0==160||LA68_0==162||LA68_0==167||(LA68_0 >= 171 && LA68_0 <= 172)||LA68_0==183||LA68_0==190||LA68_0==194||LA68_0==196) ) {
				alt68=1;
			}
			switch (alt68) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:255:9: member_initializer_list
					{
					pushFollow(FOLLOW_member_initializer_list_in_object_initializer4156);
					member_initializer_list241=member_initializer_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer_list241.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:255:36: ( ',' )?
			int alt69=2;
			int LA69_0 = input.LA(1);
			if ( (LA69_0==74) ) {
				alt69=1;
			}
			switch (alt69) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:255:36: ','
					{
					char_literal242=(Token)match(input,74,FOLLOW_74_in_object_initializer4161); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal242_tree = (CommonTree)adaptor.create(char_literal242);
					adaptor.addChild(root_0, char_literal242_tree);
					}

					}
					break;

			}

			char_literal243=(Token)match(input,201,FOLLOW_201_in_object_initializer4166); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal243_tree = (CommonTree)adaptor.create(char_literal243);
			adaptor.addChild(root_0, char_literal243_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 61, object_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "object_initializer"


	public static class member_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:256:1: member_initializer_list : member_initializer ( ',' member_initializer ) ;
	public final csParser.member_initializer_list_return member_initializer_list() throws RecognitionException {
		csParser.member_initializer_list_return retval = new csParser.member_initializer_list_return();
		retval.start = input.LT(1);
		int member_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal245=null;
		ParserRuleReturnScope member_initializer244 =null;
		ParserRuleReturnScope member_initializer246 =null;

		CommonTree char_literal245_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:256:24: ( member_initializer ( ',' member_initializer ) )
			// /Users/jeremie/ANTLR/cs.g:257:9: member_initializer ( ',' member_initializer )
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_initializer_in_member_initializer_list4182);
			member_initializer244=member_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer244.getTree());

			// /Users/jeremie/ANTLR/cs.g:257:29: ( ',' member_initializer )
			// /Users/jeremie/ANTLR/cs.g:257:30: ',' member_initializer
			{
			char_literal245=(Token)match(input,74,FOLLOW_74_in_member_initializer_list4186); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal245_tree = (CommonTree)adaptor.create(char_literal245);
			adaptor.addChild(root_0, char_literal245_tree);
			}

			pushFollow(FOLLOW_member_initializer_in_member_initializer_list4188);
			member_initializer246=member_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer246.getTree());

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 62, member_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_initializer_list"


	public static class member_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_initializer"
	// /Users/jeremie/ANTLR/cs.g:258:1: member_initializer : identifier '=' initializer_value ;
	public final csParser.member_initializer_return member_initializer() throws RecognitionException {
		csParser.member_initializer_return retval = new csParser.member_initializer_return();
		retval.start = input.LT(1);
		int member_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal248=null;
		ParserRuleReturnScope identifier247 =null;
		ParserRuleReturnScope initializer_value249 =null;

		CommonTree char_literal248_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:258:19: ( identifier '=' initializer_value )
			// /Users/jeremie/ANTLR/cs.g:259:9: identifier '=' initializer_value
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_member_initializer4205);
			identifier247=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier247.getTree());

			char_literal248=(Token)match(input,85,FOLLOW_85_in_member_initializer4209); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal248_tree = (CommonTree)adaptor.create(char_literal248);
			adaptor.addChild(root_0, char_literal248_tree);
			}

			pushFollow(FOLLOW_initializer_value_in_member_initializer4213);
			initializer_value249=initializer_value();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer_value249.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 63, member_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_initializer"


	public static class initializer_value_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "initializer_value"
	// /Users/jeremie/ANTLR/cs.g:260:1: initializer_value : ( expression | object_or_collection_initializer );
	public final csParser.initializer_value_return initializer_value() throws RecognitionException {
		csParser.initializer_value_return retval = new csParser.initializer_value_return();
		retval.start = input.LT(1);
		int initializer_value_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression250 =null;
		ParserRuleReturnScope object_or_collection_initializer251 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:260:18: ( expression | object_or_collection_initializer )
			int alt70=2;
			int LA70_0 = input.LA(1);
			if ( (LA70_0==Character_literal||LA70_0==FALSE||(LA70_0 >= Hex_number && LA70_0 <= IDENTIFIER)||(LA70_0 >= MINUS && LA70_0 <= NUMBER)||LA70_0==Real_literal||LA70_0==STRINGLITERAL||LA70_0==TRUE||LA70_0==Verbatim_string_literal||LA70_0==61||LA70_0==66||(LA70_0 >= 68 && LA70_0 <= 69)||(LA70_0 >= 71 && LA70_0 <= 72)||LA70_0==75||LA70_0==95||(LA70_0 >= 97 && LA70_0 <= 98)||(LA70_0 >= 100 && LA70_0 <= 103)||(LA70_0 >= 105 && LA70_0 <= 106)||(LA70_0 >= 109 && LA70_0 <= 110)||(LA70_0 >= 114 && LA70_0 <= 117)||(LA70_0 >= 119 && LA70_0 <= 120)||LA70_0==122||LA70_0==126||LA70_0==129||LA70_0==132||LA70_0==135||LA70_0==138||LA70_0==141||(LA70_0 >= 143 && LA70_0 <= 144)||(LA70_0 >= 146 && LA70_0 <= 148)||(LA70_0 >= 150 && LA70_0 <= 152)||LA70_0==154||LA70_0==157||LA70_0==160||LA70_0==162||LA70_0==167||LA70_0==169||(LA70_0 >= 171 && LA70_0 <= 174)||LA70_0==177||LA70_0==180||(LA70_0 >= 183 && LA70_0 <= 187)||(LA70_0 >= 189 && LA70_0 <= 190)||LA70_0==194||LA70_0==196||LA70_0==202) ) {
				alt70=1;
			}
			else if ( (LA70_0==197) ) {
				alt70=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 70, 0, input);
				throw nvae;
			}

			switch (alt70) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:261:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_initializer_value4229);
					expression250=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression250.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:262:11: object_or_collection_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value4242);
					object_or_collection_initializer251=object_or_collection_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer251.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 64, initializer_value_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "initializer_value"


	public static class typeof_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typeof_expression"
	// /Users/jeremie/ANTLR/cs.g:266:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
	public final csParser.typeof_expression_return typeof_expression() throws RecognitionException {
		csParser.typeof_expression_return retval = new csParser.typeof_expression_return();
		retval.start = input.LT(1);
		int typeof_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal252=null;
		Token char_literal253=null;
		Token string_literal256=null;
		Token char_literal257=null;
		ParserRuleReturnScope unbound_type_name254 =null;
		ParserRuleReturnScope type255 =null;

		CommonTree string_literal252_tree=null;
		CommonTree char_literal253_tree=null;
		CommonTree string_literal256_tree=null;
		CommonTree char_literal257_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:266:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
			// /Users/jeremie/ANTLR/cs.g:267:9: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal252=(Token)match(input,184,FOLLOW_184_in_typeof_expression4261); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal252_tree = (CommonTree)adaptor.create(string_literal252);
			adaptor.addChild(root_0, string_literal252_tree);
			}

			char_literal253=(Token)match(input,68,FOLLOW_68_in_typeof_expression4265); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal253_tree = (CommonTree)adaptor.create(char_literal253);
			adaptor.addChild(root_0, char_literal253_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:267:26: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
			int alt71=3;
			alt71 = dfa71.predict(input);
			switch (alt71) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:267:27: ( unbound_type_name )=> unbound_type_name
					{
					pushFollow(FOLLOW_unbound_type_name_in_typeof_expression4276);
					unbound_type_name254=unbound_type_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name254.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:268:45: type
					{
					pushFollow(FOLLOW_type_in_typeof_expression4322);
					type255=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type255.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:269:45: 'void'
					{
					string_literal256=(Token)match(input,192,FOLLOW_192_in_typeof_expression4369); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal256_tree = (CommonTree)adaptor.create(string_literal256);
					adaptor.addChild(root_0, string_literal256_tree);
					}

					}
					break;

			}

			char_literal257=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_typeof_expression4374); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal257_tree = (CommonTree)adaptor.create(char_literal257);
			adaptor.addChild(root_0, char_literal257_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 65, typeof_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "typeof_expression"


	public static class unbound_type_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unbound_type_name"
	// /Users/jeremie/ANTLR/cs.g:274:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
	public final csParser.unbound_type_name_return unbound_type_name() throws RecognitionException {
		csParser.unbound_type_name_return retval = new csParser.unbound_type_name_return();
		retval.start = input.LT(1);
		int unbound_type_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope unbound_type_name_start258 =null;
		ParserRuleReturnScope generic_dimension_specifier259 =null;
		ParserRuleReturnScope unbound_type_name_part260 =null;
		ParserRuleReturnScope unbound_type_name_part261 =null;
		ParserRuleReturnScope generic_dimension_specifier262 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:274:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
			// /Users/jeremie/ANTLR/cs.g:276:9: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_unbound_type_name_start_in_unbound_type_name4410);
			unbound_type_name_start258=unbound_type_name_start();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_start258.getTree());

			// /Users/jeremie/ANTLR/cs.g:277:17: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
			loop72:
			while (true) {
				int alt72=3;
				alt72 = dfa72.predict(input);
				switch (alt72) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:277:18: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					{
					// /Users/jeremie/ANTLR/cs.g:277:18: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					// /Users/jeremie/ANTLR/cs.g:277:19: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
					{
					pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name4443);
					generic_dimension_specifier259=generic_dimension_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier259.getTree());

					pushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name4447);
					unbound_type_name_part260=unbound_type_name_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_part260.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:278:19: unbound_type_name_part
					{
					pushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name4468);
					unbound_type_name_part261=unbound_type_name_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_part261.getTree());

					}
					break;

				default :
					break loop72;
				}
			}

			pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name4499);
			generic_dimension_specifier262=generic_dimension_specifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier262.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 66, unbound_type_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unbound_type_name"


	public static class unbound_type_name_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unbound_type_name_start"
	// /Users/jeremie/ANTLR/cs.g:282:1: unbound_type_name_start : identifier ( '::' identifier )? ;
	public final csParser.unbound_type_name_start_return unbound_type_name_start() throws RecognitionException {
		csParser.unbound_type_name_start_return retval = new csParser.unbound_type_name_start_return();
		retval.start = input.LT(1);
		int unbound_type_name_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal264=null;
		ParserRuleReturnScope identifier263 =null;
		ParserRuleReturnScope identifier265 =null;

		CommonTree string_literal264_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:282:24: ( identifier ( '::' identifier )? )
			// /Users/jeremie/ANTLR/cs.g:283:9: identifier ( '::' identifier )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_unbound_type_name_start4523);
			identifier263=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier263.getTree());

			// /Users/jeremie/ANTLR/cs.g:283:20: ( '::' identifier )?
			int alt73=2;
			int LA73_0 = input.LA(1);
			if ( (LA73_0==80) ) {
				alt73=1;
			}
			switch (alt73) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:283:21: '::' identifier
					{
					string_literal264=(Token)match(input,80,FOLLOW_80_in_unbound_type_name_start4526); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal264_tree = (CommonTree)adaptor.create(string_literal264);
					adaptor.addChild(root_0, string_literal264_tree);
					}

					pushFollow(FOLLOW_identifier_in_unbound_type_name_start4528);
					identifier265=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier265.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 67, unbound_type_name_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unbound_type_name_start"


	public static class unbound_type_name_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unbound_type_name_part"
	// /Users/jeremie/ANTLR/cs.g:284:1: unbound_type_name_part : '.' identifier ;
	public final csParser.unbound_type_name_part_return unbound_type_name_part() throws RecognitionException {
		csParser.unbound_type_name_part_return retval = new csParser.unbound_type_name_part_return();
		retval.start = input.LT(1);
		int unbound_type_name_part_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal266=null;
		ParserRuleReturnScope identifier267 =null;

		CommonTree char_literal266_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:284:23: ( '.' identifier )
			// /Users/jeremie/ANTLR/cs.g:285:9: '.' identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal266=(Token)match(input,DOT,FOLLOW_DOT_in_unbound_type_name_part4544); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal266_tree = (CommonTree)adaptor.create(char_literal266);
			adaptor.addChild(root_0, char_literal266_tree);
			}

			pushFollow(FOLLOW_identifier_in_unbound_type_name_part4548);
			identifier267=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier267.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 68, unbound_type_name_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unbound_type_name_part"


	public static class generic_dimension_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "generic_dimension_specifier"
	// /Users/jeremie/ANTLR/cs.g:286:1: generic_dimension_specifier : '<' ( commas )? '>' ;
	public final csParser.generic_dimension_specifier_return generic_dimension_specifier() throws RecognitionException {
		csParser.generic_dimension_specifier_return retval = new csParser.generic_dimension_specifier_return();
		retval.start = input.LT(1);
		int generic_dimension_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal268=null;
		Token char_literal270=null;
		ParserRuleReturnScope commas269 =null;

		CommonTree char_literal268_tree=null;
		CommonTree char_literal270_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:286:28: ( '<' ( commas )? '>' )
			// /Users/jeremie/ANTLR/cs.g:287:9: '<' ( commas )? '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal268=(Token)match(input,81,FOLLOW_81_in_generic_dimension_specifier4563); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal268_tree = (CommonTree)adaptor.create(char_literal268);
			adaptor.addChild(root_0, char_literal268_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:287:15: ( commas )?
			int alt74=2;
			int LA74_0 = input.LA(1);
			if ( (LA74_0==74) ) {
				alt74=1;
			}
			switch (alt74) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:287:15: commas
					{
					pushFollow(FOLLOW_commas_in_generic_dimension_specifier4567);
					commas269=commas();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, commas269.getTree());

					}
					break;

			}

			char_literal270=(Token)match(input,GT,FOLLOW_GT_in_generic_dimension_specifier4572); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal270_tree = (CommonTree)adaptor.create(char_literal270);
			adaptor.addChild(root_0, char_literal270_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 69, generic_dimension_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "generic_dimension_specifier"


	public static class commas_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "commas"
	// /Users/jeremie/ANTLR/cs.g:288:1: commas : ( ',' )+ ;
	public final csParser.commas_return commas() throws RecognitionException {
		csParser.commas_return retval = new csParser.commas_return();
		retval.start = input.LT(1);
		int commas_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal271=null;

		CommonTree char_literal271_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:288:7: ( ( ',' )+ )
			// /Users/jeremie/ANTLR/cs.g:289:9: ( ',' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:289:9: ( ',' )+
			int cnt75=0;
			loop75:
			while (true) {
				int alt75=2;
				int LA75_0 = input.LA(1);
				if ( (LA75_0==74) ) {
					alt75=1;
				}

				switch (alt75) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:289:9: ','
					{
					char_literal271=(Token)match(input,74,FOLLOW_74_in_commas4588); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal271_tree = (CommonTree)adaptor.create(char_literal271);
					adaptor.addChild(root_0, char_literal271_tree);
					}

					}
					break;

				default :
					if ( cnt75 >= 1 ) break loop75;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(75, input);
					throw eee;
				}
				cnt75++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 70, commas_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "commas"


	public static class type_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_name"
	// /Users/jeremie/ANTLR/cs.g:295:1: type_name : namespace_or_type_name ;
	public final csParser.type_name_return type_name() throws RecognitionException {
		csParser.type_name_return retval = new csParser.type_name_return();
		retval.start = input.LT(1);
		int type_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_or_type_name272 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:295:10: ( namespace_or_type_name )
			// /Users/jeremie/ANTLR/cs.g:296:9: namespace_or_type_name
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_namespace_or_type_name_in_type_name4611);
			namespace_or_type_name272=namespace_or_type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name272.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 71, type_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_name"


	public static class namespace_or_type_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_or_type_name"
	// /Users/jeremie/ANTLR/cs.g:297:1: namespace_or_type_name : type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* ;
	public final csParser.namespace_or_type_name_return namespace_or_type_name() throws RecognitionException {
		csParser.namespace_or_type_name_return retval = new csParser.namespace_or_type_name_return();
		retval.start = input.LT(1);
		int namespace_or_type_name_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal274=null;
		Token char_literal276=null;
		ParserRuleReturnScope type_or_generic273 =null;
		ParserRuleReturnScope type_or_generic275 =null;
		ParserRuleReturnScope type_or_generic277 =null;

		CommonTree string_literal274_tree=null;
		CommonTree char_literal276_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:297:23: ( type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* )
			// /Users/jeremie/ANTLR/cs.g:298:10: type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name4627);
			type_or_generic273=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic273.getTree());

			// /Users/jeremie/ANTLR/cs.g:298:28: ( '::' type_or_generic )?
			int alt76=2;
			int LA76_0 = input.LA(1);
			if ( (LA76_0==80) ) {
				alt76=1;
			}
			switch (alt76) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:298:29: '::' type_or_generic
					{
					string_literal274=(Token)match(input,80,FOLLOW_80_in_namespace_or_type_name4632); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal274_tree = (CommonTree)adaptor.create(string_literal274);
					adaptor.addChild(root_0, string_literal274_tree);
					}

					pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name4634);
					type_or_generic275=type_or_generic();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic275.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:298:52: ( '.' type_or_generic )*
			loop77:
			while (true) {
				int alt77=2;
				int LA77_0 = input.LA(1);
				if ( (LA77_0==DOT) ) {
					int LA77_2 = input.LA(2);
					if ( (LA77_2==IDENTIFIER||LA77_2==95||(LA77_2 >= 97 && LA77_2 <= 98)||(LA77_2 >= 100 && LA77_2 <= 101)||LA77_2==105||LA77_2==117||LA77_2==120||LA77_2==122||LA77_2==126||LA77_2==132||LA77_2==135||LA77_2==141||(LA77_2 >= 143 && LA77_2 <= 144)||(LA77_2 >= 147 && LA77_2 <= 148)||LA77_2==152||LA77_2==154||LA77_2==157||LA77_2==160||LA77_2==162||LA77_2==167||(LA77_2 >= 171 && LA77_2 <= 172)||LA77_2==183||LA77_2==190||LA77_2==194||LA77_2==196) ) {
						alt77=1;
					}

				}

				switch (alt77) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:298:53: '.' type_or_generic
					{
					char_literal276=(Token)match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name4639); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal276_tree = (CommonTree)adaptor.create(char_literal276);
					adaptor.addChild(root_0, char_literal276_tree);
					}

					pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name4643);
					type_or_generic277=type_or_generic();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic277.getTree());

					}
					break;

				default :
					break loop77;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 72, namespace_or_type_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_or_type_name"


	public static class type_or_generic_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_or_generic"
	// /Users/jeremie/ANTLR/cs.g:299:1: type_or_generic : ( ( identifier '<' )=> identifier generic_argument_list | identifier );
	public final csParser.type_or_generic_return type_or_generic() throws RecognitionException {
		csParser.type_or_generic_return retval = new csParser.type_or_generic_return();
		retval.start = input.LT(1);
		int type_or_generic_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope identifier278 =null;
		ParserRuleReturnScope generic_argument_list279 =null;
		ParserRuleReturnScope identifier280 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:299:16: ( ( identifier '<' )=> identifier generic_argument_list | identifier )
			int alt78=2;
			int LA78_0 = input.LA(1);
			if ( (LA78_0==IDENTIFIER||LA78_0==95||(LA78_0 >= 97 && LA78_0 <= 98)||(LA78_0 >= 100 && LA78_0 <= 101)||LA78_0==105||LA78_0==117||LA78_0==120||LA78_0==122||LA78_0==126||LA78_0==132||LA78_0==135||LA78_0==141||(LA78_0 >= 143 && LA78_0 <= 144)||(LA78_0 >= 147 && LA78_0 <= 148)||LA78_0==152||LA78_0==154||LA78_0==157||LA78_0==160||LA78_0==162||LA78_0==167||(LA78_0 >= 171 && LA78_0 <= 172)||LA78_0==183||LA78_0==190||LA78_0==194||LA78_0==196) ) {
				int LA78_1 = input.LA(2);
				if ( (synpred15_cs()) ) {
					alt78=1;
				}
				else if ( (true) ) {
					alt78=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 78, 0, input);
				throw nvae;
			}

			switch (alt78) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:300:9: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_type_or_generic4670);
					identifier278=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier278.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_type_or_generic4674);
					generic_argument_list279=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list279.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:301:11: identifier
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_type_or_generic4686);
					identifier280=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier280.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 73, type_or_generic_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_or_generic"


	public static class qid_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qid"
	// /Users/jeremie/ANTLR/cs.g:303:1: qid : qid_start ( qid_part )* ;
	public final csParser.qid_return qid() throws RecognitionException {
		csParser.qid_return retval = new csParser.qid_return();
		retval.start = input.LT(1);
		int qid_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope qid_start281 =null;
		ParserRuleReturnScope qid_part282 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:303:4: ( qid_start ( qid_part )* )
			// /Users/jeremie/ANTLR/cs.g:304:9: qid_start ( qid_part )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_qid_start_in_qid4718);
			qid_start281=qid_start();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, qid_start281.getTree());

			// /Users/jeremie/ANTLR/cs.g:304:21: ( qid_part )*
			loop79:
			while (true) {
				int alt79=2;
				int LA79_0 = input.LA(1);
				if ( (LA79_0==DOT) ) {
					int LA79_2 = input.LA(2);
					if ( (LA79_2==IDENTIFIER||LA79_2==95||(LA79_2 >= 97 && LA79_2 <= 98)||(LA79_2 >= 100 && LA79_2 <= 101)||LA79_2==105||LA79_2==117||LA79_2==120||LA79_2==122||LA79_2==126||LA79_2==132||LA79_2==135||LA79_2==141||(LA79_2 >= 143 && LA79_2 <= 144)||(LA79_2 >= 147 && LA79_2 <= 148)||LA79_2==152||LA79_2==154||LA79_2==157||LA79_2==160||LA79_2==162||LA79_2==167||(LA79_2 >= 171 && LA79_2 <= 172)||LA79_2==183||LA79_2==190||LA79_2==194||LA79_2==196) ) {
						alt79=1;
					}

				}
				else if ( (LA79_0==PTR) ) {
					alt79=1;
				}

				switch (alt79) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:304:21: qid_part
					{
					pushFollow(FOLLOW_qid_part_in_qid4722);
					qid_part282=qid_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, qid_part282.getTree());

					}
					break;

				default :
					break loop79;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 74, qid_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qid"


	public static class qid_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qid_start"
	// /Users/jeremie/ANTLR/cs.g:306:1: qid_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal );
	public final csParser.qid_start_return qid_start() throws RecognitionException {
		csParser.qid_start_return retval = new csParser.qid_start_return();
		retval.start = input.LT(1);
		int qid_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal287=null;
		ParserRuleReturnScope predefined_type283 =null;
		ParserRuleReturnScope identifier284 =null;
		ParserRuleReturnScope generic_argument_list285 =null;
		ParserRuleReturnScope identifier286 =null;
		ParserRuleReturnScope identifier288 =null;
		ParserRuleReturnScope literal289 =null;

		CommonTree string_literal287_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:306:10: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal )
			int alt81=4;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt81=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA81_2 = input.LA(2);
				if ( (LA81_2==81) && (synpred16_cs())) {
					alt81=2;
				}
				else if ( (LA81_2==DOT||LA81_2==PTR||LA81_2==68||LA81_2==80||LA81_2==197) ) {
					alt81=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 81, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt81=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 81, 0, input);
				throw nvae;
			}
			switch (alt81) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:307:9: predefined_type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_predefined_type_in_qid_start4746);
					predefined_type283=predefined_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type283.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:308:11: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_qid_start4776);
					identifier284=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier284.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_qid_start4780);
					generic_argument_list285=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list285.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:311:11: identifier ( '::' identifier )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_qid_start4794);
					identifier286=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier286.getTree());

					// /Users/jeremie/ANTLR/cs.g:311:24: ( '::' identifier )?
					int alt80=2;
					int LA80_0 = input.LA(1);
					if ( (LA80_0==80) ) {
						alt80=1;
					}
					switch (alt80) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:311:25: '::' identifier
							{
							string_literal287=(Token)match(input,80,FOLLOW_80_in_qid_start4799); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal287_tree = (CommonTree)adaptor.create(string_literal287);
							adaptor.addChild(root_0, string_literal287_tree);
							}

							pushFollow(FOLLOW_identifier_in_qid_start4803);
							identifier288=identifier();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier288.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:312:11: literal
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_literal_in_qid_start4817);
					literal289=literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal289.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 75, qid_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qid_start"


	public static class qid_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qid_part"
	// /Users/jeremie/ANTLR/cs.g:316:1: qid_part : access_identifier ;
	public final csParser.qid_part_return qid_part() throws RecognitionException {
		csParser.qid_part_return retval = new csParser.qid_part_return();
		retval.start = input.LT(1);
		int qid_part_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_identifier290 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:316:9: ( access_identifier )
			// /Users/jeremie/ANTLR/cs.g:317:9: access_identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_access_identifier_in_qid_part4859);
			access_identifier290=access_identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier290.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 76, qid_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qid_part"


	public static class generic_argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "generic_argument_list"
	// /Users/jeremie/ANTLR/cs.g:319:1: generic_argument_list : '<' type_arguments '>' ;
	public final csParser.generic_argument_list_return generic_argument_list() throws RecognitionException {
		csParser.generic_argument_list_return retval = new csParser.generic_argument_list_return();
		retval.start = input.LT(1);
		int generic_argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal291=null;
		Token char_literal293=null;
		ParserRuleReturnScope type_arguments292 =null;

		CommonTree char_literal291_tree=null;
		CommonTree char_literal293_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:319:22: ( '<' type_arguments '>' )
			// /Users/jeremie/ANTLR/cs.g:320:9: '<' type_arguments '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal291=(Token)match(input,81,FOLLOW_81_in_generic_argument_list4876); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal291_tree = (CommonTree)adaptor.create(char_literal291);
			adaptor.addChild(root_0, char_literal291_tree);
			}

			pushFollow(FOLLOW_type_arguments_in_generic_argument_list4880);
			type_arguments292=type_arguments();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments292.getTree());

			char_literal293=(Token)match(input,GT,FOLLOW_GT_in_generic_argument_list4884); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal293_tree = (CommonTree)adaptor.create(char_literal293);
			adaptor.addChild(root_0, char_literal293_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 77, generic_argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "generic_argument_list"


	public static class type_arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_arguments"
	// /Users/jeremie/ANTLR/cs.g:321:1: type_arguments : type ( ',' type )* ;
	public final csParser.type_arguments_return type_arguments() throws RecognitionException {
		csParser.type_arguments_return retval = new csParser.type_arguments_return();
		retval.start = input.LT(1);
		int type_arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal295=null;
		ParserRuleReturnScope type294 =null;
		ParserRuleReturnScope type296 =null;

		CommonTree char_literal295_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:321:15: ( type ( ',' type )* )
			// /Users/jeremie/ANTLR/cs.g:322:9: type ( ',' type )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_type_arguments4900);
			type294=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type294.getTree());

			// /Users/jeremie/ANTLR/cs.g:322:14: ( ',' type )*
			loop82:
			while (true) {
				int alt82=2;
				int LA82_0 = input.LA(1);
				if ( (LA82_0==74) ) {
					alt82=1;
				}

				switch (alt82) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:322:15: ',' type
					{
					char_literal295=(Token)match(input,74,FOLLOW_74_in_type_arguments4903); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal295_tree = (CommonTree)adaptor.create(char_literal295);
					adaptor.addChild(root_0, char_literal295_tree);
					}

					pushFollow(FOLLOW_type_in_type_arguments4905);
					type296=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type296.getTree());

					}
					break;

				default :
					break loop82;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 78, type_arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_arguments"


	public static class type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type"
	// /Users/jeremie/ANTLR/cs.g:324:1: type : ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ );
	public final csParser.type_return type() throws RecognitionException {
		csParser.type_return retval = new csParser.type_return();
		retval.start = input.LT(1);
		int type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal300=null;
		Token char_literal303=null;
		Token char_literal304=null;
		Token string_literal307=null;
		Token char_literal308=null;
		ParserRuleReturnScope predefined_type297 =null;
		ParserRuleReturnScope type_name298 =null;
		ParserRuleReturnScope rank_specifiers299 =null;
		ParserRuleReturnScope predefined_type301 =null;
		ParserRuleReturnScope type_name302 =null;
		ParserRuleReturnScope predefined_type305 =null;
		ParserRuleReturnScope type_name306 =null;

		CommonTree char_literal300_tree=null;
		CommonTree char_literal303_tree=null;
		CommonTree char_literal304_tree=null;
		CommonTree string_literal307_tree=null;
		CommonTree char_literal308_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:324:5: ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ )
			int alt90=4;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				int LA90_1 = input.LA(2);
				if ( (synpred17_cs()) ) {
					alt90=1;
				}
				else if ( (synpred18_cs()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA90_2 = input.LA(2);
				if ( (synpred17_cs()) ) {
					alt90=1;
				}
				else if ( (synpred18_cs()) ) {
					alt90=2;
				}
				else if ( (true) ) {
					alt90=3;
				}

				}
				break;
			case 192:
				{
				alt90=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				throw nvae;
			}
			switch (alt90) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:325:11: ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )*
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:325:63: ( predefined_type | type_name )
					int alt83=2;
					int LA83_0 = input.LA(1);
					if ( (LA83_0==103||LA83_0==106||LA83_0==109||LA83_0==114||LA83_0==119||LA83_0==129||LA83_0==138||LA83_0==146||LA83_0==151||LA83_0==169||LA83_0==173||LA83_0==177||(LA83_0 >= 185 && LA83_0 <= 186)||LA83_0==189) ) {
						alt83=1;
					}
					else if ( (LA83_0==IDENTIFIER||LA83_0==95||(LA83_0 >= 97 && LA83_0 <= 98)||(LA83_0 >= 100 && LA83_0 <= 101)||LA83_0==105||LA83_0==117||LA83_0==120||LA83_0==122||LA83_0==126||LA83_0==132||LA83_0==135||LA83_0==141||(LA83_0 >= 143 && LA83_0 <= 144)||(LA83_0 >= 147 && LA83_0 <= 148)||LA83_0==152||LA83_0==154||LA83_0==157||LA83_0==160||LA83_0==162||LA83_0==167||(LA83_0 >= 171 && LA83_0 <= 172)||LA83_0==183||LA83_0==190||LA83_0==194||LA83_0==196) ) {
						alt83=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 83, 0, input);
						throw nvae;
					}

					switch (alt83) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:325:64: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_type4941);
							predefined_type297=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type297.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:325:82: type_name
							{
							pushFollow(FOLLOW_type_name_in_type4945);
							type_name298=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name298.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_rank_specifiers_in_type4950);
					rank_specifiers299=rank_specifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers299.getTree());

					// /Users/jeremie/ANTLR/cs.g:325:113: ( '*' )*
					loop84:
					while (true) {
						int alt84=2;
						int LA84_0 = input.LA(1);
						if ( (LA84_0==69) ) {
							alt84=1;
						}

						switch (alt84) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:325:113: '*'
							{
							char_literal300=(Token)match(input,69,FOLLOW_69_in_type4954); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal300_tree = (CommonTree)adaptor.create(char_literal300);
							adaptor.addChild(root_0, char_literal300_tree);
							}

							}
							break;

						default :
							break loop84;
						}
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:326:11: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:326:60: ( predefined_type | type_name )
					int alt85=2;
					int LA85_0 = input.LA(1);
					if ( (LA85_0==103||LA85_0==106||LA85_0==109||LA85_0==114||LA85_0==119||LA85_0==129||LA85_0==138||LA85_0==146||LA85_0==151||LA85_0==169||LA85_0==173||LA85_0==177||(LA85_0 >= 185 && LA85_0 <= 186)||LA85_0==189) ) {
						alt85=1;
					}
					else if ( (LA85_0==IDENTIFIER||LA85_0==95||(LA85_0 >= 97 && LA85_0 <= 98)||(LA85_0 >= 100 && LA85_0 <= 101)||LA85_0==105||LA85_0==117||LA85_0==120||LA85_0==122||LA85_0==126||LA85_0==132||LA85_0==135||LA85_0==141||(LA85_0 >= 143 && LA85_0 <= 144)||(LA85_0 >= 147 && LA85_0 <= 148)||LA85_0==152||LA85_0==154||LA85_0==157||LA85_0==160||LA85_0==162||LA85_0==167||(LA85_0 >= 171 && LA85_0 <= 172)||LA85_0==183||LA85_0==190||LA85_0==194||LA85_0==196) ) {
						alt85=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 85, 0, input);
						throw nvae;
					}

					switch (alt85) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:326:61: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_type4990);
							predefined_type301=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type301.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:326:79: type_name
							{
							pushFollow(FOLLOW_type_name_in_type4994);
							type_name302=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name302.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:326:92: ( ( '*' )+ | '?' )
					int alt87=2;
					int LA87_0 = input.LA(1);
					if ( (LA87_0==69) ) {
						alt87=1;
					}
					else if ( (LA87_0==89) ) {
						alt87=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 87, 0, input);
						throw nvae;
					}

					switch (alt87) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:326:93: ( '*' )+
							{
							// /Users/jeremie/ANTLR/cs.g:326:93: ( '*' )+
							int cnt86=0;
							loop86:
							while (true) {
								int alt86=2;
								int LA86_0 = input.LA(1);
								if ( (LA86_0==69) ) {
									alt86=1;
								}

								switch (alt86) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:326:93: '*'
									{
									char_literal303=(Token)match(input,69,FOLLOW_69_in_type5000); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									char_literal303_tree = (CommonTree)adaptor.create(char_literal303);
									adaptor.addChild(root_0, char_literal303_tree);
									}

									}
									break;

								default :
									if ( cnt86 >= 1 ) break loop86;
									if (state.backtracking>0) {state.failed=true; return retval;}
									EarlyExitException eee = new EarlyExitException(86, input);
									throw eee;
								}
								cnt86++;
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:326:100: '?'
							{
							char_literal304=(Token)match(input,89,FOLLOW_89_in_type5005); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal304_tree = (CommonTree)adaptor.create(char_literal304);
							adaptor.addChild(root_0, char_literal304_tree);
							}

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:327:11: ( predefined_type | type_name )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:327:11: ( predefined_type | type_name )
					int alt88=2;
					int LA88_0 = input.LA(1);
					if ( (LA88_0==103||LA88_0==106||LA88_0==109||LA88_0==114||LA88_0==119||LA88_0==129||LA88_0==138||LA88_0==146||LA88_0==151||LA88_0==169||LA88_0==173||LA88_0==177||(LA88_0 >= 185 && LA88_0 <= 186)||LA88_0==189) ) {
						alt88=1;
					}
					else if ( (LA88_0==IDENTIFIER||LA88_0==95||(LA88_0 >= 97 && LA88_0 <= 98)||(LA88_0 >= 100 && LA88_0 <= 101)||LA88_0==105||LA88_0==117||LA88_0==120||LA88_0==122||LA88_0==126||LA88_0==132||LA88_0==135||LA88_0==141||(LA88_0 >= 143 && LA88_0 <= 144)||(LA88_0 >= 147 && LA88_0 <= 148)||LA88_0==152||LA88_0==154||LA88_0==157||LA88_0==160||LA88_0==162||LA88_0==167||(LA88_0 >= 171 && LA88_0 <= 172)||LA88_0==183||LA88_0==190||LA88_0==194||LA88_0==196) ) {
						alt88=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 88, 0, input);
						throw nvae;
					}

					switch (alt88) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:327:12: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_type5019);
							predefined_type305=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type305.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:327:30: type_name
							{
							pushFollow(FOLLOW_type_name_in_type5023);
							type_name306=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name306.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:328:11: 'void' ( '*' )+
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal307=(Token)match(input,192,FOLLOW_192_in_type5036); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal307_tree = (CommonTree)adaptor.create(string_literal307);
					adaptor.addChild(root_0, string_literal307_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:328:18: ( '*' )+
					int cnt89=0;
					loop89:
					while (true) {
						int alt89=2;
						int LA89_0 = input.LA(1);
						if ( (LA89_0==69) ) {
							alt89=1;
						}

						switch (alt89) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:328:18: '*'
							{
							char_literal308=(Token)match(input,69,FOLLOW_69_in_type5038); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal308_tree = (CommonTree)adaptor.create(char_literal308);
							adaptor.addChild(root_0, char_literal308_tree);
							}

							}
							break;

						default :
							if ( cnt89 >= 1 ) break loop89;
							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee = new EarlyExitException(89, input);
							throw eee;
						}
						cnt89++;
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 79, type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type"


	public static class non_nullable_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_nullable_type"
	// /Users/jeremie/ANTLR/cs.g:330:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
	public final csParser.non_nullable_type_return non_nullable_type() throws RecognitionException {
		csParser.non_nullable_type_return retval = new csParser.non_nullable_type_return();
		retval.start = input.LT(1);
		int non_nullable_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal312=null;
		Token char_literal313=null;
		Token string_literal314=null;
		Token char_literal315=null;
		ParserRuleReturnScope predefined_type309 =null;
		ParserRuleReturnScope type_name310 =null;
		ParserRuleReturnScope rank_specifiers311 =null;

		CommonTree char_literal312_tree=null;
		CommonTree char_literal313_tree=null;
		CommonTree string_literal314_tree=null;
		CommonTree char_literal315_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:330:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
			int alt97=2;
			int LA97_0 = input.LA(1);
			if ( (LA97_0==IDENTIFIER||LA97_0==95||(LA97_0 >= 97 && LA97_0 <= 98)||(LA97_0 >= 100 && LA97_0 <= 101)||LA97_0==103||(LA97_0 >= 105 && LA97_0 <= 106)||LA97_0==109||LA97_0==114||LA97_0==117||(LA97_0 >= 119 && LA97_0 <= 120)||LA97_0==122||LA97_0==126||LA97_0==129||LA97_0==132||LA97_0==135||LA97_0==138||LA97_0==141||(LA97_0 >= 143 && LA97_0 <= 144)||(LA97_0 >= 146 && LA97_0 <= 148)||(LA97_0 >= 151 && LA97_0 <= 152)||LA97_0==154||LA97_0==157||LA97_0==160||LA97_0==162||LA97_0==167||LA97_0==169||(LA97_0 >= 171 && LA97_0 <= 173)||LA97_0==177||LA97_0==183||(LA97_0 >= 185 && LA97_0 <= 186)||(LA97_0 >= 189 && LA97_0 <= 190)||LA97_0==194||LA97_0==196) ) {
				alt97=1;
			}
			else if ( (LA97_0==192) ) {
				alt97=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 97, 0, input);
				throw nvae;
			}

			switch (alt97) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:331:9: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:331:9: ( predefined_type | type_name )
					int alt91=2;
					int LA91_0 = input.LA(1);
					if ( (LA91_0==103||LA91_0==106||LA91_0==109||LA91_0==114||LA91_0==119||LA91_0==129||LA91_0==138||LA91_0==146||LA91_0==151||LA91_0==169||LA91_0==173||LA91_0==177||(LA91_0 >= 185 && LA91_0 <= 186)||LA91_0==189) ) {
						alt91=1;
					}
					else if ( (LA91_0==IDENTIFIER||LA91_0==95||(LA91_0 >= 97 && LA91_0 <= 98)||(LA91_0 >= 100 && LA91_0 <= 101)||LA91_0==105||LA91_0==117||LA91_0==120||LA91_0==122||LA91_0==126||LA91_0==132||LA91_0==135||LA91_0==141||(LA91_0 >= 143 && LA91_0 <= 144)||(LA91_0 >= 147 && LA91_0 <= 148)||LA91_0==152||LA91_0==154||LA91_0==157||LA91_0==160||LA91_0==162||LA91_0==167||(LA91_0 >= 171 && LA91_0 <= 172)||LA91_0==183||LA91_0==190||LA91_0==194||LA91_0==196) ) {
						alt91=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 91, 0, input);
						throw nvae;
					}

					switch (alt91) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:331:10: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_non_nullable_type5063);
							predefined_type309=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type309.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:331:28: type_name
							{
							pushFollow(FOLLOW_type_name_in_non_nullable_type5067);
							type_name310=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name310.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:332:17: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
					int alt95=2;
					int LA95_0 = input.LA(1);
					if ( (LA95_0==91) ) {
						alt95=1;
					}
					else if ( (LA95_0==EOF||LA95_0==GT||LA95_0==IDENTIFIER||LA95_0==RPAREN||LA95_0==SEMI||LA95_0==62||(LA95_0 >= 65 && LA95_0 <= 66)||LA95_0==69||LA95_0==74||LA95_0==79||LA95_0==81||LA95_0==84||LA95_0==86||(LA95_0 >= 88 && LA95_0 <= 90)||(LA95_0 >= 92 && LA95_0 <= 93)||LA95_0==95||(LA95_0 >= 97 && LA95_0 <= 101)||LA95_0==105||LA95_0==117||LA95_0==120||LA95_0==122||LA95_0==126||LA95_0==132||LA95_0==135||(LA95_0 >= 141 && LA95_0 <= 144)||(LA95_0 >= 147 && LA95_0 <= 148)||LA95_0==152||LA95_0==154||LA95_0==157||LA95_0==160||LA95_0==162||LA95_0==167||(LA95_0 >= 171 && LA95_0 <= 172)||LA95_0==183||LA95_0==190||LA95_0==194||LA95_0==196||LA95_0==198||(LA95_0 >= 200 && LA95_0 <= 201)) ) {
						alt95=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 95, 0, input);
						throw nvae;
					}

					switch (alt95) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:332:21: rank_specifiers ( '*' )*
							{
							pushFollow(FOLLOW_rank_specifiers_in_non_nullable_type5090);
							rank_specifiers311=rank_specifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers311.getTree());

							// /Users/jeremie/ANTLR/cs.g:332:39: ( '*' )*
							loop92:
							while (true) {
								int alt92=2;
								int LA92_0 = input.LA(1);
								if ( (LA92_0==69) ) {
									alt92=1;
								}

								switch (alt92) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:332:39: '*'
									{
									char_literal312=(Token)match(input,69,FOLLOW_69_in_non_nullable_type5094); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									char_literal312_tree = (CommonTree)adaptor.create(char_literal312);
									adaptor.addChild(root_0, char_literal312_tree);
									}

									}
									break;

								default :
									break loop92;
								}
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:333:27: ( ( '*' )+ )?
							{
							// /Users/jeremie/ANTLR/cs.g:333:27: ( ( '*' )+ )?
							int alt94=2;
							int LA94_0 = input.LA(1);
							if ( (LA94_0==69) ) {
								alt94=1;
							}
							switch (alt94) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:333:28: ( '*' )+
									{
									// /Users/jeremie/ANTLR/cs.g:333:28: ( '*' )+
									int cnt93=0;
									loop93:
									while (true) {
										int alt93=2;
										int LA93_0 = input.LA(1);
										if ( (LA93_0==69) ) {
											alt93=1;
										}

										switch (alt93) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:333:28: '*'
											{
											char_literal313=(Token)match(input,69,FOLLOW_69_in_non_nullable_type5124); if (state.failed) return retval;
											if ( state.backtracking==0 ) {
											char_literal313_tree = (CommonTree)adaptor.create(char_literal313);
											adaptor.addChild(root_0, char_literal313_tree);
											}

											}
											break;

										default :
											if ( cnt93 >= 1 ) break loop93;
											if (state.backtracking>0) {state.failed=true; return retval;}
											EarlyExitException eee = new EarlyExitException(93, input);
											throw eee;
										}
										cnt93++;
									}

									}
									break;

							}

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:335:11: 'void' ( '*' )+
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal314=(Token)match(input,192,FOLLOW_192_in_non_nullable_type5157); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal314_tree = (CommonTree)adaptor.create(string_literal314);
					adaptor.addChild(root_0, string_literal314_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:335:20: ( '*' )+
					int cnt96=0;
					loop96:
					while (true) {
						int alt96=2;
						int LA96_0 = input.LA(1);
						if ( (LA96_0==69) ) {
							alt96=1;
						}

						switch (alt96) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:335:20: '*'
							{
							char_literal315=(Token)match(input,69,FOLLOW_69_in_non_nullable_type5161); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal315_tree = (CommonTree)adaptor.create(char_literal315);
							adaptor.addChild(root_0, char_literal315_tree);
							}

							}
							break;

						default :
							if ( cnt96 >= 1 ) break loop96;
							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee = new EarlyExitException(96, input);
							throw eee;
						}
						cnt96++;
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 80, non_nullable_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_nullable_type"


	public static class non_array_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_array_type"
	// /Users/jeremie/ANTLR/cs.g:337:1: non_array_type : type ;
	public final csParser.non_array_type_return non_array_type() throws RecognitionException {
		csParser.non_array_type_return retval = new csParser.non_array_type_return();
		retval.start = input.LT(1);
		int non_array_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type316 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:337:15: ( type )
			// /Users/jeremie/ANTLR/cs.g:338:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_non_array_type5186);
			type316=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type316.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 81, non_array_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_array_type"


	public static class array_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "array_type"
	// /Users/jeremie/ANTLR/cs.g:339:1: array_type : type ;
	public final csParser.array_type_return array_type() throws RecognitionException {
		csParser.array_type_return retval = new csParser.array_type_return();
		retval.start = input.LT(1);
		int array_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type317 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:339:11: ( type )
			// /Users/jeremie/ANTLR/cs.g:340:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_array_type5200);
			type317=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type317.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 82, array_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "array_type"


	public static class unmanaged_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unmanaged_type"
	// /Users/jeremie/ANTLR/cs.g:341:1: unmanaged_type : type ;
	public final csParser.unmanaged_type_return unmanaged_type() throws RecognitionException {
		csParser.unmanaged_type_return retval = new csParser.unmanaged_type_return();
		retval.start = input.LT(1);
		int unmanaged_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type318 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:341:15: ( type )
			// /Users/jeremie/ANTLR/cs.g:342:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_unmanaged_type5214);
			type318=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type318.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 83, unmanaged_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unmanaged_type"


	public static class class_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_type"
	// /Users/jeremie/ANTLR/cs.g:343:1: class_type : type ;
	public final csParser.class_type_return class_type() throws RecognitionException {
		csParser.class_type_return retval = new csParser.class_type_return();
		retval.start = input.LT(1);
		int class_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type319 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:343:11: ( type )
			// /Users/jeremie/ANTLR/cs.g:344:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_class_type5228);
			type319=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type319.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 84, class_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_type"


	public static class pointer_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pointer_type"
	// /Users/jeremie/ANTLR/cs.g:345:1: pointer_type : type ;
	public final csParser.pointer_type_return pointer_type() throws RecognitionException {
		csParser.pointer_type_return retval = new csParser.pointer_type_return();
		retval.start = input.LT(1);
		int pointer_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type320 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:345:13: ( type )
			// /Users/jeremie/ANTLR/cs.g:346:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_pointer_type5242);
			type320=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type320.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 85, pointer_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pointer_type"


	public static class block_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "block"
	// /Users/jeremie/ANTLR/cs.g:352:1: block : ( ';' | '{' ( statement_list )? '}' );
	public final csParser.block_return block() throws RecognitionException {
		csParser.block_return retval = new csParser.block_return();
		retval.start = input.LT(1);
		int block_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal321=null;
		Token char_literal322=null;
		Token char_literal324=null;
		ParserRuleReturnScope statement_list323 =null;

		CommonTree char_literal321_tree=null;
		CommonTree char_literal322_tree=null;
		CommonTree char_literal324_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:352:6: ( ';' | '{' ( statement_list )? '}' )
			int alt99=2;
			int LA99_0 = input.LA(1);
			if ( (LA99_0==SEMI) ) {
				alt99=1;
			}
			else if ( (LA99_0==197) ) {
				alt99=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				throw nvae;
			}

			switch (alt99) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:353:9: ';'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal321=(Token)match(input,SEMI,FOLLOW_SEMI_in_block5261); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal321_tree = (CommonTree)adaptor.create(char_literal321);
					adaptor.addChild(root_0, char_literal321_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:354:11: '{' ( statement_list )? '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal322=(Token)match(input,197,FOLLOW_197_in_block5273); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal322_tree = (CommonTree)adaptor.create(char_literal322);
					adaptor.addChild(root_0, char_literal322_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:354:17: ( statement_list )?
					int alt98=2;
					int LA98_0 = input.LA(1);
					if ( (LA98_0==Character_literal||LA98_0==FALSE||(LA98_0 >= Hex_number && LA98_0 <= IF)||(LA98_0 >= MINUS && LA98_0 <= NUMBER)||LA98_0==Real_literal||(LA98_0 >= SEMI && LA98_0 <= STRINGLITERAL)||LA98_0==TRUE||(LA98_0 >= USING && LA98_0 <= Verbatim_string_literal)||LA98_0==61||LA98_0==66||(LA98_0 >= 68 && LA98_0 <= 69)||(LA98_0 >= 71 && LA98_0 <= 72)||LA98_0==75||LA98_0==95||(LA98_0 >= 97 && LA98_0 <= 98)||(LA98_0 >= 100 && LA98_0 <= 106)||(LA98_0 >= 109 && LA98_0 <= 110)||(LA98_0 >= 112 && LA98_0 <= 120)||LA98_0==122||LA98_0==126||(LA98_0 >= 128 && LA98_0 <= 132)||(LA98_0 >= 134 && LA98_0 <= 135)||LA98_0==138||LA98_0==141||(LA98_0 >= 143 && LA98_0 <= 148)||(LA98_0 >= 150 && LA98_0 <= 152)||LA98_0==154||LA98_0==157||LA98_0==160||LA98_0==162||(LA98_0 >= 167 && LA98_0 <= 169)||(LA98_0 >= 171 && LA98_0 <= 174)||LA98_0==177||(LA98_0 >= 179 && LA98_0 <= 190)||LA98_0==192||(LA98_0 >= 194 && LA98_0 <= 197)||LA98_0==202) ) {
						alt98=1;
					}
					switch (alt98) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:354:17: statement_list
							{
							pushFollow(FOLLOW_statement_list_in_block5277);
							statement_list323=statement_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list323.getTree());

							}
							break;

					}

					char_literal324=(Token)match(input,201,FOLLOW_201_in_block5282); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal324_tree = (CommonTree)adaptor.create(char_literal324);
					adaptor.addChild(root_0, char_literal324_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 86, block_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "block"


	public static class statement_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement_list"
	// /Users/jeremie/ANTLR/cs.g:355:1: statement_list : ( statement )+ ;
	public final csParser.statement_list_return statement_list() throws RecognitionException {
		csParser.statement_list_return retval = new csParser.statement_list_return();
		retval.start = input.LT(1);
		int statement_list_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope statement325 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:355:15: ( ( statement )+ )
			// /Users/jeremie/ANTLR/cs.g:356:9: ( statement )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:356:9: ( statement )+
			int cnt100=0;
			loop100:
			while (true) {
				int alt100=2;
				int LA100_0 = input.LA(1);
				if ( (LA100_0==115) ) {
					int LA100_2 = input.LA(2);
					if ( (LA100_2==68) ) {
						alt100=1;
					}

				}
				else if ( (LA100_0==Character_literal||LA100_0==FALSE||(LA100_0 >= Hex_number && LA100_0 <= IF)||(LA100_0 >= MINUS && LA100_0 <= NUMBER)||LA100_0==Real_literal||(LA100_0 >= SEMI && LA100_0 <= STRINGLITERAL)||LA100_0==TRUE||(LA100_0 >= USING && LA100_0 <= Verbatim_string_literal)||LA100_0==61||LA100_0==66||(LA100_0 >= 68 && LA100_0 <= 69)||(LA100_0 >= 71 && LA100_0 <= 72)||LA100_0==75||LA100_0==95||(LA100_0 >= 97 && LA100_0 <= 98)||(LA100_0 >= 100 && LA100_0 <= 106)||(LA100_0 >= 109 && LA100_0 <= 110)||(LA100_0 >= 112 && LA100_0 <= 114)||(LA100_0 >= 116 && LA100_0 <= 120)||LA100_0==122||LA100_0==126||(LA100_0 >= 128 && LA100_0 <= 132)||(LA100_0 >= 134 && LA100_0 <= 135)||LA100_0==138||LA100_0==141||(LA100_0 >= 143 && LA100_0 <= 148)||(LA100_0 >= 150 && LA100_0 <= 152)||LA100_0==154||LA100_0==157||LA100_0==160||LA100_0==162||(LA100_0 >= 167 && LA100_0 <= 169)||(LA100_0 >= 171 && LA100_0 <= 174)||LA100_0==177||(LA100_0 >= 179 && LA100_0 <= 190)||LA100_0==192||(LA100_0 >= 194 && LA100_0 <= 197)||LA100_0==202) ) {
					alt100=1;
				}

				switch (alt100) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:356:9: statement
					{
					pushFollow(FOLLOW_statement_in_statement_list5296);
					statement325=statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, statement325.getTree());

					}
					break;

				default :
					if ( cnt100 >= 1 ) break loop100;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(100, input);
					throw eee;
				}
				cnt100++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 87, statement_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement_list"


	public static class expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression"
	// /Users/jeremie/ANTLR/cs.g:361:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
	public final csParser.expression_return expression() throws RecognitionException {
		csParser.expression_return retval = new csParser.expression_return();
		retval.start = input.LT(1);
		int expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope assignment326 =null;
		ParserRuleReturnScope non_assignment_expression327 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:361:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
			int alt101=2;
			switch ( input.LA(1) ) {
			case 68:
				{
				int LA101_1 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 150:
				{
				int LA101_2 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 180:
				{
				int LA101_3 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				int LA101_4 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 132:
				{
				int LA101_5 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 102:
				{
				int LA101_6 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 184:
				{
				int LA101_7 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				int LA101_8 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 174:
				{
				int LA101_9 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 110:
				{
				int LA101_10 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 187:
				{
				int LA101_11 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 115:
				{
				int LA101_12 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 116:
				{
				int LA101_13 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 71:
				{
				int LA101_14 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case MINUS:
				{
				int LA101_15 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 61:
				{
				int LA101_16 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 202:
				{
				int LA101_17 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 72:
				{
				int LA101_18 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 75:
				{
				int LA101_19 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 69:
				{
				int LA101_20 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case 66:
				{
				int LA101_21 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA101_22 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt101=1;
				}
				else if ( (true) ) {
					alt101=2;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 101, 0, input);
				throw nvae;
			}
			switch (alt101) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:362:9: ( unary_expression assignment_operator )=> assignment
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_assignment_in_expression5335);
					assignment326=assignment();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment326.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:363:11: non_assignment_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_non_assignment_expression_in_expression5355);
					non_assignment_expression327=non_assignment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression327.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 88, expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression"


	public static class expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression_list"
	// /Users/jeremie/ANTLR/cs.g:365:1: expression_list : expression ( ',' expression )* ;
	public final csParser.expression_list_return expression_list() throws RecognitionException {
		csParser.expression_list_return retval = new csParser.expression_list_return();
		retval.start = input.LT(1);
		int expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal329=null;
		ParserRuleReturnScope expression328 =null;
		ParserRuleReturnScope expression330 =null;

		CommonTree char_literal329_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:365:16: ( expression ( ',' expression )* )
			// /Users/jeremie/ANTLR/cs.g:366:9: expression ( ',' expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_expression_list5378);
			expression328=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression328.getTree());

			// /Users/jeremie/ANTLR/cs.g:366:21: ( ',' expression )*
			loop102:
			while (true) {
				int alt102=2;
				int LA102_0 = input.LA(1);
				if ( (LA102_0==74) ) {
					alt102=1;
				}

				switch (alt102) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:366:22: ',' expression
					{
					char_literal329=(Token)match(input,74,FOLLOW_74_in_expression_list5382); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal329_tree = (CommonTree)adaptor.create(char_literal329);
					adaptor.addChild(root_0, char_literal329_tree);
					}

					pushFollow(FOLLOW_expression_in_expression_list5386);
					expression330=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression330.getTree());

					}
					break;

				default :
					break loop102;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 89, expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression_list"


	public static class assignment_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assignment"
	// /Users/jeremie/ANTLR/cs.g:367:1: assignment : unary_expression assignment_operator expression ;
	public final csParser.assignment_return assignment() throws RecognitionException {
		csParser.assignment_return retval = new csParser.assignment_return();
		retval.start = input.LT(1);
		int assignment_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope unary_expression331 =null;
		ParserRuleReturnScope assignment_operator332 =null;
		ParserRuleReturnScope expression333 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:367:11: ( unary_expression assignment_operator expression )
			// /Users/jeremie/ANTLR/cs.g:368:9: unary_expression assignment_operator expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_unary_expression_in_assignment5403);
			unary_expression331=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression331.getTree());

			pushFollow(FOLLOW_assignment_operator_in_assignment5407);
			assignment_operator332=assignment_operator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_operator332.getTree());

			pushFollow(FOLLOW_expression_in_assignment5411);
			expression333=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression333.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 90, assignment_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "assignment"


	public static class unary_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unary_expression"
	// /Users/jeremie/ANTLR/cs.g:369:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );
	public final csParser.unary_expression_return unary_expression() throws RecognitionException {
		csParser.unary_expression_return retval = new csParser.unary_expression_return();
		retval.start = input.LT(1);
		int unary_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal336=null;
		Token string_literal337=null;
		Token char_literal338=null;
		Token char_literal340=null;
		Token char_literal342=null;
		Token char_literal344=null;
		ParserRuleReturnScope cast_expression334 =null;
		ParserRuleReturnScope primary_or_array_creation_expression335 =null;
		ParserRuleReturnScope unary_expression339 =null;
		ParserRuleReturnScope unary_expression341 =null;
		ParserRuleReturnScope unary_expression343 =null;
		ParserRuleReturnScope unary_expression345 =null;
		ParserRuleReturnScope pre_increment_expression346 =null;
		ParserRuleReturnScope pre_decrement_expression347 =null;
		ParserRuleReturnScope pointer_indirection_expression348 =null;
		ParserRuleReturnScope addressof_expression349 =null;

		CommonTree string_literal336_tree=null;
		CommonTree string_literal337_tree=null;
		CommonTree char_literal338_tree=null;
		CommonTree char_literal340_tree=null;
		CommonTree char_literal342_tree=null;
		CommonTree char_literal344_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:369:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression )
			int alt105=10;
			switch ( input.LA(1) ) {
			case 68:
				{
				int LA105_1 = input.LA(2);
				if ( (synpred20_cs()) ) {
					alt105=1;
				}
				else if ( (true) ) {
					alt105=2;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt105=2;
				}
				break;
			case 71:
				{
				alt105=3;
				}
				break;
			case MINUS:
				{
				alt105=4;
				}
				break;
			case 61:
				{
				alt105=5;
				}
				break;
			case 202:
				{
				alt105=6;
				}
				break;
			case 72:
				{
				alt105=7;
				}
				break;
			case 75:
				{
				alt105=8;
				}
				break;
			case 69:
				{
				alt105=9;
				}
				break;
			case 66:
				{
				alt105=10;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 105, 0, input);
				throw nvae;
			}
			switch (alt105) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:371:9: ( cast_expression )=> cast_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_cast_expression_in_unary_expression5442);
					cast_expression334=cast_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression334.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:372:11: primary_or_array_creation_expression ( '++' )? ( '--' )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_primary_or_array_creation_expression_in_unary_expression5454);
					primary_or_array_creation_expression335=primary_or_array_creation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_or_array_creation_expression335.getTree());

					// /Users/jeremie/ANTLR/cs.g:372:50: ( '++' )?
					int alt103=2;
					int LA103_0 = input.LA(1);
					if ( (LA103_0==72) ) {
						alt103=1;
					}
					switch (alt103) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:372:50: '++'
							{
							string_literal336=(Token)match(input,72,FOLLOW_72_in_unary_expression5458); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal336_tree = (CommonTree)adaptor.create(string_literal336);
							adaptor.addChild(root_0, string_literal336_tree);
							}

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:372:58: ( '--' )?
					int alt104=2;
					int LA104_0 = input.LA(1);
					if ( (LA104_0==75) ) {
						alt104=1;
					}
					switch (alt104) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:372:58: '--'
							{
							string_literal337=(Token)match(input,75,FOLLOW_75_in_unary_expression5463); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal337_tree = (CommonTree)adaptor.create(string_literal337);
							adaptor.addChild(root_0, string_literal337_tree);
							}

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:373:11: '+' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal338=(Token)match(input,71,FOLLOW_71_in_unary_expression5476); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal338_tree = (CommonTree)adaptor.create(char_literal338);
					adaptor.addChild(root_0, char_literal338_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5480);
					unary_expression339=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression339.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:374:11: '-' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal340=(Token)match(input,MINUS,FOLLOW_MINUS_in_unary_expression5493); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal340_tree = (CommonTree)adaptor.create(char_literal340);
					adaptor.addChild(root_0, char_literal340_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5497);
					unary_expression341=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression341.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:375:11: '!' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal342=(Token)match(input,61,FOLLOW_61_in_unary_expression5510); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal342_tree = (CommonTree)adaptor.create(char_literal342);
					adaptor.addChild(root_0, char_literal342_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5514);
					unary_expression343=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression343.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:376:11: '~' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal344=(Token)match(input,202,FOLLOW_202_in_unary_expression5527); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal344_tree = (CommonTree)adaptor.create(char_literal344);
					adaptor.addChild(root_0, char_literal344_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5531);
					unary_expression345=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression345.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:377:11: pre_increment_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_pre_increment_expression_in_unary_expression5544);
					pre_increment_expression346=pre_increment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_increment_expression346.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:378:11: pre_decrement_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_pre_decrement_expression_in_unary_expression5557);
					pre_decrement_expression347=pre_decrement_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_decrement_expression347.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:379:11: pointer_indirection_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_pointer_indirection_expression_in_unary_expression5570);
					pointer_indirection_expression348=pointer_indirection_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_indirection_expression348.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:380:11: addressof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_addressof_expression_in_unary_expression5582);
					addressof_expression349=addressof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, addressof_expression349.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 91, unary_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unary_expression"


	public static class cast_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "cast_expression"
	// /Users/jeremie/ANTLR/cs.g:382:1: cast_expression : '(' type ')' unary_expression ;
	public final csParser.cast_expression_return cast_expression() throws RecognitionException {
		csParser.cast_expression_return retval = new csParser.cast_expression_return();
		retval.start = input.LT(1);
		int cast_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal350=null;
		Token char_literal352=null;
		ParserRuleReturnScope type351 =null;
		ParserRuleReturnScope unary_expression353 =null;

		CommonTree char_literal350_tree=null;
		CommonTree char_literal352_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:382:16: ( '(' type ')' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:383:9: '(' type ')' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal350=(Token)match(input,68,FOLLOW_68_in_cast_expression5606); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal350_tree = (CommonTree)adaptor.create(char_literal350);
			adaptor.addChild(root_0, char_literal350_tree);
			}

			pushFollow(FOLLOW_type_in_cast_expression5610);
			type351=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type351.getTree());

			char_literal352=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_expression5614); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal352_tree = (CommonTree)adaptor.create(char_literal352);
			adaptor.addChild(root_0, char_literal352_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_cast_expression5618);
			unary_expression353=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression353.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 92, cast_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "cast_expression"


	public static class assignment_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assignment_operator"
	// /Users/jeremie/ANTLR/cs.g:384:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
	public final csParser.assignment_operator_return assignment_operator() throws RecognitionException {
		csParser.assignment_operator_return retval = new csParser.assignment_operator_return();
		retval.start = input.LT(1);
		int assignment_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal354=null;
		Token string_literal355=null;
		Token string_literal356=null;
		Token string_literal357=null;
		Token string_literal358=null;
		Token string_literal359=null;
		Token string_literal360=null;
		Token string_literal361=null;
		Token string_literal362=null;
		Token string_literal363=null;
		Token char_literal364=null;
		Token string_literal365=null;

		CommonTree char_literal354_tree=null;
		CommonTree string_literal355_tree=null;
		CommonTree string_literal356_tree=null;
		CommonTree string_literal357_tree=null;
		CommonTree string_literal358_tree=null;
		CommonTree string_literal359_tree=null;
		CommonTree string_literal360_tree=null;
		CommonTree string_literal361_tree=null;
		CommonTree string_literal362_tree=null;
		CommonTree string_literal363_tree=null;
		CommonTree char_literal364_tree=null;
		CommonTree string_literal365_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:384:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
			int alt106=11;
			switch ( input.LA(1) ) {
			case 85:
				{
				alt106=1;
				}
				break;
			case 73:
				{
				alt106=2;
				}
				break;
			case 76:
				{
				alt106=3;
				}
				break;
			case 70:
				{
				alt106=4;
				}
				break;
			case 78:
				{
				alt106=5;
				}
				break;
			case 64:
				{
				alt106=6;
				}
				break;
			case 67:
				{
				alt106=7;
				}
				break;
			case 199:
				{
				alt106=8;
				}
				break;
			case 94:
				{
				alt106=9;
				}
				break;
			case 83:
				{
				alt106=10;
				}
				break;
			case GT:
				{
				alt106=11;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 106, 0, input);
				throw nvae;
			}
			switch (alt106) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:385:9: '='
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal354=(Token)match(input,85,FOLLOW_85_in_assignment_operator5633); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal354_tree = (CommonTree)adaptor.create(char_literal354);
					adaptor.addChild(root_0, char_literal354_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:385:15: '+='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal355=(Token)match(input,73,FOLLOW_73_in_assignment_operator5637); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal355_tree = (CommonTree)adaptor.create(string_literal355);
					adaptor.addChild(root_0, string_literal355_tree);
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:385:22: '-='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal356=(Token)match(input,76,FOLLOW_76_in_assignment_operator5641); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal356_tree = (CommonTree)adaptor.create(string_literal356);
					adaptor.addChild(root_0, string_literal356_tree);
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:385:29: '*='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal357=(Token)match(input,70,FOLLOW_70_in_assignment_operator5645); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal357_tree = (CommonTree)adaptor.create(string_literal357);
					adaptor.addChild(root_0, string_literal357_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:385:36: '/='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal358=(Token)match(input,78,FOLLOW_78_in_assignment_operator5649); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal358_tree = (CommonTree)adaptor.create(string_literal358);
					adaptor.addChild(root_0, string_literal358_tree);
					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:385:43: '%='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal359=(Token)match(input,64,FOLLOW_64_in_assignment_operator5653); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal359_tree = (CommonTree)adaptor.create(string_literal359);
					adaptor.addChild(root_0, string_literal359_tree);
					}

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:385:50: '&='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal360=(Token)match(input,67,FOLLOW_67_in_assignment_operator5657); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal360_tree = (CommonTree)adaptor.create(string_literal360);
					adaptor.addChild(root_0, string_literal360_tree);
					}

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:385:57: '|='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal361=(Token)match(input,199,FOLLOW_199_in_assignment_operator5661); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal361_tree = (CommonTree)adaptor.create(string_literal361);
					adaptor.addChild(root_0, string_literal361_tree);
					}

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:385:64: '^='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal362=(Token)match(input,94,FOLLOW_94_in_assignment_operator5665); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal362_tree = (CommonTree)adaptor.create(string_literal362);
					adaptor.addChild(root_0, string_literal362_tree);
					}

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:385:71: '<<='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal363=(Token)match(input,83,FOLLOW_83_in_assignment_operator5669); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal363_tree = (CommonTree)adaptor.create(string_literal363);
					adaptor.addChild(root_0, string_literal363_tree);
					}

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:385:79: '>' '>='
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal364=(Token)match(input,GT,FOLLOW_GT_in_assignment_operator5673); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal364_tree = (CommonTree)adaptor.create(char_literal364);
					adaptor.addChild(root_0, char_literal364_tree);
					}

					string_literal365=(Token)match(input,88,FOLLOW_88_in_assignment_operator5675); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal365_tree = (CommonTree)adaptor.create(string_literal365);
					adaptor.addChild(root_0, string_literal365_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 93, assignment_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "assignment_operator"


	public static class pre_increment_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pre_increment_expression"
	// /Users/jeremie/ANTLR/cs.g:386:1: pre_increment_expression : '++' unary_expression ;
	public final csParser.pre_increment_expression_return pre_increment_expression() throws RecognitionException {
		csParser.pre_increment_expression_return retval = new csParser.pre_increment_expression_return();
		retval.start = input.LT(1);
		int pre_increment_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal366=null;
		ParserRuleReturnScope unary_expression367 =null;

		CommonTree string_literal366_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:386:25: ( '++' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:387:9: '++' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal366=(Token)match(input,72,FOLLOW_72_in_pre_increment_expression5691); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal366_tree = (CommonTree)adaptor.create(string_literal366);
			adaptor.addChild(root_0, string_literal366_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_pre_increment_expression5695);
			unary_expression367=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression367.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 94, pre_increment_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pre_increment_expression"


	public static class pre_decrement_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pre_decrement_expression"
	// /Users/jeremie/ANTLR/cs.g:388:1: pre_decrement_expression : '--' unary_expression ;
	public final csParser.pre_decrement_expression_return pre_decrement_expression() throws RecognitionException {
		csParser.pre_decrement_expression_return retval = new csParser.pre_decrement_expression_return();
		retval.start = input.LT(1);
		int pre_decrement_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal368=null;
		ParserRuleReturnScope unary_expression369 =null;

		CommonTree string_literal368_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:388:25: ( '--' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:389:9: '--' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal368=(Token)match(input,75,FOLLOW_75_in_pre_decrement_expression5711); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal368_tree = (CommonTree)adaptor.create(string_literal368);
			adaptor.addChild(root_0, string_literal368_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_pre_decrement_expression5715);
			unary_expression369=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression369.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 95, pre_decrement_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pre_decrement_expression"


	public static class pointer_indirection_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pointer_indirection_expression"
	// /Users/jeremie/ANTLR/cs.g:390:1: pointer_indirection_expression : '*' unary_expression ;
	public final csParser.pointer_indirection_expression_return pointer_indirection_expression() throws RecognitionException {
		csParser.pointer_indirection_expression_return retval = new csParser.pointer_indirection_expression_return();
		retval.start = input.LT(1);
		int pointer_indirection_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal370=null;
		ParserRuleReturnScope unary_expression371 =null;

		CommonTree char_literal370_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:390:31: ( '*' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:391:9: '*' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal370=(Token)match(input,69,FOLLOW_69_in_pointer_indirection_expression5730); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal370_tree = (CommonTree)adaptor.create(char_literal370);
			adaptor.addChild(root_0, char_literal370_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_pointer_indirection_expression5734);
			unary_expression371=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression371.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 96, pointer_indirection_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pointer_indirection_expression"


	public static class addressof_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "addressof_expression"
	// /Users/jeremie/ANTLR/cs.g:392:1: addressof_expression : '&' unary_expression ;
	public final csParser.addressof_expression_return addressof_expression() throws RecognitionException {
		csParser.addressof_expression_return retval = new csParser.addressof_expression_return();
		retval.start = input.LT(1);
		int addressof_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal372=null;
		ParserRuleReturnScope unary_expression373 =null;

		CommonTree char_literal372_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:392:21: ( '&' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:393:9: '&' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal372=(Token)match(input,66,FOLLOW_66_in_addressof_expression5749); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal372_tree = (CommonTree)adaptor.create(char_literal372);
			adaptor.addChild(root_0, char_literal372_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_addressof_expression5753);
			unary_expression373=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression373.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 97, addressof_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "addressof_expression"


	public static class non_assignment_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_assignment_expression"
	// /Users/jeremie/ANTLR/cs.g:395:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
	public final csParser.non_assignment_expression_return non_assignment_expression() throws RecognitionException {
		csParser.non_assignment_expression_return retval = new csParser.non_assignment_expression_return();
		retval.start = input.LT(1);
		int non_assignment_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope lambda_expression374 =null;
		ParserRuleReturnScope query_expression375 =null;
		ParserRuleReturnScope conditional_expression376 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:395:26: ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
			int alt107=3;
			switch ( input.LA(1) ) {
			case 68:
				{
				int LA107_1 = input.LA(2);
				if ( (synpred21_cs()) ) {
					alt107=1;
				}
				else if ( (true) ) {
					alt107=3;
				}

				}
				break;
			case 132:
				{
				int LA107_2 = input.LA(2);
				if ( (synpred21_cs()) ) {
					alt107=1;
				}
				else if ( (synpred22_cs()) ) {
					alt107=2;
				}
				else if ( (true) ) {
					alt107=3;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA107_3 = input.LA(2);
				if ( (synpred21_cs()) ) {
					alt107=1;
				}
				else if ( (true) ) {
					alt107=3;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 202:
				{
				alt107=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 107, 0, input);
				throw nvae;
			}
			switch (alt107) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:397:9: ( anonymous_function_signature '=>' )=> lambda_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_lambda_expression_in_non_assignment_expression5795);
					lambda_expression374=lambda_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression374.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:398:11: ( query_expression )=> query_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_query_expression_in_non_assignment_expression5813);
					query_expression375=query_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_expression375.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:399:11: conditional_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_conditional_expression_in_non_assignment_expression5826);
					conditional_expression376=conditional_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression376.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 98, non_assignment_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_assignment_expression"


	public static class multiplicative_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "multiplicative_expression"
	// /Users/jeremie/ANTLR/cs.g:406:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
	public final csParser.multiplicative_expression_return multiplicative_expression() throws RecognitionException {
		csParser.multiplicative_expression_return retval = new csParser.multiplicative_expression_return();
		retval.start = input.LT(1);
		int multiplicative_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set378=null;
		ParserRuleReturnScope unary_expression377 =null;
		ParserRuleReturnScope unary_expression379 =null;

		CommonTree set378_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:406:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
			// /Users/jeremie/ANTLR/cs.g:407:9: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_unary_expression_in_multiplicative_expression5854);
			unary_expression377=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression377.getTree());

			// /Users/jeremie/ANTLR/cs.g:407:26: ( ( '*' | '/' | '%' ) unary_expression )*
			loop108:
			while (true) {
				int alt108=2;
				int LA108_0 = input.LA(1);
				if ( (LA108_0==63||LA108_0==69||LA108_0==77) ) {
					alt108=1;
				}

				switch (alt108) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:407:29: ( '*' | '/' | '%' ) unary_expression
					{
					set378=input.LT(1);
					if ( input.LA(1)==63||input.LA(1)==69||input.LA(1)==77 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set378));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_unary_expression_in_multiplicative_expression5869);
					unary_expression379=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression379.getTree());

					}
					break;

				default :
					break loop108;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 99, multiplicative_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "multiplicative_expression"


	public static class additive_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "additive_expression"
	// /Users/jeremie/ANTLR/cs.g:408:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
	public final csParser.additive_expression_return additive_expression() throws RecognitionException {
		csParser.additive_expression_return retval = new csParser.additive_expression_return();
		retval.start = input.LT(1);
		int additive_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set381=null;
		ParserRuleReturnScope multiplicative_expression380 =null;
		ParserRuleReturnScope multiplicative_expression382 =null;

		CommonTree set381_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:408:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
			// /Users/jeremie/ANTLR/cs.g:409:9: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_multiplicative_expression_in_additive_expression5893);
			multiplicative_expression380=multiplicative_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression380.getTree());

			// /Users/jeremie/ANTLR/cs.g:409:35: ( ( '+' | '-' ) multiplicative_expression )*
			loop109:
			while (true) {
				int alt109=2;
				int LA109_0 = input.LA(1);
				if ( (LA109_0==MINUS||LA109_0==71) ) {
					alt109=1;
				}

				switch (alt109) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:409:36: ( '+' | '-' ) multiplicative_expression
					{
					set381=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==71 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set381));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_multiplicative_expression_in_additive_expression5904);
					multiplicative_expression382=multiplicative_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression382.getTree());

					}
					break;

				default :
					break loop109;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 100, additive_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "additive_expression"


	public static class shift_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "shift_expression"
	// /Users/jeremie/ANTLR/cs.g:411:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
	public final csParser.shift_expression_return shift_expression() throws RecognitionException {
		csParser.shift_expression_return retval = new csParser.shift_expression_return();
		retval.start = input.LT(1);
		int shift_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal384=null;
		Token char_literal385=null;
		Token char_literal386=null;
		ParserRuleReturnScope additive_expression383 =null;
		ParserRuleReturnScope additive_expression387 =null;

		CommonTree string_literal384_tree=null;
		CommonTree char_literal385_tree=null;
		CommonTree char_literal386_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:411:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
			// /Users/jeremie/ANTLR/cs.g:412:9: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_additive_expression_in_shift_expression5922);
			additive_expression383=additive_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression383.getTree());

			// /Users/jeremie/ANTLR/cs.g:412:29: ( ( '<<' | '>' '>' ) additive_expression )*
			loop111:
			while (true) {
				int alt111=2;
				int LA111_0 = input.LA(1);
				if ( (LA111_0==GT) ) {
					int LA111_1 = input.LA(2);
					if ( (LA111_1==GT) ) {
						alt111=1;
					}

				}
				else if ( (LA111_0==82) ) {
					alt111=1;
				}

				switch (alt111) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:412:30: ( '<<' | '>' '>' ) additive_expression
					{
					// /Users/jeremie/ANTLR/cs.g:412:30: ( '<<' | '>' '>' )
					int alt110=2;
					int LA110_0 = input.LA(1);
					if ( (LA110_0==82) ) {
						alt110=1;
					}
					else if ( (LA110_0==GT) ) {
						alt110=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 110, 0, input);
						throw nvae;
					}

					switch (alt110) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:412:31: '<<'
							{
							string_literal384=(Token)match(input,82,FOLLOW_82_in_shift_expression5926); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal384_tree = (CommonTree)adaptor.create(string_literal384);
							adaptor.addChild(root_0, string_literal384_tree);
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:412:36: '>' '>'
							{
							char_literal385=(Token)match(input,GT,FOLLOW_GT_in_shift_expression5928); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal385_tree = (CommonTree)adaptor.create(char_literal385);
							adaptor.addChild(root_0, char_literal385_tree);
							}

							char_literal386=(Token)match(input,GT,FOLLOW_GT_in_shift_expression5930); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal386_tree = (CommonTree)adaptor.create(char_literal386);
							adaptor.addChild(root_0, char_literal386_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_additive_expression_in_shift_expression5933);
					additive_expression387=additive_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression387.getTree());

					}
					break;

				default :
					break loop111;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 101, shift_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "shift_expression"


	public static class relational_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "relational_expression"
	// /Users/jeremie/ANTLR/cs.g:413:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
	public final csParser.relational_expression_return relational_expression() throws RecognitionException {
		csParser.relational_expression_return retval = new csParser.relational_expression_return();
		retval.start = input.LT(1);
		int relational_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set389=null;
		Token set391=null;
		ParserRuleReturnScope shift_expression388 =null;
		ParserRuleReturnScope shift_expression390 =null;
		ParserRuleReturnScope non_nullable_type392 =null;

		CommonTree set389_tree=null;
		CommonTree set391_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:413:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
			// /Users/jeremie/ANTLR/cs.g:414:9: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_shift_expression_in_relational_expression5950);
			shift_expression388=shift_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression388.getTree());

			// /Users/jeremie/ANTLR/cs.g:415:17: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			loop112:
			while (true) {
				int alt112=3;
				int LA112_0 = input.LA(1);
				if ( (LA112_0==GT||LA112_0==81||LA112_0==84||LA112_0==88) ) {
					alt112=1;
				}
				else if ( (LA112_0==99||LA112_0==142) ) {
					alt112=2;
				}

				switch (alt112) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:415:26: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					{
					// /Users/jeremie/ANTLR/cs.g:415:26: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					// /Users/jeremie/ANTLR/cs.g:415:27: ( '<' | '>' | '>=' | '<=' ) shift_expression
					{
					set389=input.LT(1);
					if ( input.LA(1)==GT||input.LA(1)==81||input.LA(1)==84||input.LA(1)==88 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set389));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_shift_expression_in_relational_expression5995);
					shift_expression390=shift_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression390.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:416:27: ( ( 'is' | 'as' ) non_nullable_type )
					{
					// /Users/jeremie/ANTLR/cs.g:416:27: ( ( 'is' | 'as' ) non_nullable_type )
					// /Users/jeremie/ANTLR/cs.g:416:28: ( 'is' | 'as' ) non_nullable_type
					{
					set391=input.LT(1);
					if ( input.LA(1)==99||input.LA(1)==142 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set391));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_non_nullable_type_in_relational_expression6033);
					non_nullable_type392=non_nullable_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_nullable_type392.getTree());

					}

					}
					break;

				default :
					break loop112;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 102, relational_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "relational_expression"


	public static class equality_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "equality_expression"
	// /Users/jeremie/ANTLR/cs.g:418:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
	public final csParser.equality_expression_return equality_expression() throws RecognitionException {
		csParser.equality_expression_return retval = new csParser.equality_expression_return();
		retval.start = input.LT(1);
		int equality_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set394=null;
		ParserRuleReturnScope relational_expression393 =null;
		ParserRuleReturnScope relational_expression395 =null;

		CommonTree set394_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:418:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
			// /Users/jeremie/ANTLR/cs.g:419:9: relational_expression ( ( '==' | '!=' ) relational_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_relational_expression_in_equality_expression6068);
			relational_expression393=relational_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression393.getTree());

			// /Users/jeremie/ANTLR/cs.g:420:12: ( ( '==' | '!=' ) relational_expression )*
			loop113:
			while (true) {
				int alt113=2;
				int LA113_0 = input.LA(1);
				if ( (LA113_0==62||LA113_0==86) ) {
					alt113=1;
				}

				switch (alt113) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:420:13: ( '==' | '!=' ) relational_expression
					{
					set394=input.LT(1);
					if ( input.LA(1)==62||input.LA(1)==86 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set394));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_relational_expression_in_equality_expression6090);
					relational_expression395=relational_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression395.getTree());

					}
					break;

				default :
					break loop113;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 103, equality_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "equality_expression"


	public static class and_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "and_expression"
	// /Users/jeremie/ANTLR/cs.g:421:1: and_expression : equality_expression ( '&' equality_expression )* ;
	public final csParser.and_expression_return and_expression() throws RecognitionException {
		csParser.and_expression_return retval = new csParser.and_expression_return();
		retval.start = input.LT(1);
		int and_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal397=null;
		ParserRuleReturnScope equality_expression396 =null;
		ParserRuleReturnScope equality_expression398 =null;

		CommonTree char_literal397_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:421:15: ( equality_expression ( '&' equality_expression )* )
			// /Users/jeremie/ANTLR/cs.g:422:9: equality_expression ( '&' equality_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_equality_expression_in_and_expression6107);
			equality_expression396=equality_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression396.getTree());

			// /Users/jeremie/ANTLR/cs.g:422:29: ( '&' equality_expression )*
			loop114:
			while (true) {
				int alt114=2;
				int LA114_0 = input.LA(1);
				if ( (LA114_0==66) ) {
					alt114=1;
				}

				switch (alt114) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:422:30: '&' equality_expression
					{
					char_literal397=(Token)match(input,66,FOLLOW_66_in_and_expression6110); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal397_tree = (CommonTree)adaptor.create(char_literal397);
					adaptor.addChild(root_0, char_literal397_tree);
					}

					pushFollow(FOLLOW_equality_expression_in_and_expression6114);
					equality_expression398=equality_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression398.getTree());

					}
					break;

				default :
					break loop114;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 104, and_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "and_expression"


	public static class exclusive_or_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exclusive_or_expression"
	// /Users/jeremie/ANTLR/cs.g:423:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
	public final csParser.exclusive_or_expression_return exclusive_or_expression() throws RecognitionException {
		csParser.exclusive_or_expression_return retval = new csParser.exclusive_or_expression_return();
		retval.start = input.LT(1);
		int exclusive_or_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal400=null;
		ParserRuleReturnScope and_expression399 =null;
		ParserRuleReturnScope and_expression401 =null;

		CommonTree char_literal400_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:423:24: ( and_expression ( '^' and_expression )* )
			// /Users/jeremie/ANTLR/cs.g:424:9: and_expression ( '^' and_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_and_expression_in_exclusive_or_expression6131);
			and_expression399=and_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression399.getTree());

			// /Users/jeremie/ANTLR/cs.g:424:24: ( '^' and_expression )*
			loop115:
			while (true) {
				int alt115=2;
				int LA115_0 = input.LA(1);
				if ( (LA115_0==93) ) {
					alt115=1;
				}

				switch (alt115) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:424:25: '^' and_expression
					{
					char_literal400=(Token)match(input,93,FOLLOW_93_in_exclusive_or_expression6134); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal400_tree = (CommonTree)adaptor.create(char_literal400);
					adaptor.addChild(root_0, char_literal400_tree);
					}

					pushFollow(FOLLOW_and_expression_in_exclusive_or_expression6138);
					and_expression401=and_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression401.getTree());

					}
					break;

				default :
					break loop115;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 105, exclusive_or_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "exclusive_or_expression"


	public static class inclusive_or_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "inclusive_or_expression"
	// /Users/jeremie/ANTLR/cs.g:425:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
	public final csParser.inclusive_or_expression_return inclusive_or_expression() throws RecognitionException {
		csParser.inclusive_or_expression_return retval = new csParser.inclusive_or_expression_return();
		retval.start = input.LT(1);
		int inclusive_or_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal403=null;
		ParserRuleReturnScope exclusive_or_expression402 =null;
		ParserRuleReturnScope exclusive_or_expression404 =null;

		CommonTree char_literal403_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:425:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
			// /Users/jeremie/ANTLR/cs.g:426:9: exclusive_or_expression ( '|' exclusive_or_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression6155);
			exclusive_or_expression402=exclusive_or_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression402.getTree());

			// /Users/jeremie/ANTLR/cs.g:426:35: ( '|' exclusive_or_expression )*
			loop116:
			while (true) {
				int alt116=2;
				int LA116_0 = input.LA(1);
				if ( (LA116_0==198) ) {
					alt116=1;
				}

				switch (alt116) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:426:36: '|' exclusive_or_expression
					{
					char_literal403=(Token)match(input,198,FOLLOW_198_in_inclusive_or_expression6160); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal403_tree = (CommonTree)adaptor.create(char_literal403);
					adaptor.addChild(root_0, char_literal403_tree);
					}

					pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression6164);
					exclusive_or_expression404=exclusive_or_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression404.getTree());

					}
					break;

				default :
					break loop116;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 106, inclusive_or_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "inclusive_or_expression"


	public static class conditional_and_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conditional_and_expression"
	// /Users/jeremie/ANTLR/cs.g:427:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
	public final csParser.conditional_and_expression_return conditional_and_expression() throws RecognitionException {
		csParser.conditional_and_expression_return retval = new csParser.conditional_and_expression_return();
		retval.start = input.LT(1);
		int conditional_and_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal406=null;
		ParserRuleReturnScope inclusive_or_expression405 =null;
		ParserRuleReturnScope inclusive_or_expression407 =null;

		CommonTree string_literal406_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:427:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
			// /Users/jeremie/ANTLR/cs.g:428:9: inclusive_or_expression ( '&&' inclusive_or_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression6181);
			inclusive_or_expression405=inclusive_or_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression405.getTree());

			// /Users/jeremie/ANTLR/cs.g:428:35: ( '&&' inclusive_or_expression )*
			loop117:
			while (true) {
				int alt117=2;
				int LA117_0 = input.LA(1);
				if ( (LA117_0==65) ) {
					alt117=1;
				}

				switch (alt117) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:428:36: '&&' inclusive_or_expression
					{
					string_literal406=(Token)match(input,65,FOLLOW_65_in_conditional_and_expression6186); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal406_tree = (CommonTree)adaptor.create(string_literal406);
					adaptor.addChild(root_0, string_literal406_tree);
					}

					pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression6190);
					inclusive_or_expression407=inclusive_or_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression407.getTree());

					}
					break;

				default :
					break loop117;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 107, conditional_and_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conditional_and_expression"


	public static class conditional_or_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conditional_or_expression"
	// /Users/jeremie/ANTLR/cs.g:429:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
	public final csParser.conditional_or_expression_return conditional_or_expression() throws RecognitionException {
		csParser.conditional_or_expression_return retval = new csParser.conditional_or_expression_return();
		retval.start = input.LT(1);
		int conditional_or_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal409=null;
		ParserRuleReturnScope conditional_and_expression408 =null;
		ParserRuleReturnScope conditional_and_expression410 =null;

		CommonTree string_literal409_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:429:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
			// /Users/jeremie/ANTLR/cs.g:430:9: conditional_and_expression ( '||' conditional_and_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression6207);
			conditional_and_expression408=conditional_and_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression408.getTree());

			// /Users/jeremie/ANTLR/cs.g:430:37: ( '||' conditional_and_expression )*
			loop118:
			while (true) {
				int alt118=2;
				int LA118_0 = input.LA(1);
				if ( (LA118_0==200) ) {
					alt118=1;
				}

				switch (alt118) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:430:38: '||' conditional_and_expression
					{
					string_literal409=(Token)match(input,200,FOLLOW_200_in_conditional_or_expression6211); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal409_tree = (CommonTree)adaptor.create(string_literal409);
					adaptor.addChild(root_0, string_literal409_tree);
					}

					pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression6215);
					conditional_and_expression410=conditional_and_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression410.getTree());

					}
					break;

				default :
					break loop118;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 108, conditional_or_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conditional_or_expression"


	public static class null_coalescing_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "null_coalescing_expression"
	// /Users/jeremie/ANTLR/cs.g:432:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
	public final csParser.null_coalescing_expression_return null_coalescing_expression() throws RecognitionException {
		csParser.null_coalescing_expression_return retval = new csParser.null_coalescing_expression_return();
		retval.start = input.LT(1);
		int null_coalescing_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal412=null;
		ParserRuleReturnScope conditional_or_expression411 =null;
		ParserRuleReturnScope conditional_or_expression413 =null;

		CommonTree string_literal412_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:432:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
			// /Users/jeremie/ANTLR/cs.g:433:9: conditional_or_expression ( '??' conditional_or_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression6233);
			conditional_or_expression411=conditional_or_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression411.getTree());

			// /Users/jeremie/ANTLR/cs.g:433:37: ( '??' conditional_or_expression )*
			loop119:
			while (true) {
				int alt119=2;
				int LA119_0 = input.LA(1);
				if ( (LA119_0==90) ) {
					alt119=1;
				}

				switch (alt119) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:433:38: '??' conditional_or_expression
					{
					string_literal412=(Token)match(input,90,FOLLOW_90_in_null_coalescing_expression6238); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal412_tree = (CommonTree)adaptor.create(string_literal412);
					adaptor.addChild(root_0, string_literal412_tree);
					}

					pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression6242);
					conditional_or_expression413=conditional_or_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression413.getTree());

					}
					break;

				default :
					break loop119;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 109, null_coalescing_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "null_coalescing_expression"


	public static class conditional_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conditional_expression"
	// /Users/jeremie/ANTLR/cs.g:434:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
	public final csParser.conditional_expression_return conditional_expression() throws RecognitionException {
		csParser.conditional_expression_return retval = new csParser.conditional_expression_return();
		retval.start = input.LT(1);
		int conditional_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal415=null;
		Token char_literal417=null;
		ParserRuleReturnScope null_coalescing_expression414 =null;
		ParserRuleReturnScope expression416 =null;
		ParserRuleReturnScope expression418 =null;

		CommonTree char_literal415_tree=null;
		CommonTree char_literal417_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:434:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
			// /Users/jeremie/ANTLR/cs.g:435:9: null_coalescing_expression ( '?' expression ':' expression )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_null_coalescing_expression_in_conditional_expression6259);
			null_coalescing_expression414=null_coalescing_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, null_coalescing_expression414.getTree());

			// /Users/jeremie/ANTLR/cs.g:435:38: ( '?' expression ':' expression )?
			int alt120=2;
			int LA120_0 = input.LA(1);
			if ( (LA120_0==89) ) {
				alt120=1;
			}
			switch (alt120) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:435:39: '?' expression ':' expression
					{
					char_literal415=(Token)match(input,89,FOLLOW_89_in_conditional_expression6264); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal415_tree = (CommonTree)adaptor.create(char_literal415);
					adaptor.addChild(root_0, char_literal415_tree);
					}

					pushFollow(FOLLOW_expression_in_conditional_expression6268);
					expression416=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression416.getTree());

					char_literal417=(Token)match(input,79,FOLLOW_79_in_conditional_expression6272); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal417_tree = (CommonTree)adaptor.create(char_literal417);
					adaptor.addChild(root_0, char_literal417_tree);
					}

					pushFollow(FOLLOW_expression_in_conditional_expression6276);
					expression418=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression418.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 110, conditional_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conditional_expression"


	public static class lambda_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "lambda_expression"
	// /Users/jeremie/ANTLR/cs.g:440:1: lambda_expression : anonymous_function_signature '=>' anonymous_function_body ;
	public final csParser.lambda_expression_return lambda_expression() throws RecognitionException {
		csParser.lambda_expression_return retval = new csParser.lambda_expression_return();
		retval.start = input.LT(1);
		int lambda_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal420=null;
		ParserRuleReturnScope anonymous_function_signature419 =null;
		ParserRuleReturnScope anonymous_function_body421 =null;

		CommonTree string_literal420_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:440:18: ( anonymous_function_signature '=>' anonymous_function_body )
			// /Users/jeremie/ANTLR/cs.g:441:9: anonymous_function_signature '=>' anonymous_function_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression6303);
			anonymous_function_signature419=anonymous_function_signature();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_signature419.getTree());

			string_literal420=(Token)match(input,87,FOLLOW_87_in_lambda_expression6307); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal420_tree = (CommonTree)adaptor.create(string_literal420);
			adaptor.addChild(root_0, string_literal420_tree);
			}

			pushFollow(FOLLOW_anonymous_function_body_in_lambda_expression6311);
			anonymous_function_body421=anonymous_function_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_body421.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 111, lambda_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "lambda_expression"


	public static class anonymous_function_signature_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_function_signature"
	// /Users/jeremie/ANTLR/cs.g:442:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
	public final csParser.anonymous_function_signature_return anonymous_function_signature() throws RecognitionException {
		csParser.anonymous_function_signature_return retval = new csParser.anonymous_function_signature_return();
		retval.start = input.LT(1);
		int anonymous_function_signature_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal422=null;
		Token char_literal425=null;
		ParserRuleReturnScope explicit_anonymous_function_parameter_list423 =null;
		ParserRuleReturnScope implicit_anonymous_function_parameter_list424 =null;
		ParserRuleReturnScope implicit_anonymous_function_parameter_list426 =null;

		CommonTree char_literal422_tree=null;
		CommonTree char_literal425_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:442:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
			int alt122=2;
			int LA122_0 = input.LA(1);
			if ( (LA122_0==68) ) {
				alt122=1;
			}
			else if ( (LA122_0==IDENTIFIER||LA122_0==95||(LA122_0 >= 97 && LA122_0 <= 98)||(LA122_0 >= 100 && LA122_0 <= 101)||LA122_0==105||LA122_0==117||LA122_0==120||LA122_0==122||LA122_0==126||LA122_0==132||LA122_0==135||LA122_0==141||(LA122_0 >= 143 && LA122_0 <= 144)||(LA122_0 >= 147 && LA122_0 <= 148)||LA122_0==152||LA122_0==154||LA122_0==157||LA122_0==160||LA122_0==162||LA122_0==167||(LA122_0 >= 171 && LA122_0 <= 172)||LA122_0==183||LA122_0==190||LA122_0==194||LA122_0==196) ) {
				alt122=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 122, 0, input);
				throw nvae;
			}

			switch (alt122) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:443:9: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal422=(Token)match(input,68,FOLLOW_68_in_anonymous_function_signature6325); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal422_tree = (CommonTree)adaptor.create(char_literal422);
					adaptor.addChild(root_0, char_literal422_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:443:20: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
					int alt121=3;
					int LA121_0 = input.LA(1);
					if ( (LA121_0==103||LA121_0==106||LA121_0==109||LA121_0==114||LA121_0==119||LA121_0==129||LA121_0==138||LA121_0==146||LA121_0==151||LA121_0==155||LA121_0==166||LA121_0==169||LA121_0==173||LA121_0==177||(LA121_0 >= 185 && LA121_0 <= 186)||LA121_0==189||LA121_0==192) ) {
						alt121=1;
					}
					else if ( (LA121_0==IDENTIFIER||LA121_0==95||(LA121_0 >= 97 && LA121_0 <= 98)||(LA121_0 >= 100 && LA121_0 <= 101)||LA121_0==105||LA121_0==117||LA121_0==120||LA121_0==122||LA121_0==126||LA121_0==132||LA121_0==135||LA121_0==141||(LA121_0 >= 143 && LA121_0 <= 144)||(LA121_0 >= 147 && LA121_0 <= 148)||LA121_0==152||LA121_0==154||LA121_0==157||LA121_0==160||LA121_0==162||LA121_0==167||(LA121_0 >= 171 && LA121_0 <= 172)||LA121_0==183||LA121_0==190||LA121_0==194||LA121_0==196) ) {
						int LA121_2 = input.LA(2);
						if ( (LA121_2==DOT||LA121_2==IDENTIFIER||LA121_2==69||(LA121_2 >= 80 && LA121_2 <= 81)||LA121_2==89||LA121_2==91||LA121_2==95||(LA121_2 >= 97 && LA121_2 <= 98)||(LA121_2 >= 100 && LA121_2 <= 101)||LA121_2==105||LA121_2==117||LA121_2==120||LA121_2==122||LA121_2==126||LA121_2==132||LA121_2==135||LA121_2==141||(LA121_2 >= 143 && LA121_2 <= 144)||(LA121_2 >= 147 && LA121_2 <= 148)||LA121_2==152||LA121_2==154||LA121_2==157||LA121_2==160||LA121_2==162||LA121_2==167||(LA121_2 >= 171 && LA121_2 <= 172)||LA121_2==183||LA121_2==190||LA121_2==194||LA121_2==196) ) {
							alt121=1;
						}
						else if ( (LA121_2==RPAREN||LA121_2==74) ) {
							alt121=2;
						}
					}
					switch (alt121) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:443:21: explicit_anonymous_function_parameter_list
							{
							pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature6335);
							explicit_anonymous_function_parameter_list423=explicit_anonymous_function_parameter_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list423.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:444:19: implicit_anonymous_function_parameter_list
							{
							pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6355);
							implicit_anonymous_function_parameter_list424=implicit_anonymous_function_parameter_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list424.getTree());

							}
							break;

					}

					char_literal425=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_anonymous_function_signature6366); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal425_tree = (CommonTree)adaptor.create(char_literal425);
					adaptor.addChild(root_0, char_literal425_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:445:11: implicit_anonymous_function_parameter_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6378);
					implicit_anonymous_function_parameter_list426=implicit_anonymous_function_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list426.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 112, anonymous_function_signature_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_function_signature"


	public static class implicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implicit_anonymous_function_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:447:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
	public final csParser.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list() throws RecognitionException {
		csParser.implicit_anonymous_function_parameter_list_return retval = new csParser.implicit_anonymous_function_parameter_list_return();
		retval.start = input.LT(1);
		int implicit_anonymous_function_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal428=null;
		ParserRuleReturnScope implicit_anonymous_function_parameter427 =null;
		ParserRuleReturnScope implicit_anonymous_function_parameter429 =null;

		CommonTree char_literal428_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:447:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:448:9: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6401);
			implicit_anonymous_function_parameter427=implicit_anonymous_function_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter427.getTree());

			// /Users/jeremie/ANTLR/cs.g:448:49: ( ',' implicit_anonymous_function_parameter )*
			loop123:
			while (true) {
				int alt123=2;
				int LA123_0 = input.LA(1);
				if ( (LA123_0==74) ) {
					alt123=1;
				}

				switch (alt123) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:448:50: ',' implicit_anonymous_function_parameter
					{
					char_literal428=(Token)match(input,74,FOLLOW_74_in_implicit_anonymous_function_parameter_list6406); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal428_tree = (CommonTree)adaptor.create(char_literal428);
					adaptor.addChild(root_0, char_literal428_tree);
					}

					pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6410);
					implicit_anonymous_function_parameter429=implicit_anonymous_function_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter429.getTree());

					}
					break;

				default :
					break loop123;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 113, implicit_anonymous_function_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "implicit_anonymous_function_parameter_list"


	public static class implicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implicit_anonymous_function_parameter"
	// /Users/jeremie/ANTLR/cs.g:449:1: implicit_anonymous_function_parameter : identifier ;
	public final csParser.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter() throws RecognitionException {
		csParser.implicit_anonymous_function_parameter_return retval = new csParser.implicit_anonymous_function_parameter_return();
		retval.start = input.LT(1);
		int implicit_anonymous_function_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope identifier430 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:449:38: ( identifier )
			// /Users/jeremie/ANTLR/cs.g:450:9: identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_implicit_anonymous_function_parameter6427);
			identifier430=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier430.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 114, implicit_anonymous_function_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "implicit_anonymous_function_parameter"


	public static class anonymous_function_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_function_body"
	// /Users/jeremie/ANTLR/cs.g:451:1: anonymous_function_body : ( expression | block );
	public final csParser.anonymous_function_body_return anonymous_function_body() throws RecognitionException {
		csParser.anonymous_function_body_return retval = new csParser.anonymous_function_body_return();
		retval.start = input.LT(1);
		int anonymous_function_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression431 =null;
		ParserRuleReturnScope block432 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:451:24: ( expression | block )
			int alt124=2;
			int LA124_0 = input.LA(1);
			if ( (LA124_0==Character_literal||LA124_0==FALSE||(LA124_0 >= Hex_number && LA124_0 <= IDENTIFIER)||(LA124_0 >= MINUS && LA124_0 <= NUMBER)||LA124_0==Real_literal||LA124_0==STRINGLITERAL||LA124_0==TRUE||LA124_0==Verbatim_string_literal||LA124_0==61||LA124_0==66||(LA124_0 >= 68 && LA124_0 <= 69)||(LA124_0 >= 71 && LA124_0 <= 72)||LA124_0==75||LA124_0==95||(LA124_0 >= 97 && LA124_0 <= 98)||(LA124_0 >= 100 && LA124_0 <= 103)||(LA124_0 >= 105 && LA124_0 <= 106)||(LA124_0 >= 109 && LA124_0 <= 110)||(LA124_0 >= 114 && LA124_0 <= 117)||(LA124_0 >= 119 && LA124_0 <= 120)||LA124_0==122||LA124_0==126||LA124_0==129||LA124_0==132||LA124_0==135||LA124_0==138||LA124_0==141||(LA124_0 >= 143 && LA124_0 <= 144)||(LA124_0 >= 146 && LA124_0 <= 148)||(LA124_0 >= 150 && LA124_0 <= 152)||LA124_0==154||LA124_0==157||LA124_0==160||LA124_0==162||LA124_0==167||LA124_0==169||(LA124_0 >= 171 && LA124_0 <= 174)||LA124_0==177||LA124_0==180||(LA124_0 >= 183 && LA124_0 <= 187)||(LA124_0 >= 189 && LA124_0 <= 190)||LA124_0==194||LA124_0==196||LA124_0==202) ) {
				alt124=1;
			}
			else if ( (LA124_0==SEMI||LA124_0==197) ) {
				alt124=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 124, 0, input);
				throw nvae;
			}

			switch (alt124) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:452:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_anonymous_function_body6441);
					expression431=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression431.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:453:11: block
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_block_in_anonymous_function_body6453);
					block432=block();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, block432.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 115, anonymous_function_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_function_body"


	public static class query_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_expression"
	// /Users/jeremie/ANTLR/cs.g:458:1: query_expression : from_clause query_body ;
	public final csParser.query_expression_return query_expression() throws RecognitionException {
		csParser.query_expression_return retval = new csParser.query_expression_return();
		retval.start = input.LT(1);
		int query_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope from_clause433 =null;
		ParserRuleReturnScope query_body434 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:458:17: ( from_clause query_body )
			// /Users/jeremie/ANTLR/cs.g:459:9: from_clause query_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_from_clause_in_query_expression6472);
			from_clause433=from_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause433.getTree());

			pushFollow(FOLLOW_query_body_in_query_expression6476);
			query_body434=query_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body434.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 116, query_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_expression"


	public static class query_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_body"
	// /Users/jeremie/ANTLR/cs.g:460:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
	public final csParser.query_body_return query_body() throws RecognitionException {
		csParser.query_body_return retval = new csParser.query_body_return();
		retval.start = input.LT(1);
		int query_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope query_body_clauses435 =null;
		ParserRuleReturnScope select_or_group_clause436 =null;
		ParserRuleReturnScope query_continuation437 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:460:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
			// /Users/jeremie/ANTLR/cs.g:462:9: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:462:9: ( query_body_clauses )?
			int alt125=2;
			int LA125_0 = input.LA(1);
			if ( (LA125_0==132||(LA125_0 >= 143 && LA125_0 <= 144)||LA125_0==154||LA125_0==194) ) {
				alt125=1;
			}
			switch (alt125) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:462:9: query_body_clauses
					{
					pushFollow(FOLLOW_query_body_clauses_in_query_body6500);
					query_body_clauses435=query_body_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clauses435.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_select_or_group_clause_in_query_body6505);
			select_or_group_clause436=select_or_group_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_or_group_clause436.getTree());

			// /Users/jeremie/ANTLR/cs.g:462:56: ( ( 'into' )=> query_continuation )?
			int alt126=2;
			int LA126_0 = input.LA(1);
			if ( (LA126_0==141) ) {
				int LA126_1 = input.LA(2);
				if ( (synpred23_cs()) ) {
					alt126=1;
				}
			}
			switch (alt126) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:462:57: ( 'into' )=> query_continuation
					{
					pushFollow(FOLLOW_query_continuation_in_query_body6516);
					query_continuation437=query_continuation();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_continuation437.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 117, query_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_body"


	public static class query_continuation_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_continuation"
	// /Users/jeremie/ANTLR/cs.g:463:1: query_continuation : 'into' identifier query_body ;
	public final csParser.query_continuation_return query_continuation() throws RecognitionException {
		csParser.query_continuation_return retval = new csParser.query_continuation_return();
		retval.start = input.LT(1);
		int query_continuation_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal438=null;
		ParserRuleReturnScope identifier439 =null;
		ParserRuleReturnScope query_body440 =null;

		CommonTree string_literal438_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:463:19: ( 'into' identifier query_body )
			// /Users/jeremie/ANTLR/cs.g:464:9: 'into' identifier query_body
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal438=(Token)match(input,141,FOLLOW_141_in_query_continuation6533); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal438_tree = (CommonTree)adaptor.create(string_literal438);
			adaptor.addChild(root_0, string_literal438_tree);
			}

			pushFollow(FOLLOW_identifier_in_query_continuation6537);
			identifier439=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier439.getTree());

			pushFollow(FOLLOW_query_body_in_query_continuation6541);
			query_body440=query_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body440.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 118, query_continuation_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_continuation"


	public static class query_body_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_body_clauses"
	// /Users/jeremie/ANTLR/cs.g:465:1: query_body_clauses : ( query_body_clause )+ ;
	public final csParser.query_body_clauses_return query_body_clauses() throws RecognitionException {
		csParser.query_body_clauses_return retval = new csParser.query_body_clauses_return();
		retval.start = input.LT(1);
		int query_body_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope query_body_clause441 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:465:19: ( ( query_body_clause )+ )
			// /Users/jeremie/ANTLR/cs.g:466:9: ( query_body_clause )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:466:9: ( query_body_clause )+
			int cnt127=0;
			loop127:
			while (true) {
				int alt127=2;
				int LA127_0 = input.LA(1);
				if ( (LA127_0==132||(LA127_0 >= 143 && LA127_0 <= 144)||LA127_0==154||LA127_0==194) ) {
					alt127=1;
				}

				switch (alt127) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:466:9: query_body_clause
					{
					pushFollow(FOLLOW_query_body_clause_in_query_body_clauses6555);
					query_body_clause441=query_body_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clause441.getTree());

					}
					break;

				default :
					if ( cnt127 >= 1 ) break loop127;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(127, input);
					throw eee;
				}
				cnt127++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 119, query_body_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_body_clauses"


	public static class query_body_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_body_clause"
	// /Users/jeremie/ANTLR/cs.g:467:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
	public final csParser.query_body_clause_return query_body_clause() throws RecognitionException {
		csParser.query_body_clause_return retval = new csParser.query_body_clause_return();
		retval.start = input.LT(1);
		int query_body_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope from_clause442 =null;
		ParserRuleReturnScope let_clause443 =null;
		ParserRuleReturnScope where_clause444 =null;
		ParserRuleReturnScope join_clause445 =null;
		ParserRuleReturnScope orderby_clause446 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:467:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
			int alt128=5;
			switch ( input.LA(1) ) {
			case 132:
				{
				alt128=1;
				}
				break;
			case 144:
				{
				alt128=2;
				}
				break;
			case 194:
				{
				alt128=3;
				}
				break;
			case 143:
				{
				alt128=4;
				}
				break;
			case 154:
				{
				alt128=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 128, 0, input);
				throw nvae;
			}
			switch (alt128) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:468:9: from_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_from_clause_in_query_body_clause6571);
					from_clause442=from_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause442.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:469:11: let_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_let_clause_in_query_body_clause6583);
					let_clause443=let_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, let_clause443.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:470:11: where_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_where_clause_in_query_body_clause6595);
					where_clause444=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause444.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:471:11: join_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_join_clause_in_query_body_clause6607);
					join_clause445=join_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, join_clause445.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:472:11: orderby_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_orderby_clause_in_query_body_clause6619);
					orderby_clause446=orderby_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause446.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 120, query_body_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_body_clause"


	public static class from_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "from_clause"
	// /Users/jeremie/ANTLR/cs.g:473:1: from_clause : 'from' ( type )? identifier 'in' expression ;
	public final csParser.from_clause_return from_clause() throws RecognitionException {
		csParser.from_clause_return retval = new csParser.from_clause_return();
		retval.start = input.LT(1);
		int from_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal447=null;
		Token string_literal450=null;
		ParserRuleReturnScope type448 =null;
		ParserRuleReturnScope identifier449 =null;
		ParserRuleReturnScope expression451 =null;

		CommonTree string_literal447_tree=null;
		CommonTree string_literal450_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:473:12: ( 'from' ( type )? identifier 'in' expression )
			// /Users/jeremie/ANTLR/cs.g:474:9: 'from' ( type )? identifier 'in' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal447=(Token)match(input,132,FOLLOW_132_in_from_clause6633); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal447_tree = (CommonTree)adaptor.create(string_literal447);
			adaptor.addChild(root_0, string_literal447_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:474:18: ( type )?
			int alt129=2;
			int LA129_0 = input.LA(1);
			if ( (LA129_0==103||LA129_0==106||LA129_0==109||LA129_0==114||LA129_0==119||LA129_0==129||LA129_0==138||LA129_0==146||LA129_0==151||LA129_0==169||LA129_0==173||LA129_0==177||(LA129_0 >= 185 && LA129_0 <= 186)||LA129_0==189||LA129_0==192) ) {
				alt129=1;
			}
			else if ( (LA129_0==IDENTIFIER||LA129_0==95||(LA129_0 >= 97 && LA129_0 <= 98)||(LA129_0 >= 100 && LA129_0 <= 101)||LA129_0==105||LA129_0==117||LA129_0==120||LA129_0==122||LA129_0==126||LA129_0==132||LA129_0==135||LA129_0==141||(LA129_0 >= 143 && LA129_0 <= 144)||(LA129_0 >= 147 && LA129_0 <= 148)||LA129_0==152||LA129_0==154||LA129_0==157||LA129_0==160||LA129_0==162||LA129_0==167||(LA129_0 >= 171 && LA129_0 <= 172)||LA129_0==183||LA129_0==190||LA129_0==194||LA129_0==196) ) {
				int LA129_2 = input.LA(2);
				if ( (LA129_2==DOT||LA129_2==IDENTIFIER||LA129_2==69||(LA129_2 >= 80 && LA129_2 <= 81)||LA129_2==89||LA129_2==91||LA129_2==95||(LA129_2 >= 97 && LA129_2 <= 98)||(LA129_2 >= 100 && LA129_2 <= 101)||LA129_2==105||LA129_2==117||LA129_2==120||LA129_2==122||LA129_2==126||LA129_2==132||LA129_2==135||LA129_2==141||(LA129_2 >= 143 && LA129_2 <= 144)||(LA129_2 >= 147 && LA129_2 <= 148)||LA129_2==152||LA129_2==154||LA129_2==157||LA129_2==160||LA129_2==162||LA129_2==167||(LA129_2 >= 171 && LA129_2 <= 172)||LA129_2==183||LA129_2==190||LA129_2==194||LA129_2==196) ) {
					alt129=1;
				}
			}
			switch (alt129) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:474:18: type
					{
					pushFollow(FOLLOW_type_in_from_clause6637);
					type448=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type448.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_identifier_in_from_clause6642);
			identifier449=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier449.getTree());

			string_literal450=(Token)match(input,137,FOLLOW_137_in_from_clause6646); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal450_tree = (CommonTree)adaptor.create(string_literal450);
			adaptor.addChild(root_0, string_literal450_tree);
			}

			pushFollow(FOLLOW_expression_in_from_clause6650);
			expression451=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression451.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 121, from_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "from_clause"


	public static class join_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "join_clause"
	// /Users/jeremie/ANTLR/cs.g:475:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
	public final csParser.join_clause_return join_clause() throws RecognitionException {
		csParser.join_clause_return retval = new csParser.join_clause_return();
		retval.start = input.LT(1);
		int join_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal452=null;
		Token string_literal455=null;
		Token string_literal457=null;
		Token string_literal459=null;
		Token string_literal461=null;
		ParserRuleReturnScope type453 =null;
		ParserRuleReturnScope identifier454 =null;
		ParserRuleReturnScope expression456 =null;
		ParserRuleReturnScope expression458 =null;
		ParserRuleReturnScope expression460 =null;
		ParserRuleReturnScope identifier462 =null;

		CommonTree string_literal452_tree=null;
		CommonTree string_literal455_tree=null;
		CommonTree string_literal457_tree=null;
		CommonTree string_literal459_tree=null;
		CommonTree string_literal461_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:475:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
			// /Users/jeremie/ANTLR/cs.g:476:9: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal452=(Token)match(input,143,FOLLOW_143_in_join_clause6665); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal452_tree = (CommonTree)adaptor.create(string_literal452);
			adaptor.addChild(root_0, string_literal452_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:476:18: ( type )?
			int alt130=2;
			int LA130_0 = input.LA(1);
			if ( (LA130_0==103||LA130_0==106||LA130_0==109||LA130_0==114||LA130_0==119||LA130_0==129||LA130_0==138||LA130_0==146||LA130_0==151||LA130_0==169||LA130_0==173||LA130_0==177||(LA130_0 >= 185 && LA130_0 <= 186)||LA130_0==189||LA130_0==192) ) {
				alt130=1;
			}
			else if ( (LA130_0==IDENTIFIER||LA130_0==95||(LA130_0 >= 97 && LA130_0 <= 98)||(LA130_0 >= 100 && LA130_0 <= 101)||LA130_0==105||LA130_0==117||LA130_0==120||LA130_0==122||LA130_0==126||LA130_0==132||LA130_0==135||LA130_0==141||(LA130_0 >= 143 && LA130_0 <= 144)||(LA130_0 >= 147 && LA130_0 <= 148)||LA130_0==152||LA130_0==154||LA130_0==157||LA130_0==160||LA130_0==162||LA130_0==167||(LA130_0 >= 171 && LA130_0 <= 172)||LA130_0==183||LA130_0==190||LA130_0==194||LA130_0==196) ) {
				int LA130_2 = input.LA(2);
				if ( (LA130_2==DOT||LA130_2==IDENTIFIER||LA130_2==69||(LA130_2 >= 80 && LA130_2 <= 81)||LA130_2==89||LA130_2==91||LA130_2==95||(LA130_2 >= 97 && LA130_2 <= 98)||(LA130_2 >= 100 && LA130_2 <= 101)||LA130_2==105||LA130_2==117||LA130_2==120||LA130_2==122||LA130_2==126||LA130_2==132||LA130_2==135||LA130_2==141||(LA130_2 >= 143 && LA130_2 <= 144)||(LA130_2 >= 147 && LA130_2 <= 148)||LA130_2==152||LA130_2==154||LA130_2==157||LA130_2==160||LA130_2==162||LA130_2==167||(LA130_2 >= 171 && LA130_2 <= 172)||LA130_2==183||LA130_2==190||LA130_2==194||LA130_2==196) ) {
					alt130=1;
				}
			}
			switch (alt130) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:476:18: type
					{
					pushFollow(FOLLOW_type_in_join_clause6669);
					type453=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type453.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_identifier_in_join_clause6674);
			identifier454=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier454.getTree());

			string_literal455=(Token)match(input,137,FOLLOW_137_in_join_clause6678); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal455_tree = (CommonTree)adaptor.create(string_literal455);
			adaptor.addChild(root_0, string_literal455_tree);
			}

			pushFollow(FOLLOW_expression_in_join_clause6682);
			expression456=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression456.getTree());

			string_literal457=(Token)match(input,152,FOLLOW_152_in_join_clause6686); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal457_tree = (CommonTree)adaptor.create(string_literal457);
			adaptor.addChild(root_0, string_literal457_tree);
			}

			pushFollow(FOLLOW_expression_in_join_clause6690);
			expression458=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression458.getTree());

			string_literal459=(Token)match(input,122,FOLLOW_122_in_join_clause6694); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal459_tree = (CommonTree)adaptor.create(string_literal459);
			adaptor.addChild(root_0, string_literal459_tree);
			}

			pushFollow(FOLLOW_expression_in_join_clause6698);
			expression460=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression460.getTree());

			// /Users/jeremie/ANTLR/cs.g:476:101: ( 'into' identifier )?
			int alt131=2;
			int LA131_0 = input.LA(1);
			if ( (LA131_0==141) ) {
				alt131=1;
			}
			switch (alt131) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:476:102: 'into' identifier
					{
					string_literal461=(Token)match(input,141,FOLLOW_141_in_join_clause6701); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal461_tree = (CommonTree)adaptor.create(string_literal461);
					adaptor.addChild(root_0, string_literal461_tree);
					}

					pushFollow(FOLLOW_identifier_in_join_clause6703);
					identifier462=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier462.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 122, join_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "join_clause"


	public static class let_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "let_clause"
	// /Users/jeremie/ANTLR/cs.g:477:1: let_clause : 'let' identifier '=' expression ;
	public final csParser.let_clause_return let_clause() throws RecognitionException {
		csParser.let_clause_return retval = new csParser.let_clause_return();
		retval.start = input.LT(1);
		int let_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal463=null;
		Token char_literal465=null;
		ParserRuleReturnScope identifier464 =null;
		ParserRuleReturnScope expression466 =null;

		CommonTree string_literal463_tree=null;
		CommonTree char_literal465_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:477:11: ( 'let' identifier '=' expression )
			// /Users/jeremie/ANTLR/cs.g:478:9: 'let' identifier '=' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal463=(Token)match(input,144,FOLLOW_144_in_let_clause6720); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal463_tree = (CommonTree)adaptor.create(string_literal463);
			adaptor.addChild(root_0, string_literal463_tree);
			}

			pushFollow(FOLLOW_identifier_in_let_clause6724);
			identifier464=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier464.getTree());

			char_literal465=(Token)match(input,85,FOLLOW_85_in_let_clause6728); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal465_tree = (CommonTree)adaptor.create(char_literal465);
			adaptor.addChild(root_0, char_literal465_tree);
			}

			pushFollow(FOLLOW_expression_in_let_clause6732);
			expression466=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression466.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 123, let_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "let_clause"


	public static class orderby_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "orderby_clause"
	// /Users/jeremie/ANTLR/cs.g:479:1: orderby_clause : 'orderby' ordering_list ;
	public final csParser.orderby_clause_return orderby_clause() throws RecognitionException {
		csParser.orderby_clause_return retval = new csParser.orderby_clause_return();
		retval.start = input.LT(1);
		int orderby_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal467=null;
		ParserRuleReturnScope ordering_list468 =null;

		CommonTree string_literal467_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:479:15: ( 'orderby' ordering_list )
			// /Users/jeremie/ANTLR/cs.g:480:9: 'orderby' ordering_list
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal467=(Token)match(input,154,FOLLOW_154_in_orderby_clause6746); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal467_tree = (CommonTree)adaptor.create(string_literal467);
			adaptor.addChild(root_0, string_literal467_tree);
			}

			pushFollow(FOLLOW_ordering_list_in_orderby_clause6750);
			ordering_list468=ordering_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_list468.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 124, orderby_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "orderby_clause"


	public static class ordering_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ordering_list"
	// /Users/jeremie/ANTLR/cs.g:481:1: ordering_list : ordering ( ',' ordering )* ;
	public final csParser.ordering_list_return ordering_list() throws RecognitionException {
		csParser.ordering_list_return retval = new csParser.ordering_list_return();
		retval.start = input.LT(1);
		int ordering_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal470=null;
		ParserRuleReturnScope ordering469 =null;
		ParserRuleReturnScope ordering471 =null;

		CommonTree char_literal470_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:481:14: ( ordering ( ',' ordering )* )
			// /Users/jeremie/ANTLR/cs.g:482:9: ordering ( ',' ordering )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_ordering_in_ordering_list6765);
			ordering469=ordering();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering469.getTree());

			// /Users/jeremie/ANTLR/cs.g:482:20: ( ',' ordering )*
			loop132:
			while (true) {
				int alt132=2;
				int LA132_0 = input.LA(1);
				if ( (LA132_0==74) ) {
					alt132=1;
				}

				switch (alt132) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:482:21: ',' ordering
					{
					char_literal470=(Token)match(input,74,FOLLOW_74_in_ordering_list6770); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal470_tree = (CommonTree)adaptor.create(char_literal470);
					adaptor.addChild(root_0, char_literal470_tree);
					}

					pushFollow(FOLLOW_ordering_in_ordering_list6774);
					ordering471=ordering();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering471.getTree());

					}
					break;

				default :
					break loop132;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 125, ordering_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ordering_list"


	public static class ordering_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ordering"
	// /Users/jeremie/ANTLR/cs.g:483:1: ordering : expression ordering_direction ;
	public final csParser.ordering_return ordering() throws RecognitionException {
		csParser.ordering_return retval = new csParser.ordering_return();
		retval.start = input.LT(1);
		int ordering_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression472 =null;
		ParserRuleReturnScope ordering_direction473 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:483:9: ( expression ordering_direction )
			// /Users/jeremie/ANTLR/cs.g:484:9: expression ordering_direction
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_ordering6791);
			expression472=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression472.getTree());

			pushFollow(FOLLOW_ordering_direction_in_ordering6796);
			ordering_direction473=ordering_direction();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_direction473.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 126, ordering_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ordering"


	public static class ordering_direction_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ordering_direction"
	// /Users/jeremie/ANTLR/cs.g:486:1: ordering_direction : ( 'ascending' | 'descending' );
	public final csParser.ordering_direction_return ordering_direction() throws RecognitionException {
		csParser.ordering_direction_return retval = new csParser.ordering_direction_return();
		retval.start = input.LT(1);
		int ordering_direction_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set474=null;

		CommonTree set474_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:486:19: ( 'ascending' | 'descending' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set474=input.LT(1);
			if ( input.LA(1)==100||input.LA(1)==117 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set474));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 127, ordering_direction_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ordering_direction"


	public static class select_or_group_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "select_or_group_clause"
	// /Users/jeremie/ANTLR/cs.g:489:1: select_or_group_clause : ( select_clause | group_clause );
	public final csParser.select_or_group_clause_return select_or_group_clause() throws RecognitionException {
		csParser.select_or_group_clause_return retval = new csParser.select_or_group_clause_return();
		retval.start = input.LT(1);
		int select_or_group_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope select_clause475 =null;
		ParserRuleReturnScope group_clause476 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:489:23: ( select_clause | group_clause )
			int alt133=2;
			int LA133_0 = input.LA(1);
			if ( (LA133_0==171) ) {
				alt133=1;
			}
			else if ( (LA133_0==135) ) {
				alt133=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 133, 0, input);
				throw nvae;
			}

			switch (alt133) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:490:9: select_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_select_clause_in_select_or_group_clause6846);
					select_clause475=select_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, select_clause475.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:491:11: group_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_group_clause_in_select_or_group_clause6858);
					group_clause476=group_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, group_clause476.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 128, select_or_group_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "select_or_group_clause"


	public static class select_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "select_clause"
	// /Users/jeremie/ANTLR/cs.g:492:1: select_clause : 'select' expression ;
	public final csParser.select_clause_return select_clause() throws RecognitionException {
		csParser.select_clause_return retval = new csParser.select_clause_return();
		retval.start = input.LT(1);
		int select_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal477=null;
		ParserRuleReturnScope expression478 =null;

		CommonTree string_literal477_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:492:14: ( 'select' expression )
			// /Users/jeremie/ANTLR/cs.g:493:9: 'select' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal477=(Token)match(input,171,FOLLOW_171_in_select_clause6873); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal477_tree = (CommonTree)adaptor.create(string_literal477);
			adaptor.addChild(root_0, string_literal477_tree);
			}

			pushFollow(FOLLOW_expression_in_select_clause6877);
			expression478=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression478.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 129, select_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "select_clause"


	public static class group_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "group_clause"
	// /Users/jeremie/ANTLR/cs.g:494:1: group_clause : 'group' expression 'by' expression ;
	public final csParser.group_clause_return group_clause() throws RecognitionException {
		csParser.group_clause_return retval = new csParser.group_clause_return();
		retval.start = input.LT(1);
		int group_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal479=null;
		Token string_literal481=null;
		ParserRuleReturnScope expression480 =null;
		ParserRuleReturnScope expression482 =null;

		CommonTree string_literal479_tree=null;
		CommonTree string_literal481_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:494:13: ( 'group' expression 'by' expression )
			// /Users/jeremie/ANTLR/cs.g:495:9: 'group' expression 'by' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal479=(Token)match(input,135,FOLLOW_135_in_group_clause6892); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal479_tree = (CommonTree)adaptor.create(string_literal479);
			adaptor.addChild(root_0, string_literal479_tree);
			}

			pushFollow(FOLLOW_expression_in_group_clause6896);
			expression480=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression480.getTree());

			string_literal481=(Token)match(input,105,FOLLOW_105_in_group_clause6900); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal481_tree = (CommonTree)adaptor.create(string_literal481);
			adaptor.addChild(root_0, string_literal481_tree);
			}

			pushFollow(FOLLOW_expression_in_group_clause6904);
			expression482=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression482.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 130, group_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "group_clause"


	public static class where_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "where_clause"
	// /Users/jeremie/ANTLR/cs.g:496:1: where_clause : 'where' boolean_expression ;
	public final csParser.where_clause_return where_clause() throws RecognitionException {
		csParser.where_clause_return retval = new csParser.where_clause_return();
		retval.start = input.LT(1);
		int where_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal483=null;
		ParserRuleReturnScope boolean_expression484 =null;

		CommonTree string_literal483_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:496:13: ( 'where' boolean_expression )
			// /Users/jeremie/ANTLR/cs.g:497:9: 'where' boolean_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal483=(Token)match(input,194,FOLLOW_194_in_where_clause6919); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal483_tree = (CommonTree)adaptor.create(string_literal483);
			adaptor.addChild(root_0, string_literal483_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_where_clause6923);
			boolean_expression484=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression484.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 131, where_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "where_clause"


	public static class boolean_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "boolean_expression"
	// /Users/jeremie/ANTLR/cs.g:498:1: boolean_expression : expression ;
	public final csParser.boolean_expression_return boolean_expression() throws RecognitionException {
		csParser.boolean_expression_return retval = new csParser.boolean_expression_return();
		retval.start = input.LT(1);
		int boolean_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression485 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:498:19: ( expression )
			// /Users/jeremie/ANTLR/cs.g:499:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_boolean_expression6938);
			expression485=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression485.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 132, boolean_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "boolean_expression"


	public static class global_attributes_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attributes"
	// /Users/jeremie/ANTLR/cs.g:504:1: global_attributes : ( global_attribute )+ ;
	public final csParser.global_attributes_return global_attributes() throws RecognitionException {
		csParser.global_attributes_return retval = new csParser.global_attributes_return();
		retval.start = input.LT(1);
		int global_attributes_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope global_attribute486 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:504:18: ( ( global_attribute )+ )
			// /Users/jeremie/ANTLR/cs.g:505:9: ( global_attribute )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:505:9: ( global_attribute )+
			int cnt134=0;
			loop134:
			while (true) {
				int alt134=2;
				int LA134_0 = input.LA(1);
				if ( (LA134_0==91) ) {
					int LA134_2 = input.LA(2);
					if ( (LA134_2==101||LA134_2==148) ) {
						int LA134_3 = input.LA(3);
						if ( (LA134_3==79) ) {
							alt134=1;
						}

					}

				}

				switch (alt134) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:505:9: global_attribute
					{
					pushFollow(FOLLOW_global_attribute_in_global_attributes6957);
					global_attribute486=global_attribute();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute486.getTree());

					}
					break;

				default :
					if ( cnt134 >= 1 ) break loop134;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(134, input);
					throw eee;
				}
				cnt134++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 133, global_attributes_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attributes"


	public static class global_attribute_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attribute"
	// /Users/jeremie/ANTLR/cs.g:506:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
	public final csParser.global_attribute_return global_attribute() throws RecognitionException {
		csParser.global_attribute_return retval = new csParser.global_attribute_return();
		retval.start = input.LT(1);
		int global_attribute_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal487=null;
		Token char_literal490=null;
		Token char_literal491=null;
		ParserRuleReturnScope global_attribute_target_specifier488 =null;
		ParserRuleReturnScope attribute_list489 =null;

		CommonTree char_literal487_tree=null;
		CommonTree char_literal490_tree=null;
		CommonTree char_literal491_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:506:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
			// /Users/jeremie/ANTLR/cs.g:507:9: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal487=(Token)match(input,91,FOLLOW_91_in_global_attribute6974); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal487_tree = (CommonTree)adaptor.create(char_literal487);
			adaptor.addChild(root_0, char_literal487_tree);
			}

			pushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute6978);
			global_attribute_target_specifier488=global_attribute_target_specifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target_specifier488.getTree());

			pushFollow(FOLLOW_attribute_list_in_global_attribute6982);
			attribute_list489=attribute_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list489.getTree());

			// /Users/jeremie/ANTLR/cs.g:507:68: ( ',' )?
			int alt135=2;
			int LA135_0 = input.LA(1);
			if ( (LA135_0==74) ) {
				alt135=1;
			}
			switch (alt135) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:507:68: ','
					{
					char_literal490=(Token)match(input,74,FOLLOW_74_in_global_attribute6986); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal490_tree = (CommonTree)adaptor.create(char_literal490);
					adaptor.addChild(root_0, char_literal490_tree);
					}

					}
					break;

			}

			char_literal491=(Token)match(input,92,FOLLOW_92_in_global_attribute6991); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal491_tree = (CommonTree)adaptor.create(char_literal491);
			adaptor.addChild(root_0, char_literal491_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 134, global_attribute_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attribute"


	public static class global_attribute_target_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attribute_target_specifier"
	// /Users/jeremie/ANTLR/cs.g:508:1: global_attribute_target_specifier : global_attribute_target ':' ;
	public final csParser.global_attribute_target_specifier_return global_attribute_target_specifier() throws RecognitionException {
		csParser.global_attribute_target_specifier_return retval = new csParser.global_attribute_target_specifier_return();
		retval.start = input.LT(1);
		int global_attribute_target_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal493=null;
		ParserRuleReturnScope global_attribute_target492 =null;

		CommonTree char_literal493_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:508:34: ( global_attribute_target ':' )
			// /Users/jeremie/ANTLR/cs.g:509:9: global_attribute_target ':'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier7007);
			global_attribute_target492=global_attribute_target();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target492.getTree());

			char_literal493=(Token)match(input,79,FOLLOW_79_in_global_attribute_target_specifier7011); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal493_tree = (CommonTree)adaptor.create(char_literal493);
			adaptor.addChild(root_0, char_literal493_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 135, global_attribute_target_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attribute_target_specifier"


	public static class global_attribute_target_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attribute_target"
	// /Users/jeremie/ANTLR/cs.g:510:1: global_attribute_target : ( 'assembly' | 'module' );
	public final csParser.global_attribute_target_return global_attribute_target() throws RecognitionException {
		csParser.global_attribute_target_return retval = new csParser.global_attribute_target_return();
		retval.start = input.LT(1);
		int global_attribute_target_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set494=null;

		CommonTree set494_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:510:24: ( 'assembly' | 'module' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set494=input.LT(1);
			if ( input.LA(1)==101||input.LA(1)==148 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set494));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 136, global_attribute_target_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attribute_target"


	public static class attributes_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attributes"
	// /Users/jeremie/ANTLR/cs.g:512:1: attributes : attribute_sections ;
	public final csParser.attributes_return attributes() throws RecognitionException {
		csParser.attributes_return retval = new csParser.attributes_return();
		retval.start = input.LT(1);
		int attributes_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attribute_sections495 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:512:11: ( attribute_sections )
			// /Users/jeremie/ANTLR/cs.g:513:9: attribute_sections
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_sections_in_attributes7047);
			attribute_sections495=attribute_sections();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_sections495.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 137, attributes_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attributes"


	public static class attribute_sections_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_sections"
	// /Users/jeremie/ANTLR/cs.g:514:1: attribute_sections : ( attribute_section )+ ;
	public final csParser.attribute_sections_return attribute_sections() throws RecognitionException {
		csParser.attribute_sections_return retval = new csParser.attribute_sections_return();
		retval.start = input.LT(1);
		int attribute_sections_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attribute_section496 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:514:19: ( ( attribute_section )+ )
			// /Users/jeremie/ANTLR/cs.g:515:9: ( attribute_section )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:515:9: ( attribute_section )+
			int cnt136=0;
			loop136:
			while (true) {
				int alt136=2;
				int LA136_0 = input.LA(1);
				if ( (LA136_0==91) ) {
					alt136=1;
				}

				switch (alt136) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:515:9: attribute_section
					{
					pushFollow(FOLLOW_attribute_section_in_attribute_sections7063);
					attribute_section496=attribute_section();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_section496.getTree());

					}
					break;

				default :
					if ( cnt136 >= 1 ) break loop136;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(136, input);
					throw eee;
				}
				cnt136++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 138, attribute_sections_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_sections"


	public static class attribute_section_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_section"
	// /Users/jeremie/ANTLR/cs.g:516:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
	public final csParser.attribute_section_return attribute_section() throws RecognitionException {
		csParser.attribute_section_return retval = new csParser.attribute_section_return();
		retval.start = input.LT(1);
		int attribute_section_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal497=null;
		Token char_literal500=null;
		Token char_literal501=null;
		ParserRuleReturnScope attribute_target_specifier498 =null;
		ParserRuleReturnScope attribute_list499 =null;

		CommonTree char_literal497_tree=null;
		CommonTree char_literal500_tree=null;
		CommonTree char_literal501_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:516:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
			// /Users/jeremie/ANTLR/cs.g:517:9: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal497=(Token)match(input,91,FOLLOW_91_in_attribute_section7080); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal497_tree = (CommonTree)adaptor.create(char_literal497);
			adaptor.addChild(root_0, char_literal497_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:517:15: ( attribute_target_specifier )?
			int alt137=2;
			int LA137_0 = input.LA(1);
			if ( (LA137_0==126||LA137_0==147||LA137_0==157||LA137_0==162||LA137_0==183) ) {
				int LA137_1 = input.LA(2);
				if ( (LA137_1==79) ) {
					alt137=1;
				}
			}
			else if ( (LA137_0==123||LA137_0==168) ) {
				alt137=1;
			}
			switch (alt137) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:517:15: attribute_target_specifier
					{
					pushFollow(FOLLOW_attribute_target_specifier_in_attribute_section7084);
					attribute_target_specifier498=attribute_target_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target_specifier498.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_attribute_list_in_attribute_section7089);
			attribute_list499=attribute_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list499.getTree());

			// /Users/jeremie/ANTLR/cs.g:517:62: ( ',' )?
			int alt138=2;
			int LA138_0 = input.LA(1);
			if ( (LA138_0==74) ) {
				alt138=1;
			}
			switch (alt138) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:517:62: ','
					{
					char_literal500=(Token)match(input,74,FOLLOW_74_in_attribute_section7093); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal500_tree = (CommonTree)adaptor.create(char_literal500);
					adaptor.addChild(root_0, char_literal500_tree);
					}

					}
					break;

			}

			char_literal501=(Token)match(input,92,FOLLOW_92_in_attribute_section7098); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal501_tree = (CommonTree)adaptor.create(char_literal501);
			adaptor.addChild(root_0, char_literal501_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 139, attribute_section_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_section"


	public static class attribute_target_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_target_specifier"
	// /Users/jeremie/ANTLR/cs.g:518:1: attribute_target_specifier : attribute_target ':' ;
	public final csParser.attribute_target_specifier_return attribute_target_specifier() throws RecognitionException {
		csParser.attribute_target_specifier_return retval = new csParser.attribute_target_specifier_return();
		retval.start = input.LT(1);
		int attribute_target_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal503=null;
		ParserRuleReturnScope attribute_target502 =null;

		CommonTree char_literal503_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:518:27: ( attribute_target ':' )
			// /Users/jeremie/ANTLR/cs.g:519:9: attribute_target ':'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_target_in_attribute_target_specifier7114);
			attribute_target502=attribute_target();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target502.getTree());

			char_literal503=(Token)match(input,79,FOLLOW_79_in_attribute_target_specifier7118); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal503_tree = (CommonTree)adaptor.create(char_literal503);
			adaptor.addChild(root_0, char_literal503_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 140, attribute_target_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_target_specifier"


	public static class attribute_target_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_target"
	// /Users/jeremie/ANTLR/cs.g:520:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
	public final csParser.attribute_target_return attribute_target() throws RecognitionException {
		csParser.attribute_target_return retval = new csParser.attribute_target_return();
		retval.start = input.LT(1);
		int attribute_target_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set504=null;

		CommonTree set504_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:520:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set504=input.LT(1);
			if ( input.LA(1)==123||input.LA(1)==126||input.LA(1)==147||input.LA(1)==157||input.LA(1)==162||input.LA(1)==168||input.LA(1)==183 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set504));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 141, attribute_target_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_target"


	public static class attribute_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_list"
	// /Users/jeremie/ANTLR/cs.g:522:1: attribute_list : attribute ( ',' attribute )* ;
	public final csParser.attribute_list_return attribute_list() throws RecognitionException {
		csParser.attribute_list_return retval = new csParser.attribute_list_return();
		retval.start = input.LT(1);
		int attribute_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal506=null;
		ParserRuleReturnScope attribute505 =null;
		ParserRuleReturnScope attribute507 =null;

		CommonTree char_literal506_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:522:15: ( attribute ( ',' attribute )* )
			// /Users/jeremie/ANTLR/cs.g:523:9: attribute ( ',' attribute )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_in_attribute_list7174);
			attribute505=attribute();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute505.getTree());

			// /Users/jeremie/ANTLR/cs.g:523:19: ( ',' attribute )*
			loop139:
			while (true) {
				int alt139=2;
				int LA139_0 = input.LA(1);
				if ( (LA139_0==74) ) {
					int LA139_1 = input.LA(2);
					if ( (LA139_1==IDENTIFIER||LA139_1==95||(LA139_1 >= 97 && LA139_1 <= 98)||(LA139_1 >= 100 && LA139_1 <= 101)||LA139_1==105||LA139_1==117||LA139_1==120||LA139_1==122||LA139_1==126||LA139_1==132||LA139_1==135||LA139_1==141||(LA139_1 >= 143 && LA139_1 <= 144)||(LA139_1 >= 147 && LA139_1 <= 148)||LA139_1==152||LA139_1==154||LA139_1==157||LA139_1==160||LA139_1==162||LA139_1==167||(LA139_1 >= 171 && LA139_1 <= 172)||LA139_1==183||LA139_1==190||LA139_1==194||LA139_1==196) ) {
						alt139=1;
					}

				}

				switch (alt139) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:523:20: ',' attribute
					{
					char_literal506=(Token)match(input,74,FOLLOW_74_in_attribute_list7177); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal506_tree = (CommonTree)adaptor.create(char_literal506);
					adaptor.addChild(root_0, char_literal506_tree);
					}

					pushFollow(FOLLOW_attribute_in_attribute_list7179);
					attribute507=attribute();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute507.getTree());

					}
					break;

				default :
					break loop139;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 142, attribute_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_list"


	public static class attribute_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute"
	// /Users/jeremie/ANTLR/cs.g:524:1: attribute : type_name ( attribute_arguments )? ;
	public final csParser.attribute_return attribute() throws RecognitionException {
		csParser.attribute_return retval = new csParser.attribute_return();
		retval.start = input.LT(1);
		int attribute_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type_name508 =null;
		ParserRuleReturnScope attribute_arguments509 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:524:10: ( type_name ( attribute_arguments )? )
			// /Users/jeremie/ANTLR/cs.g:525:9: type_name ( attribute_arguments )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_attribute7198);
			type_name508=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name508.getTree());

			// /Users/jeremie/ANTLR/cs.g:525:21: ( attribute_arguments )?
			int alt140=2;
			int LA140_0 = input.LA(1);
			if ( (LA140_0==68) ) {
				alt140=1;
			}
			switch (alt140) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:525:21: attribute_arguments
					{
					pushFollow(FOLLOW_attribute_arguments_in_attribute7202);
					attribute_arguments509=attribute_arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_arguments509.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 143, attribute_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute"


	public static class attribute_arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_arguments"
	// /Users/jeremie/ANTLR/cs.g:527:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
	public final csParser.attribute_arguments_return attribute_arguments() throws RecognitionException {
		csParser.attribute_arguments_return retval = new csParser.attribute_arguments_return();
		retval.start = input.LT(1);
		int attribute_arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal510=null;
		Token char_literal511=null;
		Token char_literal514=null;
		Token char_literal516=null;
		ParserRuleReturnScope positional_argument512 =null;
		ParserRuleReturnScope named_argument513 =null;
		ParserRuleReturnScope positional_argument515 =null;

		CommonTree char_literal510_tree=null;
		CommonTree char_literal511_tree=null;
		CommonTree char_literal514_tree=null;
		CommonTree char_literal516_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:527:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
			// /Users/jeremie/ANTLR/cs.g:528:9: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal510=(Token)match(input,68,FOLLOW_68_in_attribute_arguments7220); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal510_tree = (CommonTree)adaptor.create(char_literal510);
			adaptor.addChild(root_0, char_literal510_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:528:15: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			int alt142=2;
			int LA142_0 = input.LA(1);
			if ( (LA142_0==RPAREN) ) {
				alt142=1;
			}
			else if ( (LA142_0==Character_literal||LA142_0==FALSE||(LA142_0 >= Hex_number && LA142_0 <= IDENTIFIER)||(LA142_0 >= MINUS && LA142_0 <= NUMBER)||LA142_0==Real_literal||LA142_0==STRINGLITERAL||LA142_0==TRUE||LA142_0==Verbatim_string_literal||LA142_0==61||LA142_0==66||(LA142_0 >= 68 && LA142_0 <= 69)||(LA142_0 >= 71 && LA142_0 <= 72)||LA142_0==75||LA142_0==95||(LA142_0 >= 97 && LA142_0 <= 98)||(LA142_0 >= 100 && LA142_0 <= 103)||(LA142_0 >= 105 && LA142_0 <= 106)||(LA142_0 >= 109 && LA142_0 <= 110)||(LA142_0 >= 114 && LA142_0 <= 117)||(LA142_0 >= 119 && LA142_0 <= 120)||LA142_0==122||LA142_0==126||LA142_0==129||LA142_0==132||LA142_0==135||LA142_0==138||LA142_0==141||(LA142_0 >= 143 && LA142_0 <= 144)||(LA142_0 >= 146 && LA142_0 <= 148)||(LA142_0 >= 150 && LA142_0 <= 152)||LA142_0==154||LA142_0==157||LA142_0==160||LA142_0==162||LA142_0==167||LA142_0==169||(LA142_0 >= 171 && LA142_0 <= 174)||LA142_0==177||LA142_0==180||(LA142_0 >= 183 && LA142_0 <= 187)||(LA142_0 >= 189 && LA142_0 <= 190)||LA142_0==194||LA142_0==196||LA142_0==202) ) {
				alt142=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 142, 0, input);
				throw nvae;
			}

			switch (alt142) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:528:16: ')'
					{
					char_literal511=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments7225); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal511_tree = (CommonTree)adaptor.create(char_literal511);
					adaptor.addChild(root_0, char_literal511_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:529:22: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
					{
					// /Users/jeremie/ANTLR/cs.g:529:22: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
					// /Users/jeremie/ANTLR/cs.g:529:23: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
					{
					pushFollow(FOLLOW_positional_argument_in_attribute_arguments7329);
					positional_argument512=positional_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument512.getTree());

					// /Users/jeremie/ANTLR/cs.g:529:45: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
					loop141:
					while (true) {
						int alt141=3;
						int LA141_0 = input.LA(1);
						if ( (LA141_0==IDENTIFIER||LA141_0==95||(LA141_0 >= 97 && LA141_0 <= 98)||(LA141_0 >= 100 && LA141_0 <= 101)||LA141_0==105||LA141_0==117||LA141_0==120||LA141_0==122||LA141_0==126||LA141_0==132||LA141_0==135||LA141_0==141||(LA141_0 >= 143 && LA141_0 <= 144)||(LA141_0 >= 147 && LA141_0 <= 148)||LA141_0==152||LA141_0==154||LA141_0==157||LA141_0==160||LA141_0==162||LA141_0==167||(LA141_0 >= 171 && LA141_0 <= 172)||LA141_0==183||LA141_0==190||LA141_0==194||LA141_0==196) && (synpred24_cs())) {
							alt141=1;
						}
						else if ( (LA141_0==74) ) {
							alt141=2;
						}

						switch (alt141) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:529:46: ( ',' identifier '=' )=> named_argument
							{
							pushFollow(FOLLOW_named_argument_in_attribute_arguments7348);
							named_argument513=named_argument();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument513.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:530:78: ',' positional_argument
							{
							char_literal514=(Token)match(input,74,FOLLOW_74_in_attribute_arguments7427); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal514_tree = (CommonTree)adaptor.create(char_literal514);
							adaptor.addChild(root_0, char_literal514_tree);
							}

							pushFollow(FOLLOW_positional_argument_in_attribute_arguments7436);
							positional_argument515=positional_argument();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument515.getTree());

							}
							break;

						default :
							break loop141;
						}
					}

					}

					char_literal516=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments7475); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal516_tree = (CommonTree)adaptor.create(char_literal516);
					adaptor.addChild(root_0, char_literal516_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 144, attribute_arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_arguments"


	public static class positional_argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "positional_argument_list"
	// /Users/jeremie/ANTLR/cs.g:533:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
	public final csParser.positional_argument_list_return positional_argument_list() throws RecognitionException {
		csParser.positional_argument_list_return retval = new csParser.positional_argument_list_return();
		retval.start = input.LT(1);
		int positional_argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal518=null;
		ParserRuleReturnScope positional_argument517 =null;
		ParserRuleReturnScope positional_argument519 =null;

		CommonTree char_literal518_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:533:25: ( positional_argument ( ',' positional_argument )* )
			// /Users/jeremie/ANTLR/cs.g:534:9: positional_argument ( ',' positional_argument )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_positional_argument_in_positional_argument_list7517);
			positional_argument517=positional_argument();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument517.getTree());

			// /Users/jeremie/ANTLR/cs.g:534:29: ( ',' positional_argument )*
			loop143:
			while (true) {
				int alt143=2;
				int LA143_0 = input.LA(1);
				if ( (LA143_0==74) ) {
					alt143=1;
				}

				switch (alt143) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:534:30: ',' positional_argument
					{
					char_literal518=(Token)match(input,74,FOLLOW_74_in_positional_argument_list7520); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal518_tree = (CommonTree)adaptor.create(char_literal518);
					adaptor.addChild(root_0, char_literal518_tree);
					}

					pushFollow(FOLLOW_positional_argument_in_positional_argument_list7522);
					positional_argument519=positional_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument519.getTree());

					}
					break;

				default :
					break loop143;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 145, positional_argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "positional_argument_list"


	public static class positional_argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "positional_argument"
	// /Users/jeremie/ANTLR/cs.g:535:1: positional_argument : attribute_argument_expression ;
	public final csParser.positional_argument_return positional_argument() throws RecognitionException {
		csParser.positional_argument_return retval = new csParser.positional_argument_return();
		retval.start = input.LT(1);
		int positional_argument_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attribute_argument_expression520 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:535:20: ( attribute_argument_expression )
			// /Users/jeremie/ANTLR/cs.g:536:9: attribute_argument_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_argument_expression_in_positional_argument7540);
			attribute_argument_expression520=attribute_argument_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression520.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 146, positional_argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "positional_argument"


	public static class named_argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "named_argument_list"
	// /Users/jeremie/ANTLR/cs.g:537:1: named_argument_list : named_argument ( ',' named_argument )* ;
	public final csParser.named_argument_list_return named_argument_list() throws RecognitionException {
		csParser.named_argument_list_return retval = new csParser.named_argument_list_return();
		retval.start = input.LT(1);
		int named_argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal522=null;
		ParserRuleReturnScope named_argument521 =null;
		ParserRuleReturnScope named_argument523 =null;

		CommonTree char_literal522_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:537:20: ( named_argument ( ',' named_argument )* )
			// /Users/jeremie/ANTLR/cs.g:538:9: named_argument ( ',' named_argument )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_named_argument_in_named_argument_list7556);
			named_argument521=named_argument();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument521.getTree());

			// /Users/jeremie/ANTLR/cs.g:538:24: ( ',' named_argument )*
			loop144:
			while (true) {
				int alt144=2;
				int LA144_0 = input.LA(1);
				if ( (LA144_0==74) ) {
					alt144=1;
				}

				switch (alt144) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:538:25: ',' named_argument
					{
					char_literal522=(Token)match(input,74,FOLLOW_74_in_named_argument_list7559); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal522_tree = (CommonTree)adaptor.create(char_literal522);
					adaptor.addChild(root_0, char_literal522_tree);
					}

					pushFollow(FOLLOW_named_argument_in_named_argument_list7561);
					named_argument523=named_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument523.getTree());

					}
					break;

				default :
					break loop144;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 147, named_argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "named_argument_list"


	public static class named_argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "named_argument"
	// /Users/jeremie/ANTLR/cs.g:539:1: named_argument : identifier '=' attribute_argument_expression ;
	public final csParser.named_argument_return named_argument() throws RecognitionException {
		csParser.named_argument_return retval = new csParser.named_argument_return();
		retval.start = input.LT(1);
		int named_argument_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal525=null;
		ParserRuleReturnScope identifier524 =null;
		ParserRuleReturnScope attribute_argument_expression526 =null;

		CommonTree char_literal525_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:539:15: ( identifier '=' attribute_argument_expression )
			// /Users/jeremie/ANTLR/cs.g:540:9: identifier '=' attribute_argument_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_named_argument7579);
			identifier524=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier524.getTree());

			char_literal525=(Token)match(input,85,FOLLOW_85_in_named_argument7583); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal525_tree = (CommonTree)adaptor.create(char_literal525);
			adaptor.addChild(root_0, char_literal525_tree);
			}

			pushFollow(FOLLOW_attribute_argument_expression_in_named_argument7587);
			attribute_argument_expression526=attribute_argument_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression526.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 148, named_argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "named_argument"


	public static class attribute_argument_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_argument_expression"
	// /Users/jeremie/ANTLR/cs.g:541:1: attribute_argument_expression : expression ;
	public final csParser.attribute_argument_expression_return attribute_argument_expression() throws RecognitionException {
		csParser.attribute_argument_expression_return retval = new csParser.attribute_argument_expression_return();
		retval.start = input.LT(1);
		int attribute_argument_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression527 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:541:30: ( expression )
			// /Users/jeremie/ANTLR/cs.g:542:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_attribute_argument_expression7603);
			expression527=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression527.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 149, attribute_argument_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_argument_expression"


	public static class class_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_declaration"
	// /Users/jeremie/ANTLR/cs.g:548:1: class_declaration : 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? ;
	public final csParser.class_declaration_return class_declaration() throws RecognitionException {
		csParser.class_declaration_return retval = new csParser.class_declaration_return();
		retval.start = input.LT(1);
		int class_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal528=null;
		Token char_literal533=null;
		ParserRuleReturnScope type_or_generic529 =null;
		ParserRuleReturnScope class_base530 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses531 =null;
		ParserRuleReturnScope class_body532 =null;

		CommonTree string_literal528_tree=null;
		CommonTree char_literal533_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:548:18: ( 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:549:9: 'class' type_or_generic ( class_base )? ( type_parameter_constraints_clauses )? class_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal528=(Token)match(input,111,FOLLOW_111_in_class_declaration7623); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal528_tree = (CommonTree)adaptor.create(string_literal528);
			adaptor.addChild(root_0, string_literal528_tree);
			}

			pushFollow(FOLLOW_type_or_generic_in_class_declaration7626);
			type_or_generic529=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic529.getTree());

			// /Users/jeremie/ANTLR/cs.g:549:36: ( class_base )?
			int alt145=2;
			int LA145_0 = input.LA(1);
			if ( (LA145_0==79) ) {
				alt145=1;
			}
			switch (alt145) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:549:36: class_base
					{
					pushFollow(FOLLOW_class_base_in_class_declaration7630);
					class_base530=class_base();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_base530.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:549:50: ( type_parameter_constraints_clauses )?
			int alt146=2;
			int LA146_0 = input.LA(1);
			if ( (LA146_0==194) ) {
				alt146=1;
			}
			switch (alt146) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:549:50: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration7635);
					type_parameter_constraints_clauses531=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses531.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_class_body_in_class_declaration7640);
			class_body532=class_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, class_body532.getTree());

			// /Users/jeremie/ANTLR/cs.g:549:101: ( ';' )?
			int alt147=2;
			int LA147_0 = input.LA(1);
			if ( (LA147_0==SEMI) ) {
				alt147=1;
			}
			switch (alt147) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:549:101: ';'
					{
					char_literal533=(Token)match(input,SEMI,FOLLOW_SEMI_in_class_declaration7644); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal533_tree = (CommonTree)adaptor.create(char_literal533);
					adaptor.addChild(root_0, char_literal533_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 150, class_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_declaration"


	public static class class_base_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_base"
	// /Users/jeremie/ANTLR/cs.g:550:1: class_base : ':' interface_type_list ;
	public final csParser.class_base_return class_base() throws RecognitionException {
		csParser.class_base_return retval = new csParser.class_base_return();
		retval.start = input.LT(1);
		int class_base_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal534=null;
		ParserRuleReturnScope interface_type_list535 =null;

		CommonTree char_literal534_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:550:11: ( ':' interface_type_list )
			// /Users/jeremie/ANTLR/cs.g:553:9: ':' interface_type_list
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal534=(Token)match(input,79,FOLLOW_79_in_class_base7678); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal534_tree = (CommonTree)adaptor.create(char_literal534);
			adaptor.addChild(root_0, char_literal534_tree);
			}

			pushFollow(FOLLOW_interface_type_list_in_class_base7682);
			interface_type_list535=interface_type_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list535.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 151, class_base_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_base"


	public static class interface_type_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_type_list"
	// /Users/jeremie/ANTLR/cs.g:555:1: interface_type_list : type ( ',' type )* ;
	public final csParser.interface_type_list_return interface_type_list() throws RecognitionException {
		csParser.interface_type_list_return retval = new csParser.interface_type_list_return();
		retval.start = input.LT(1);
		int interface_type_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal537=null;
		ParserRuleReturnScope type536 =null;
		ParserRuleReturnScope type538 =null;

		CommonTree char_literal537_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:555:20: ( type ( ',' type )* )
			// /Users/jeremie/ANTLR/cs.g:556:9: type ( ',' type )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_interface_type_list7706);
			type536=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type536.getTree());

			// /Users/jeremie/ANTLR/cs.g:556:14: ( ',' type )*
			loop148:
			while (true) {
				int alt148=2;
				int LA148_0 = input.LA(1);
				if ( (LA148_0==74) ) {
					alt148=1;
				}

				switch (alt148) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:556:15: ',' type
					{
					char_literal537=(Token)match(input,74,FOLLOW_74_in_interface_type_list7709); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal537_tree = (CommonTree)adaptor.create(char_literal537);
					adaptor.addChild(root_0, char_literal537_tree);
					}

					pushFollow(FOLLOW_type_in_interface_type_list7713);
					type538=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type538.getTree());

					}
					break;

				default :
					break loop148;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 152, interface_type_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_type_list"


	public static class class_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_body"
	// /Users/jeremie/ANTLR/cs.g:558:1: class_body : '{' ( class_member_declarations )? '}' ;
	public final csParser.class_body_return class_body() throws RecognitionException {
		csParser.class_body_return retval = new csParser.class_body_return();
		retval.start = input.LT(1);
		int class_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal539=null;
		Token char_literal541=null;
		ParserRuleReturnScope class_member_declarations540 =null;

		CommonTree char_literal539_tree=null;
		CommonTree char_literal541_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:558:11: ( '{' ( class_member_declarations )? '}' )
			// /Users/jeremie/ANTLR/cs.g:559:9: '{' ( class_member_declarations )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal539=(Token)match(input,197,FOLLOW_197_in_class_body7731); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal539_tree = (CommonTree)adaptor.create(char_literal539);
			adaptor.addChild(root_0, char_literal539_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:559:15: ( class_member_declarations )?
			int alt149=2;
			int LA149_0 = input.LA(1);
			if ( (LA149_0==ENUM||LA149_0==IDENTIFIER||LA149_0==91||(LA149_0 >= 95 && LA149_0 <= 98)||(LA149_0 >= 100 && LA149_0 <= 101)||LA149_0==103||(LA149_0 >= 105 && LA149_0 <= 106)||LA149_0==109||(LA149_0 >= 111 && LA149_0 <= 112)||LA149_0==114||(LA149_0 >= 116 && LA149_0 <= 117)||(LA149_0 >= 119 && LA149_0 <= 120)||(LA149_0 >= 122 && LA149_0 <= 126)||LA149_0==129||LA149_0==132||(LA149_0 >= 135 && LA149_0 <= 136)||(LA149_0 >= 138 && LA149_0 <= 141)||(LA149_0 >= 143 && LA149_0 <= 144)||(LA149_0 >= 146 && LA149_0 <= 148)||(LA149_0 >= 150 && LA149_0 <= 152)||LA149_0==154||(LA149_0 >= 156 && LA149_0 <= 157)||(LA149_0 >= 159 && LA149_0 <= 165)||LA149_0==167||(LA149_0 >= 169 && LA149_0 <= 173)||(LA149_0 >= 176 && LA149_0 <= 178)||LA149_0==183||(LA149_0 >= 185 && LA149_0 <= 186)||(LA149_0 >= 188 && LA149_0 <= 194)||LA149_0==196||LA149_0==202) ) {
				alt149=1;
			}
			switch (alt149) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:559:15: class_member_declarations
					{
					pushFollow(FOLLOW_class_member_declarations_in_class_body7735);
					class_member_declarations540=class_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member_declarations540.getTree());

					}
					break;

			}

			char_literal541=(Token)match(input,201,FOLLOW_201_in_class_body7740); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal541_tree = (CommonTree)adaptor.create(char_literal541);
			adaptor.addChild(root_0, char_literal541_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 153, class_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_body"


	public static class class_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:560:1: class_member_declarations : ( class_member_declaration )+ ;
	public final csParser.class_member_declarations_return class_member_declarations() throws RecognitionException {
		csParser.class_member_declarations_return retval = new csParser.class_member_declarations_return();
		retval.start = input.LT(1);
		int class_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope class_member_declaration542 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:560:26: ( ( class_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:561:9: ( class_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:561:9: ( class_member_declaration )+
			int cnt150=0;
			loop150:
			while (true) {
				int alt150=2;
				int LA150_0 = input.LA(1);
				if ( (LA150_0==ENUM||LA150_0==IDENTIFIER||LA150_0==91||(LA150_0 >= 95 && LA150_0 <= 98)||(LA150_0 >= 100 && LA150_0 <= 101)||LA150_0==103||(LA150_0 >= 105 && LA150_0 <= 106)||LA150_0==109||(LA150_0 >= 111 && LA150_0 <= 112)||LA150_0==114||(LA150_0 >= 116 && LA150_0 <= 117)||(LA150_0 >= 119 && LA150_0 <= 120)||(LA150_0 >= 122 && LA150_0 <= 126)||LA150_0==129||LA150_0==132||(LA150_0 >= 135 && LA150_0 <= 136)||(LA150_0 >= 138 && LA150_0 <= 141)||(LA150_0 >= 143 && LA150_0 <= 144)||(LA150_0 >= 146 && LA150_0 <= 148)||(LA150_0 >= 150 && LA150_0 <= 152)||LA150_0==154||(LA150_0 >= 156 && LA150_0 <= 157)||(LA150_0 >= 159 && LA150_0 <= 165)||LA150_0==167||(LA150_0 >= 169 && LA150_0 <= 173)||(LA150_0 >= 176 && LA150_0 <= 178)||LA150_0==183||(LA150_0 >= 185 && LA150_0 <= 186)||(LA150_0 >= 188 && LA150_0 <= 194)||LA150_0==196||LA150_0==202) ) {
					alt150=1;
				}

				switch (alt150) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:561:9: class_member_declaration
					{
					pushFollow(FOLLOW_class_member_declaration_in_class_member_declarations7755);
					class_member_declaration542=class_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_member_declaration542.getTree());

					}
					break;

				default :
					if ( cnt150 >= 1 ) break loop150;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(150, input);
					throw eee;
				}
				cnt150++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 154, class_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_member_declarations"


	public static class constant_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declaration"
	// /Users/jeremie/ANTLR/cs.g:564:1: constant_declaration : 'const' type constant_declarators ';' ;
	public final csParser.constant_declaration_return constant_declaration() throws RecognitionException {
		csParser.constant_declaration_return retval = new csParser.constant_declaration_return();
		retval.start = input.LT(1);
		int constant_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal543=null;
		Token char_literal546=null;
		ParserRuleReturnScope type544 =null;
		ParserRuleReturnScope constant_declarators545 =null;

		CommonTree string_literal543_tree=null;
		CommonTree char_literal546_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:564:21: ( 'const' type constant_declarators ';' )
			// /Users/jeremie/ANTLR/cs.g:565:9: 'const' type constant_declarators ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal543=(Token)match(input,112,FOLLOW_112_in_constant_declaration7773); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal543_tree = (CommonTree)adaptor.create(string_literal543);
			adaptor.addChild(root_0, string_literal543_tree);
			}

			pushFollow(FOLLOW_type_in_constant_declaration7777);
			type544=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type544.getTree());

			pushFollow(FOLLOW_constant_declarators_in_constant_declaration7781);
			constant_declarators545=constant_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators545.getTree());

			char_literal546=(Token)match(input,SEMI,FOLLOW_SEMI_in_constant_declaration7785); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal546_tree = (CommonTree)adaptor.create(char_literal546);
			adaptor.addChild(root_0, char_literal546_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 155, constant_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declaration"


	public static class constant_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declarators"
	// /Users/jeremie/ANTLR/cs.g:566:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
	public final csParser.constant_declarators_return constant_declarators() throws RecognitionException {
		csParser.constant_declarators_return retval = new csParser.constant_declarators_return();
		retval.start = input.LT(1);
		int constant_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal548=null;
		ParserRuleReturnScope constant_declarator547 =null;
		ParserRuleReturnScope constant_declarator549 =null;

		CommonTree char_literal548_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:566:21: ( constant_declarator ( ',' constant_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:567:9: constant_declarator ( ',' constant_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_constant_declarator_in_constant_declarators7800);
			constant_declarator547=constant_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator547.getTree());

			// /Users/jeremie/ANTLR/cs.g:567:29: ( ',' constant_declarator )*
			loop151:
			while (true) {
				int alt151=2;
				int LA151_0 = input.LA(1);
				if ( (LA151_0==74) ) {
					alt151=1;
				}

				switch (alt151) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:567:30: ',' constant_declarator
					{
					char_literal548=(Token)match(input,74,FOLLOW_74_in_constant_declarators7803); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal548_tree = (CommonTree)adaptor.create(char_literal548);
					adaptor.addChild(root_0, char_literal548_tree);
					}

					pushFollow(FOLLOW_constant_declarator_in_constant_declarators7805);
					constant_declarator549=constant_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator549.getTree());

					}
					break;

				default :
					break loop151;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 156, constant_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declarators"


	public static class constant_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declarator"
	// /Users/jeremie/ANTLR/cs.g:568:1: constant_declarator : identifier ( '=' constant_expression )? ;
	public final csParser.constant_declarator_return constant_declarator() throws RecognitionException {
		csParser.constant_declarator_return retval = new csParser.constant_declarator_return();
		retval.start = input.LT(1);
		int constant_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal551=null;
		ParserRuleReturnScope identifier550 =null;
		ParserRuleReturnScope constant_expression552 =null;

		CommonTree char_literal551_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:568:20: ( identifier ( '=' constant_expression )? )
			// /Users/jeremie/ANTLR/cs.g:569:9: identifier ( '=' constant_expression )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_constant_declarator7822);
			identifier550=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier550.getTree());

			// /Users/jeremie/ANTLR/cs.g:569:22: ( '=' constant_expression )?
			int alt152=2;
			int LA152_0 = input.LA(1);
			if ( (LA152_0==85) ) {
				alt152=1;
			}
			switch (alt152) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:569:23: '=' constant_expression
					{
					char_literal551=(Token)match(input,85,FOLLOW_85_in_constant_declarator7827); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal551_tree = (CommonTree)adaptor.create(char_literal551);
					adaptor.addChild(root_0, char_literal551_tree);
					}

					pushFollow(FOLLOW_constant_expression_in_constant_declarator7831);
					constant_expression552=constant_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression552.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 157, constant_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declarator"


	public static class constant_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_expression"
	// /Users/jeremie/ANTLR/cs.g:570:1: constant_expression : expression ;
	public final csParser.constant_expression_return constant_expression() throws RecognitionException {
		csParser.constant_expression_return retval = new csParser.constant_expression_return();
		retval.start = input.LT(1);
		int constant_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression553 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:570:20: ( expression )
			// /Users/jeremie/ANTLR/cs.g:571:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_constant_expression7848);
			expression553=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression553.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 158, constant_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_expression"


	public static class field_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "field_declaration"
	// /Users/jeremie/ANTLR/cs.g:574:1: field_declaration : variable_declarators ';' ;
	public final csParser.field_declaration_return field_declaration() throws RecognitionException {
		csParser.field_declaration_return retval = new csParser.field_declaration_return();
		retval.start = input.LT(1);
		int field_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal555=null;
		ParserRuleReturnScope variable_declarators554 =null;

		CommonTree char_literal555_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:574:18: ( variable_declarators ';' )
			// /Users/jeremie/ANTLR/cs.g:575:9: variable_declarators ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variable_declarators_in_field_declaration7864);
			variable_declarators554=variable_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators554.getTree());

			char_literal555=(Token)match(input,SEMI,FOLLOW_SEMI_in_field_declaration7868); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal555_tree = (CommonTree)adaptor.create(char_literal555);
			adaptor.addChild(root_0, char_literal555_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 159, field_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "field_declaration"


	public static class variable_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_declarators"
	// /Users/jeremie/ANTLR/cs.g:576:1: variable_declarators : variable_declarator ( ',' variable_declarator )* ;
	public final csParser.variable_declarators_return variable_declarators() throws RecognitionException {
		csParser.variable_declarators_return retval = new csParser.variable_declarators_return();
		retval.start = input.LT(1);
		int variable_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal557=null;
		ParserRuleReturnScope variable_declarator556 =null;
		ParserRuleReturnScope variable_declarator558 =null;

		CommonTree char_literal557_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:576:21: ( variable_declarator ( ',' variable_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:577:9: variable_declarator ( ',' variable_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variable_declarator_in_variable_declarators7890);
			variable_declarator556=variable_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator556.getTree());

			// /Users/jeremie/ANTLR/cs.g:577:29: ( ',' variable_declarator )*
			loop153:
			while (true) {
				int alt153=2;
				int LA153_0 = input.LA(1);
				if ( (LA153_0==74) ) {
					alt153=1;
				}

				switch (alt153) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:577:30: ',' variable_declarator
					{
					char_literal557=(Token)match(input,74,FOLLOW_74_in_variable_declarators7893); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal557_tree = (CommonTree)adaptor.create(char_literal557);
					adaptor.addChild(root_0, char_literal557_tree);
					}

					pushFollow(FOLLOW_variable_declarator_in_variable_declarators7897);
					variable_declarator558=variable_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator558.getTree());

					}
					break;

				default :
					break loop153;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 160, variable_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_declarators"


	public static class variable_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_declarator"
	// /Users/jeremie/ANTLR/cs.g:578:1: variable_declarator : type_name ( '=' variable_initializer )? ;
	public final csParser.variable_declarator_return variable_declarator() throws RecognitionException {
		csParser.variable_declarator_return retval = new csParser.variable_declarator_return();
		retval.start = input.LT(1);
		int variable_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal560=null;
		ParserRuleReturnScope type_name559 =null;
		ParserRuleReturnScope variable_initializer561 =null;

		CommonTree char_literal560_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:578:20: ( type_name ( '=' variable_initializer )? )
			// /Users/jeremie/ANTLR/cs.g:579:9: type_name ( '=' variable_initializer )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_variable_declarator7914);
			type_name559=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name559.getTree());

			// /Users/jeremie/ANTLR/cs.g:579:19: ( '=' variable_initializer )?
			int alt154=2;
			int LA154_0 = input.LA(1);
			if ( (LA154_0==85) ) {
				alt154=1;
			}
			switch (alt154) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:579:20: '=' variable_initializer
					{
					char_literal560=(Token)match(input,85,FOLLOW_85_in_variable_declarator7917); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal560_tree = (CommonTree)adaptor.create(char_literal560);
					adaptor.addChild(root_0, char_literal560_tree);
					}

					pushFollow(FOLLOW_variable_initializer_in_variable_declarator7921);
					variable_initializer561=variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer561.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 161, variable_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_declarator"


	public static class method_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_declaration"
	// /Users/jeremie/ANTLR/cs.g:582:1: method_declaration : method_header method_body ;
	public final csParser.method_declaration_return method_declaration() throws RecognitionException {
		csParser.method_declaration_return retval = new csParser.method_declaration_return();
		retval.start = input.LT(1);
		int method_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope method_header562 =null;
		ParserRuleReturnScope method_body563 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:582:19: ( method_header method_body )
			// /Users/jeremie/ANTLR/cs.g:583:9: method_header method_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_method_header_in_method_declaration7956);
			method_header562=method_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, method_header562.getTree());

			pushFollow(FOLLOW_method_body_in_method_declaration7960);
			method_body563=method_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, method_body563.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 162, method_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_declaration"


	public static class method_header_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_header"
	// /Users/jeremie/ANTLR/cs.g:584:1: method_header : member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
	public final csParser.method_header_return method_header() throws RecognitionException {
		csParser.method_header_return retval = new csParser.method_header_return();
		retval.start = input.LT(1);
		int method_header_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal565=null;
		Token char_literal567=null;
		ParserRuleReturnScope member_name564 =null;
		ParserRuleReturnScope formal_parameter_list566 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses568 =null;

		CommonTree char_literal565_tree=null;
		CommonTree char_literal567_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:584:14: ( member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
			// /Users/jeremie/ANTLR/cs.g:585:9: member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_name_in_method_header7975);
			member_name564=member_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name564.getTree());

			char_literal565=(Token)match(input,68,FOLLOW_68_in_method_header7978); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal565_tree = (CommonTree)adaptor.create(char_literal565);
			adaptor.addChild(root_0, char_literal565_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:585:28: ( formal_parameter_list )?
			int alt155=2;
			int LA155_0 = input.LA(1);
			if ( (LA155_0==IDENTIFIER||LA155_0==91||LA155_0==95||(LA155_0 >= 97 && LA155_0 <= 98)||(LA155_0 >= 100 && LA155_0 <= 101)||LA155_0==103||(LA155_0 >= 105 && LA155_0 <= 106)||LA155_0==109||LA155_0==114||LA155_0==117||(LA155_0 >= 119 && LA155_0 <= 120)||LA155_0==122||LA155_0==126||LA155_0==129||LA155_0==132||LA155_0==135||LA155_0==138||LA155_0==141||(LA155_0 >= 143 && LA155_0 <= 144)||(LA155_0 >= 146 && LA155_0 <= 148)||(LA155_0 >= 151 && LA155_0 <= 152)||(LA155_0 >= 154 && LA155_0 <= 155)||(LA155_0 >= 157 && LA155_0 <= 158)||LA155_0==160||LA155_0==162||(LA155_0 >= 166 && LA155_0 <= 167)||LA155_0==169||(LA155_0 >= 171 && LA155_0 <= 173)||LA155_0==177||LA155_0==180||LA155_0==183||(LA155_0 >= 185 && LA155_0 <= 186)||(LA155_0 >= 189 && LA155_0 <= 190)||LA155_0==192||LA155_0==194||LA155_0==196) ) {
				alt155=1;
			}
			switch (alt155) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:585:28: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_method_header7982);
					formal_parameter_list566=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list566.getTree());

					}
					break;

			}

			char_literal567=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_method_header7987); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal567_tree = (CommonTree)adaptor.create(char_literal567);
			adaptor.addChild(root_0, char_literal567_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:585:59: ( type_parameter_constraints_clauses )?
			int alt156=2;
			int LA156_0 = input.LA(1);
			if ( (LA156_0==194) ) {
				alt156=1;
			}
			switch (alt156) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:585:59: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_header7991);
					type_parameter_constraints_clauses568=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses568.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 163, method_header_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_header"


	public static class method_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_body"
	// /Users/jeremie/ANTLR/cs.g:586:1: method_body : block ;
	public final csParser.method_body_return method_body() throws RecognitionException {
		csParser.method_body_return retval = new csParser.method_body_return();
		retval.start = input.LT(1);
		int method_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block569 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:586:12: ( block )
			// /Users/jeremie/ANTLR/cs.g:587:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_method_body8007);
			block569=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block569.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 164, method_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_body"


	public static class member_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_name"
	// /Users/jeremie/ANTLR/cs.g:588:1: member_name : qid ;
	public final csParser.member_name_return member_name() throws RecognitionException {
		csParser.member_name_return retval = new csParser.member_name_return();
		retval.start = input.LT(1);
		int member_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope qid570 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:588:12: ( qid )
			// /Users/jeremie/ANTLR/cs.g:589:9: qid
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_qid_in_member_name8022);
			qid570=qid();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, qid570.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 165, member_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_name"


	public static class property_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "property_declaration"
	// /Users/jeremie/ANTLR/cs.g:592:1: property_declaration : member_name '{' accessor_declarations '}' ;
	public final csParser.property_declaration_return property_declaration() throws RecognitionException {
		csParser.property_declaration_return retval = new csParser.property_declaration_return();
		retval.start = input.LT(1);
		int property_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal572=null;
		Token char_literal574=null;
		ParserRuleReturnScope member_name571 =null;
		ParserRuleReturnScope accessor_declarations573 =null;

		CommonTree char_literal572_tree=null;
		CommonTree char_literal574_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:592:21: ( member_name '{' accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:593:9: member_name '{' accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_name_in_property_declaration8055);
			member_name571=member_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name571.getTree());

			char_literal572=(Token)match(input,197,FOLLOW_197_in_property_declaration8059); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal572_tree = (CommonTree)adaptor.create(char_literal572);
			adaptor.addChild(root_0, char_literal572_tree);
			}

			pushFollow(FOLLOW_accessor_declarations_in_property_declaration8063);
			accessor_declarations573=accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations573.getTree());

			char_literal574=(Token)match(input,201,FOLLOW_201_in_property_declaration8067); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal574_tree = (CommonTree)adaptor.create(char_literal574);
			adaptor.addChild(root_0, char_literal574_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 166, property_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "property_declaration"


	public static class accessor_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "accessor_declarations"
	// /Users/jeremie/ANTLR/cs.g:594:1: accessor_declarations : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
	public final csParser.accessor_declarations_return accessor_declarations() throws RecognitionException {
		csParser.accessor_declarations_return retval = new csParser.accessor_declarations_return();
		retval.start = input.LT(1);
		int accessor_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes575 =null;
		ParserRuleReturnScope get_accessor_declaration576 =null;
		ParserRuleReturnScope attributes577 =null;
		ParserRuleReturnScope set_accessor_declaration578 =null;
		ParserRuleReturnScope set_accessor_declaration579 =null;
		ParserRuleReturnScope attributes580 =null;
		ParserRuleReturnScope get_accessor_declaration581 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:594:22: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
			// /Users/jeremie/ANTLR/cs.g:595:9: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:595:9: ( attributes )?
			int alt157=2;
			int LA157_0 = input.LA(1);
			if ( (LA157_0==91) ) {
				alt157=1;
			}
			switch (alt157) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:595:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_accessor_declarations8082);
					attributes575=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes575.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:596:17: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			int alt162=2;
			switch ( input.LA(1) ) {
			case 140:
			case 161:
			case 163:
			case 164:
				{
				int LA162_1 = input.LA(2);
				if ( (LA162_1==133) ) {
					alt162=1;
				}
				else if ( (LA162_1==172) ) {
					alt162=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 162, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 133:
				{
				alt162=1;
				}
				break;
			case 172:
				{
				alt162=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 162, 0, input);
				throw nvae;
			}
			switch (alt162) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:596:18: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
					{
					pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations8102);
					get_accessor_declaration576=get_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration576.getTree());

					// /Users/jeremie/ANTLR/cs.g:596:45: ( attributes )?
					int alt158=2;
					int LA158_0 = input.LA(1);
					if ( (LA158_0==91) ) {
						alt158=1;
					}
					switch (alt158) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:596:45: attributes
							{
							pushFollow(FOLLOW_attributes_in_accessor_declarations8106);
							attributes577=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes577.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:596:59: ( set_accessor_declaration )?
					int alt159=2;
					int LA159_0 = input.LA(1);
					if ( (LA159_0==140||LA159_0==161||(LA159_0 >= 163 && LA159_0 <= 164)||LA159_0==172) ) {
						alt159=1;
					}
					switch (alt159) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:596:59: set_accessor_declaration
							{
							pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations8111);
							set_accessor_declaration578=set_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration578.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:597:19: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
					{
					pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations8132);
					set_accessor_declaration579=set_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration579.getTree());

					// /Users/jeremie/ANTLR/cs.g:597:46: ( attributes )?
					int alt160=2;
					int LA160_0 = input.LA(1);
					if ( (LA160_0==91) ) {
						alt160=1;
					}
					switch (alt160) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:597:46: attributes
							{
							pushFollow(FOLLOW_attributes_in_accessor_declarations8136);
							attributes580=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes580.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:597:60: ( get_accessor_declaration )?
					int alt161=2;
					int LA161_0 = input.LA(1);
					if ( (LA161_0==133||LA161_0==140||LA161_0==161||(LA161_0 >= 163 && LA161_0 <= 164)) ) {
						alt161=1;
					}
					switch (alt161) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:597:60: get_accessor_declaration
							{
							pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations8141);
							get_accessor_declaration581=get_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration581.getTree());

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 167, accessor_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "accessor_declarations"


	public static class get_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "get_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:598:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
	public final csParser.get_accessor_declaration_return get_accessor_declaration() throws RecognitionException {
		csParser.get_accessor_declaration_return retval = new csParser.get_accessor_declaration_return();
		retval.start = input.LT(1);
		int get_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal583=null;
		ParserRuleReturnScope accessor_modifier582 =null;
		ParserRuleReturnScope accessor_body584 =null;

		CommonTree string_literal583_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:598:25: ( ( accessor_modifier )? 'get' accessor_body )
			// /Users/jeremie/ANTLR/cs.g:599:9: ( accessor_modifier )? 'get' accessor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:599:9: ( accessor_modifier )?
			int alt163=2;
			int LA163_0 = input.LA(1);
			if ( (LA163_0==140||LA163_0==161||(LA163_0 >= 163 && LA163_0 <= 164)) ) {
				alt163=1;
			}
			switch (alt163) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:599:9: accessor_modifier
					{
					pushFollow(FOLLOW_accessor_modifier_in_get_accessor_declaration8158);
					accessor_modifier582=accessor_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier582.getTree());

					}
					break;

			}

			string_literal583=(Token)match(input,133,FOLLOW_133_in_get_accessor_declaration8163); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal583_tree = (CommonTree)adaptor.create(string_literal583);
			adaptor.addChild(root_0, string_literal583_tree);
			}

			pushFollow(FOLLOW_accessor_body_in_get_accessor_declaration8167);
			accessor_body584=accessor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body584.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 168, get_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "get_accessor_declaration"


	public static class set_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "set_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:600:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
	public final csParser.set_accessor_declaration_return set_accessor_declaration() throws RecognitionException {
		csParser.set_accessor_declaration_return retval = new csParser.set_accessor_declaration_return();
		retval.start = input.LT(1);
		int set_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal586=null;
		ParserRuleReturnScope accessor_modifier585 =null;
		ParserRuleReturnScope accessor_body587 =null;

		CommonTree string_literal586_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:600:25: ( ( accessor_modifier )? 'set' accessor_body )
			// /Users/jeremie/ANTLR/cs.g:601:9: ( accessor_modifier )? 'set' accessor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:601:9: ( accessor_modifier )?
			int alt164=2;
			int LA164_0 = input.LA(1);
			if ( (LA164_0==140||LA164_0==161||(LA164_0 >= 163 && LA164_0 <= 164)) ) {
				alt164=1;
			}
			switch (alt164) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:601:9: accessor_modifier
					{
					pushFollow(FOLLOW_accessor_modifier_in_set_accessor_declaration8182);
					accessor_modifier585=accessor_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier585.getTree());

					}
					break;

			}

			string_literal586=(Token)match(input,172,FOLLOW_172_in_set_accessor_declaration8187); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal586_tree = (CommonTree)adaptor.create(string_literal586);
			adaptor.addChild(root_0, string_literal586_tree);
			}

			pushFollow(FOLLOW_accessor_body_in_set_accessor_declaration8191);
			accessor_body587=accessor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body587.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 169, set_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "set_accessor_declaration"


	public static class accessor_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "accessor_modifier"
	// /Users/jeremie/ANTLR/cs.g:602:1: accessor_modifier : ( 'public' | 'protected' | 'private' | 'internal' );
	public final csParser.accessor_modifier_return accessor_modifier() throws RecognitionException {
		csParser.accessor_modifier_return retval = new csParser.accessor_modifier_return();
		retval.start = input.LT(1);
		int accessor_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set588=null;

		CommonTree set588_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:602:18: ( 'public' | 'protected' | 'private' | 'internal' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set588=input.LT(1);
			if ( input.LA(1)==140||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 164) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set588));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 170, accessor_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "accessor_modifier"


	public static class accessor_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "accessor_body"
	// /Users/jeremie/ANTLR/cs.g:604:1: accessor_body : block ;
	public final csParser.accessor_body_return accessor_body() throws RecognitionException {
		csParser.accessor_body_return retval = new csParser.accessor_body_return();
		retval.start = input.LT(1);
		int accessor_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block589 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:604:14: ( block )
			// /Users/jeremie/ANTLR/cs.g:605:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_accessor_body8233);
			block589=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block589.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 171, accessor_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "accessor_body"


	public static class event_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "event_declaration"
	// /Users/jeremie/ANTLR/cs.g:608:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) ;
	public final csParser.event_declaration_return event_declaration() throws RecognitionException {
		csParser.event_declaration_return retval = new csParser.event_declaration_return();
		retval.start = input.LT(1);
		int event_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal590=null;
		Token char_literal593=null;
		Token char_literal595=null;
		Token char_literal597=null;
		ParserRuleReturnScope type591 =null;
		ParserRuleReturnScope member_name592 =null;
		ParserRuleReturnScope event_accessor_declarations594 =null;
		ParserRuleReturnScope variable_declarators596 =null;

		CommonTree string_literal590_tree=null;
		CommonTree char_literal593_tree=null;
		CommonTree char_literal595_tree=null;
		CommonTree char_literal597_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:608:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) )
			// /Users/jeremie/ANTLR/cs.g:609:9: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal590=(Token)match(input,123,FOLLOW_123_in_event_declaration8250); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal590_tree = (CommonTree)adaptor.create(string_literal590);
			adaptor.addChild(root_0, string_literal590_tree);
			}

			pushFollow(FOLLOW_type_in_event_declaration8254);
			type591=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type591.getTree());

			// /Users/jeremie/ANTLR/cs.g:610:17: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			int alt165=2;
			int LA165_0 = input.LA(1);
			if ( (LA165_0==103||LA165_0==106||LA165_0==109||LA165_0==114||LA165_0==119||LA165_0==129||LA165_0==138||LA165_0==146||LA165_0==151||LA165_0==169||LA165_0==173||LA165_0==177||(LA165_0 >= 185 && LA165_0 <= 186)||LA165_0==189) && (synpred25_cs())) {
				alt165=1;
			}
			else if ( (LA165_0==IDENTIFIER||LA165_0==95||(LA165_0 >= 97 && LA165_0 <= 98)||(LA165_0 >= 100 && LA165_0 <= 101)||LA165_0==105||LA165_0==117||LA165_0==120||LA165_0==122||LA165_0==126||LA165_0==132||LA165_0==135||LA165_0==141||(LA165_0 >= 143 && LA165_0 <= 144)||(LA165_0 >= 147 && LA165_0 <= 148)||LA165_0==152||LA165_0==154||LA165_0==157||LA165_0==160||LA165_0==162||LA165_0==167||(LA165_0 >= 171 && LA165_0 <= 172)||LA165_0==183||LA165_0==190||LA165_0==194||LA165_0==196) ) {
				int LA165_2 = input.LA(2);
				if ( (synpred25_cs()) ) {
					alt165=1;
				}
				else if ( (true) ) {
					alt165=2;
				}

			}
			else if ( (LA165_0==Character_literal||LA165_0==FALSE||LA165_0==Hex_number||(LA165_0 >= NULL && LA165_0 <= NUMBER)||LA165_0==Real_literal||LA165_0==STRINGLITERAL||LA165_0==TRUE||LA165_0==Verbatim_string_literal) && (synpred25_cs())) {
				alt165=1;
			}

			switch (alt165) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:610:18: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
					{
					pushFollow(FOLLOW_member_name_in_event_declaration8283);
					member_name592=member_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name592.getTree());

					char_literal593=(Token)match(input,197,FOLLOW_197_in_event_declaration8287); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal593_tree = (CommonTree)adaptor.create(char_literal593);
					adaptor.addChild(root_0, char_literal593_tree);
					}

					pushFollow(FOLLOW_event_accessor_declarations_in_event_declaration8291);
					event_accessor_declarations594=event_accessor_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, event_accessor_declarations594.getTree());

					char_literal595=(Token)match(input,201,FOLLOW_201_in_event_declaration8295); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal595_tree = (CommonTree)adaptor.create(char_literal595);
					adaptor.addChild(root_0, char_literal595_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:611:19: variable_declarators ';'
					{
					pushFollow(FOLLOW_variable_declarators_in_event_declaration8315);
					variable_declarators596=variable_declarators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators596.getTree());

					char_literal597=(Token)match(input,SEMI,FOLLOW_SEMI_in_event_declaration8319); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal597_tree = (CommonTree)adaptor.create(char_literal597);
					adaptor.addChild(root_0, char_literal597_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 172, event_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "event_declaration"


	public static class event_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "event_modifiers"
	// /Users/jeremie/ANTLR/cs.g:613:1: event_modifiers : ( modifier )+ ;
	public final csParser.event_modifiers_return event_modifiers() throws RecognitionException {
		csParser.event_modifiers_return retval = new csParser.event_modifiers_return();
		retval.start = input.LT(1);
		int event_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier598 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:613:16: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:614:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:614:9: ( modifier )+
			int cnt166=0;
			loop166:
			while (true) {
				int alt166=2;
				int LA166_0 = input.LA(1);
				if ( (LA166_0==96||LA166_0==125||LA166_0==140||LA166_0==150||LA166_0==156||LA166_0==161||(LA166_0 >= 163 && LA166_0 <= 165)||LA166_0==170||LA166_0==176||LA166_0==188||LA166_0==191||LA166_0==193) ) {
					alt166=1;
				}

				switch (alt166) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:614:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_event_modifiers8359);
					modifier598=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier598.getTree());

					}
					break;

				default :
					if ( cnt166 >= 1 ) break loop166;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(166, input);
					throw eee;
				}
				cnt166++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 173, event_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "event_modifiers"


	public static class event_accessor_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "event_accessor_declarations"
	// /Users/jeremie/ANTLR/cs.g:615:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
	public final csParser.event_accessor_declarations_return event_accessor_declarations() throws RecognitionException {
		csParser.event_accessor_declarations_return retval = new csParser.event_accessor_declarations_return();
		retval.start = input.LT(1);
		int event_accessor_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes599 =null;
		ParserRuleReturnScope add_accessor_declaration600 =null;
		ParserRuleReturnScope attributes601 =null;
		ParserRuleReturnScope remove_accessor_declaration602 =null;
		ParserRuleReturnScope remove_accessor_declaration603 =null;
		ParserRuleReturnScope attributes604 =null;
		ParserRuleReturnScope add_accessor_declaration605 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:615:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
			// /Users/jeremie/ANTLR/cs.g:616:9: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:616:9: ( attributes )?
			int alt167=2;
			int LA167_0 = input.LA(1);
			if ( (LA167_0==91) ) {
				alt167=1;
			}
			switch (alt167) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:616:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_event_accessor_declarations8375);
					attributes599=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes599.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:616:23: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			int alt170=2;
			int LA170_0 = input.LA(1);
			if ( (LA170_0==97) ) {
				alt170=1;
			}
			else if ( (LA170_0==167) ) {
				alt170=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 170, 0, input);
				throw nvae;
			}

			switch (alt170) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:616:24: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
					{
					// /Users/jeremie/ANTLR/cs.g:616:24: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
					// /Users/jeremie/ANTLR/cs.g:616:25: add_accessor_declaration ( attributes )? remove_accessor_declaration
					{
					pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations8382);
					add_accessor_declaration600=add_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration600.getTree());

					// /Users/jeremie/ANTLR/cs.g:616:52: ( attributes )?
					int alt168=2;
					int LA168_0 = input.LA(1);
					if ( (LA168_0==91) ) {
						alt168=1;
					}
					switch (alt168) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:616:52: attributes
							{
							pushFollow(FOLLOW_attributes_in_event_accessor_declarations8386);
							attributes601=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes601.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8391);
					remove_accessor_declaration602=remove_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration602.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:617:25: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
					{
					// /Users/jeremie/ANTLR/cs.g:617:25: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
					// /Users/jeremie/ANTLR/cs.g:617:26: remove_accessor_declaration ( attributes )? add_accessor_declaration
					{
					pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8419);
					remove_accessor_declaration603=remove_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration603.getTree());

					// /Users/jeremie/ANTLR/cs.g:617:56: ( attributes )?
					int alt169=2;
					int LA169_0 = input.LA(1);
					if ( (LA169_0==91) ) {
						alt169=1;
					}
					switch (alt169) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:617:56: attributes
							{
							pushFollow(FOLLOW_attributes_in_event_accessor_declarations8423);
							attributes604=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes604.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations8428);
					add_accessor_declaration605=add_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration605.getTree());

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 174, event_accessor_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "event_accessor_declarations"


	public static class add_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "add_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:618:1: add_accessor_declaration : 'add' block ;
	public final csParser.add_accessor_declaration_return add_accessor_declaration() throws RecognitionException {
		csParser.add_accessor_declaration_return retval = new csParser.add_accessor_declaration_return();
		retval.start = input.LT(1);
		int add_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal606=null;
		ParserRuleReturnScope block607 =null;

		CommonTree string_literal606_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:618:25: ( 'add' block )
			// /Users/jeremie/ANTLR/cs.g:619:9: 'add' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal606=(Token)match(input,97,FOLLOW_97_in_add_accessor_declaration8445); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal606_tree = (CommonTree)adaptor.create(string_literal606);
			adaptor.addChild(root_0, string_literal606_tree);
			}

			pushFollow(FOLLOW_block_in_add_accessor_declaration8449);
			block607=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block607.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 175, add_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "add_accessor_declaration"


	public static class remove_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "remove_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:620:1: remove_accessor_declaration : 'remove' block ;
	public final csParser.remove_accessor_declaration_return remove_accessor_declaration() throws RecognitionException {
		csParser.remove_accessor_declaration_return retval = new csParser.remove_accessor_declaration_return();
		retval.start = input.LT(1);
		int remove_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal608=null;
		ParserRuleReturnScope block609 =null;

		CommonTree string_literal608_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:620:28: ( 'remove' block )
			// /Users/jeremie/ANTLR/cs.g:621:9: 'remove' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal608=(Token)match(input,167,FOLLOW_167_in_remove_accessor_declaration8464); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal608_tree = (CommonTree)adaptor.create(string_literal608);
			adaptor.addChild(root_0, string_literal608_tree);
			}

			pushFollow(FOLLOW_block_in_remove_accessor_declaration8468);
			block609=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block609.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 176, remove_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "remove_accessor_declaration"


	public static class enum_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_declaration"
	// /Users/jeremie/ANTLR/cs.g:626:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
	public final csParser.enum_declaration_return enum_declaration() throws RecognitionException {
		csParser.enum_declaration_return retval = new csParser.enum_declaration_return();
		retval.start = input.LT(1);
		int enum_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal610=null;
		Token char_literal614=null;
		ParserRuleReturnScope identifier611 =null;
		ParserRuleReturnScope enum_base612 =null;
		ParserRuleReturnScope enum_body613 =null;

		CommonTree string_literal610_tree=null;
		CommonTree char_literal614_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:626:17: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:627:9: 'enum' identifier ( enum_base )? enum_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal610=(Token)match(input,ENUM,FOLLOW_ENUM_in_enum_declaration8487); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal610_tree = (CommonTree)adaptor.create(string_literal610);
			adaptor.addChild(root_0, string_literal610_tree);
			}

			pushFollow(FOLLOW_identifier_in_enum_declaration8491);
			identifier611=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier611.getTree());

			// /Users/jeremie/ANTLR/cs.g:627:31: ( enum_base )?
			int alt171=2;
			int LA171_0 = input.LA(1);
			if ( (LA171_0==79) ) {
				alt171=1;
			}
			switch (alt171) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:627:31: enum_base
					{
					pushFollow(FOLLOW_enum_base_in_enum_declaration8495);
					enum_base612=enum_base();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_base612.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_enum_body_in_enum_declaration8500);
			enum_body613=enum_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_body613.getTree());

			// /Users/jeremie/ANTLR/cs.g:627:56: ( ';' )?
			int alt172=2;
			int LA172_0 = input.LA(1);
			if ( (LA172_0==SEMI) ) {
				alt172=1;
			}
			switch (alt172) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:627:56: ';'
					{
					char_literal614=(Token)match(input,SEMI,FOLLOW_SEMI_in_enum_declaration8504); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal614_tree = (CommonTree)adaptor.create(char_literal614);
					adaptor.addChild(root_0, char_literal614_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 177, enum_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_declaration"


	public static class enum_base_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_base"
	// /Users/jeremie/ANTLR/cs.g:628:1: enum_base : ':' integral_type ;
	public final csParser.enum_base_return enum_base() throws RecognitionException {
		csParser.enum_base_return retval = new csParser.enum_base_return();
		retval.start = input.LT(1);
		int enum_base_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal615=null;
		ParserRuleReturnScope integral_type616 =null;

		CommonTree char_literal615_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:628:10: ( ':' integral_type )
			// /Users/jeremie/ANTLR/cs.g:629:9: ':' integral_type
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal615=(Token)match(input,79,FOLLOW_79_in_enum_base8520); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal615_tree = (CommonTree)adaptor.create(char_literal615);
			adaptor.addChild(root_0, char_literal615_tree);
			}

			pushFollow(FOLLOW_integral_type_in_enum_base8524);
			integral_type616=integral_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, integral_type616.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 178, enum_base_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_base"


	public static class enum_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_body"
	// /Users/jeremie/ANTLR/cs.g:630:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
	public final csParser.enum_body_return enum_body() throws RecognitionException {
		csParser.enum_body_return retval = new csParser.enum_body_return();
		retval.start = input.LT(1);
		int enum_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal617=null;
		Token char_literal619=null;
		Token char_literal620=null;
		ParserRuleReturnScope enum_member_declarations618 =null;

		CommonTree char_literal617_tree=null;
		CommonTree char_literal619_tree=null;
		CommonTree char_literal620_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:630:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
			// /Users/jeremie/ANTLR/cs.g:631:9: '{' ( enum_member_declarations ( ',' )? )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal617=(Token)match(input,197,FOLLOW_197_in_enum_body8539); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal617_tree = (CommonTree)adaptor.create(char_literal617);
			adaptor.addChild(root_0, char_literal617_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:631:13: ( enum_member_declarations ( ',' )? )?
			int alt174=2;
			int LA174_0 = input.LA(1);
			if ( (LA174_0==IDENTIFIER||LA174_0==91||LA174_0==95||(LA174_0 >= 97 && LA174_0 <= 98)||(LA174_0 >= 100 && LA174_0 <= 101)||LA174_0==105||LA174_0==117||LA174_0==120||LA174_0==122||LA174_0==126||LA174_0==132||LA174_0==135||LA174_0==141||(LA174_0 >= 143 && LA174_0 <= 144)||(LA174_0 >= 147 && LA174_0 <= 148)||LA174_0==152||LA174_0==154||LA174_0==157||LA174_0==160||LA174_0==162||LA174_0==167||(LA174_0 >= 171 && LA174_0 <= 172)||LA174_0==183||LA174_0==190||LA174_0==194||LA174_0==196) ) {
				alt174=1;
			}
			switch (alt174) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:631:14: enum_member_declarations ( ',' )?
					{
					pushFollow(FOLLOW_enum_member_declarations_in_enum_body8542);
					enum_member_declarations618=enum_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declarations618.getTree());

					// /Users/jeremie/ANTLR/cs.g:631:39: ( ',' )?
					int alt173=2;
					int LA173_0 = input.LA(1);
					if ( (LA173_0==74) ) {
						alt173=1;
					}
					switch (alt173) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:631:39: ','
							{
							char_literal619=(Token)match(input,74,FOLLOW_74_in_enum_body8544); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal619_tree = (CommonTree)adaptor.create(char_literal619);
							adaptor.addChild(root_0, char_literal619_tree);
							}

							}
							break;

					}

					}
					break;

			}

			char_literal620=(Token)match(input,201,FOLLOW_201_in_enum_body8551); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal620_tree = (CommonTree)adaptor.create(char_literal620);
			adaptor.addChild(root_0, char_literal620_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 179, enum_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_body"


	public static class enum_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:632:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
	public final csParser.enum_member_declarations_return enum_member_declarations() throws RecognitionException {
		csParser.enum_member_declarations_return retval = new csParser.enum_member_declarations_return();
		retval.start = input.LT(1);
		int enum_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal622=null;
		ParserRuleReturnScope enum_member_declaration621 =null;
		ParserRuleReturnScope enum_member_declaration623 =null;

		CommonTree char_literal622_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:632:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
			// /Users/jeremie/ANTLR/cs.g:633:9: enum_member_declaration ( ',' enum_member_declaration )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations8566);
			enum_member_declaration621=enum_member_declaration();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration621.getTree());

			// /Users/jeremie/ANTLR/cs.g:633:33: ( ',' enum_member_declaration )*
			loop175:
			while (true) {
				int alt175=2;
				int LA175_0 = input.LA(1);
				if ( (LA175_0==74) ) {
					int LA175_1 = input.LA(2);
					if ( (LA175_1==IDENTIFIER||LA175_1==91||LA175_1==95||(LA175_1 >= 97 && LA175_1 <= 98)||(LA175_1 >= 100 && LA175_1 <= 101)||LA175_1==105||LA175_1==117||LA175_1==120||LA175_1==122||LA175_1==126||LA175_1==132||LA175_1==135||LA175_1==141||(LA175_1 >= 143 && LA175_1 <= 144)||(LA175_1 >= 147 && LA175_1 <= 148)||LA175_1==152||LA175_1==154||LA175_1==157||LA175_1==160||LA175_1==162||LA175_1==167||(LA175_1 >= 171 && LA175_1 <= 172)||LA175_1==183||LA175_1==190||LA175_1==194||LA175_1==196) ) {
						alt175=1;
					}

				}

				switch (alt175) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:633:34: ',' enum_member_declaration
					{
					char_literal622=(Token)match(input,74,FOLLOW_74_in_enum_member_declarations8569); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal622_tree = (CommonTree)adaptor.create(char_literal622);
					adaptor.addChild(root_0, char_literal622_tree);
					}

					pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations8571);
					enum_member_declaration623=enum_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration623.getTree());

					}
					break;

				default :
					break loop175;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 180, enum_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_member_declarations"


	public static class enum_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:634:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
	public final csParser.enum_member_declaration_return enum_member_declaration() throws RecognitionException {
		csParser.enum_member_declaration_return retval = new csParser.enum_member_declaration_return();
		retval.start = input.LT(1);
		int enum_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal626=null;
		ParserRuleReturnScope attributes624 =null;
		ParserRuleReturnScope identifier625 =null;
		ParserRuleReturnScope expression627 =null;

		CommonTree char_literal626_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:634:24: ( ( attributes )? identifier ( '=' expression )? )
			// /Users/jeremie/ANTLR/cs.g:635:9: ( attributes )? identifier ( '=' expression )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:635:9: ( attributes )?
			int alt176=2;
			int LA176_0 = input.LA(1);
			if ( (LA176_0==91) ) {
				alt176=1;
			}
			switch (alt176) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:635:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_enum_member_declaration8588);
					attributes624=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes624.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_identifier_in_enum_member_declaration8593);
			identifier625=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier625.getTree());

			// /Users/jeremie/ANTLR/cs.g:635:36: ( '=' expression )?
			int alt177=2;
			int LA177_0 = input.LA(1);
			if ( (LA177_0==85) ) {
				alt177=1;
			}
			switch (alt177) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:635:37: '=' expression
					{
					char_literal626=(Token)match(input,85,FOLLOW_85_in_enum_member_declaration8598); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal626_tree = (CommonTree)adaptor.create(char_literal626);
					adaptor.addChild(root_0, char_literal626_tree);
					}

					pushFollow(FOLLOW_expression_in_enum_member_declaration8602);
					expression627=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression627.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 181, enum_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_member_declaration"


	public static class integral_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "integral_type"
	// /Users/jeremie/ANTLR/cs.g:640:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
	public final csParser.integral_type_return integral_type() throws RecognitionException {
		csParser.integral_type_return retval = new csParser.integral_type_return();
		retval.start = input.LT(1);
		int integral_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set628=null;

		CommonTree set628_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:640:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set628=input.LT(1);
			if ( input.LA(1)==106||input.LA(1)==109||input.LA(1)==138||input.LA(1)==146||input.LA(1)==169||input.LA(1)==173||(input.LA(1) >= 185 && input.LA(1) <= 186)||input.LA(1)==189 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set628));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 182, integral_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "integral_type"


	public static class delegate_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_declaration"
	// /Users/jeremie/ANTLR/cs.g:644:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	public final csParser.delegate_declaration_return delegate_declaration() throws RecognitionException {
		csParser.delegate_declaration_return retval = new csParser.delegate_declaration_return();
		retval.start = input.LT(1);
		int delegate_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal629=null;
		Token char_literal633=null;
		Token char_literal635=null;
		Token char_literal637=null;
		ParserRuleReturnScope return_type630 =null;
		ParserRuleReturnScope identifier631 =null;
		ParserRuleReturnScope variant_generic_parameter_list632 =null;
		ParserRuleReturnScope formal_parameter_list634 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses636 =null;

		CommonTree string_literal629_tree=null;
		CommonTree char_literal633_tree=null;
		CommonTree char_literal635_tree=null;
		CommonTree char_literal637_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:644:21: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			// /Users/jeremie/ANTLR/cs.g:645:9: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal629=(Token)match(input,116,FOLLOW_116_in_delegate_declaration8673); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal629_tree = (CommonTree)adaptor.create(string_literal629);
			adaptor.addChild(root_0, string_literal629_tree);
			}

			pushFollow(FOLLOW_return_type_in_delegate_declaration8677);
			return_type630=return_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type630.getTree());

			pushFollow(FOLLOW_identifier_in_delegate_declaration8681);
			identifier631=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier631.getTree());

			// /Users/jeremie/ANTLR/cs.g:645:48: ( variant_generic_parameter_list )?
			int alt178=2;
			int LA178_0 = input.LA(1);
			if ( (LA178_0==81) ) {
				alt178=1;
			}
			switch (alt178) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:645:48: variant_generic_parameter_list
					{
					pushFollow(FOLLOW_variant_generic_parameter_list_in_delegate_declaration8684);
					variant_generic_parameter_list632=variant_generic_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_generic_parameter_list632.getTree());

					}
					break;

			}

			char_literal633=(Token)match(input,68,FOLLOW_68_in_delegate_declaration8706); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal633_tree = (CommonTree)adaptor.create(char_literal633);
			adaptor.addChild(root_0, char_literal633_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:646:23: ( formal_parameter_list )?
			int alt179=2;
			int LA179_0 = input.LA(1);
			if ( (LA179_0==IDENTIFIER||LA179_0==91||LA179_0==95||(LA179_0 >= 97 && LA179_0 <= 98)||(LA179_0 >= 100 && LA179_0 <= 101)||LA179_0==103||(LA179_0 >= 105 && LA179_0 <= 106)||LA179_0==109||LA179_0==114||LA179_0==117||(LA179_0 >= 119 && LA179_0 <= 120)||LA179_0==122||LA179_0==126||LA179_0==129||LA179_0==132||LA179_0==135||LA179_0==138||LA179_0==141||(LA179_0 >= 143 && LA179_0 <= 144)||(LA179_0 >= 146 && LA179_0 <= 148)||(LA179_0 >= 151 && LA179_0 <= 152)||(LA179_0 >= 154 && LA179_0 <= 155)||(LA179_0 >= 157 && LA179_0 <= 158)||LA179_0==160||LA179_0==162||(LA179_0 >= 166 && LA179_0 <= 167)||LA179_0==169||(LA179_0 >= 171 && LA179_0 <= 173)||LA179_0==177||LA179_0==180||LA179_0==183||(LA179_0 >= 185 && LA179_0 <= 186)||(LA179_0 >= 189 && LA179_0 <= 190)||LA179_0==192||LA179_0==194||LA179_0==196) ) {
				alt179=1;
			}
			switch (alt179) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:646:23: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_delegate_declaration8710);
					formal_parameter_list634=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list634.getTree());

					}
					break;

			}

			char_literal635=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delegate_declaration8715); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal635_tree = (CommonTree)adaptor.create(char_literal635);
			adaptor.addChild(root_0, char_literal635_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:646:54: ( type_parameter_constraints_clauses )?
			int alt180=2;
			int LA180_0 = input.LA(1);
			if ( (LA180_0==194) ) {
				alt180=1;
			}
			switch (alt180) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:646:54: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration8719);
					type_parameter_constraints_clauses636=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses636.getTree());

					}
					break;

			}

			char_literal637=(Token)match(input,SEMI,FOLLOW_SEMI_in_delegate_declaration8724); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal637_tree = (CommonTree)adaptor.create(char_literal637);
			adaptor.addChild(root_0, char_literal637_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 183, delegate_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_declaration"


	public static class delegate_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_modifiers"
	// /Users/jeremie/ANTLR/cs.g:647:1: delegate_modifiers : ( modifier )+ ;
	public final csParser.delegate_modifiers_return delegate_modifiers() throws RecognitionException {
		csParser.delegate_modifiers_return retval = new csParser.delegate_modifiers_return();
		retval.start = input.LT(1);
		int delegate_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier638 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:647:19: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:648:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:648:9: ( modifier )+
			int cnt181=0;
			loop181:
			while (true) {
				int alt181=2;
				int LA181_0 = input.LA(1);
				if ( (LA181_0==96||LA181_0==125||LA181_0==140||LA181_0==150||LA181_0==156||LA181_0==161||(LA181_0 >= 163 && LA181_0 <= 165)||LA181_0==170||LA181_0==176||LA181_0==188||LA181_0==191||LA181_0==193) ) {
					alt181=1;
				}

				switch (alt181) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:648:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_delegate_modifiers8739);
					modifier638=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier638.getTree());

					}
					break;

				default :
					if ( cnt181 >= 1 ) break loop181;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(181, input);
					throw eee;
				}
				cnt181++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 184, delegate_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_modifiers"


	public static class variant_generic_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variant_generic_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:650:1: variant_generic_parameter_list : '<' variant_type_parameters '>' ;
	public final csParser.variant_generic_parameter_list_return variant_generic_parameter_list() throws RecognitionException {
		csParser.variant_generic_parameter_list_return retval = new csParser.variant_generic_parameter_list_return();
		retval.start = input.LT(1);
		int variant_generic_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal639=null;
		Token char_literal641=null;
		ParserRuleReturnScope variant_type_parameters640 =null;

		CommonTree char_literal639_tree=null;
		CommonTree char_literal641_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:650:31: ( '<' variant_type_parameters '>' )
			// /Users/jeremie/ANTLR/cs.g:651:9: '<' variant_type_parameters '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal639=(Token)match(input,81,FOLLOW_81_in_variant_generic_parameter_list8756); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal639_tree = (CommonTree)adaptor.create(char_literal639);
			adaptor.addChild(root_0, char_literal639_tree);
			}

			pushFollow(FOLLOW_variant_type_parameters_in_variant_generic_parameter_list8760);
			variant_type_parameters640=variant_type_parameters();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameters640.getTree());

			char_literal641=(Token)match(input,GT,FOLLOW_GT_in_variant_generic_parameter_list8764); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal641_tree = (CommonTree)adaptor.create(char_literal641);
			adaptor.addChild(root_0, char_literal641_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 185, variant_generic_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variant_generic_parameter_list"


	public static class variant_type_parameters_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variant_type_parameters"
	// /Users/jeremie/ANTLR/cs.g:652:1: variant_type_parameters : variant_type_variable_name ( ',' variant_type_variable_name )* ;
	public final csParser.variant_type_parameters_return variant_type_parameters() throws RecognitionException {
		csParser.variant_type_parameters_return retval = new csParser.variant_type_parameters_return();
		retval.start = input.LT(1);
		int variant_type_parameters_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal643=null;
		ParserRuleReturnScope variant_type_variable_name642 =null;
		ParserRuleReturnScope variant_type_variable_name644 =null;

		CommonTree char_literal643_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:652:24: ( variant_type_variable_name ( ',' variant_type_variable_name )* )
			// /Users/jeremie/ANTLR/cs.g:653:9: variant_type_variable_name ( ',' variant_type_variable_name )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters8779);
			variant_type_variable_name642=variant_type_variable_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_variable_name642.getTree());

			// /Users/jeremie/ANTLR/cs.g:653:36: ( ',' variant_type_variable_name )*
			loop182:
			while (true) {
				int alt182=2;
				int LA182_0 = input.LA(1);
				if ( (LA182_0==74) ) {
					alt182=1;
				}

				switch (alt182) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:653:37: ',' variant_type_variable_name
					{
					char_literal643=(Token)match(input,74,FOLLOW_74_in_variant_type_parameters8782); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal643_tree = (CommonTree)adaptor.create(char_literal643);
					adaptor.addChild(root_0, char_literal643_tree);
					}

					pushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters8784);
					variant_type_variable_name644=variant_type_variable_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_variable_name644.getTree());

					}
					break;

				default :
					break loop182;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 186, variant_type_parameters_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variant_type_parameters"


	public static class variant_type_variable_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variant_type_variable_name"
	// /Users/jeremie/ANTLR/cs.g:654:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
	public final csParser.variant_type_variable_name_return variant_type_variable_name() throws RecognitionException {
		csParser.variant_type_variable_name_return retval = new csParser.variant_type_variable_name_return();
		retval.start = input.LT(1);
		int variant_type_variable_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes645 =null;
		ParserRuleReturnScope variance_annotation646 =null;
		ParserRuleReturnScope type_variable_name647 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:654:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
			// /Users/jeremie/ANTLR/cs.g:655:9: ( attributes )? ( variance_annotation )? type_variable_name
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:655:9: ( attributes )?
			int alt183=2;
			int LA183_0 = input.LA(1);
			if ( (LA183_0==91) ) {
				alt183=1;
			}
			switch (alt183) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:655:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_variant_type_variable_name8801);
					attributes645=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes645.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:655:23: ( variance_annotation )?
			int alt184=2;
			int LA184_0 = input.LA(1);
			if ( (LA184_0==137||LA184_0==155) ) {
				alt184=1;
			}
			switch (alt184) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:655:23: variance_annotation
					{
					pushFollow(FOLLOW_variance_annotation_in_variant_type_variable_name8806);
					variance_annotation646=variance_annotation();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variance_annotation646.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_type_variable_name_in_variant_type_variable_name8811);
			type_variable_name647=type_variable_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_variable_name647.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 187, variant_type_variable_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variant_type_variable_name"


	public static class variance_annotation_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variance_annotation"
	// /Users/jeremie/ANTLR/cs.g:656:1: variance_annotation : ( 'in' | 'out' );
	public final csParser.variance_annotation_return variance_annotation() throws RecognitionException {
		csParser.variance_annotation_return retval = new csParser.variance_annotation_return();
		retval.start = input.LT(1);
		int variance_annotation_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set648=null;

		CommonTree set648_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:656:20: ( 'in' | 'out' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set648=input.LT(1);
			if ( input.LA(1)==137||input.LA(1)==155 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set648));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 188, variance_annotation_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variance_annotation"


	public static class type_parameter_constraints_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_parameter_constraints_clauses"
	// /Users/jeremie/ANTLR/cs.g:659:1: type_parameter_constraints_clauses : type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* ;
	public final csParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses() throws RecognitionException {
		csParser.type_parameter_constraints_clauses_return retval = new csParser.type_parameter_constraints_clauses_return();
		retval.start = input.LT(1);
		int type_parameter_constraints_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal650=null;
		ParserRuleReturnScope type_parameter_constraints_clause649 =null;
		ParserRuleReturnScope type_parameter_constraints_clause651 =null;

		CommonTree char_literal650_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:659:35: ( type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* )
			// /Users/jeremie/ANTLR/cs.g:660:9: type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses8846);
			type_parameter_constraints_clause649=type_parameter_constraints_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause649.getTree());

			// /Users/jeremie/ANTLR/cs.g:660:45: ( ',' type_parameter_constraints_clause )*
			loop185:
			while (true) {
				int alt185=2;
				int LA185_0 = input.LA(1);
				if ( (LA185_0==74) ) {
					alt185=1;
				}

				switch (alt185) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:660:46: ',' type_parameter_constraints_clause
					{
					char_literal650=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraints_clauses8851); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal650_tree = (CommonTree)adaptor.create(char_literal650);
					adaptor.addChild(root_0, char_literal650_tree);
					}

					pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses8855);
					type_parameter_constraints_clause651=type_parameter_constraints_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause651.getTree());

					}
					break;

				default :
					break loop185;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 189, type_parameter_constraints_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_parameter_constraints_clauses"


	public static class type_parameter_constraints_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_parameter_constraints_clause"
	// /Users/jeremie/ANTLR/cs.g:661:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
	public final csParser.type_parameter_constraints_clause_return type_parameter_constraints_clause() throws RecognitionException {
		csParser.type_parameter_constraints_clause_return retval = new csParser.type_parameter_constraints_clause_return();
		retval.start = input.LT(1);
		int type_parameter_constraints_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal652=null;
		Token char_literal654=null;
		ParserRuleReturnScope type_variable_name653 =null;
		ParserRuleReturnScope type_parameter_constraint_list655 =null;

		CommonTree string_literal652_tree=null;
		CommonTree char_literal654_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:661:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
			// /Users/jeremie/ANTLR/cs.g:662:9: 'where' type_variable_name ':' type_parameter_constraint_list
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal652=(Token)match(input,194,FOLLOW_194_in_type_parameter_constraints_clause8872); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal652_tree = (CommonTree)adaptor.create(string_literal652);
			adaptor.addChild(root_0, string_literal652_tree);
			}

			pushFollow(FOLLOW_type_variable_name_in_type_parameter_constraints_clause8876);
			type_variable_name653=type_variable_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_variable_name653.getTree());

			char_literal654=(Token)match(input,79,FOLLOW_79_in_type_parameter_constraints_clause8880); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal654_tree = (CommonTree)adaptor.create(char_literal654);
			adaptor.addChild(root_0, char_literal654_tree);
			}

			pushFollow(FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause8884);
			type_parameter_constraint_list655=type_parameter_constraint_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraint_list655.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 190, type_parameter_constraints_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_parameter_constraints_clause"


	public static class type_parameter_constraint_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_parameter_constraint_list"
	// /Users/jeremie/ANTLR/cs.g:664:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
	public final csParser.type_parameter_constraint_list_return type_parameter_constraint_list() throws RecognitionException {
		csParser.type_parameter_constraint_list_return retval = new csParser.type_parameter_constraint_list_return();
		retval.start = input.LT(1);
		int type_parameter_constraint_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set656=null;
		Token char_literal657=null;
		Token char_literal659=null;
		Token char_literal662=null;
		ParserRuleReturnScope secondary_constraint_list658 =null;
		ParserRuleReturnScope constructor_constraint660 =null;
		ParserRuleReturnScope secondary_constraint_list661 =null;
		ParserRuleReturnScope constructor_constraint663 =null;
		ParserRuleReturnScope constructor_constraint664 =null;

		CommonTree set656_tree=null;
		CommonTree char_literal657_tree=null;
		CommonTree char_literal659_tree=null;
		CommonTree char_literal662_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:664:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
			int alt189=3;
			switch ( input.LA(1) ) {
			case 111:
			case 178:
				{
				alt189=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				alt189=2;
				}
				break;
			case 150:
				{
				alt189=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 189, 0, input);
				throw nvae;
			}
			switch (alt189) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:665:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
					{
					root_0 = (CommonTree)adaptor.nil();


					set656=input.LT(1);
					if ( input.LA(1)==111||input.LA(1)==178 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set656));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/jeremie/ANTLR/cs.g:665:28: ( ',' secondary_constraint_list )?
					int alt186=2;
					int LA186_0 = input.LA(1);
					if ( (LA186_0==74) ) {
						int LA186_1 = input.LA(2);
						if ( (LA186_1==194) ) {
							int LA186_3 = input.LA(3);
							if ( (LA186_3==DOT||LA186_3==SEMI||LA186_3==74||(LA186_3 >= 80 && LA186_3 <= 81)||LA186_3==197) ) {
								alt186=1;
							}
						}
						else if ( (LA186_1==IDENTIFIER||LA186_1==95||(LA186_1 >= 97 && LA186_1 <= 98)||(LA186_1 >= 100 && LA186_1 <= 101)||LA186_1==105||LA186_1==117||LA186_1==120||LA186_1==122||LA186_1==126||LA186_1==132||LA186_1==135||LA186_1==141||(LA186_1 >= 143 && LA186_1 <= 144)||(LA186_1 >= 147 && LA186_1 <= 148)||LA186_1==152||LA186_1==154||LA186_1==157||LA186_1==160||LA186_1==162||LA186_1==167||(LA186_1 >= 171 && LA186_1 <= 172)||LA186_1==183||LA186_1==190||LA186_1==196) ) {
							alt186=1;
						}
					}
					switch (alt186) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:665:29: ',' secondary_constraint_list
							{
							char_literal657=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraint_list8958); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal657_tree = (CommonTree)adaptor.create(char_literal657);
							adaptor.addChild(root_0, char_literal657_tree);
							}

							pushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list8962);
							secondary_constraint_list658=secondary_constraint_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint_list658.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:665:65: ( ',' constructor_constraint )?
					int alt187=2;
					int LA187_0 = input.LA(1);
					if ( (LA187_0==74) ) {
						int LA187_1 = input.LA(2);
						if ( (LA187_1==150) ) {
							alt187=1;
						}
					}
					switch (alt187) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:665:66: ',' constructor_constraint
							{
							char_literal659=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraint_list8969); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal659_tree = (CommonTree)adaptor.create(char_literal659);
							adaptor.addChild(root_0, char_literal659_tree);
							}

							pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list8973);
							constructor_constraint660=constructor_constraint();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint660.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:666:11: secondary_constraint_list ( ',' constructor_constraint )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list8987);
					secondary_constraint_list661=secondary_constraint_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint_list661.getTree());

					// /Users/jeremie/ANTLR/cs.g:666:39: ( ',' constructor_constraint )?
					int alt188=2;
					int LA188_0 = input.LA(1);
					if ( (LA188_0==74) ) {
						int LA188_1 = input.LA(2);
						if ( (LA188_1==150) ) {
							alt188=1;
						}
					}
					switch (alt188) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:666:40: ',' constructor_constraint
							{
							char_literal662=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraint_list8992); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal662_tree = (CommonTree)adaptor.create(char_literal662);
							adaptor.addChild(root_0, char_literal662_tree);
							}

							pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list8996);
							constructor_constraint663=constructor_constraint();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint663.getTree());

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:667:11: constructor_constraint
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list9010);
					constructor_constraint664=constructor_constraint();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint664.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 191, type_parameter_constraint_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_parameter_constraint_list"


	public static class secondary_constraint_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secondary_constraint_list"
	// /Users/jeremie/ANTLR/cs.g:672:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
	public final csParser.secondary_constraint_list_return secondary_constraint_list() throws RecognitionException {
		csParser.secondary_constraint_list_return retval = new csParser.secondary_constraint_list_return();
		retval.start = input.LT(1);
		int secondary_constraint_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal666=null;
		ParserRuleReturnScope secondary_constraint665 =null;
		ParserRuleReturnScope secondary_constraint667 =null;

		CommonTree char_literal666_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:672:26: ( secondary_constraint ( ',' secondary_constraint )* )
			// /Users/jeremie/ANTLR/cs.g:673:9: secondary_constraint ( ',' secondary_constraint )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list9029);
			secondary_constraint665=secondary_constraint();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint665.getTree());

			// /Users/jeremie/ANTLR/cs.g:673:30: ( ',' secondary_constraint )*
			loop190:
			while (true) {
				int alt190=2;
				int LA190_0 = input.LA(1);
				if ( (LA190_0==74) ) {
					int LA190_1 = input.LA(2);
					if ( (LA190_1==194) ) {
						int LA190_3 = input.LA(3);
						if ( (LA190_3==DOT||LA190_3==SEMI||LA190_3==74||(LA190_3 >= 80 && LA190_3 <= 81)||LA190_3==197) ) {
							alt190=1;
						}

					}
					else if ( (LA190_1==IDENTIFIER||LA190_1==95||(LA190_1 >= 97 && LA190_1 <= 98)||(LA190_1 >= 100 && LA190_1 <= 101)||LA190_1==105||LA190_1==117||LA190_1==120||LA190_1==122||LA190_1==126||LA190_1==132||LA190_1==135||LA190_1==141||(LA190_1 >= 143 && LA190_1 <= 144)||(LA190_1 >= 147 && LA190_1 <= 148)||LA190_1==152||LA190_1==154||LA190_1==157||LA190_1==160||LA190_1==162||LA190_1==167||(LA190_1 >= 171 && LA190_1 <= 172)||LA190_1==183||LA190_1==190||LA190_1==196) ) {
						alt190=1;
					}

				}

				switch (alt190) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:673:31: ',' secondary_constraint
					{
					char_literal666=(Token)match(input,74,FOLLOW_74_in_secondary_constraint_list9032); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal666_tree = (CommonTree)adaptor.create(char_literal666);
					adaptor.addChild(root_0, char_literal666_tree);
					}

					pushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list9034);
					secondary_constraint667=secondary_constraint();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint667.getTree());

					}
					break;

				default :
					break loop190;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 192, secondary_constraint_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "secondary_constraint_list"


	public static class secondary_constraint_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secondary_constraint"
	// /Users/jeremie/ANTLR/cs.g:674:1: secondary_constraint : type_name ;
	public final csParser.secondary_constraint_return secondary_constraint() throws RecognitionException {
		csParser.secondary_constraint_return retval = new csParser.secondary_constraint_return();
		retval.start = input.LT(1);
		int secondary_constraint_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type_name668 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:674:21: ( type_name )
			// /Users/jeremie/ANTLR/cs.g:675:9: type_name
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_secondary_constraint9051);
			type_name668=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name668.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 193, secondary_constraint_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "secondary_constraint"


	public static class type_variable_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_variable_name"
	// /Users/jeremie/ANTLR/cs.g:676:1: type_variable_name : identifier ;
	public final csParser.type_variable_name_return type_variable_name() throws RecognitionException {
		csParser.type_variable_name_return retval = new csParser.type_variable_name_return();
		retval.start = input.LT(1);
		int type_variable_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope identifier669 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:676:19: ( identifier )
			// /Users/jeremie/ANTLR/cs.g:677:9: identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_type_variable_name9075);
			identifier669=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier669.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 194, type_variable_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_variable_name"


	public static class constructor_constraint_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_constraint"
	// /Users/jeremie/ANTLR/cs.g:678:1: constructor_constraint : 'new' '(' ')' ;
	public final csParser.constructor_constraint_return constructor_constraint() throws RecognitionException {
		csParser.constructor_constraint_return retval = new csParser.constructor_constraint_return();
		retval.start = input.LT(1);
		int constructor_constraint_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal670=null;
		Token char_literal671=null;
		Token char_literal672=null;

		CommonTree string_literal670_tree=null;
		CommonTree char_literal671_tree=null;
		CommonTree char_literal672_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:678:23: ( 'new' '(' ')' )
			// /Users/jeremie/ANTLR/cs.g:679:9: 'new' '(' ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal670=(Token)match(input,150,FOLLOW_150_in_constructor_constraint9090); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal670_tree = (CommonTree)adaptor.create(string_literal670);
			adaptor.addChild(root_0, string_literal670_tree);
			}

			char_literal671=(Token)match(input,68,FOLLOW_68_in_constructor_constraint9094); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal671_tree = (CommonTree)adaptor.create(char_literal671);
			adaptor.addChild(root_0, char_literal671_tree);
			}

			char_literal672=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_constraint9098); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal672_tree = (CommonTree)adaptor.create(char_literal672);
			adaptor.addChild(root_0, char_literal672_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 195, constructor_constraint_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_constraint"


	public static class return_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "return_type"
	// /Users/jeremie/ANTLR/cs.g:680:1: return_type : ( type | 'void' );
	public final csParser.return_type_return return_type() throws RecognitionException {
		csParser.return_type_return retval = new csParser.return_type_return();
		retval.start = input.LT(1);
		int return_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal674=null;
		ParserRuleReturnScope type673 =null;

		CommonTree string_literal674_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:680:12: ( type | 'void' )
			int alt191=2;
			int LA191_0 = input.LA(1);
			if ( (LA191_0==IDENTIFIER||LA191_0==95||(LA191_0 >= 97 && LA191_0 <= 98)||(LA191_0 >= 100 && LA191_0 <= 101)||LA191_0==103||(LA191_0 >= 105 && LA191_0 <= 106)||LA191_0==109||LA191_0==114||LA191_0==117||(LA191_0 >= 119 && LA191_0 <= 120)||LA191_0==122||LA191_0==126||LA191_0==129||LA191_0==132||LA191_0==135||LA191_0==138||LA191_0==141||(LA191_0 >= 143 && LA191_0 <= 144)||(LA191_0 >= 146 && LA191_0 <= 148)||(LA191_0 >= 151 && LA191_0 <= 152)||LA191_0==154||LA191_0==157||LA191_0==160||LA191_0==162||LA191_0==167||LA191_0==169||(LA191_0 >= 171 && LA191_0 <= 173)||LA191_0==177||LA191_0==183||(LA191_0 >= 185 && LA191_0 <= 186)||(LA191_0 >= 189 && LA191_0 <= 190)||LA191_0==194||LA191_0==196) ) {
				alt191=1;
			}
			else if ( (LA191_0==192) ) {
				int LA191_2 = input.LA(2);
				if ( (LA191_2==69) ) {
					alt191=1;
				}
				else if ( (LA191_2==IDENTIFIER||LA191_2==95||(LA191_2 >= 97 && LA191_2 <= 98)||(LA191_2 >= 100 && LA191_2 <= 101)||LA191_2==105||LA191_2==117||LA191_2==120||LA191_2==122||LA191_2==126||LA191_2==132||LA191_2==135||LA191_2==141||(LA191_2 >= 143 && LA191_2 <= 144)||(LA191_2 >= 147 && LA191_2 <= 148)||LA191_2==152||LA191_2==154||LA191_2==157||LA191_2==160||LA191_2==162||LA191_2==167||(LA191_2 >= 171 && LA191_2 <= 172)||LA191_2==183||LA191_2==190||LA191_2==194||LA191_2==196) ) {
					alt191=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 191, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 191, 0, input);
				throw nvae;
			}

			switch (alt191) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:681:9: type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_type_in_return_type9113);
					type673=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type673.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:682:12: 'void'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal674=(Token)match(input,192,FOLLOW_192_in_return_type9126); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal674_tree = (CommonTree)adaptor.create(string_literal674);
					adaptor.addChild(root_0, string_literal674_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 196, return_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "return_type"


	public static class formal_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "formal_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:683:1: formal_parameter_list : formal_parameter ( ',' formal_parameter )* ;
	public final csParser.formal_parameter_list_return formal_parameter_list() throws RecognitionException {
		csParser.formal_parameter_list_return retval = new csParser.formal_parameter_list_return();
		retval.start = input.LT(1);
		int formal_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal676=null;
		ParserRuleReturnScope formal_parameter675 =null;
		ParserRuleReturnScope formal_parameter677 =null;

		CommonTree char_literal676_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:683:22: ( formal_parameter ( ',' formal_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:684:9: formal_parameter ( ',' formal_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_formal_parameter_in_formal_parameter_list9140);
			formal_parameter675=formal_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter675.getTree());

			// /Users/jeremie/ANTLR/cs.g:684:26: ( ',' formal_parameter )*
			loop192:
			while (true) {
				int alt192=2;
				int LA192_0 = input.LA(1);
				if ( (LA192_0==74) ) {
					alt192=1;
				}

				switch (alt192) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:684:27: ',' formal_parameter
					{
					char_literal676=(Token)match(input,74,FOLLOW_74_in_formal_parameter_list9143); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal676_tree = (CommonTree)adaptor.create(char_literal676);
					adaptor.addChild(root_0, char_literal676_tree);
					}

					pushFollow(FOLLOW_formal_parameter_in_formal_parameter_list9145);
					formal_parameter677=formal_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter677.getTree());

					}
					break;

				default :
					break loop192;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 197, formal_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "formal_parameter_list"


	public static class formal_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "formal_parameter"
	// /Users/jeremie/ANTLR/cs.g:685:1: formal_parameter : ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' );
	public final csParser.formal_parameter_return formal_parameter() throws RecognitionException {
		csParser.formal_parameter_return retval = new csParser.formal_parameter_return();
		retval.start = input.LT(1);
		int formal_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal681=null;
		ParserRuleReturnScope attributes678 =null;
		ParserRuleReturnScope fixed_parameter679 =null;
		ParserRuleReturnScope parameter_array680 =null;

		CommonTree string_literal681_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:685:17: ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' )
			int alt195=2;
			int LA195_0 = input.LA(1);
			if ( (LA195_0==IDENTIFIER||LA195_0==91||(LA195_0 >= 97 && LA195_0 <= 98)||(LA195_0 >= 100 && LA195_0 <= 101)||LA195_0==103||(LA195_0 >= 105 && LA195_0 <= 106)||LA195_0==109||LA195_0==114||LA195_0==117||(LA195_0 >= 119 && LA195_0 <= 120)||LA195_0==122||LA195_0==126||LA195_0==129||LA195_0==132||LA195_0==135||LA195_0==138||LA195_0==141||(LA195_0 >= 143 && LA195_0 <= 144)||(LA195_0 >= 146 && LA195_0 <= 148)||(LA195_0 >= 151 && LA195_0 <= 152)||(LA195_0 >= 154 && LA195_0 <= 155)||(LA195_0 >= 157 && LA195_0 <= 158)||LA195_0==160||LA195_0==162||(LA195_0 >= 166 && LA195_0 <= 167)||LA195_0==169||(LA195_0 >= 171 && LA195_0 <= 173)||LA195_0==177||LA195_0==180||LA195_0==183||(LA195_0 >= 185 && LA195_0 <= 186)||(LA195_0 >= 189 && LA195_0 <= 190)||LA195_0==192||LA195_0==194||LA195_0==196) ) {
				alt195=1;
			}
			else if ( (LA195_0==95) ) {
				int LA195_2 = input.LA(2);
				if ( (LA195_2==DOT||LA195_2==IDENTIFIER||LA195_2==69||(LA195_2 >= 80 && LA195_2 <= 81)||LA195_2==89||LA195_2==91||LA195_2==95||(LA195_2 >= 97 && LA195_2 <= 98)||(LA195_2 >= 100 && LA195_2 <= 101)||LA195_2==105||LA195_2==117||LA195_2==120||LA195_2==122||LA195_2==126||LA195_2==132||LA195_2==135||LA195_2==141||(LA195_2 >= 143 && LA195_2 <= 144)||(LA195_2 >= 147 && LA195_2 <= 148)||LA195_2==152||LA195_2==154||LA195_2==157||LA195_2==160||LA195_2==162||LA195_2==167||(LA195_2 >= 171 && LA195_2 <= 172)||LA195_2==183||LA195_2==190||LA195_2==194||LA195_2==196) ) {
					alt195=1;
				}
				else if ( (LA195_2==RPAREN||LA195_2==74||LA195_2==92) ) {
					alt195=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 195, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 195, 0, input);
				throw nvae;
			}

			switch (alt195) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:686:9: ( attributes )? ( fixed_parameter | parameter_array )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:686:9: ( attributes )?
					int alt193=2;
					int LA193_0 = input.LA(1);
					if ( (LA193_0==91) ) {
						alt193=1;
					}
					switch (alt193) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:686:9: attributes
							{
							pushFollow(FOLLOW_attributes_in_formal_parameter9162);
							attributes678=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes678.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:686:23: ( fixed_parameter | parameter_array )
					int alt194=2;
					int LA194_0 = input.LA(1);
					if ( (LA194_0==IDENTIFIER||LA194_0==95||(LA194_0 >= 97 && LA194_0 <= 98)||(LA194_0 >= 100 && LA194_0 <= 101)||LA194_0==103||(LA194_0 >= 105 && LA194_0 <= 106)||LA194_0==109||LA194_0==114||LA194_0==117||(LA194_0 >= 119 && LA194_0 <= 120)||LA194_0==122||LA194_0==126||LA194_0==129||LA194_0==132||LA194_0==135||LA194_0==138||LA194_0==141||(LA194_0 >= 143 && LA194_0 <= 144)||(LA194_0 >= 146 && LA194_0 <= 148)||(LA194_0 >= 151 && LA194_0 <= 152)||(LA194_0 >= 154 && LA194_0 <= 155)||LA194_0==157||LA194_0==160||LA194_0==162||(LA194_0 >= 166 && LA194_0 <= 167)||LA194_0==169||(LA194_0 >= 171 && LA194_0 <= 173)||LA194_0==177||LA194_0==180||LA194_0==183||(LA194_0 >= 185 && LA194_0 <= 186)||(LA194_0 >= 189 && LA194_0 <= 190)||LA194_0==192||LA194_0==194||LA194_0==196) ) {
						alt194=1;
					}
					else if ( (LA194_0==158) ) {
						alt194=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 194, 0, input);
						throw nvae;
					}

					switch (alt194) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:686:24: fixed_parameter
							{
							pushFollow(FOLLOW_fixed_parameter_in_formal_parameter9168);
							fixed_parameter679=fixed_parameter();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter679.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:686:42: parameter_array
							{
							pushFollow(FOLLOW_parameter_array_in_formal_parameter9172);
							parameter_array680=parameter_array();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_array680.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:687:11: '__arglist'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal681=(Token)match(input,95,FOLLOW_95_in_formal_parameter9186); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal681_tree = (CommonTree)adaptor.create(string_literal681);
					adaptor.addChild(root_0, string_literal681_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 198, formal_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "formal_parameter"


	public static class fixed_parameters_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_parameters"
	// /Users/jeremie/ANTLR/cs.g:688:1: fixed_parameters : fixed_parameter ( ',' fixed_parameter )* ;
	public final csParser.fixed_parameters_return fixed_parameters() throws RecognitionException {
		csParser.fixed_parameters_return retval = new csParser.fixed_parameters_return();
		retval.start = input.LT(1);
		int fixed_parameters_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal683=null;
		ParserRuleReturnScope fixed_parameter682 =null;
		ParserRuleReturnScope fixed_parameter684 =null;

		CommonTree char_literal683_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:688:17: ( fixed_parameter ( ',' fixed_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:689:9: fixed_parameter ( ',' fixed_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters9208);
			fixed_parameter682=fixed_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter682.getTree());

			// /Users/jeremie/ANTLR/cs.g:689:27: ( ',' fixed_parameter )*
			loop196:
			while (true) {
				int alt196=2;
				int LA196_0 = input.LA(1);
				if ( (LA196_0==74) ) {
					alt196=1;
				}

				switch (alt196) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:689:28: ',' fixed_parameter
					{
					char_literal683=(Token)match(input,74,FOLLOW_74_in_fixed_parameters9213); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal683_tree = (CommonTree)adaptor.create(char_literal683);
					adaptor.addChild(root_0, char_literal683_tree);
					}

					pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters9217);
					fixed_parameter684=fixed_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter684.getTree());

					}
					break;

				default :
					break loop196;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 199, fixed_parameters_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_parameters"


	public static class fixed_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_parameter"
	// /Users/jeremie/ANTLR/cs.g:691:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? ;
	public final csParser.fixed_parameter_return fixed_parameter() throws RecognitionException {
		csParser.fixed_parameter_return retval = new csParser.fixed_parameter_return();
		retval.start = input.LT(1);
		int fixed_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope parameter_modifier685 =null;
		ParserRuleReturnScope type686 =null;
		ParserRuleReturnScope identifier687 =null;
		ParserRuleReturnScope default_argument688 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:691:16: ( ( parameter_modifier )? type identifier ( default_argument )? )
			// /Users/jeremie/ANTLR/cs.g:692:9: ( parameter_modifier )? type identifier ( default_argument )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:692:9: ( parameter_modifier )?
			int alt197=2;
			int LA197_0 = input.LA(1);
			if ( (LA197_0==155||LA197_0==166||LA197_0==180) ) {
				alt197=1;
			}
			switch (alt197) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:692:9: parameter_modifier
					{
					pushFollow(FOLLOW_parameter_modifier_in_fixed_parameter9235);
					parameter_modifier685=parameter_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_modifier685.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_type_in_fixed_parameter9240);
			type686=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type686.getTree());

			pushFollow(FOLLOW_identifier_in_fixed_parameter9244);
			identifier687=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier687.getTree());

			// /Users/jeremie/ANTLR/cs.g:692:51: ( default_argument )?
			int alt198=2;
			int LA198_0 = input.LA(1);
			if ( (LA198_0==85) ) {
				alt198=1;
			}
			switch (alt198) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:692:51: default_argument
					{
					pushFollow(FOLLOW_default_argument_in_fixed_parameter9248);
					default_argument688=default_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, default_argument688.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 200, fixed_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_parameter"


	public static class default_argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "default_argument"
	// /Users/jeremie/ANTLR/cs.g:694:1: default_argument : '=' expression ;
	public final csParser.default_argument_return default_argument() throws RecognitionException {
		csParser.default_argument_return retval = new csParser.default_argument_return();
		retval.start = input.LT(1);
		int default_argument_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal689=null;
		ParserRuleReturnScope expression690 =null;

		CommonTree char_literal689_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:694:17: ( '=' expression )
			// /Users/jeremie/ANTLR/cs.g:695:9: '=' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal689=(Token)match(input,85,FOLLOW_85_in_default_argument9265); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal689_tree = (CommonTree)adaptor.create(char_literal689);
			adaptor.addChild(root_0, char_literal689_tree);
			}

			pushFollow(FOLLOW_expression_in_default_argument9267);
			expression690=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression690.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 201, default_argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "default_argument"


	public static class parameter_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "parameter_modifier"
	// /Users/jeremie/ANTLR/cs.g:696:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
	public final csParser.parameter_modifier_return parameter_modifier() throws RecognitionException {
		csParser.parameter_modifier_return retval = new csParser.parameter_modifier_return();
		retval.start = input.LT(1);
		int parameter_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set691=null;

		CommonTree set691_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:696:19: ( 'ref' | 'out' | 'this' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set691=input.LT(1);
			if ( input.LA(1)==155||input.LA(1)==166||input.LA(1)==180 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set691));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 202, parameter_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "parameter_modifier"


	public static class parameter_array_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "parameter_array"
	// /Users/jeremie/ANTLR/cs.g:698:1: parameter_array : 'params' type identifier ;
	public final csParser.parameter_array_return parameter_array() throws RecognitionException {
		csParser.parameter_array_return retval = new csParser.parameter_array_return();
		retval.start = input.LT(1);
		int parameter_array_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal692=null;
		ParserRuleReturnScope type693 =null;
		ParserRuleReturnScope identifier694 =null;

		CommonTree string_literal692_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:698:16: ( 'params' type identifier )
			// /Users/jeremie/ANTLR/cs.g:699:9: 'params' type identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal692=(Token)match(input,158,FOLLOW_158_in_parameter_array9304); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal692_tree = (CommonTree)adaptor.create(string_literal692);
			adaptor.addChild(root_0, string_literal692_tree);
			}

			pushFollow(FOLLOW_type_in_parameter_array9308);
			type693=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type693.getTree());

			pushFollow(FOLLOW_identifier_in_parameter_array9312);
			identifier694=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier694.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 203, parameter_array_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "parameter_array"


	public static class interface_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_declaration"
	// /Users/jeremie/ANTLR/cs.g:702:1: interface_declaration : 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
	public final csParser.interface_declaration_return interface_declaration() throws RecognitionException {
		csParser.interface_declaration_return retval = new csParser.interface_declaration_return();
		retval.start = input.LT(1);
		int interface_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal695=null;
		Token char_literal701=null;
		ParserRuleReturnScope identifier696 =null;
		ParserRuleReturnScope variant_generic_parameter_list697 =null;
		ParserRuleReturnScope interface_base698 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses699 =null;
		ParserRuleReturnScope interface_body700 =null;

		CommonTree string_literal695_tree=null;
		CommonTree char_literal701_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:702:22: ( 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:703:9: 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal695=(Token)match(input,139,FOLLOW_139_in_interface_declaration9329); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal695_tree = (CommonTree)adaptor.create(string_literal695);
			adaptor.addChild(root_0, string_literal695_tree);
			}

			pushFollow(FOLLOW_identifier_in_interface_declaration9333);
			identifier696=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier696.getTree());

			// /Users/jeremie/ANTLR/cs.g:703:36: ( variant_generic_parameter_list )?
			int alt199=2;
			int LA199_0 = input.LA(1);
			if ( (LA199_0==81) ) {
				alt199=1;
			}
			switch (alt199) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:703:36: variant_generic_parameter_list
					{
					pushFollow(FOLLOW_variant_generic_parameter_list_in_interface_declaration9337);
					variant_generic_parameter_list697=variant_generic_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_generic_parameter_list697.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:704:13: ( interface_base )?
			int alt200=2;
			int LA200_0 = input.LA(1);
			if ( (LA200_0==79) ) {
				alt200=1;
			}
			switch (alt200) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:704:13: interface_base
					{
					pushFollow(FOLLOW_interface_base_in_interface_declaration9353);
					interface_base698=interface_base();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_base698.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:704:31: ( type_parameter_constraints_clauses )?
			int alt201=2;
			int LA201_0 = input.LA(1);
			if ( (LA201_0==194) ) {
				alt201=1;
			}
			switch (alt201) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:704:31: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration9358);
					type_parameter_constraints_clauses699=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses699.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_interface_body_in_interface_declaration9363);
			interface_body700=interface_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_body700.getTree());

			// /Users/jeremie/ANTLR/cs.g:704:86: ( ';' )?
			int alt202=2;
			int LA202_0 = input.LA(1);
			if ( (LA202_0==SEMI) ) {
				alt202=1;
			}
			switch (alt202) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:704:86: ';'
					{
					char_literal701=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_declaration9367); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal701_tree = (CommonTree)adaptor.create(char_literal701);
					adaptor.addChild(root_0, char_literal701_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 204, interface_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_declaration"


	public static class interface_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_modifiers"
	// /Users/jeremie/ANTLR/cs.g:705:1: interface_modifiers : ( modifier )+ ;
	public final csParser.interface_modifiers_return interface_modifiers() throws RecognitionException {
		csParser.interface_modifiers_return retval = new csParser.interface_modifiers_return();
		retval.start = input.LT(1);
		int interface_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier702 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:705:20: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:706:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:706:9: ( modifier )+
			int cnt203=0;
			loop203:
			while (true) {
				int alt203=2;
				int LA203_0 = input.LA(1);
				if ( (LA203_0==96||LA203_0==125||LA203_0==140||LA203_0==150||LA203_0==156||LA203_0==161||(LA203_0 >= 163 && LA203_0 <= 165)||LA203_0==170||LA203_0==176||LA203_0==188||LA203_0==191||LA203_0==193) ) {
					alt203=1;
				}

				switch (alt203) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:706:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_interface_modifiers9384);
					modifier702=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier702.getTree());

					}
					break;

				default :
					if ( cnt203 >= 1 ) break loop203;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(203, input);
					throw eee;
				}
				cnt203++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 205, interface_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_modifiers"


	public static class interface_base_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_base"
	// /Users/jeremie/ANTLR/cs.g:707:1: interface_base : ':' interface_type_list ;
	public final csParser.interface_base_return interface_base() throws RecognitionException {
		csParser.interface_base_return retval = new csParser.interface_base_return();
		retval.start = input.LT(1);
		int interface_base_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal703=null;
		ParserRuleReturnScope interface_type_list704 =null;

		CommonTree char_literal703_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:707:15: ( ':' interface_type_list )
			// /Users/jeremie/ANTLR/cs.g:708:12: ':' interface_type_list
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal703=(Token)match(input,79,FOLLOW_79_in_interface_base9404); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal703_tree = (CommonTree)adaptor.create(char_literal703);
			adaptor.addChild(root_0, char_literal703_tree);
			}

			pushFollow(FOLLOW_interface_type_list_in_interface_base9406);
			interface_type_list704=interface_type_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list704.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 206, interface_base_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_base"


	public static class interface_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_body"
	// /Users/jeremie/ANTLR/cs.g:709:1: interface_body : '{' ( interface_member_declarations )? '}' ;
	public final csParser.interface_body_return interface_body() throws RecognitionException {
		csParser.interface_body_return retval = new csParser.interface_body_return();
		retval.start = input.LT(1);
		int interface_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal705=null;
		Token char_literal707=null;
		ParserRuleReturnScope interface_member_declarations706 =null;

		CommonTree char_literal705_tree=null;
		CommonTree char_literal707_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:709:15: ( '{' ( interface_member_declarations )? '}' )
			// /Users/jeremie/ANTLR/cs.g:710:9: '{' ( interface_member_declarations )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal705=(Token)match(input,197,FOLLOW_197_in_interface_body9421); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal705_tree = (CommonTree)adaptor.create(char_literal705);
			adaptor.addChild(root_0, char_literal705_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:710:15: ( interface_member_declarations )?
			int alt204=2;
			int LA204_0 = input.LA(1);
			if ( (LA204_0==IDENTIFIER||LA204_0==91||(LA204_0 >= 95 && LA204_0 <= 98)||(LA204_0 >= 100 && LA204_0 <= 101)||LA204_0==103||(LA204_0 >= 105 && LA204_0 <= 106)||LA204_0==109||LA204_0==114||LA204_0==117||(LA204_0 >= 119 && LA204_0 <= 120)||(LA204_0 >= 122 && LA204_0 <= 123)||(LA204_0 >= 125 && LA204_0 <= 126)||LA204_0==129||LA204_0==132||LA204_0==135||LA204_0==138||(LA204_0 >= 140 && LA204_0 <= 141)||(LA204_0 >= 143 && LA204_0 <= 144)||(LA204_0 >= 146 && LA204_0 <= 148)||(LA204_0 >= 150 && LA204_0 <= 152)||LA204_0==154||(LA204_0 >= 156 && LA204_0 <= 157)||(LA204_0 >= 160 && LA204_0 <= 165)||LA204_0==167||(LA204_0 >= 169 && LA204_0 <= 173)||(LA204_0 >= 176 && LA204_0 <= 177)||LA204_0==183||(LA204_0 >= 185 && LA204_0 <= 186)||(LA204_0 >= 188 && LA204_0 <= 194)||LA204_0==196) ) {
				alt204=1;
			}
			switch (alt204) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:710:15: interface_member_declarations
					{
					pushFollow(FOLLOW_interface_member_declarations_in_interface_body9425);
					interface_member_declarations706=interface_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declarations706.getTree());

					}
					break;

			}

			char_literal707=(Token)match(input,201,FOLLOW_201_in_interface_body9430); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal707_tree = (CommonTree)adaptor.create(char_literal707);
			adaptor.addChild(root_0, char_literal707_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 207, interface_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_body"


	public static class interface_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:711:1: interface_member_declarations : ( interface_member_declaration )+ ;
	public final csParser.interface_member_declarations_return interface_member_declarations() throws RecognitionException {
		csParser.interface_member_declarations_return retval = new csParser.interface_member_declarations_return();
		retval.start = input.LT(1);
		int interface_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope interface_member_declaration708 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:711:30: ( ( interface_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:712:9: ( interface_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:712:9: ( interface_member_declaration )+
			int cnt205=0;
			loop205:
			while (true) {
				int alt205=2;
				int LA205_0 = input.LA(1);
				if ( (LA205_0==IDENTIFIER||LA205_0==91||(LA205_0 >= 95 && LA205_0 <= 98)||(LA205_0 >= 100 && LA205_0 <= 101)||LA205_0==103||(LA205_0 >= 105 && LA205_0 <= 106)||LA205_0==109||LA205_0==114||LA205_0==117||(LA205_0 >= 119 && LA205_0 <= 120)||(LA205_0 >= 122 && LA205_0 <= 123)||(LA205_0 >= 125 && LA205_0 <= 126)||LA205_0==129||LA205_0==132||LA205_0==135||LA205_0==138||(LA205_0 >= 140 && LA205_0 <= 141)||(LA205_0 >= 143 && LA205_0 <= 144)||(LA205_0 >= 146 && LA205_0 <= 148)||(LA205_0 >= 150 && LA205_0 <= 152)||LA205_0==154||(LA205_0 >= 156 && LA205_0 <= 157)||(LA205_0 >= 160 && LA205_0 <= 165)||LA205_0==167||(LA205_0 >= 169 && LA205_0 <= 173)||(LA205_0 >= 176 && LA205_0 <= 177)||LA205_0==183||(LA205_0 >= 185 && LA205_0 <= 186)||(LA205_0 >= 188 && LA205_0 <= 194)||LA205_0==196) ) {
					alt205=1;
				}

				switch (alt205) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:712:9: interface_member_declaration
					{
					pushFollow(FOLLOW_interface_member_declaration_in_interface_member_declarations9445);
					interface_member_declaration708=interface_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declaration708.getTree());

					}
					break;

				default :
					if ( cnt205 >= 1 ) break loop205;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(205, input);
					throw eee;
				}
				cnt205++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 208, interface_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_member_declarations"


	public static class interface_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:713:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) ;
	public final csParser.interface_member_declaration_return interface_member_declaration() throws RecognitionException {
		csParser.interface_member_declaration_return retval = new csParser.interface_member_declaration_return();
		retval.start = input.LT(1);
		int interface_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal711=null;
		ParserRuleReturnScope attributes709 =null;
		ParserRuleReturnScope modifiers710 =null;
		ParserRuleReturnScope interface_method_declaration712 =null;
		ParserRuleReturnScope interface_event_declaration713 =null;
		ParserRuleReturnScope type714 =null;
		ParserRuleReturnScope interface_method_declaration715 =null;
		ParserRuleReturnScope interface_property_declaration716 =null;
		ParserRuleReturnScope interface_indexer_declaration717 =null;

		CommonTree string_literal711_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:713:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) )
			// /Users/jeremie/ANTLR/cs.g:714:9: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:714:9: ( attributes )?
			int alt206=2;
			int LA206_0 = input.LA(1);
			if ( (LA206_0==91) ) {
				alt206=1;
			}
			switch (alt206) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:714:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_interface_member_declaration9461);
					attributes709=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes709.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:714:24: ( modifiers )?
			int alt207=2;
			int LA207_0 = input.LA(1);
			if ( (LA207_0==96||LA207_0==125||LA207_0==140||LA207_0==150||LA207_0==156||LA207_0==161||(LA207_0 >= 163 && LA207_0 <= 165)||LA207_0==170||LA207_0==176||LA207_0==188||LA207_0==191||LA207_0==193) ) {
				alt207=1;
			}
			switch (alt207) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:714:24: modifiers
					{
					pushFollow(FOLLOW_modifiers_in_interface_member_declaration9467);
					modifiers710=modifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers710.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:715:17: ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			int alt209=3;
			switch ( input.LA(1) ) {
			case 192:
				{
				int LA209_1 = input.LA(2);
				if ( (LA209_1==IDENTIFIER||LA209_1==95||(LA209_1 >= 97 && LA209_1 <= 98)||(LA209_1 >= 100 && LA209_1 <= 101)||LA209_1==105||LA209_1==117||LA209_1==120||LA209_1==122||LA209_1==126||LA209_1==132||LA209_1==135||LA209_1==141||(LA209_1 >= 143 && LA209_1 <= 144)||(LA209_1 >= 147 && LA209_1 <= 148)||LA209_1==152||LA209_1==154||LA209_1==157||LA209_1==160||LA209_1==162||LA209_1==167||(LA209_1 >= 171 && LA209_1 <= 172)||LA209_1==183||LA209_1==190||LA209_1==194||LA209_1==196) ) {
					alt209=1;
				}
				else if ( (LA209_1==69) ) {
					alt209=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 209, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 123:
				{
				alt209=2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt209=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 209, 0, input);
				throw nvae;
			}
			switch (alt209) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:715:18: 'void' interface_method_declaration
					{
					string_literal711=(Token)match(input,192,FOLLOW_192_in_interface_member_declaration9487); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal711_tree = (CommonTree)adaptor.create(string_literal711);
					adaptor.addChild(root_0, string_literal711_tree);
					}

					pushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration9491);
					interface_method_declaration712=interface_method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_method_declaration712.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:716:19: interface_event_declaration
					{
					pushFollow(FOLLOW_interface_event_declaration_in_interface_member_declaration9511);
					interface_event_declaration713=interface_event_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_event_declaration713.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:717:19: type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
					{
					pushFollow(FOLLOW_type_in_interface_member_declaration9531);
					type714=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type714.getTree());

					// /Users/jeremie/ANTLR/cs.g:717:26: ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
					int alt208=3;
					int LA208_0 = input.LA(1);
					if ( (LA208_0==IDENTIFIER||LA208_0==95||(LA208_0 >= 97 && LA208_0 <= 98)||(LA208_0 >= 100 && LA208_0 <= 101)||LA208_0==105||LA208_0==117||LA208_0==120||LA208_0==122||LA208_0==126||LA208_0==132||LA208_0==135||LA208_0==141||(LA208_0 >= 143 && LA208_0 <= 144)||(LA208_0 >= 147 && LA208_0 <= 148)||LA208_0==152||LA208_0==154||LA208_0==157||LA208_0==160||LA208_0==162||LA208_0==167||(LA208_0 >= 171 && LA208_0 <= 172)||LA208_0==183||LA208_0==190||LA208_0==194||LA208_0==196) ) {
						int LA208_1 = input.LA(2);
						if ( (LA208_1==81) && (synpred26_cs())) {
							alt208=1;
						}
						else if ( (LA208_1==68) && (synpred26_cs())) {
							alt208=1;
						}
						else if ( (LA208_1==197) && (synpred27_cs())) {
							alt208=2;
						}

					}
					else if ( (LA208_0==180) ) {
						alt208=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 208, 0, input);
						throw nvae;
					}

					switch (alt208) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:717:28: ( member_name '(' )=> interface_method_declaration
							{
							pushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration9547);
							interface_method_declaration715=interface_method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_method_declaration715.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:718:28: ( member_name '{' )=> interface_property_declaration
							{
							pushFollow(FOLLOW_interface_property_declaration_in_interface_member_declaration9586);
							interface_property_declaration716=interface_property_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_property_declaration716.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:719:36: interface_indexer_declaration
							{
							pushFollow(FOLLOW_interface_indexer_declaration_in_interface_member_declaration9624);
							interface_indexer_declaration717=interface_indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_indexer_declaration717.getTree());

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 209, interface_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_member_declaration"


	public static class interface_property_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_property_declaration"
	// /Users/jeremie/ANTLR/cs.g:722:1: interface_property_declaration : identifier '{' interface_accessor_declarations '}' ;
	public final csParser.interface_property_declaration_return interface_property_declaration() throws RecognitionException {
		csParser.interface_property_declaration_return retval = new csParser.interface_property_declaration_return();
		retval.start = input.LT(1);
		int interface_property_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal719=null;
		Token char_literal721=null;
		ParserRuleReturnScope identifier718 =null;
		ParserRuleReturnScope interface_accessor_declarations720 =null;

		CommonTree char_literal719_tree=null;
		CommonTree char_literal721_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:722:31: ( identifier '{' interface_accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:723:9: identifier '{' interface_accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_interface_property_declaration9676);
			identifier718=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier718.getTree());

			char_literal719=(Token)match(input,197,FOLLOW_197_in_interface_property_declaration9680); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal719_tree = (CommonTree)adaptor.create(char_literal719);
			adaptor.addChild(root_0, char_literal719_tree);
			}

			pushFollow(FOLLOW_interface_accessor_declarations_in_interface_property_declaration9684);
			interface_accessor_declarations720=interface_accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessor_declarations720.getTree());

			char_literal721=(Token)match(input,201,FOLLOW_201_in_interface_property_declaration9688); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal721_tree = (CommonTree)adaptor.create(char_literal721);
			adaptor.addChild(root_0, char_literal721_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 210, interface_property_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_property_declaration"


	public static class interface_method_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_method_declaration"
	// /Users/jeremie/ANTLR/cs.g:724:1: interface_method_declaration : identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	public final csParser.interface_method_declaration_return interface_method_declaration() throws RecognitionException {
		csParser.interface_method_declaration_return retval = new csParser.interface_method_declaration_return();
		retval.start = input.LT(1);
		int interface_method_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal724=null;
		Token char_literal726=null;
		Token char_literal728=null;
		ParserRuleReturnScope identifier722 =null;
		ParserRuleReturnScope generic_argument_list723 =null;
		ParserRuleReturnScope formal_parameter_list725 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses727 =null;

		CommonTree char_literal724_tree=null;
		CommonTree char_literal726_tree=null;
		CommonTree char_literal728_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:724:29: ( identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			// /Users/jeremie/ANTLR/cs.g:725:9: identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_interface_method_declaration9703);
			identifier722=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier722.getTree());

			// /Users/jeremie/ANTLR/cs.g:725:22: ( generic_argument_list )?
			int alt210=2;
			int LA210_0 = input.LA(1);
			if ( (LA210_0==81) ) {
				alt210=1;
			}
			switch (alt210) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:725:22: generic_argument_list
					{
					pushFollow(FOLLOW_generic_argument_list_in_interface_method_declaration9707);
					generic_argument_list723=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list723.getTree());

					}
					break;

			}

			char_literal724=(Token)match(input,68,FOLLOW_68_in_interface_method_declaration9722); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal724_tree = (CommonTree)adaptor.create(char_literal724);
			adaptor.addChild(root_0, char_literal724_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:726:19: ( formal_parameter_list )?
			int alt211=2;
			int LA211_0 = input.LA(1);
			if ( (LA211_0==IDENTIFIER||LA211_0==91||LA211_0==95||(LA211_0 >= 97 && LA211_0 <= 98)||(LA211_0 >= 100 && LA211_0 <= 101)||LA211_0==103||(LA211_0 >= 105 && LA211_0 <= 106)||LA211_0==109||LA211_0==114||LA211_0==117||(LA211_0 >= 119 && LA211_0 <= 120)||LA211_0==122||LA211_0==126||LA211_0==129||LA211_0==132||LA211_0==135||LA211_0==138||LA211_0==141||(LA211_0 >= 143 && LA211_0 <= 144)||(LA211_0 >= 146 && LA211_0 <= 148)||(LA211_0 >= 151 && LA211_0 <= 152)||(LA211_0 >= 154 && LA211_0 <= 155)||(LA211_0 >= 157 && LA211_0 <= 158)||LA211_0==160||LA211_0==162||(LA211_0 >= 166 && LA211_0 <= 167)||LA211_0==169||(LA211_0 >= 171 && LA211_0 <= 173)||LA211_0==177||LA211_0==180||LA211_0==183||(LA211_0 >= 185 && LA211_0 <= 186)||(LA211_0 >= 189 && LA211_0 <= 190)||LA211_0==192||LA211_0==194||LA211_0==196) ) {
				alt211=1;
			}
			switch (alt211) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:726:19: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_interface_method_declaration9726);
					formal_parameter_list725=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list725.getTree());

					}
					break;

			}

			char_literal726=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_interface_method_declaration9731); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal726_tree = (CommonTree)adaptor.create(char_literal726);
			adaptor.addChild(root_0, char_literal726_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:726:50: ( type_parameter_constraints_clauses )?
			int alt212=2;
			int LA212_0 = input.LA(1);
			if ( (LA212_0==194) ) {
				alt212=1;
			}
			switch (alt212) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:726:50: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration9735);
					type_parameter_constraints_clauses727=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses727.getTree());

					}
					break;

			}

			char_literal728=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_method_declaration9740); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal728_tree = (CommonTree)adaptor.create(char_literal728);
			adaptor.addChild(root_0, char_literal728_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 211, interface_method_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_method_declaration"


	public static class interface_event_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_event_declaration"
	// /Users/jeremie/ANTLR/cs.g:727:1: interface_event_declaration : 'event' type identifier ';' ;
	public final csParser.interface_event_declaration_return interface_event_declaration() throws RecognitionException {
		csParser.interface_event_declaration_return retval = new csParser.interface_event_declaration_return();
		retval.start = input.LT(1);
		int interface_event_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal729=null;
		Token char_literal732=null;
		ParserRuleReturnScope type730 =null;
		ParserRuleReturnScope identifier731 =null;

		CommonTree string_literal729_tree=null;
		CommonTree char_literal732_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:727:28: ( 'event' type identifier ';' )
			// /Users/jeremie/ANTLR/cs.g:729:9: 'event' type identifier ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal729=(Token)match(input,123,FOLLOW_123_in_interface_event_declaration9765); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal729_tree = (CommonTree)adaptor.create(string_literal729);
			adaptor.addChild(root_0, string_literal729_tree);
			}

			pushFollow(FOLLOW_type_in_interface_event_declaration9769);
			type730=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type730.getTree());

			pushFollow(FOLLOW_identifier_in_interface_event_declaration9773);
			identifier731=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier731.getTree());

			char_literal732=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_event_declaration9777); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal732_tree = (CommonTree)adaptor.create(char_literal732);
			adaptor.addChild(root_0, char_literal732_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 212, interface_event_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_event_declaration"


	public static class interface_indexer_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_indexer_declaration"
	// /Users/jeremie/ANTLR/cs.g:730:1: interface_indexer_declaration : 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
	public final csParser.interface_indexer_declaration_return interface_indexer_declaration() throws RecognitionException {
		csParser.interface_indexer_declaration_return retval = new csParser.interface_indexer_declaration_return();
		retval.start = input.LT(1);
		int interface_indexer_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal733=null;
		Token char_literal734=null;
		Token char_literal736=null;
		Token char_literal737=null;
		Token char_literal739=null;
		ParserRuleReturnScope formal_parameter_list735 =null;
		ParserRuleReturnScope interface_accessor_declarations738 =null;

		CommonTree string_literal733_tree=null;
		CommonTree char_literal734_tree=null;
		CommonTree char_literal736_tree=null;
		CommonTree char_literal737_tree=null;
		CommonTree char_literal739_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:730:30: ( 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:732:9: 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal733=(Token)match(input,180,FOLLOW_180_in_interface_indexer_declaration9803); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal733_tree = (CommonTree)adaptor.create(string_literal733);
			adaptor.addChild(root_0, string_literal733_tree);
			}

			char_literal734=(Token)match(input,91,FOLLOW_91_in_interface_indexer_declaration9807); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal734_tree = (CommonTree)adaptor.create(char_literal734);
			adaptor.addChild(root_0, char_literal734_tree);
			}

			pushFollow(FOLLOW_formal_parameter_list_in_interface_indexer_declaration9811);
			formal_parameter_list735=formal_parameter_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list735.getTree());

			char_literal736=(Token)match(input,92,FOLLOW_92_in_interface_indexer_declaration9815); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal736_tree = (CommonTree)adaptor.create(char_literal736);
			adaptor.addChild(root_0, char_literal736_tree);
			}

			char_literal737=(Token)match(input,197,FOLLOW_197_in_interface_indexer_declaration9819); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal737_tree = (CommonTree)adaptor.create(char_literal737);
			adaptor.addChild(root_0, char_literal737_tree);
			}

			pushFollow(FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration9823);
			interface_accessor_declarations738=interface_accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessor_declarations738.getTree());

			char_literal739=(Token)match(input,201,FOLLOW_201_in_interface_indexer_declaration9827); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal739_tree = (CommonTree)adaptor.create(char_literal739);
			adaptor.addChild(root_0, char_literal739_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 213, interface_indexer_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_indexer_declaration"


	public static class interface_accessor_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_accessor_declarations"
	// /Users/jeremie/ANTLR/cs.g:733:1: interface_accessor_declarations : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
	public final csParser.interface_accessor_declarations_return interface_accessor_declarations() throws RecognitionException {
		csParser.interface_accessor_declarations_return retval = new csParser.interface_accessor_declarations_return();
		retval.start = input.LT(1);
		int interface_accessor_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes740 =null;
		ParserRuleReturnScope interface_get_accessor_declaration741 =null;
		ParserRuleReturnScope attributes742 =null;
		ParserRuleReturnScope interface_set_accessor_declaration743 =null;
		ParserRuleReturnScope interface_set_accessor_declaration744 =null;
		ParserRuleReturnScope attributes745 =null;
		ParserRuleReturnScope interface_get_accessor_declaration746 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:733:32: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
			// /Users/jeremie/ANTLR/cs.g:734:9: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:734:9: ( attributes )?
			int alt213=2;
			int LA213_0 = input.LA(1);
			if ( (LA213_0==91) ) {
				alt213=1;
			}
			switch (alt213) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:734:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_interface_accessor_declarations9842);
					attributes740=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes740.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:735:17: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			int alt218=2;
			int LA218_0 = input.LA(1);
			if ( (LA218_0==133) ) {
				alt218=1;
			}
			else if ( (LA218_0==172) ) {
				alt218=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 218, 0, input);
				throw nvae;
			}

			switch (alt218) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:735:18: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
					{
					pushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations9865);
					interface_get_accessor_declaration741=interface_get_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_get_accessor_declaration741.getTree());

					// /Users/jeremie/ANTLR/cs.g:735:55: ( attributes )?
					int alt214=2;
					int LA214_0 = input.LA(1);
					if ( (LA214_0==91) ) {
						alt214=1;
					}
					switch (alt214) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:735:55: attributes
							{
							pushFollow(FOLLOW_attributes_in_interface_accessor_declarations9869);
							attributes742=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes742.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:735:69: ( interface_set_accessor_declaration )?
					int alt215=2;
					int LA215_0 = input.LA(1);
					if ( (LA215_0==172) ) {
						alt215=1;
					}
					switch (alt215) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:735:69: interface_set_accessor_declaration
							{
							pushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations9874);
							interface_set_accessor_declaration743=interface_set_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_set_accessor_declaration743.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:736:19: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
					{
					pushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations9895);
					interface_set_accessor_declaration744=interface_set_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_set_accessor_declaration744.getTree());

					// /Users/jeremie/ANTLR/cs.g:736:56: ( attributes )?
					int alt216=2;
					int LA216_0 = input.LA(1);
					if ( (LA216_0==91) ) {
						alt216=1;
					}
					switch (alt216) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:736:56: attributes
							{
							pushFollow(FOLLOW_attributes_in_interface_accessor_declarations9899);
							attributes745=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes745.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:736:70: ( interface_get_accessor_declaration )?
					int alt217=2;
					int LA217_0 = input.LA(1);
					if ( (LA217_0==133) ) {
						alt217=1;
					}
					switch (alt217) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:736:70: interface_get_accessor_declaration
							{
							pushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations9904);
							interface_get_accessor_declaration746=interface_get_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_get_accessor_declaration746.getTree());

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 214, interface_accessor_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_accessor_declarations"


	public static class interface_get_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_get_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:737:1: interface_get_accessor_declaration : 'get' ';' ;
	public final csParser.interface_get_accessor_declaration_return interface_get_accessor_declaration() throws RecognitionException {
		csParser.interface_get_accessor_declaration_return retval = new csParser.interface_get_accessor_declaration_return();
		retval.start = input.LT(1);
		int interface_get_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal747=null;
		Token char_literal748=null;

		CommonTree string_literal747_tree=null;
		CommonTree char_literal748_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:737:35: ( 'get' ';' )
			// /Users/jeremie/ANTLR/cs.g:738:9: 'get' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal747=(Token)match(input,133,FOLLOW_133_in_interface_get_accessor_declaration9921); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal747_tree = (CommonTree)adaptor.create(string_literal747);
			adaptor.addChild(root_0, string_literal747_tree);
			}

			char_literal748=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_get_accessor_declaration9925); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal748_tree = (CommonTree)adaptor.create(char_literal748);
			adaptor.addChild(root_0, char_literal748_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 215, interface_get_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_get_accessor_declaration"


	public static class interface_set_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_set_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:739:1: interface_set_accessor_declaration : 'set' ';' ;
	public final csParser.interface_set_accessor_declaration_return interface_set_accessor_declaration() throws RecognitionException {
		csParser.interface_set_accessor_declaration_return retval = new csParser.interface_set_accessor_declaration_return();
		retval.start = input.LT(1);
		int interface_set_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal749=null;
		Token char_literal750=null;

		CommonTree string_literal749_tree=null;
		CommonTree char_literal750_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:739:35: ( 'set' ';' )
			// /Users/jeremie/ANTLR/cs.g:740:9: 'set' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal749=(Token)match(input,172,FOLLOW_172_in_interface_set_accessor_declaration9956); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal749_tree = (CommonTree)adaptor.create(string_literal749);
			adaptor.addChild(root_0, string_literal749_tree);
			}

			char_literal750=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_set_accessor_declaration9960); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal750_tree = (CommonTree)adaptor.create(char_literal750);
			adaptor.addChild(root_0, char_literal750_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 216, interface_set_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_set_accessor_declaration"


	public static class method_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_modifiers"
	// /Users/jeremie/ANTLR/cs.g:741:1: method_modifiers : ( modifier )+ ;
	public final csParser.method_modifiers_return method_modifiers() throws RecognitionException {
		csParser.method_modifiers_return retval = new csParser.method_modifiers_return();
		retval.start = input.LT(1);
		int method_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier751 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:741:17: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:742:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:742:9: ( modifier )+
			int cnt219=0;
			loop219:
			while (true) {
				int alt219=2;
				int LA219_0 = input.LA(1);
				if ( (LA219_0==96||LA219_0==125||LA219_0==140||LA219_0==150||LA219_0==156||LA219_0==161||(LA219_0 >= 163 && LA219_0 <= 165)||LA219_0==170||LA219_0==176||LA219_0==188||LA219_0==191||LA219_0==193) ) {
					alt219=1;
				}

				switch (alt219) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:742:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_method_modifiers9991);
					modifier751=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier751.getTree());

					}
					break;

				default :
					if ( cnt219 >= 1 ) break loop219;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(219, input);
					throw eee;
				}
				cnt219++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 217, method_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_modifiers"


	public static class struct_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_declaration"
	// /Users/jeremie/ANTLR/cs.g:745:1: struct_declaration : 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
	public final csParser.struct_declaration_return struct_declaration() throws RecognitionException {
		csParser.struct_declaration_return retval = new csParser.struct_declaration_return();
		retval.start = input.LT(1);
		int struct_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal752=null;
		Token char_literal757=null;
		ParserRuleReturnScope type_or_generic753 =null;
		ParserRuleReturnScope struct_interfaces754 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses755 =null;
		ParserRuleReturnScope struct_body756 =null;

		CommonTree string_literal752_tree=null;
		CommonTree char_literal757_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:745:19: ( 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:746:9: 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal752=(Token)match(input,178,FOLLOW_178_in_struct_declaration10017); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal752_tree = (CommonTree)adaptor.create(string_literal752);
			adaptor.addChild(root_0, string_literal752_tree);
			}

			pushFollow(FOLLOW_type_or_generic_in_struct_declaration10021);
			type_or_generic753=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic753.getTree());

			// /Users/jeremie/ANTLR/cs.g:746:38: ( struct_interfaces )?
			int alt220=2;
			int LA220_0 = input.LA(1);
			if ( (LA220_0==79) ) {
				alt220=1;
			}
			switch (alt220) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:746:38: struct_interfaces
					{
					pushFollow(FOLLOW_struct_interfaces_in_struct_declaration10025);
					struct_interfaces754=struct_interfaces();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_interfaces754.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:746:59: ( type_parameter_constraints_clauses )?
			int alt221=2;
			int LA221_0 = input.LA(1);
			if ( (LA221_0==194) ) {
				alt221=1;
			}
			switch (alt221) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:746:59: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_declaration10030);
					type_parameter_constraints_clauses755=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses755.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_struct_body_in_struct_declaration10035);
			struct_body756=struct_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_body756.getTree());

			// /Users/jeremie/ANTLR/cs.g:746:111: ( ';' )?
			int alt222=2;
			int LA222_0 = input.LA(1);
			if ( (LA222_0==SEMI) ) {
				alt222=1;
			}
			switch (alt222) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:746:111: ';'
					{
					char_literal757=(Token)match(input,SEMI,FOLLOW_SEMI_in_struct_declaration10039); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal757_tree = (CommonTree)adaptor.create(char_literal757);
					adaptor.addChild(root_0, char_literal757_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 218, struct_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_declaration"


	public static class struct_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_modifiers"
	// /Users/jeremie/ANTLR/cs.g:747:1: struct_modifiers : ( struct_modifier )+ ;
	public final csParser.struct_modifiers_return struct_modifiers() throws RecognitionException {
		csParser.struct_modifiers_return retval = new csParser.struct_modifiers_return();
		retval.start = input.LT(1);
		int struct_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope struct_modifier758 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:747:17: ( ( struct_modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:748:9: ( struct_modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:748:9: ( struct_modifier )+
			int cnt223=0;
			loop223:
			while (true) {
				int alt223=2;
				int LA223_0 = input.LA(1);
				if ( (LA223_0==140||LA223_0==150||LA223_0==161||(LA223_0 >= 163 && LA223_0 <= 164)||LA223_0==188) ) {
					alt223=1;
				}

				switch (alt223) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:748:9: struct_modifier
					{
					pushFollow(FOLLOW_struct_modifier_in_struct_modifiers10055);
					struct_modifier758=struct_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifier758.getTree());

					}
					break;

				default :
					if ( cnt223 >= 1 ) break loop223;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(223, input);
					throw eee;
				}
				cnt223++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 219, struct_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_modifiers"


	public static class struct_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_modifier"
	// /Users/jeremie/ANTLR/cs.g:749:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
	public final csParser.struct_modifier_return struct_modifier() throws RecognitionException {
		csParser.struct_modifier_return retval = new csParser.struct_modifier_return();
		retval.start = input.LT(1);
		int struct_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set759=null;

		CommonTree set759_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:749:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set759=input.LT(1);
			if ( input.LA(1)==140||input.LA(1)==150||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 164)||input.LA(1)==188 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set759));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 220, struct_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_modifier"


	public static class struct_interfaces_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_interfaces"
	// /Users/jeremie/ANTLR/cs.g:751:1: struct_interfaces : ':' interface_type_list ;
	public final csParser.struct_interfaces_return struct_interfaces() throws RecognitionException {
		csParser.struct_interfaces_return retval = new csParser.struct_interfaces_return();
		retval.start = input.LT(1);
		int struct_interfaces_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal760=null;
		ParserRuleReturnScope interface_type_list761 =null;

		CommonTree char_literal760_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:751:18: ( ':' interface_type_list )
			// /Users/jeremie/ANTLR/cs.g:752:9: ':' interface_type_list
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal760=(Token)match(input,79,FOLLOW_79_in_struct_interfaces10106); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal760_tree = (CommonTree)adaptor.create(char_literal760);
			adaptor.addChild(root_0, char_literal760_tree);
			}

			pushFollow(FOLLOW_interface_type_list_in_struct_interfaces10110);
			interface_type_list761=interface_type_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list761.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 221, struct_interfaces_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_interfaces"


	public static class struct_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_body"
	// /Users/jeremie/ANTLR/cs.g:753:1: struct_body : '{' ( struct_member_declarations )? '}' ;
	public final csParser.struct_body_return struct_body() throws RecognitionException {
		csParser.struct_body_return retval = new csParser.struct_body_return();
		retval.start = input.LT(1);
		int struct_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal762=null;
		Token char_literal764=null;
		ParserRuleReturnScope struct_member_declarations763 =null;

		CommonTree char_literal762_tree=null;
		CommonTree char_literal764_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:753:12: ( '{' ( struct_member_declarations )? '}' )
			// /Users/jeremie/ANTLR/cs.g:754:9: '{' ( struct_member_declarations )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal762=(Token)match(input,197,FOLLOW_197_in_struct_body10124); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal762_tree = (CommonTree)adaptor.create(char_literal762);
			adaptor.addChild(root_0, char_literal762_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:754:15: ( struct_member_declarations )?
			int alt224=2;
			int LA224_0 = input.LA(1);
			if ( (LA224_0==ENUM||LA224_0==IDENTIFIER||LA224_0==91||(LA224_0 >= 95 && LA224_0 <= 98)||(LA224_0 >= 100 && LA224_0 <= 101)||LA224_0==103||(LA224_0 >= 105 && LA224_0 <= 106)||LA224_0==109||(LA224_0 >= 111 && LA224_0 <= 112)||LA224_0==114||(LA224_0 >= 116 && LA224_0 <= 117)||(LA224_0 >= 119 && LA224_0 <= 120)||(LA224_0 >= 122 && LA224_0 <= 126)||LA224_0==129||LA224_0==132||(LA224_0 >= 135 && LA224_0 <= 136)||(LA224_0 >= 138 && LA224_0 <= 141)||(LA224_0 >= 143 && LA224_0 <= 144)||(LA224_0 >= 146 && LA224_0 <= 148)||(LA224_0 >= 150 && LA224_0 <= 152)||LA224_0==154||(LA224_0 >= 156 && LA224_0 <= 157)||(LA224_0 >= 159 && LA224_0 <= 165)||LA224_0==167||(LA224_0 >= 169 && LA224_0 <= 173)||(LA224_0 >= 176 && LA224_0 <= 178)||LA224_0==183||(LA224_0 >= 185 && LA224_0 <= 186)||(LA224_0 >= 188 && LA224_0 <= 194)||LA224_0==196) ) {
				alt224=1;
			}
			switch (alt224) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:754:15: struct_member_declarations
					{
					pushFollow(FOLLOW_struct_member_declarations_in_struct_body10128);
					struct_member_declarations763=struct_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declarations763.getTree());

					}
					break;

			}

			char_literal764=(Token)match(input,201,FOLLOW_201_in_struct_body10133); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal764_tree = (CommonTree)adaptor.create(char_literal764);
			adaptor.addChild(root_0, char_literal764_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 222, struct_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_body"


	public static class struct_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:755:1: struct_member_declarations : ( struct_member_declaration )+ ;
	public final csParser.struct_member_declarations_return struct_member_declarations() throws RecognitionException {
		csParser.struct_member_declarations_return retval = new csParser.struct_member_declarations_return();
		retval.start = input.LT(1);
		int struct_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope struct_member_declaration765 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:755:27: ( ( struct_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:756:9: ( struct_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:756:9: ( struct_member_declaration )+
			int cnt225=0;
			loop225:
			while (true) {
				int alt225=2;
				int LA225_0 = input.LA(1);
				if ( (LA225_0==ENUM||LA225_0==IDENTIFIER||LA225_0==91||(LA225_0 >= 95 && LA225_0 <= 98)||(LA225_0 >= 100 && LA225_0 <= 101)||LA225_0==103||(LA225_0 >= 105 && LA225_0 <= 106)||LA225_0==109||(LA225_0 >= 111 && LA225_0 <= 112)||LA225_0==114||(LA225_0 >= 116 && LA225_0 <= 117)||(LA225_0 >= 119 && LA225_0 <= 120)||(LA225_0 >= 122 && LA225_0 <= 126)||LA225_0==129||LA225_0==132||(LA225_0 >= 135 && LA225_0 <= 136)||(LA225_0 >= 138 && LA225_0 <= 141)||(LA225_0 >= 143 && LA225_0 <= 144)||(LA225_0 >= 146 && LA225_0 <= 148)||(LA225_0 >= 150 && LA225_0 <= 152)||LA225_0==154||(LA225_0 >= 156 && LA225_0 <= 157)||(LA225_0 >= 159 && LA225_0 <= 165)||LA225_0==167||(LA225_0 >= 169 && LA225_0 <= 173)||(LA225_0 >= 176 && LA225_0 <= 178)||LA225_0==183||(LA225_0 >= 185 && LA225_0 <= 186)||(LA225_0 >= 188 && LA225_0 <= 194)||LA225_0==196) ) {
					alt225=1;
				}

				switch (alt225) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:756:9: struct_member_declaration
					{
					pushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations10147);
					struct_member_declaration765=struct_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declaration765.getTree());

					}
					break;

				default :
					if ( cnt225 >= 1 ) break loop225;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(225, input);
					throw eee;
				}
				cnt225++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 223, struct_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_member_declarations"


	public static class struct_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:757:1: struct_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
	public final csParser.struct_member_declaration_return struct_member_declaration() throws RecognitionException {
		csParser.struct_member_declaration_return retval = new csParser.struct_member_declaration_return();
		retval.start = input.LT(1);
		int struct_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal767=null;
		Token char_literal770=null;
		Token string_literal772=null;
		Token string_literal779=null;
		Token char_literal785=null;
		ParserRuleReturnScope m =null;
		ParserRuleReturnScope attributes766 =null;
		ParserRuleReturnScope type768 =null;
		ParserRuleReturnScope constant_declarators769 =null;
		ParserRuleReturnScope event_declaration771 =null;
		ParserRuleReturnScope method_declaration773 =null;
		ParserRuleReturnScope interface_declaration774 =null;
		ParserRuleReturnScope class_declaration775 =null;
		ParserRuleReturnScope struct_declaration776 =null;
		ParserRuleReturnScope interface_declaration777 =null;
		ParserRuleReturnScope class_declaration778 =null;
		ParserRuleReturnScope method_declaration780 =null;
		ParserRuleReturnScope type781 =null;
		ParserRuleReturnScope method_declaration782 =null;
		ParserRuleReturnScope property_declaration783 =null;
		ParserRuleReturnScope type_name784 =null;
		ParserRuleReturnScope indexer_declaration786 =null;
		ParserRuleReturnScope indexer_declaration787 =null;
		ParserRuleReturnScope field_declaration788 =null;
		ParserRuleReturnScope operator_declaration789 =null;
		ParserRuleReturnScope struct_declaration790 =null;
		ParserRuleReturnScope enum_declaration791 =null;
		ParserRuleReturnScope delegate_declaration792 =null;
		ParserRuleReturnScope conversion_operator_declaration793 =null;
		ParserRuleReturnScope constructor_declaration794 =null;

		CommonTree string_literal767_tree=null;
		CommonTree char_literal770_tree=null;
		CommonTree string_literal772_tree=null;
		CommonTree string_literal779_tree=null;
		CommonTree char_literal785_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:757:26: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
			// /Users/jeremie/ANTLR/cs.g:758:9: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:758:9: ( attributes )?
			int alt226=2;
			int LA226_0 = input.LA(1);
			if ( (LA226_0==91) ) {
				alt226=1;
			}
			switch (alt226) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:758:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_struct_member_declaration10163);
					attributes766=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes766.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:758:24: (m= modifiers )?
			int alt227=2;
			int LA227_0 = input.LA(1);
			if ( (LA227_0==96||LA227_0==125||LA227_0==140||LA227_0==150||LA227_0==156||LA227_0==161||(LA227_0 >= 163 && LA227_0 <= 165)||LA227_0==170||LA227_0==176||LA227_0==188||LA227_0==191||LA227_0==193) ) {
				alt227=1;
			}
			switch (alt227) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:758:24: m= modifiers
					{
					pushFollow(FOLLOW_modifiers_in_struct_member_declaration10170);
					m=modifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:759:9: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			int alt230=12;
			switch ( input.LA(1) ) {
			case 112:
				{
				alt230=1;
				}
				break;
			case 123:
				{
				alt230=2;
				}
				break;
			case 159:
				{
				alt230=3;
				}
				break;
			case 139:
				{
				alt230=4;
				}
				break;
			case 111:
				{
				alt230=5;
				}
				break;
			case 192:
				{
				int LA230_6 = input.LA(2);
				if ( (LA230_6==Character_literal||LA230_6==FALSE||(LA230_6 >= Hex_number && LA230_6 <= IDENTIFIER)||(LA230_6 >= NULL && LA230_6 <= NUMBER)||LA230_6==Real_literal||LA230_6==STRINGLITERAL||LA230_6==TRUE||LA230_6==Verbatim_string_literal||LA230_6==95||(LA230_6 >= 97 && LA230_6 <= 98)||(LA230_6 >= 100 && LA230_6 <= 101)||LA230_6==103||(LA230_6 >= 105 && LA230_6 <= 106)||LA230_6==109||LA230_6==114||LA230_6==117||(LA230_6 >= 119 && LA230_6 <= 120)||LA230_6==122||LA230_6==126||LA230_6==129||LA230_6==132||LA230_6==135||LA230_6==138||LA230_6==141||(LA230_6 >= 143 && LA230_6 <= 144)||(LA230_6 >= 146 && LA230_6 <= 148)||(LA230_6 >= 151 && LA230_6 <= 152)||LA230_6==154||LA230_6==157||LA230_6==160||LA230_6==162||LA230_6==167||LA230_6==169||(LA230_6 >= 171 && LA230_6 <= 173)||LA230_6==177||LA230_6==183||(LA230_6 >= 185 && LA230_6 <= 186)||(LA230_6 >= 189 && LA230_6 <= 190)||LA230_6==194||LA230_6==196) ) {
					alt230=6;
				}
				else if ( (LA230_6==69) ) {
					alt230=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt230=7;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA230_8 = input.LA(2);
				if ( (LA230_8==Character_literal||LA230_8==DOT||LA230_8==FALSE||(LA230_8 >= Hex_number && LA230_8 <= IDENTIFIER)||(LA230_8 >= NULL && LA230_8 <= NUMBER)||LA230_8==Real_literal||LA230_8==STRINGLITERAL||LA230_8==TRUE||LA230_8==Verbatim_string_literal||LA230_8==69||(LA230_8 >= 80 && LA230_8 <= 81)||LA230_8==89||LA230_8==91||LA230_8==95||(LA230_8 >= 97 && LA230_8 <= 98)||(LA230_8 >= 100 && LA230_8 <= 101)||LA230_8==103||(LA230_8 >= 105 && LA230_8 <= 106)||LA230_8==109||LA230_8==114||LA230_8==117||(LA230_8 >= 119 && LA230_8 <= 120)||LA230_8==122||LA230_8==126||LA230_8==129||LA230_8==132||LA230_8==135||LA230_8==138||LA230_8==141||(LA230_8 >= 143 && LA230_8 <= 144)||(LA230_8 >= 146 && LA230_8 <= 148)||(LA230_8 >= 151 && LA230_8 <= 154)||LA230_8==157||LA230_8==160||LA230_8==162||LA230_8==167||LA230_8==169||(LA230_8 >= 171 && LA230_8 <= 173)||LA230_8==177||LA230_8==180||LA230_8==183||(LA230_8 >= 185 && LA230_8 <= 186)||(LA230_8 >= 189 && LA230_8 <= 190)||LA230_8==194||LA230_8==196) ) {
					alt230=7;
				}
				else if ( (LA230_8==68) ) {
					alt230=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 230, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 178:
				{
				alt230=8;
				}
				break;
			case ENUM:
				{
				alt230=9;
				}
				break;
			case 116:
				{
				alt230=10;
				}
				break;
			case 124:
			case 136:
				{
				alt230=11;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 230, 0, input);
				throw nvae;
			}
			switch (alt230) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:759:11: 'const' type constant_declarators ';'
					{
					string_literal767=(Token)match(input,112,FOLLOW_112_in_struct_member_declaration10183); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal767_tree = (CommonTree)adaptor.create(string_literal767);
					adaptor.addChild(root_0, string_literal767_tree);
					}

					pushFollow(FOLLOW_type_in_struct_member_declaration10187);
					type768=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type768.getTree());

					pushFollow(FOLLOW_constant_declarators_in_struct_member_declaration10191);
					constant_declarators769=constant_declarators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators769.getTree());

					char_literal770=(Token)match(input,SEMI,FOLLOW_SEMI_in_struct_member_declaration10195); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal770_tree = (CommonTree)adaptor.create(char_literal770);
					adaptor.addChild(root_0, char_literal770_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:760:11: event_declaration
					{
					pushFollow(FOLLOW_event_declaration_in_struct_member_declaration10207);
					event_declaration771=event_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration771.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:761:11: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					{
					string_literal772=(Token)match(input,159,FOLLOW_159_in_struct_member_declaration10235); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal772_tree = (CommonTree)adaptor.create(string_literal772);
					adaptor.addChild(root_0, string_literal772_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:761:21: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					int alt228=4;
					switch ( input.LA(1) ) {
					case Character_literal:
					case FALSE:
					case Hex_number:
					case IDENTIFIER:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 103:
					case 105:
					case 106:
					case 109:
					case 114:
					case 117:
					case 119:
					case 120:
					case 122:
					case 126:
					case 129:
					case 132:
					case 135:
					case 138:
					case 141:
					case 143:
					case 144:
					case 146:
					case 147:
					case 148:
					case 151:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 169:
					case 171:
					case 172:
					case 173:
					case 177:
					case 183:
					case 185:
					case 186:
					case 189:
					case 190:
					case 194:
					case 196:
						{
						alt228=1;
						}
						break;
					case 139:
						{
						alt228=2;
						}
						break;
					case 111:
						{
						alt228=3;
						}
						break;
					case 178:
						{
						alt228=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 228, 0, input);
						throw nvae;
					}
					switch (alt228) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:761:22: method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_struct_member_declaration10238);
							method_declaration773=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration773.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:762:30: interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_struct_member_declaration10270);
							interface_declaration774=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration774.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:763:30: class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_struct_member_declaration10302);
							class_declaration775=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration775.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:764:30: struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_struct_member_declaration10334);
							struct_declaration776=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration776.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:766:11: interface_declaration
					{
					pushFollow(FOLLOW_interface_declaration_in_struct_member_declaration10348);
					interface_declaration777=interface_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration777.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:767:11: class_declaration
					{
					pushFollow(FOLLOW_class_declaration_in_struct_member_declaration10368);
					class_declaration778=class_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration778.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:768:11: 'void' method_declaration
					{
					string_literal779=(Token)match(input,192,FOLLOW_192_in_struct_member_declaration10396); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal779_tree = (CommonTree)adaptor.create(string_literal779);
					adaptor.addChild(root_0, string_literal779_tree);
					}

					pushFollow(FOLLOW_method_declaration_in_struct_member_declaration10400);
					method_declaration780=method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration780.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:769:11: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
					{
					pushFollow(FOLLOW_type_in_struct_member_declaration10412);
					type781=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type781.getTree());

					// /Users/jeremie/ANTLR/cs.g:769:16: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
					int alt229=6;
					switch ( input.LA(1) ) {
					case 103:
					case 106:
					case 109:
					case 114:
					case 119:
					case 129:
					case 138:
					case 146:
					case 151:
					case 169:
					case 173:
					case 177:
					case 185:
					case 186:
					case 189:
						{
						int LA229_1 = input.LA(2);
						if ( (synpred28_cs()) ) {
							alt229=1;
						}
						else if ( (synpred29_cs()) ) {
							alt229=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 229, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						int LA229_2 = input.LA(2);
						if ( (synpred28_cs()) ) {
							alt229=1;
						}
						else if ( (synpred29_cs()) ) {
							alt229=2;
						}
						else if ( (synpred30_cs()) ) {
							alt229=3;
						}
						else if ( (true) ) {
							alt229=5;
						}

						}
						break;
					case Character_literal:
					case FALSE:
					case Hex_number:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
						{
						int LA229_3 = input.LA(2);
						if ( (synpred28_cs()) ) {
							alt229=1;
						}
						else if ( (synpred29_cs()) ) {
							alt229=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 229, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case 180:
						{
						alt229=4;
						}
						break;
					case 153:
						{
						alt229=6;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 229, 0, input);
						throw nvae;
					}
					switch (alt229) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:769:18: ( member_name '(' )=> method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_struct_member_declaration10426);
							method_declaration782=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration782.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:770:22: ( member_name '{' )=> property_declaration
							{
							pushFollow(FOLLOW_property_declaration_in_struct_member_declaration10459);
							property_declaration783=property_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration783.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:771:22: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
							{
							pushFollow(FOLLOW_type_name_in_struct_member_declaration10496);
							type_name784=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name784.getTree());

							char_literal785=(Token)match(input,DOT,FOLLOW_DOT_in_struct_member_declaration10498); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal785_tree = (CommonTree)adaptor.create(char_literal785);
							adaptor.addChild(root_0, char_literal785_tree);
							}

							pushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration10500);
							indexer_declaration786=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration786.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:772:22: indexer_declaration
							{
							pushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration10523);
							indexer_declaration787=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration787.getTree());

							}
							break;
						case 5 :
							// /Users/jeremie/ANTLR/cs.g:773:18: field_declaration
							{
							pushFollow(FOLLOW_field_declaration_in_struct_member_declaration10550);
							field_declaration788=field_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration788.getTree());

							}
							break;
						case 6 :
							// /Users/jeremie/ANTLR/cs.g:774:18: operator_declaration
							{
							pushFollow(FOLLOW_operator_declaration_in_struct_member_declaration10575);
							operator_declaration789=operator_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declaration789.getTree());

							}
							break;

					}

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:778:11: struct_declaration
					{
					pushFollow(FOLLOW_struct_declaration_in_struct_member_declaration10614);
					struct_declaration790=struct_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration790.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:779:11: enum_declaration
					{
					pushFollow(FOLLOW_enum_declaration_in_struct_member_declaration10634);
					enum_declaration791=enum_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration791.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:780:11: delegate_declaration
					{
					pushFollow(FOLLOW_delegate_declaration_in_struct_member_declaration10662);
					delegate_declaration792=delegate_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration792.getTree());

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:781:11: conversion_operator_declaration
					{
					pushFollow(FOLLOW_conversion_operator_declaration_in_struct_member_declaration10682);
					conversion_operator_declaration793=conversion_operator_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declaration793.getTree());

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:782:11: constructor_declaration
					{
					pushFollow(FOLLOW_constructor_declaration_in_struct_member_declaration10694);
					constructor_declaration794=constructor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration794.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 224, struct_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_member_declaration"


	public static class indexer_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "indexer_declaration"
	// /Users/jeremie/ANTLR/cs.g:788:1: indexer_declaration : indexer_declarator '{' accessor_declarations '}' ;
	public final csParser.indexer_declaration_return indexer_declaration() throws RecognitionException {
		csParser.indexer_declaration_return retval = new csParser.indexer_declaration_return();
		retval.start = input.LT(1);
		int indexer_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal796=null;
		Token char_literal798=null;
		ParserRuleReturnScope indexer_declarator795 =null;
		ParserRuleReturnScope accessor_declarations797 =null;

		CommonTree char_literal796_tree=null;
		CommonTree char_literal798_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:788:20: ( indexer_declarator '{' accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:789:9: indexer_declarator '{' accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_indexer_declarator_in_indexer_declaration10739);
			indexer_declarator795=indexer_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declarator795.getTree());

			char_literal796=(Token)match(input,197,FOLLOW_197_in_indexer_declaration10743); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal796_tree = (CommonTree)adaptor.create(char_literal796);
			adaptor.addChild(root_0, char_literal796_tree);
			}

			pushFollow(FOLLOW_accessor_declarations_in_indexer_declaration10747);
			accessor_declarations797=accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations797.getTree());

			char_literal798=(Token)match(input,201,FOLLOW_201_in_indexer_declaration10751); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal798_tree = (CommonTree)adaptor.create(char_literal798);
			adaptor.addChild(root_0, char_literal798_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 225, indexer_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "indexer_declaration"


	public static class indexer_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "indexer_declarator"
	// /Users/jeremie/ANTLR/cs.g:790:1: indexer_declarator : 'this' '[' formal_parameter_list ']' ;
	public final csParser.indexer_declarator_return indexer_declarator() throws RecognitionException {
		csParser.indexer_declarator_return retval = new csParser.indexer_declarator_return();
		retval.start = input.LT(1);
		int indexer_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal799=null;
		Token char_literal800=null;
		Token char_literal802=null;
		ParserRuleReturnScope formal_parameter_list801 =null;

		CommonTree string_literal799_tree=null;
		CommonTree char_literal800_tree=null;
		CommonTree char_literal802_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:790:19: ( 'this' '[' formal_parameter_list ']' )
			// /Users/jeremie/ANTLR/cs.g:792:9: 'this' '[' formal_parameter_list ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal799=(Token)match(input,180,FOLLOW_180_in_indexer_declarator10775); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal799_tree = (CommonTree)adaptor.create(string_literal799);
			adaptor.addChild(root_0, string_literal799_tree);
			}

			char_literal800=(Token)match(input,91,FOLLOW_91_in_indexer_declarator10779); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal800_tree = (CommonTree)adaptor.create(char_literal800);
			adaptor.addChild(root_0, char_literal800_tree);
			}

			pushFollow(FOLLOW_formal_parameter_list_in_indexer_declarator10783);
			formal_parameter_list801=formal_parameter_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list801.getTree());

			char_literal802=(Token)match(input,92,FOLLOW_92_in_indexer_declarator10787); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal802_tree = (CommonTree)adaptor.create(char_literal802);
			adaptor.addChild(root_0, char_literal802_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 226, indexer_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "indexer_declarator"


	public static class operator_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "operator_declaration"
	// /Users/jeremie/ANTLR/cs.g:795:1: operator_declaration : operator_declarator operator_body ;
	public final csParser.operator_declaration_return operator_declaration() throws RecognitionException {
		csParser.operator_declaration_return retval = new csParser.operator_declaration_return();
		retval.start = input.LT(1);
		int operator_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope operator_declarator803 =null;
		ParserRuleReturnScope operator_body804 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:795:21: ( operator_declarator operator_body )
			// /Users/jeremie/ANTLR/cs.g:796:9: operator_declarator operator_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_operator_declarator_in_operator_declaration10812);
			operator_declarator803=operator_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declarator803.getTree());

			pushFollow(FOLLOW_operator_body_in_operator_declaration10816);
			operator_body804=operator_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body804.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 227, operator_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "operator_declaration"


	public static class operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:797:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) ;
	public final csParser.operator_declarator_return operator_declarator() throws RecognitionException {
		csParser.operator_declarator_return retval = new csParser.operator_declarator_return();
		retval.start = input.LT(1);
		int operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal805=null;
		Token set806=null;
		Token char_literal807=null;
		ParserRuleReturnScope type808 =null;
		ParserRuleReturnScope identifier809 =null;
		ParserRuleReturnScope binary_operator_declarator810 =null;
		ParserRuleReturnScope unary_operator_declarator811 =null;
		ParserRuleReturnScope overloadable_unary_operator812 =null;
		ParserRuleReturnScope unary_operator_declarator813 =null;
		ParserRuleReturnScope overloadable_binary_operator814 =null;
		ParserRuleReturnScope binary_operator_declarator815 =null;

		CommonTree string_literal805_tree=null;
		CommonTree set806_tree=null;
		CommonTree char_literal807_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:797:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) )
			// /Users/jeremie/ANTLR/cs.g:798:9: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal805=(Token)match(input,153,FOLLOW_153_in_operator_declarator10831); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal805_tree = (CommonTree)adaptor.create(string_literal805);
			adaptor.addChild(root_0, string_literal805_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:799:17: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			int alt232=3;
			switch ( input.LA(1) ) {
			case MINUS:
			case 71:
				{
				alt232=1;
				}
				break;
			case FALSE:
			case TRUE:
			case 61:
			case 72:
			case 75:
			case 202:
				{
				alt232=2;
				}
				break;
			case GT:
			case 62:
			case 63:
			case 66:
			case 69:
			case 77:
			case 81:
			case 82:
			case 84:
			case 86:
			case 88:
			case 93:
			case 198:
				{
				alt232=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 232, 0, input);
				throw nvae;
			}
			switch (alt232) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:799:18: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
					{
					set806=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==71 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set806));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					char_literal807=(Token)match(input,68,FOLLOW_68_in_operator_declarator10863); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal807_tree = (CommonTree)adaptor.create(char_literal807);
					adaptor.addChild(root_0, char_literal807_tree);
					}

					pushFollow(FOLLOW_type_in_operator_declarator10867);
					type808=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type808.getTree());

					pushFollow(FOLLOW_identifier_in_operator_declarator10871);
					identifier809=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier809.getTree());

					// /Users/jeremie/ANTLR/cs.g:799:56: ( binary_operator_declarator | unary_operator_declarator )
					int alt231=2;
					int LA231_0 = input.LA(1);
					if ( (LA231_0==74) ) {
						alt231=1;
					}
					else if ( (LA231_0==RPAREN) ) {
						alt231=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 231, 0, input);
						throw nvae;
					}

					switch (alt231) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:799:57: binary_operator_declarator
							{
							pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator10874);
							binary_operator_declarator810=binary_operator_declarator();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator810.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:799:86: unary_operator_declarator
							{
							pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator10878);
							unary_operator_declarator811=unary_operator_declarator();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator811.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:800:19: overloadable_unary_operator unary_operator_declarator
					{
					pushFollow(FOLLOW_overloadable_unary_operator_in_operator_declarator10899);
					overloadable_unary_operator812=overloadable_unary_operator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_unary_operator812.getTree());

					pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator10903);
					unary_operator_declarator813=unary_operator_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator813.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:801:19: overloadable_binary_operator binary_operator_declarator
					{
					pushFollow(FOLLOW_overloadable_binary_operator_in_operator_declarator10923);
					overloadable_binary_operator814=overloadable_binary_operator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_binary_operator814.getTree());

					pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator10927);
					binary_operator_declarator815=binary_operator_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator815.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 228, operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "operator_declarator"


	public static class unary_operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unary_operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:802:1: unary_operator_declarator : ')' ;
	public final csParser.unary_operator_declarator_return unary_operator_declarator() throws RecognitionException {
		csParser.unary_operator_declarator_return retval = new csParser.unary_operator_declarator_return();
		retval.start = input.LT(1);
		int unary_operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal816=null;

		CommonTree char_literal816_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:802:26: ( ')' )
			// /Users/jeremie/ANTLR/cs.g:803:12: ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal816=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator_declarator10946); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal816_tree = (CommonTree)adaptor.create(char_literal816);
			adaptor.addChild(root_0, char_literal816_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 229, unary_operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unary_operator_declarator"


	public static class overloadable_unary_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "overloadable_unary_operator"
	// /Users/jeremie/ANTLR/cs.g:804:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
	public final csParser.overloadable_unary_operator_return overloadable_unary_operator() throws RecognitionException {
		csParser.overloadable_unary_operator_return retval = new csParser.overloadable_unary_operator_return();
		retval.start = input.LT(1);
		int overloadable_unary_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set817=null;

		CommonTree set817_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:804:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set817=input.LT(1);
			if ( input.LA(1)==FALSE||input.LA(1)==TRUE||input.LA(1)==61||input.LA(1)==72||input.LA(1)==75||input.LA(1)==202 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set817));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 230, overloadable_unary_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "overloadable_unary_operator"


	public static class binary_operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "binary_operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:806:1: binary_operator_declarator : ',' type identifier ')' ;
	public final csParser.binary_operator_declarator_return binary_operator_declarator() throws RecognitionException {
		csParser.binary_operator_declarator_return retval = new csParser.binary_operator_declarator_return();
		retval.start = input.LT(1);
		int binary_operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal818=null;
		Token char_literal821=null;
		ParserRuleReturnScope type819 =null;
		ParserRuleReturnScope identifier820 =null;

		CommonTree char_literal818_tree=null;
		CommonTree char_literal821_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:806:27: ( ',' type identifier ')' )
			// /Users/jeremie/ANTLR/cs.g:807:9: ',' type identifier ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal818=(Token)match(input,74,FOLLOW_74_in_binary_operator_declarator11003); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal818_tree = (CommonTree)adaptor.create(char_literal818);
			adaptor.addChild(root_0, char_literal818_tree);
			}

			pushFollow(FOLLOW_type_in_binary_operator_declarator11007);
			type819=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type819.getTree());

			pushFollow(FOLLOW_identifier_in_binary_operator_declarator11011);
			identifier820=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier820.getTree());

			char_literal821=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_binary_operator_declarator11015); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal821_tree = (CommonTree)adaptor.create(char_literal821);
			adaptor.addChild(root_0, char_literal821_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 231, binary_operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "binary_operator_declarator"


	public static class overloadable_binary_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "overloadable_binary_operator"
	// /Users/jeremie/ANTLR/cs.g:809:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
	public final csParser.overloadable_binary_operator_return overloadable_binary_operator() throws RecognitionException {
		csParser.overloadable_binary_operator_return retval = new csParser.overloadable_binary_operator_return();
		retval.start = input.LT(1);
		int overloadable_binary_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal822=null;
		Token char_literal823=null;
		Token char_literal824=null;
		Token char_literal825=null;
		Token char_literal826=null;
		Token char_literal827=null;
		Token string_literal828=null;
		Token char_literal829=null;
		Token char_literal830=null;
		Token string_literal831=null;
		Token string_literal832=null;
		Token char_literal833=null;
		Token char_literal834=null;
		Token string_literal835=null;
		Token string_literal836=null;

		CommonTree char_literal822_tree=null;
		CommonTree char_literal823_tree=null;
		CommonTree char_literal824_tree=null;
		CommonTree char_literal825_tree=null;
		CommonTree char_literal826_tree=null;
		CommonTree char_literal827_tree=null;
		CommonTree string_literal828_tree=null;
		CommonTree char_literal829_tree=null;
		CommonTree char_literal830_tree=null;
		CommonTree string_literal831_tree=null;
		CommonTree string_literal832_tree=null;
		CommonTree char_literal833_tree=null;
		CommonTree char_literal834_tree=null;
		CommonTree string_literal835_tree=null;
		CommonTree string_literal836_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:809:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
			int alt233=14;
			switch ( input.LA(1) ) {
			case 69:
				{
				alt233=1;
				}
				break;
			case 77:
				{
				alt233=2;
				}
				break;
			case 63:
				{
				alt233=3;
				}
				break;
			case 66:
				{
				alt233=4;
				}
				break;
			case 198:
				{
				alt233=5;
				}
				break;
			case 93:
				{
				alt233=6;
				}
				break;
			case 82:
				{
				alt233=7;
				}
				break;
			case GT:
				{
				int LA233_8 = input.LA(2);
				if ( (LA233_8==GT) ) {
					alt233=8;
				}
				else if ( (LA233_8==74) ) {
					alt233=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 233, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 86:
				{
				alt233=9;
				}
				break;
			case 62:
				{
				alt233=10;
				}
				break;
			case 81:
				{
				alt233=12;
				}
				break;
			case 88:
				{
				alt233=13;
				}
				break;
			case 84:
				{
				alt233=14;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 233, 0, input);
				throw nvae;
			}
			switch (alt233) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:810:26: '*'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal822=(Token)match(input,69,FOLLOW_69_in_overloadable_binary_operator11033); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal822_tree = (CommonTree)adaptor.create(char_literal822);
					adaptor.addChild(root_0, char_literal822_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:810:32: '/'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal823=(Token)match(input,77,FOLLOW_77_in_overloadable_binary_operator11037); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal823_tree = (CommonTree)adaptor.create(char_literal823);
					adaptor.addChild(root_0, char_literal823_tree);
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:810:38: '%'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal824=(Token)match(input,63,FOLLOW_63_in_overloadable_binary_operator11041); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal824_tree = (CommonTree)adaptor.create(char_literal824);
					adaptor.addChild(root_0, char_literal824_tree);
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:810:44: '&'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal825=(Token)match(input,66,FOLLOW_66_in_overloadable_binary_operator11045); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal825_tree = (CommonTree)adaptor.create(char_literal825);
					adaptor.addChild(root_0, char_literal825_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:810:50: '|'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal826=(Token)match(input,198,FOLLOW_198_in_overloadable_binary_operator11049); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal826_tree = (CommonTree)adaptor.create(char_literal826);
					adaptor.addChild(root_0, char_literal826_tree);
					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:810:56: '^'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal827=(Token)match(input,93,FOLLOW_93_in_overloadable_binary_operator11053); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal827_tree = (CommonTree)adaptor.create(char_literal827);
					adaptor.addChild(root_0, char_literal827_tree);
					}

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:810:62: '<<'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal828=(Token)match(input,82,FOLLOW_82_in_overloadable_binary_operator11057); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal828_tree = (CommonTree)adaptor.create(string_literal828);
					adaptor.addChild(root_0, string_literal828_tree);
					}

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:810:69: '>' '>'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal829=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator11061); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal829_tree = (CommonTree)adaptor.create(char_literal829);
					adaptor.addChild(root_0, char_literal829_tree);
					}

					char_literal830=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator11063); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal830_tree = (CommonTree)adaptor.create(char_literal830);
					adaptor.addChild(root_0, char_literal830_tree);
					}

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:810:79: '=='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal831=(Token)match(input,86,FOLLOW_86_in_overloadable_binary_operator11067); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal831_tree = (CommonTree)adaptor.create(string_literal831);
					adaptor.addChild(root_0, string_literal831_tree);
					}

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:810:86: '!='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal832=(Token)match(input,62,FOLLOW_62_in_overloadable_binary_operator11071); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal832_tree = (CommonTree)adaptor.create(string_literal832);
					adaptor.addChild(root_0, string_literal832_tree);
					}

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:810:93: '>'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal833=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator11075); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal833_tree = (CommonTree)adaptor.create(char_literal833);
					adaptor.addChild(root_0, char_literal833_tree);
					}

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:810:99: '<'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal834=(Token)match(input,81,FOLLOW_81_in_overloadable_binary_operator11079); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal834_tree = (CommonTree)adaptor.create(char_literal834);
					adaptor.addChild(root_0, char_literal834_tree);
					}

					}
					break;
				case 13 :
					// /Users/jeremie/ANTLR/cs.g:810:105: '>='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal835=(Token)match(input,88,FOLLOW_88_in_overloadable_binary_operator11083); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal835_tree = (CommonTree)adaptor.create(string_literal835);
					adaptor.addChild(root_0, string_literal835_tree);
					}

					}
					break;
				case 14 :
					// /Users/jeremie/ANTLR/cs.g:810:112: '<='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal836=(Token)match(input,84,FOLLOW_84_in_overloadable_binary_operator11087); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal836_tree = (CommonTree)adaptor.create(string_literal836);
					adaptor.addChild(root_0, string_literal836_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 232, overloadable_binary_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "overloadable_binary_operator"


	public static class conversion_operator_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conversion_operator_declaration"
	// /Users/jeremie/ANTLR/cs.g:812:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
	public final csParser.conversion_operator_declaration_return conversion_operator_declaration() throws RecognitionException {
		csParser.conversion_operator_declaration_return retval = new csParser.conversion_operator_declaration_return();
		retval.start = input.LT(1);
		int conversion_operator_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope conversion_operator_declarator837 =null;
		ParserRuleReturnScope operator_body838 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:812:32: ( conversion_operator_declarator operator_body )
			// /Users/jeremie/ANTLR/cs.g:813:9: conversion_operator_declarator operator_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration11104);
			conversion_operator_declarator837=conversion_operator_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declarator837.getTree());

			pushFollow(FOLLOW_operator_body_in_conversion_operator_declaration11108);
			operator_body838=operator_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body838.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 233, conversion_operator_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conversion_operator_declaration"


	public static class conversion_operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conversion_operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:814:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
	public final csParser.conversion_operator_declarator_return conversion_operator_declarator() throws RecognitionException {
		csParser.conversion_operator_declarator_return retval = new csParser.conversion_operator_declarator_return();
		retval.start = input.LT(1);
		int conversion_operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set839=null;
		Token string_literal840=null;
		Token char_literal842=null;
		Token char_literal845=null;
		ParserRuleReturnScope type841 =null;
		ParserRuleReturnScope type843 =null;
		ParserRuleReturnScope identifier844 =null;

		CommonTree set839_tree=null;
		CommonTree string_literal840_tree=null;
		CommonTree char_literal842_tree=null;
		CommonTree char_literal845_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:814:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
			// /Users/jeremie/ANTLR/cs.g:815:9: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			set839=input.LT(1);
			if ( input.LA(1)==124||input.LA(1)==136 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set839));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			string_literal840=(Token)match(input,153,FOLLOW_153_in_conversion_operator_declarator11132); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal840_tree = (CommonTree)adaptor.create(string_literal840);
			adaptor.addChild(root_0, string_literal840_tree);
			}

			pushFollow(FOLLOW_type_in_conversion_operator_declarator11136);
			type841=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type841.getTree());

			char_literal842=(Token)match(input,68,FOLLOW_68_in_conversion_operator_declarator11140); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal842_tree = (CommonTree)adaptor.create(char_literal842);
			adaptor.addChild(root_0, char_literal842_tree);
			}

			pushFollow(FOLLOW_type_in_conversion_operator_declarator11144);
			type843=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type843.getTree());

			pushFollow(FOLLOW_identifier_in_conversion_operator_declarator11148);
			identifier844=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier844.getTree());

			char_literal845=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conversion_operator_declarator11152); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal845_tree = (CommonTree)adaptor.create(char_literal845);
			adaptor.addChild(root_0, char_literal845_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 234, conversion_operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conversion_operator_declarator"


	public static class operator_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "operator_body"
	// /Users/jeremie/ANTLR/cs.g:816:1: operator_body : block ;
	public final csParser.operator_body_return operator_body() throws RecognitionException {
		csParser.operator_body_return retval = new csParser.operator_body_return();
		retval.start = input.LT(1);
		int operator_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block846 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:816:14: ( block )
			// /Users/jeremie/ANTLR/cs.g:817:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_operator_body11167);
			block846=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block846.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 235, operator_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "operator_body"


	public static class constructor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_declaration"
	// /Users/jeremie/ANTLR/cs.g:820:1: constructor_declaration : constructor_declarator constructor_body ;
	public final csParser.constructor_declaration_return constructor_declaration() throws RecognitionException {
		csParser.constructor_declaration_return retval = new csParser.constructor_declaration_return();
		retval.start = input.LT(1);
		int constructor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope constructor_declarator847 =null;
		ParserRuleReturnScope constructor_body848 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:820:24: ( constructor_declarator constructor_body )
			// /Users/jeremie/ANTLR/cs.g:821:9: constructor_declarator constructor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_constructor_declarator_in_constructor_declaration11184);
			constructor_declarator847=constructor_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declarator847.getTree());

			pushFollow(FOLLOW_constructor_body_in_constructor_declaration11188);
			constructor_body848=constructor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_body848.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 236, constructor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_declaration"


	public static class constructor_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_declarator"
	// /Users/jeremie/ANTLR/cs.g:822:1: constructor_declarator : identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? ;
	public final csParser.constructor_declarator_return constructor_declarator() throws RecognitionException {
		csParser.constructor_declarator_return retval = new csParser.constructor_declarator_return();
		retval.start = input.LT(1);
		int constructor_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal850=null;
		Token char_literal852=null;
		ParserRuleReturnScope identifier849 =null;
		ParserRuleReturnScope formal_parameter_list851 =null;
		ParserRuleReturnScope constructor_initializer853 =null;

		CommonTree char_literal850_tree=null;
		CommonTree char_literal852_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:822:23: ( identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? )
			// /Users/jeremie/ANTLR/cs.g:823:9: identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_constructor_declarator11203);
			identifier849=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier849.getTree());

			char_literal850=(Token)match(input,68,FOLLOW_68_in_constructor_declarator11207); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal850_tree = (CommonTree)adaptor.create(char_literal850);
			adaptor.addChild(root_0, char_literal850_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:823:28: ( formal_parameter_list )?
			int alt234=2;
			int LA234_0 = input.LA(1);
			if ( (LA234_0==IDENTIFIER||LA234_0==91||LA234_0==95||(LA234_0 >= 97 && LA234_0 <= 98)||(LA234_0 >= 100 && LA234_0 <= 101)||LA234_0==103||(LA234_0 >= 105 && LA234_0 <= 106)||LA234_0==109||LA234_0==114||LA234_0==117||(LA234_0 >= 119 && LA234_0 <= 120)||LA234_0==122||LA234_0==126||LA234_0==129||LA234_0==132||LA234_0==135||LA234_0==138||LA234_0==141||(LA234_0 >= 143 && LA234_0 <= 144)||(LA234_0 >= 146 && LA234_0 <= 148)||(LA234_0 >= 151 && LA234_0 <= 152)||(LA234_0 >= 154 && LA234_0 <= 155)||(LA234_0 >= 157 && LA234_0 <= 158)||LA234_0==160||LA234_0==162||(LA234_0 >= 166 && LA234_0 <= 167)||LA234_0==169||(LA234_0 >= 171 && LA234_0 <= 173)||LA234_0==177||LA234_0==180||LA234_0==183||(LA234_0 >= 185 && LA234_0 <= 186)||(LA234_0 >= 189 && LA234_0 <= 190)||LA234_0==192||LA234_0==194||LA234_0==196) ) {
				alt234=1;
			}
			switch (alt234) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:823:28: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_constructor_declarator11211);
					formal_parameter_list851=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list851.getTree());

					}
					break;

			}

			char_literal852=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_declarator11216); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal852_tree = (CommonTree)adaptor.create(char_literal852);
			adaptor.addChild(root_0, char_literal852_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:823:59: ( constructor_initializer )?
			int alt235=2;
			int LA235_0 = input.LA(1);
			if ( (LA235_0==79) ) {
				alt235=1;
			}
			switch (alt235) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:823:59: constructor_initializer
					{
					pushFollow(FOLLOW_constructor_initializer_in_constructor_declarator11220);
					constructor_initializer853=constructor_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_initializer853.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 237, constructor_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_declarator"


	public static class constructor_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_initializer"
	// /Users/jeremie/ANTLR/cs.g:824:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
	public final csParser.constructor_initializer_return constructor_initializer() throws RecognitionException {
		csParser.constructor_initializer_return retval = new csParser.constructor_initializer_return();
		retval.start = input.LT(1);
		int constructor_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal854=null;
		Token set855=null;
		Token char_literal856=null;
		Token char_literal858=null;
		ParserRuleReturnScope argument_list857 =null;

		CommonTree char_literal854_tree=null;
		CommonTree set855_tree=null;
		CommonTree char_literal856_tree=null;
		CommonTree char_literal858_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:824:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
			// /Users/jeremie/ANTLR/cs.g:825:9: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal854=(Token)match(input,79,FOLLOW_79_in_constructor_initializer11236); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal854_tree = (CommonTree)adaptor.create(char_literal854);
			adaptor.addChild(root_0, char_literal854_tree);
			}

			set855=input.LT(1);
			if ( input.LA(1)==102||input.LA(1)==180 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set855));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			char_literal856=(Token)match(input,68,FOLLOW_68_in_constructor_initializer11250); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal856_tree = (CommonTree)adaptor.create(char_literal856);
			adaptor.addChild(root_0, char_literal856_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:825:41: ( argument_list )?
			int alt236=2;
			int LA236_0 = input.LA(1);
			if ( (LA236_0==Character_literal||LA236_0==FALSE||(LA236_0 >= Hex_number && LA236_0 <= IDENTIFIER)||(LA236_0 >= MINUS && LA236_0 <= NUMBER)||LA236_0==Real_literal||LA236_0==STRINGLITERAL||LA236_0==TRUE||LA236_0==Verbatim_string_literal||LA236_0==61||LA236_0==66||(LA236_0 >= 68 && LA236_0 <= 69)||(LA236_0 >= 71 && LA236_0 <= 72)||LA236_0==75||LA236_0==95||(LA236_0 >= 97 && LA236_0 <= 98)||(LA236_0 >= 100 && LA236_0 <= 103)||(LA236_0 >= 105 && LA236_0 <= 106)||(LA236_0 >= 109 && LA236_0 <= 110)||(LA236_0 >= 114 && LA236_0 <= 117)||(LA236_0 >= 119 && LA236_0 <= 120)||LA236_0==122||LA236_0==126||LA236_0==129||LA236_0==132||LA236_0==135||LA236_0==138||LA236_0==141||(LA236_0 >= 143 && LA236_0 <= 144)||(LA236_0 >= 146 && LA236_0 <= 148)||(LA236_0 >= 150 && LA236_0 <= 152)||(LA236_0 >= 154 && LA236_0 <= 155)||LA236_0==157||LA236_0==160||LA236_0==162||(LA236_0 >= 166 && LA236_0 <= 167)||LA236_0==169||(LA236_0 >= 171 && LA236_0 <= 174)||LA236_0==177||LA236_0==180||(LA236_0 >= 183 && LA236_0 <= 187)||(LA236_0 >= 189 && LA236_0 <= 190)||LA236_0==194||LA236_0==196||LA236_0==202) ) {
				alt236=1;
			}
			switch (alt236) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:825:41: argument_list
					{
					pushFollow(FOLLOW_argument_list_in_constructor_initializer11254);
					argument_list857=argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list857.getTree());

					}
					break;

			}

			char_literal858=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_initializer11259); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal858_tree = (CommonTree)adaptor.create(char_literal858);
			adaptor.addChild(root_0, char_literal858_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 238, constructor_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_initializer"


	public static class constructor_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_body"
	// /Users/jeremie/ANTLR/cs.g:826:1: constructor_body : block ;
	public final csParser.constructor_body_return constructor_body() throws RecognitionException {
		csParser.constructor_body_return retval = new csParser.constructor_body_return();
		retval.start = input.LT(1);
		int constructor_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block859 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:826:17: ( block )
			// /Users/jeremie/ANTLR/cs.g:827:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_constructor_body11274);
			block859=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block859.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 239, constructor_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_body"


	public static class destructor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "destructor_declaration"
	// /Users/jeremie/ANTLR/cs.g:836:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
	public final csParser.destructor_declaration_return destructor_declaration() throws RecognitionException {
		csParser.destructor_declaration_return retval = new csParser.destructor_declaration_return();
		retval.start = input.LT(1);
		int destructor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal860=null;
		Token char_literal862=null;
		Token char_literal863=null;
		ParserRuleReturnScope identifier861 =null;
		ParserRuleReturnScope destructor_body864 =null;

		CommonTree char_literal860_tree=null;
		CommonTree char_literal862_tree=null;
		CommonTree char_literal863_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:836:23: ( '~' identifier '(' ')' destructor_body )
			// /Users/jeremie/ANTLR/cs.g:837:9: '~' identifier '(' ')' destructor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal860=(Token)match(input,202,FOLLOW_202_in_destructor_declaration11297); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal860_tree = (CommonTree)adaptor.create(char_literal860);
			adaptor.addChild(root_0, char_literal860_tree);
			}

			pushFollow(FOLLOW_identifier_in_destructor_declaration11300);
			identifier861=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier861.getTree());

			char_literal862=(Token)match(input,68,FOLLOW_68_in_destructor_declaration11304); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal862_tree = (CommonTree)adaptor.create(char_literal862);
			adaptor.addChild(root_0, char_literal862_tree);
			}

			char_literal863=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_destructor_declaration11308); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal863_tree = (CommonTree)adaptor.create(char_literal863);
			adaptor.addChild(root_0, char_literal863_tree);
			}

			pushFollow(FOLLOW_destructor_body_in_destructor_declaration11313);
			destructor_body864=destructor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_body864.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 240, destructor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "destructor_declaration"


	public static class destructor_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "destructor_body"
	// /Users/jeremie/ANTLR/cs.g:838:1: destructor_body : block ;
	public final csParser.destructor_body_return destructor_body() throws RecognitionException {
		csParser.destructor_body_return retval = new csParser.destructor_body_return();
		retval.start = input.LT(1);
		int destructor_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block865 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:838:16: ( block )
			// /Users/jeremie/ANTLR/cs.g:839:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_destructor_body11328);
			block865=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block865.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 241, destructor_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "destructor_body"


	public static class invocation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_expression"
	// /Users/jeremie/ANTLR/cs.g:842:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
	public final csParser.invocation_expression_return invocation_expression() throws RecognitionException {
		csParser.invocation_expression_return retval = new csParser.invocation_expression_return();
		retval.start = input.LT(1);
		int invocation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope invocation_start866 =null;
		ParserRuleReturnScope arguments867 =null;
		ParserRuleReturnScope invocation_part868 =null;
		ParserRuleReturnScope invocation_part869 =null;
		ParserRuleReturnScope arguments870 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:842:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
			// /Users/jeremie/ANTLR/cs.g:843:9: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_invocation_start_in_invocation_expression11345);
			invocation_start866=invocation_start();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_start866.getTree());

			// /Users/jeremie/ANTLR/cs.g:843:28: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
			loop237:
			while (true) {
				int alt237=3;
				int LA237_0 = input.LA(1);
				if ( (LA237_0==68) ) {
					int LA237_1 = input.LA(2);
					if ( (synpred31_cs()) ) {
						alt237=1;
					}

				}
				else if ( (LA237_0==DOT||LA237_0==PTR||LA237_0==91) ) {
					alt237=2;
				}

				switch (alt237) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:843:29: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					{
					// /Users/jeremie/ANTLR/cs.g:843:29: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					// /Users/jeremie/ANTLR/cs.g:843:30: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
					{
					pushFollow(FOLLOW_arguments_in_invocation_expression11367);
					arguments867=arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments867.getTree());

					pushFollow(FOLLOW_invocation_part_in_invocation_expression11371);
					invocation_part868=invocation_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part868.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:844:51: invocation_part
					{
					pushFollow(FOLLOW_invocation_part_in_invocation_expression11424);
					invocation_part869=invocation_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part869.getTree());

					}
					break;

				default :
					break loop237;
				}
			}

			pushFollow(FOLLOW_arguments_in_invocation_expression11430);
			arguments870=arguments();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments870.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 242, invocation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_expression"


	public static class invocation_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_start"
	// /Users/jeremie/ANTLR/cs.g:845:1: invocation_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
	public final csParser.invocation_start_return invocation_start() throws RecognitionException {
		csParser.invocation_start_return retval = new csParser.invocation_start_return();
		retval.start = input.LT(1);
		int invocation_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal874=null;
		Token string_literal875=null;
		Token string_literal877=null;
		ParserRuleReturnScope predefined_type871 =null;
		ParserRuleReturnScope identifier872 =null;
		ParserRuleReturnScope generic_argument_list873 =null;
		ParserRuleReturnScope identifier876 =null;
		ParserRuleReturnScope identifier878 =null;
		ParserRuleReturnScope typeof_expression879 =null;

		CommonTree string_literal874_tree=null;
		CommonTree string_literal875_tree=null;
		CommonTree string_literal877_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:845:17: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
			int alt239=6;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt239=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA239_2 = input.LA(2);
				if ( (LA239_2==81) && (synpred32_cs())) {
					alt239=2;
				}
				else if ( (LA239_2==DOT||LA239_2==PTR||LA239_2==68||LA239_2==80||LA239_2==91) ) {
					alt239=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 239, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 180:
				{
				alt239=3;
				}
				break;
			case 102:
				{
				alt239=4;
				}
				break;
			case 184:
				{
				alt239=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 239, 0, input);
				throw nvae;
			}
			switch (alt239) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:846:9: predefined_type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_predefined_type_in_invocation_start11445);
					predefined_type871=predefined_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type871.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:847:11: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_invocation_start11476);
					identifier872=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier872.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_invocation_start11480);
					generic_argument_list873=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list873.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:848:11: 'this'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal874=(Token)match(input,180,FOLLOW_180_in_invocation_start11492); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal874_tree = (CommonTree)adaptor.create(string_literal874);
					adaptor.addChild(root_0, string_literal874_tree);
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:849:11: 'base'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal875=(Token)match(input,102,FOLLOW_102_in_invocation_start11505); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal875_tree = (CommonTree)adaptor.create(string_literal875);
					adaptor.addChild(root_0, string_literal875_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:850:11: identifier ( '::' identifier )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_invocation_start11517);
					identifier876=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier876.getTree());

					// /Users/jeremie/ANTLR/cs.g:850:24: ( '::' identifier )?
					int alt238=2;
					int LA238_0 = input.LA(1);
					if ( (LA238_0==80) ) {
						alt238=1;
					}
					switch (alt238) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:850:25: '::' identifier
							{
							string_literal877=(Token)match(input,80,FOLLOW_80_in_invocation_start11522); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal877_tree = (CommonTree)adaptor.create(string_literal877);
							adaptor.addChild(root_0, string_literal877_tree);
							}

							pushFollow(FOLLOW_identifier_in_invocation_start11526);
							identifier878=identifier();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier878.getTree());

							}
							break;

					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:851:11: typeof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeof_expression_in_invocation_start11540);
					typeof_expression879=typeof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression879.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 243, invocation_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_start"


	public static class invocation_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_part"
	// /Users/jeremie/ANTLR/cs.g:853:1: invocation_part : ( access_identifier | brackets );
	public final csParser.invocation_part_return invocation_part() throws RecognitionException {
		csParser.invocation_part_return retval = new csParser.invocation_part_return();
		retval.start = input.LT(1);
		int invocation_part_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_identifier880 =null;
		ParserRuleReturnScope brackets881 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:853:16: ( access_identifier | brackets )
			int alt240=2;
			int LA240_0 = input.LA(1);
			if ( (LA240_0==DOT||LA240_0==PTR) ) {
				alt240=1;
			}
			else if ( (LA240_0==91) ) {
				alt240=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 240, 0, input);
				throw nvae;
			}

			switch (alt240) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:854:10: access_identifier
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_access_identifier_in_invocation_part11577);
					access_identifier880=access_identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier880.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:855:11: brackets
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_brackets_in_invocation_part11589);
					brackets881=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets881.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 244, invocation_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_part"


	public static class statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement"
	// /Users/jeremie/ANTLR/cs.g:859:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
	public final csParser.statement_return statement() throws RecognitionException {
		csParser.statement_return retval = new csParser.statement_return();
		retval.start = input.LT(1);
		int statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope declaration_statement882 =null;
		ParserRuleReturnScope labeled_statement883 =null;
		ParserRuleReturnScope embedded_statement884 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:859:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
			int alt241=3;
			int LA241_0 = input.LA(1);
			if ( (LA241_0==190) ) {
				int LA241_1 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt241=1;
				}
				else if ( (synpred34_cs()) ) {
					alt241=2;
				}
				else if ( (true) ) {
					alt241=3;
				}

			}
			else if ( (LA241_0==120) ) {
				int LA241_2 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt241=1;
				}
				else if ( (synpred34_cs()) ) {
					alt241=2;
				}
				else if ( (true) ) {
					alt241=3;
				}

			}
			else if ( (LA241_0==103||LA241_0==106||LA241_0==109||LA241_0==114||LA241_0==119||LA241_0==129||LA241_0==138||LA241_0==146||LA241_0==151||LA241_0==169||LA241_0==173||LA241_0==177||(LA241_0 >= 185 && LA241_0 <= 186)||LA241_0==189) ) {
				int LA241_3 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt241=1;
				}
				else if ( (true) ) {
					alt241=3;
				}

			}
			else if ( (LA241_0==196) ) {
				int LA241_4 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt241=1;
				}
				else if ( (synpred34_cs()) ) {
					alt241=2;
				}
				else if ( (true) ) {
					alt241=3;
				}

			}
			else if ( (LA241_0==192) && (synpred33_cs())) {
				alt241=1;
			}
			else if ( (LA241_0==112) && (synpred33_cs())) {
				alt241=1;
			}
			else if ( (LA241_0==Character_literal||LA241_0==FALSE||LA241_0==Hex_number||LA241_0==IF||(LA241_0 >= MINUS && LA241_0 <= NUMBER)||LA241_0==Real_literal||(LA241_0 >= SEMI && LA241_0 <= STRINGLITERAL)||LA241_0==TRUE||(LA241_0 >= USING && LA241_0 <= Verbatim_string_literal)||LA241_0==61||LA241_0==66||(LA241_0 >= 68 && LA241_0 <= 69)||(LA241_0 >= 71 && LA241_0 <= 72)||LA241_0==75||LA241_0==102||LA241_0==104||LA241_0==110||LA241_0==113||(LA241_0 >= 115 && LA241_0 <= 116)||LA241_0==118||LA241_0==128||(LA241_0 >= 130 && LA241_0 <= 131)||LA241_0==134||LA241_0==145||LA241_0==150||LA241_0==168||LA241_0==174||(LA241_0 >= 179 && LA241_0 <= 182)||LA241_0==184||(LA241_0 >= 187 && LA241_0 <= 188)||LA241_0==195||LA241_0==197||LA241_0==202) ) {
				alt241=3;
			}
			else if ( (LA241_0==132) ) {
				int LA241_25 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt241=1;
				}
				else if ( (synpred34_cs()) ) {
					alt241=2;
				}
				else if ( (true) ) {
					alt241=3;
				}

			}
			else if ( (LA241_0==IDENTIFIER||LA241_0==95||(LA241_0 >= 97 && LA241_0 <= 98)||(LA241_0 >= 100 && LA241_0 <= 101)||LA241_0==105||LA241_0==117||LA241_0==122||LA241_0==126||LA241_0==135||LA241_0==141||(LA241_0 >= 143 && LA241_0 <= 144)||(LA241_0 >= 147 && LA241_0 <= 148)||LA241_0==152||LA241_0==154||LA241_0==157||LA241_0==160||LA241_0==162||LA241_0==167||(LA241_0 >= 171 && LA241_0 <= 172)||LA241_0==183||LA241_0==194) ) {
				int LA241_45 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt241=1;
				}
				else if ( (synpred34_cs()) ) {
					alt241=2;
				}
				else if ( (true) ) {
					alt241=3;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 241, 0, input);
				throw nvae;
			}

			switch (alt241) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:860:9: ( declaration_statement )=> declaration_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_declaration_statement_in_statement11613);
					declaration_statement882=declaration_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_statement882.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:861:11: ( identifier ':' )=> labeled_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_labeled_statement_in_statement11635);
					labeled_statement883=labeled_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, labeled_statement883.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:862:11: embedded_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_embedded_statement_in_statement11647);
					embedded_statement884=embedded_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement884.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 245, statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement"


	public static class embedded_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "embedded_statement"
	// /Users/jeremie/ANTLR/cs.g:864:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
	public final csParser.embedded_statement_return embedded_statement() throws RecognitionException {
		csParser.embedded_statement_return retval = new csParser.embedded_statement_return();
		retval.start = input.LT(1);
		int embedded_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block885 =null;
		ParserRuleReturnScope selection_statement886 =null;
		ParserRuleReturnScope iteration_statement887 =null;
		ParserRuleReturnScope jump_statement888 =null;
		ParserRuleReturnScope try_statement889 =null;
		ParserRuleReturnScope checked_statement890 =null;
		ParserRuleReturnScope unchecked_statement891 =null;
		ParserRuleReturnScope lock_statement892 =null;
		ParserRuleReturnScope using_statement893 =null;
		ParserRuleReturnScope yield_statement894 =null;
		ParserRuleReturnScope unsafe_statement895 =null;
		ParserRuleReturnScope fixed_statement896 =null;
		ParserRuleReturnScope expression_statement897 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:864:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
			int alt242=13;
			switch ( input.LA(1) ) {
			case SEMI:
			case 197:
				{
				alt242=1;
				}
				break;
			case IF:
			case 179:
				{
				alt242=2;
				}
				break;
			case 118:
			case 130:
			case 131:
			case 195:
				{
				alt242=3;
				}
				break;
			case 104:
			case 113:
			case 134:
			case 168:
			case 181:
				{
				alt242=4;
				}
				break;
			case 182:
				{
				alt242=5;
				}
				break;
			case 110:
				{
				int LA242_6 = input.LA(2);
				if ( (LA242_6==68) ) {
					alt242=13;
				}
				else if ( (LA242_6==SEMI||LA242_6==197) ) {
					alt242=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 187:
				{
				int LA242_7 = input.LA(2);
				if ( (LA242_7==68) ) {
					alt242=13;
				}
				else if ( (LA242_7==SEMI||LA242_7==197) ) {
					alt242=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 145:
				{
				alt242=8;
				}
				break;
			case USING:
				{
				alt242=9;
				}
				break;
			case 196:
				{
				int LA242_10 = input.LA(2);
				if ( (LA242_10==104||LA242_10==168) ) {
					alt242=10;
				}
				else if ( (LA242_10==DOT||LA242_10==GT||LA242_10==MINUS||LA242_10==PTR||LA242_10==SEMI||(LA242_10 >= 62 && LA242_10 <= 78)||(LA242_10 >= 80 && LA242_10 <= 91)||(LA242_10 >= 93 && LA242_10 <= 94)||LA242_10==99||LA242_10==142||(LA242_10 >= 198 && LA242_10 <= 200)) ) {
					alt242=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 242, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 188:
				{
				alt242=11;
				}
				break;
			case 128:
				{
				alt242=12;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 202:
				{
				alt242=13;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 242, 0, input);
				throw nvae;
			}
			switch (alt242) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:865:9: block
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_block_in_embedded_statement11671);
					block885=block();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, block885.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:866:11: selection_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_selection_statement_in_embedded_statement11683);
					selection_statement886=selection_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, selection_statement886.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:867:11: iteration_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_iteration_statement_in_embedded_statement11703);
					iteration_statement887=iteration_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, iteration_statement887.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:868:11: jump_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_jump_statement_in_embedded_statement11723);
					jump_statement888=jump_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, jump_statement888.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:869:11: try_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_try_statement_in_embedded_statement11751);
					try_statement889=try_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement889.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:870:11: checked_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_checked_statement_in_embedded_statement11763);
					checked_statement890=checked_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_statement890.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:871:11: unchecked_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_unchecked_statement_in_embedded_statement11775);
					unchecked_statement891=unchecked_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_statement891.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:872:11: lock_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_lock_statement_in_embedded_statement11787);
					lock_statement892=lock_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_statement892.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:873:11: using_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_using_statement_in_embedded_statement11799);
					using_statement893=using_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_statement893.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:874:11: yield_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_yield_statement_in_embedded_statement11812);
					yield_statement894=yield_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_statement894.getTree());

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:875:11: unsafe_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_unsafe_statement_in_embedded_statement11825);
					unsafe_statement895=unsafe_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unsafe_statement895.getTree());

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:876:11: fixed_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fixed_statement_in_embedded_statement11837);
					fixed_statement896=fixed_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_statement896.getTree());

					}
					break;
				case 13 :
					// /Users/jeremie/ANTLR/cs.g:877:11: expression_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_statement_in_embedded_statement11849);
					expression_statement897=expression_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement897.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 246, embedded_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "embedded_statement"


	public static class fixed_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_statement"
	// /Users/jeremie/ANTLR/cs.g:879:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
	public final csParser.fixed_statement_return fixed_statement() throws RecognitionException {
		csParser.fixed_statement_return retval = new csParser.fixed_statement_return();
		retval.start = input.LT(1);
		int fixed_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal898=null;
		Token char_literal899=null;
		Token char_literal902=null;
		ParserRuleReturnScope pointer_type900 =null;
		ParserRuleReturnScope fixed_pointer_declarators901 =null;
		ParserRuleReturnScope embedded_statement903 =null;

		CommonTree string_literal898_tree=null;
		CommonTree char_literal899_tree=null;
		CommonTree char_literal902_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:879:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:880:9: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal898=(Token)match(input,128,FOLLOW_128_in_fixed_statement11880); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal898_tree = (CommonTree)adaptor.create(string_literal898);
			adaptor.addChild(root_0, string_literal898_tree);
			}

			char_literal899=(Token)match(input,68,FOLLOW_68_in_fixed_statement11884); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal899_tree = (CommonTree)adaptor.create(char_literal899);
			adaptor.addChild(root_0, char_literal899_tree);
			}

			pushFollow(FOLLOW_pointer_type_in_fixed_statement11888);
			pointer_type900=pointer_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_type900.getTree());

			pushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement11890);
			fixed_pointer_declarators901=fixed_pointer_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarators901.getTree());

			char_literal902=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_fixed_statement11894); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal902_tree = (CommonTree)adaptor.create(char_literal902);
			adaptor.addChild(root_0, char_literal902_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_fixed_statement11898);
			embedded_statement903=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement903.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 247, fixed_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_statement"


	public static class fixed_pointer_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_pointer_declarators"
	// /Users/jeremie/ANTLR/cs.g:881:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
	public final csParser.fixed_pointer_declarators_return fixed_pointer_declarators() throws RecognitionException {
		csParser.fixed_pointer_declarators_return retval = new csParser.fixed_pointer_declarators_return();
		retval.start = input.LT(1);
		int fixed_pointer_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal905=null;
		ParserRuleReturnScope fixed_pointer_declarator904 =null;
		ParserRuleReturnScope fixed_pointer_declarator906 =null;

		CommonTree char_literal905_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:881:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:882:9: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators11913);
			fixed_pointer_declarator904=fixed_pointer_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator904.getTree());

			// /Users/jeremie/ANTLR/cs.g:882:36: ( ',' fixed_pointer_declarator )*
			loop243:
			while (true) {
				int alt243=2;
				int LA243_0 = input.LA(1);
				if ( (LA243_0==74) ) {
					alt243=1;
				}

				switch (alt243) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:882:37: ',' fixed_pointer_declarator
					{
					char_literal905=(Token)match(input,74,FOLLOW_74_in_fixed_pointer_declarators11918); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal905_tree = (CommonTree)adaptor.create(char_literal905);
					adaptor.addChild(root_0, char_literal905_tree);
					}

					pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators11922);
					fixed_pointer_declarator906=fixed_pointer_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator906.getTree());

					}
					break;

				default :
					break loop243;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 248, fixed_pointer_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_pointer_declarators"


	public static class fixed_pointer_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_pointer_declarator"
	// /Users/jeremie/ANTLR/cs.g:883:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
	public final csParser.fixed_pointer_declarator_return fixed_pointer_declarator() throws RecognitionException {
		csParser.fixed_pointer_declarator_return retval = new csParser.fixed_pointer_declarator_return();
		retval.start = input.LT(1);
		int fixed_pointer_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal908=null;
		ParserRuleReturnScope identifier907 =null;
		ParserRuleReturnScope fixed_pointer_initializer909 =null;

		CommonTree char_literal908_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:883:25: ( identifier '=' fixed_pointer_initializer )
			// /Users/jeremie/ANTLR/cs.g:884:9: identifier '=' fixed_pointer_initializer
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_fixed_pointer_declarator11939);
			identifier907=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier907.getTree());

			char_literal908=(Token)match(input,85,FOLLOW_85_in_fixed_pointer_declarator11943); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal908_tree = (CommonTree)adaptor.create(char_literal908);
			adaptor.addChild(root_0, char_literal908_tree);
			}

			pushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator11947);
			fixed_pointer_initializer909=fixed_pointer_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_initializer909.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 249, fixed_pointer_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_pointer_declarator"


	public static class fixed_pointer_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_pointer_initializer"
	// /Users/jeremie/ANTLR/cs.g:885:1: fixed_pointer_initializer : expression ;
	public final csParser.fixed_pointer_initializer_return fixed_pointer_initializer() throws RecognitionException {
		csParser.fixed_pointer_initializer_return retval = new csParser.fixed_pointer_initializer_return();
		retval.start = input.LT(1);
		int fixed_pointer_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression910 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:885:26: ( expression )
			// /Users/jeremie/ANTLR/cs.g:887:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_fixed_pointer_initializer11971);
			expression910=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression910.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 250, fixed_pointer_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_pointer_initializer"


	public static class unsafe_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unsafe_statement"
	// /Users/jeremie/ANTLR/cs.g:888:1: unsafe_statement : 'unsafe' block ;
	public final csParser.unsafe_statement_return unsafe_statement() throws RecognitionException {
		csParser.unsafe_statement_return retval = new csParser.unsafe_statement_return();
		retval.start = input.LT(1);
		int unsafe_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal911=null;
		ParserRuleReturnScope block912 =null;

		CommonTree string_literal911_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:888:17: ( 'unsafe' block )
			// /Users/jeremie/ANTLR/cs.g:889:9: 'unsafe' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal911=(Token)match(input,188,FOLLOW_188_in_unsafe_statement11985); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal911_tree = (CommonTree)adaptor.create(string_literal911);
			adaptor.addChild(root_0, string_literal911_tree);
			}

			pushFollow(FOLLOW_block_in_unsafe_statement11989);
			block912=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block912.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 251, unsafe_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unsafe_statement"


	public static class labeled_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "labeled_statement"
	// /Users/jeremie/ANTLR/cs.g:890:1: labeled_statement : identifier ':' statement ;
	public final csParser.labeled_statement_return labeled_statement() throws RecognitionException {
		csParser.labeled_statement_return retval = new csParser.labeled_statement_return();
		retval.start = input.LT(1);
		int labeled_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal914=null;
		ParserRuleReturnScope identifier913 =null;
		ParserRuleReturnScope statement915 =null;

		CommonTree char_literal914_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:890:18: ( identifier ':' statement )
			// /Users/jeremie/ANTLR/cs.g:891:9: identifier ':' statement
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_labeled_statement12003);
			identifier913=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier913.getTree());

			char_literal914=(Token)match(input,79,FOLLOW_79_in_labeled_statement12007); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal914_tree = (CommonTree)adaptor.create(char_literal914);
			adaptor.addChild(root_0, char_literal914_tree);
			}

			pushFollow(FOLLOW_statement_in_labeled_statement12011);
			statement915=statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement915.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 252, labeled_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "labeled_statement"


	public static class declaration_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "declaration_statement"
	// /Users/jeremie/ANTLR/cs.g:892:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
	public final csParser.declaration_statement_return declaration_statement() throws RecognitionException {
		csParser.declaration_statement_return retval = new csParser.declaration_statement_return();
		retval.start = input.LT(1);
		int declaration_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal918=null;
		ParserRuleReturnScope local_variable_declaration916 =null;
		ParserRuleReturnScope local_constant_declaration917 =null;

		CommonTree char_literal918_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:892:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
			// /Users/jeremie/ANTLR/cs.g:893:9: ( local_variable_declaration | local_constant_declaration ) ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:893:9: ( local_variable_declaration | local_constant_declaration )
			int alt244=2;
			int LA244_0 = input.LA(1);
			if ( (LA244_0==IDENTIFIER||LA244_0==95||(LA244_0 >= 97 && LA244_0 <= 98)||(LA244_0 >= 100 && LA244_0 <= 101)||LA244_0==103||(LA244_0 >= 105 && LA244_0 <= 106)||LA244_0==109||LA244_0==114||LA244_0==117||(LA244_0 >= 119 && LA244_0 <= 120)||LA244_0==122||LA244_0==126||LA244_0==129||LA244_0==132||LA244_0==135||LA244_0==138||LA244_0==141||(LA244_0 >= 143 && LA244_0 <= 144)||(LA244_0 >= 146 && LA244_0 <= 148)||(LA244_0 >= 151 && LA244_0 <= 152)||LA244_0==154||LA244_0==157||LA244_0==160||LA244_0==162||LA244_0==167||LA244_0==169||(LA244_0 >= 171 && LA244_0 <= 173)||LA244_0==177||LA244_0==183||(LA244_0 >= 185 && LA244_0 <= 186)||(LA244_0 >= 189 && LA244_0 <= 190)||LA244_0==192||LA244_0==194||LA244_0==196) ) {
				alt244=1;
			}
			else if ( (LA244_0==112) ) {
				alt244=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 244, 0, input);
				throw nvae;
			}

			switch (alt244) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:893:10: local_variable_declaration
					{
					pushFollow(FOLLOW_local_variable_declaration_in_declaration_statement12027);
					local_variable_declaration916=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration916.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:894:11: local_constant_declaration
					{
					pushFollow(FOLLOW_local_constant_declaration_in_declaration_statement12040);
					local_constant_declaration917=local_constant_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_constant_declaration917.getTree());

					}
					break;

			}

			char_literal918=(Token)match(input,SEMI,FOLLOW_SEMI_in_declaration_statement12043); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal918_tree = (CommonTree)adaptor.create(char_literal918);
			adaptor.addChild(root_0, char_literal918_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 253, declaration_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "declaration_statement"


	public static class local_variable_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declaration"
	// /Users/jeremie/ANTLR/cs.g:895:1: local_variable_declaration : local_variable_type local_variable_declarators ;
	public final csParser.local_variable_declaration_return local_variable_declaration() throws RecognitionException {
		csParser.local_variable_declaration_return retval = new csParser.local_variable_declaration_return();
		retval.start = input.LT(1);
		int local_variable_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope local_variable_type919 =null;
		ParserRuleReturnScope local_variable_declarators920 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:895:27: ( local_variable_type local_variable_declarators )
			// /Users/jeremie/ANTLR/cs.g:896:9: local_variable_type local_variable_declarators
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_local_variable_type_in_local_variable_declaration12058);
			local_variable_type919=local_variable_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type919.getTree());

			pushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration12062);
			local_variable_declarators920=local_variable_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarators920.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 254, local_variable_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declaration"


	public static class local_variable_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_type"
	// /Users/jeremie/ANTLR/cs.g:897:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
	public final csParser.local_variable_type_return local_variable_type() throws RecognitionException {
		csParser.local_variable_type_return retval = new csParser.local_variable_type_return();
		retval.start = input.LT(1);
		int local_variable_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal921=null;
		Token string_literal922=null;
		ParserRuleReturnScope type923 =null;

		CommonTree string_literal921_tree=null;
		CommonTree string_literal922_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:897:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
			int alt245=3;
			switch ( input.LA(1) ) {
			case 190:
				{
				int LA245_1 = input.LA(2);
				if ( (synpred35_cs()) ) {
					alt245=1;
				}
				else if ( (true) ) {
					alt245=3;
				}

				}
				break;
			case 120:
				{
				int LA245_2 = input.LA(2);
				if ( (synpred36_cs()) ) {
					alt245=2;
				}
				else if ( (true) ) {
					alt245=3;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 185:
			case 186:
			case 189:
			case 192:
			case 194:
			case 196:
				{
				alt245=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 245, 0, input);
				throw nvae;
			}
			switch (alt245) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:898:9: ( 'var' )=> 'var'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal921=(Token)match(input,190,FOLLOW_190_in_local_variable_type12083); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal921_tree = (CommonTree)adaptor.create(string_literal921);
					adaptor.addChild(root_0, string_literal921_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:899:11: ( 'dynamic' )=> 'dynamic'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal922=(Token)match(input,120,FOLLOW_120_in_local_variable_type12101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal922_tree = (CommonTree)adaptor.create(string_literal922);
					adaptor.addChild(root_0, string_literal922_tree);
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:900:11: type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_type_in_local_variable_type12113);
					type923=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type923.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 255, local_variable_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_type"


	public static class local_variable_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declarators"
	// /Users/jeremie/ANTLR/cs.g:901:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
	public final csParser.local_variable_declarators_return local_variable_declarators() throws RecognitionException {
		csParser.local_variable_declarators_return retval = new csParser.local_variable_declarators_return();
		retval.start = input.LT(1);
		int local_variable_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal925=null;
		ParserRuleReturnScope local_variable_declarator924 =null;
		ParserRuleReturnScope local_variable_declarator926 =null;

		CommonTree char_literal925_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:901:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:902:9: local_variable_declarator ( ',' local_variable_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators12128);
			local_variable_declarator924=local_variable_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator924.getTree());

			// /Users/jeremie/ANTLR/cs.g:902:35: ( ',' local_variable_declarator )*
			loop246:
			while (true) {
				int alt246=2;
				int LA246_0 = input.LA(1);
				if ( (LA246_0==74) ) {
					alt246=1;
				}

				switch (alt246) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:902:36: ',' local_variable_declarator
					{
					char_literal925=(Token)match(input,74,FOLLOW_74_in_local_variable_declarators12131); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal925_tree = (CommonTree)adaptor.create(char_literal925);
					adaptor.addChild(root_0, char_literal925_tree);
					}

					pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators12133);
					local_variable_declarator926=local_variable_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator926.getTree());

					}
					break;

				default :
					break loop246;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 256, local_variable_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declarators"


	public static class local_variable_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declarator"
	// /Users/jeremie/ANTLR/cs.g:903:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
	public final csParser.local_variable_declarator_return local_variable_declarator() throws RecognitionException {
		csParser.local_variable_declarator_return retval = new csParser.local_variable_declarator_return();
		retval.start = input.LT(1);
		int local_variable_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal928=null;
		ParserRuleReturnScope identifier927 =null;
		ParserRuleReturnScope local_variable_initializer929 =null;

		CommonTree char_literal928_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:903:26: ( identifier ( '=' local_variable_initializer )? )
			// /Users/jeremie/ANTLR/cs.g:904:9: identifier ( '=' local_variable_initializer )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_local_variable_declarator12150);
			identifier927=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier927.getTree());

			// /Users/jeremie/ANTLR/cs.g:904:20: ( '=' local_variable_initializer )?
			int alt247=2;
			int LA247_0 = input.LA(1);
			if ( (LA247_0==85) ) {
				alt247=1;
			}
			switch (alt247) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:904:21: '=' local_variable_initializer
					{
					char_literal928=(Token)match(input,85,FOLLOW_85_in_local_variable_declarator12153); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal928_tree = (CommonTree)adaptor.create(char_literal928);
					adaptor.addChild(root_0, char_literal928_tree);
					}

					pushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator12157);
					local_variable_initializer929=local_variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer929.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 257, local_variable_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declarator"


	public static class local_variable_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_initializer"
	// /Users/jeremie/ANTLR/cs.g:905:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
	public final csParser.local_variable_initializer_return local_variable_initializer() throws RecognitionException {
		csParser.local_variable_initializer_return retval = new csParser.local_variable_initializer_return();
		retval.start = input.LT(1);
		int local_variable_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression930 =null;
		ParserRuleReturnScope array_initializer931 =null;
		ParserRuleReturnScope stackalloc_initializer932 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:905:27: ( expression | array_initializer | stackalloc_initializer )
			int alt248=3;
			switch ( input.LA(1) ) {
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
			case 202:
				{
				alt248=1;
				}
				break;
			case 197:
				{
				alt248=2;
				}
				break;
			case 175:
				{
				alt248=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 248, 0, input);
				throw nvae;
			}
			switch (alt248) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:906:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_local_variable_initializer12175);
					expression930=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression930.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:907:11: array_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_array_initializer_in_local_variable_initializer12187);
					array_initializer931=array_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer931.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:908:11: stackalloc_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer12200);
					stackalloc_initializer932=stackalloc_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, stackalloc_initializer932.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 258, local_variable_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_initializer"


	public static class stackalloc_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "stackalloc_initializer"
	// /Users/jeremie/ANTLR/cs.g:909:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
	public final csParser.stackalloc_initializer_return stackalloc_initializer() throws RecognitionException {
		csParser.stackalloc_initializer_return retval = new csParser.stackalloc_initializer_return();
		retval.start = input.LT(1);
		int stackalloc_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal933=null;
		Token char_literal935=null;
		Token char_literal937=null;
		ParserRuleReturnScope unmanaged_type934 =null;
		ParserRuleReturnScope expression936 =null;

		CommonTree string_literal933_tree=null;
		CommonTree char_literal935_tree=null;
		CommonTree char_literal937_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:909:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
			// /Users/jeremie/ANTLR/cs.g:910:9: 'stackalloc' unmanaged_type '[' expression ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal933=(Token)match(input,175,FOLLOW_175_in_stackalloc_initializer12214); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal933_tree = (CommonTree)adaptor.create(string_literal933);
			adaptor.addChild(root_0, string_literal933_tree);
			}

			pushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer12218);
			unmanaged_type934=unmanaged_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type934.getTree());

			char_literal935=(Token)match(input,91,FOLLOW_91_in_stackalloc_initializer12222); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal935_tree = (CommonTree)adaptor.create(char_literal935);
			adaptor.addChild(root_0, char_literal935_tree);
			}

			pushFollow(FOLLOW_expression_in_stackalloc_initializer12226);
			expression936=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression936.getTree());

			char_literal937=(Token)match(input,92,FOLLOW_92_in_stackalloc_initializer12230); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal937_tree = (CommonTree)adaptor.create(char_literal937);
			adaptor.addChild(root_0, char_literal937_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 259, stackalloc_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "stackalloc_initializer"


	public static class local_constant_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_constant_declaration"
	// /Users/jeremie/ANTLR/cs.g:911:1: local_constant_declaration : 'const' type constant_declarators ;
	public final csParser.local_constant_declaration_return local_constant_declaration() throws RecognitionException {
		csParser.local_constant_declaration_return retval = new csParser.local_constant_declaration_return();
		retval.start = input.LT(1);
		int local_constant_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal938=null;
		ParserRuleReturnScope type939 =null;
		ParserRuleReturnScope constant_declarators940 =null;

		CommonTree string_literal938_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:911:27: ( 'const' type constant_declarators )
			// /Users/jeremie/ANTLR/cs.g:912:9: 'const' type constant_declarators
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal938=(Token)match(input,112,FOLLOW_112_in_local_constant_declaration12245); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal938_tree = (CommonTree)adaptor.create(string_literal938);
			adaptor.addChild(root_0, string_literal938_tree);
			}

			pushFollow(FOLLOW_type_in_local_constant_declaration12249);
			type939=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type939.getTree());

			pushFollow(FOLLOW_constant_declarators_in_local_constant_declaration12253);
			constant_declarators940=constant_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators940.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 260, local_constant_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_constant_declaration"


	public static class expression_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression_statement"
	// /Users/jeremie/ANTLR/cs.g:913:1: expression_statement : expression ';' ;
	public final csParser.expression_statement_return expression_statement() throws RecognitionException {
		csParser.expression_statement_return retval = new csParser.expression_statement_return();
		retval.start = input.LT(1);
		int expression_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal942=null;
		ParserRuleReturnScope expression941 =null;

		CommonTree char_literal942_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:913:21: ( expression ';' )
			// /Users/jeremie/ANTLR/cs.g:914:9: expression ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_expression_statement12268);
			expression941=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression941.getTree());

			char_literal942=(Token)match(input,SEMI,FOLLOW_SEMI_in_expression_statement12272); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal942_tree = (CommonTree)adaptor.create(char_literal942);
			adaptor.addChild(root_0, char_literal942_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 261, expression_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression_statement"


	public static class statement_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement_expression"
	// /Users/jeremie/ANTLR/cs.g:917:1: statement_expression : expression ;
	public final csParser.statement_expression_return statement_expression() throws RecognitionException {
		csParser.statement_expression_return retval = new csParser.statement_expression_return();
		retval.start = input.LT(1);
		int statement_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression943 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:917:21: ( expression )
			// /Users/jeremie/ANTLR/cs.g:918:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_statement_expression12289);
			expression943=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression943.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 262, statement_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement_expression"


	public static class selection_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "selection_statement"
	// /Users/jeremie/ANTLR/cs.g:920:1: selection_statement : ( if_statement | switch_statement );
	public final csParser.selection_statement_return selection_statement() throws RecognitionException {
		csParser.selection_statement_return retval = new csParser.selection_statement_return();
		retval.start = input.LT(1);
		int selection_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope if_statement944 =null;
		ParserRuleReturnScope switch_statement945 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:920:20: ( if_statement | switch_statement )
			int alt249=2;
			int LA249_0 = input.LA(1);
			if ( (LA249_0==IF) ) {
				alt249=1;
			}
			else if ( (LA249_0==179) ) {
				alt249=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 249, 0, input);
				throw nvae;
			}

			switch (alt249) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:921:9: if_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_if_statement_in_selection_statement12312);
					if_statement944=if_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, if_statement944.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:922:11: switch_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_switch_statement_in_selection_statement12324);
					switch_statement945=switch_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_statement945.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 263, selection_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "selection_statement"


	public static class if_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "if_statement"
	// /Users/jeremie/ANTLR/cs.g:923:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
	public final csParser.if_statement_return if_statement() throws RecognitionException {
		csParser.if_statement_return retval = new csParser.if_statement_return();
		retval.start = input.LT(1);
		int if_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal946=null;
		Token char_literal947=null;
		Token char_literal949=null;
		ParserRuleReturnScope boolean_expression948 =null;
		ParserRuleReturnScope embedded_statement950 =null;
		ParserRuleReturnScope else_statement951 =null;

		CommonTree string_literal946_tree=null;
		CommonTree char_literal947_tree=null;
		CommonTree char_literal949_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:923:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
			// /Users/jeremie/ANTLR/cs.g:925:9: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal946=(Token)match(input,IF,FOLLOW_IF_in_if_statement12348); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal946_tree = (CommonTree)adaptor.create(string_literal946);
			adaptor.addChild(root_0, string_literal946_tree);
			}

			char_literal947=(Token)match(input,68,FOLLOW_68_in_if_statement12352); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal947_tree = (CommonTree)adaptor.create(char_literal947);
			adaptor.addChild(root_0, char_literal947_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_if_statement12356);
			boolean_expression948=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression948.getTree());

			char_literal949=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_if_statement12360); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal949_tree = (CommonTree)adaptor.create(char_literal949);
			adaptor.addChild(root_0, char_literal949_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_if_statement12364);
			embedded_statement950=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement950.getTree());

			// /Users/jeremie/ANTLR/cs.g:925:68: ( ( 'else' )=> else_statement )?
			int alt250=2;
			int LA250_0 = input.LA(1);
			if ( (LA250_0==121) ) {
				int LA250_1 = input.LA(2);
				if ( (synpred37_cs()) ) {
					alt250=1;
				}
			}
			switch (alt250) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:925:69: ( 'else' )=> else_statement
					{
					pushFollow(FOLLOW_else_statement_in_if_statement12373);
					else_statement951=else_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, else_statement951.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 264, if_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "if_statement"


	public static class else_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "else_statement"
	// /Users/jeremie/ANTLR/cs.g:927:1: else_statement : 'else' embedded_statement ;
	public final csParser.else_statement_return else_statement() throws RecognitionException {
		csParser.else_statement_return retval = new csParser.else_statement_return();
		retval.start = input.LT(1);
		int else_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal952=null;
		ParserRuleReturnScope embedded_statement953 =null;

		CommonTree string_literal952_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:927:15: ( 'else' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:928:9: 'else' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal952=(Token)match(input,121,FOLLOW_121_in_else_statement12398); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal952_tree = (CommonTree)adaptor.create(string_literal952);
			adaptor.addChild(root_0, string_literal952_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_else_statement12402);
			embedded_statement953=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement953.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 265, else_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "else_statement"


	public static class switch_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_statement"
	// /Users/jeremie/ANTLR/cs.g:929:1: switch_statement : 'switch' '(' expression ')' switch_block ;
	public final csParser.switch_statement_return switch_statement() throws RecognitionException {
		csParser.switch_statement_return retval = new csParser.switch_statement_return();
		retval.start = input.LT(1);
		int switch_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal954=null;
		Token char_literal955=null;
		Token char_literal957=null;
		ParserRuleReturnScope expression956 =null;
		ParserRuleReturnScope switch_block958 =null;

		CommonTree string_literal954_tree=null;
		CommonTree char_literal955_tree=null;
		CommonTree char_literal957_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:929:17: ( 'switch' '(' expression ')' switch_block )
			// /Users/jeremie/ANTLR/cs.g:930:9: 'switch' '(' expression ')' switch_block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal954=(Token)match(input,179,FOLLOW_179_in_switch_statement12424); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal954_tree = (CommonTree)adaptor.create(string_literal954);
			adaptor.addChild(root_0, string_literal954_tree);
			}

			char_literal955=(Token)match(input,68,FOLLOW_68_in_switch_statement12428); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal955_tree = (CommonTree)adaptor.create(char_literal955);
			adaptor.addChild(root_0, char_literal955_tree);
			}

			pushFollow(FOLLOW_expression_in_switch_statement12432);
			expression956=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression956.getTree());

			char_literal957=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switch_statement12436); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal957_tree = (CommonTree)adaptor.create(char_literal957);
			adaptor.addChild(root_0, char_literal957_tree);
			}

			pushFollow(FOLLOW_switch_block_in_switch_statement12440);
			switch_block958=switch_block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_block958.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 266, switch_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_statement"


	public static class switch_block_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_block"
	// /Users/jeremie/ANTLR/cs.g:931:1: switch_block : '{' ( switch_sections )? '}' ;
	public final csParser.switch_block_return switch_block() throws RecognitionException {
		csParser.switch_block_return retval = new csParser.switch_block_return();
		retval.start = input.LT(1);
		int switch_block_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal959=null;
		Token char_literal961=null;
		ParserRuleReturnScope switch_sections960 =null;

		CommonTree char_literal959_tree=null;
		CommonTree char_literal961_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:931:13: ( '{' ( switch_sections )? '}' )
			// /Users/jeremie/ANTLR/cs.g:932:9: '{' ( switch_sections )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal959=(Token)match(input,197,FOLLOW_197_in_switch_block12455); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal959_tree = (CommonTree)adaptor.create(char_literal959);
			adaptor.addChild(root_0, char_literal959_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:932:15: ( switch_sections )?
			int alt251=2;
			int LA251_0 = input.LA(1);
			if ( (LA251_0==107||LA251_0==115) ) {
				alt251=1;
			}
			switch (alt251) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:932:15: switch_sections
					{
					pushFollow(FOLLOW_switch_sections_in_switch_block12459);
					switch_sections960=switch_sections();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_sections960.getTree());

					}
					break;

			}

			char_literal961=(Token)match(input,201,FOLLOW_201_in_switch_block12464); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal961_tree = (CommonTree)adaptor.create(char_literal961);
			adaptor.addChild(root_0, char_literal961_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 267, switch_block_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_block"


	public static class switch_sections_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_sections"
	// /Users/jeremie/ANTLR/cs.g:933:1: switch_sections : ( switch_section )+ ;
	public final csParser.switch_sections_return switch_sections() throws RecognitionException {
		csParser.switch_sections_return retval = new csParser.switch_sections_return();
		retval.start = input.LT(1);
		int switch_sections_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope switch_section962 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:933:16: ( ( switch_section )+ )
			// /Users/jeremie/ANTLR/cs.g:934:9: ( switch_section )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:934:9: ( switch_section )+
			int cnt252=0;
			loop252:
			while (true) {
				int alt252=2;
				int LA252_0 = input.LA(1);
				if ( (LA252_0==107||LA252_0==115) ) {
					alt252=1;
				}

				switch (alt252) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:934:9: switch_section
					{
					pushFollow(FOLLOW_switch_section_in_switch_sections12479);
					switch_section962=switch_section();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_section962.getTree());

					}
					break;

				default :
					if ( cnt252 >= 1 ) break loop252;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(252, input);
					throw eee;
				}
				cnt252++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 268, switch_sections_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_sections"


	public static class switch_section_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_section"
	// /Users/jeremie/ANTLR/cs.g:935:1: switch_section : switch_labels statement_list ;
	public final csParser.switch_section_return switch_section() throws RecognitionException {
		csParser.switch_section_return retval = new csParser.switch_section_return();
		retval.start = input.LT(1);
		int switch_section_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope switch_labels963 =null;
		ParserRuleReturnScope statement_list964 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:935:15: ( switch_labels statement_list )
			// /Users/jeremie/ANTLR/cs.g:936:9: switch_labels statement_list
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_switch_labels_in_switch_section12495);
			switch_labels963=switch_labels();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_labels963.getTree());

			pushFollow(FOLLOW_statement_list_in_switch_section12499);
			statement_list964=statement_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list964.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 269, switch_section_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_section"


	public static class switch_labels_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_labels"
	// /Users/jeremie/ANTLR/cs.g:937:1: switch_labels : ( switch_label )+ ;
	public final csParser.switch_labels_return switch_labels() throws RecognitionException {
		csParser.switch_labels_return retval = new csParser.switch_labels_return();
		retval.start = input.LT(1);
		int switch_labels_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope switch_label965 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:937:14: ( ( switch_label )+ )
			// /Users/jeremie/ANTLR/cs.g:938:9: ( switch_label )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:938:9: ( switch_label )+
			int cnt253=0;
			loop253:
			while (true) {
				int alt253=2;
				int LA253_0 = input.LA(1);
				if ( (LA253_0==115) ) {
					int LA253_2 = input.LA(2);
					if ( (LA253_2==79) ) {
						alt253=1;
					}

				}
				else if ( (LA253_0==107) ) {
					alt253=1;
				}

				switch (alt253) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:938:9: switch_label
					{
					pushFollow(FOLLOW_switch_label_in_switch_labels12514);
					switch_label965=switch_label();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_label965.getTree());

					}
					break;

				default :
					if ( cnt253 >= 1 ) break loop253;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(253, input);
					throw eee;
				}
				cnt253++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 270, switch_labels_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_labels"


	public static class switch_label_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_label"
	// /Users/jeremie/ANTLR/cs.g:939:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
	public final csParser.switch_label_return switch_label() throws RecognitionException {
		csParser.switch_label_return retval = new csParser.switch_label_return();
		retval.start = input.LT(1);
		int switch_label_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal966=null;
		Token char_literal968=null;
		Token string_literal969=null;
		Token char_literal970=null;
		ParserRuleReturnScope constant_expression967 =null;

		CommonTree string_literal966_tree=null;
		CommonTree char_literal968_tree=null;
		CommonTree string_literal969_tree=null;
		CommonTree char_literal970_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:939:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
			int alt254=2;
			int LA254_0 = input.LA(1);
			if ( (LA254_0==107) ) {
				alt254=1;
			}
			else if ( (LA254_0==115) ) {
				alt254=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 254, 0, input);
				throw nvae;
			}

			switch (alt254) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:940:9: ( 'case' constant_expression ':' )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:940:9: ( 'case' constant_expression ':' )
					// /Users/jeremie/ANTLR/cs.g:940:10: 'case' constant_expression ':'
					{
					string_literal966=(Token)match(input,107,FOLLOW_107_in_switch_label12531); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal966_tree = (CommonTree)adaptor.create(string_literal966);
					adaptor.addChild(root_0, string_literal966_tree);
					}

					pushFollow(FOLLOW_constant_expression_in_switch_label12535);
					constant_expression967=constant_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression967.getTree());

					char_literal968=(Token)match(input,79,FOLLOW_79_in_switch_label12539); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal968_tree = (CommonTree)adaptor.create(char_literal968);
					adaptor.addChild(root_0, char_literal968_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:941:11: ( 'default' ':' )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:941:11: ( 'default' ':' )
					// /Users/jeremie/ANTLR/cs.g:941:12: 'default' ':'
					{
					string_literal969=(Token)match(input,115,FOLLOW_115_in_switch_label12553); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal969_tree = (CommonTree)adaptor.create(string_literal969);
					adaptor.addChild(root_0, string_literal969_tree);
					}

					char_literal970=(Token)match(input,79,FOLLOW_79_in_switch_label12557); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal970_tree = (CommonTree)adaptor.create(char_literal970);
					adaptor.addChild(root_0, char_literal970_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 271, switch_label_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_label"


	public static class iteration_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "iteration_statement"
	// /Users/jeremie/ANTLR/cs.g:942:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
	public final csParser.iteration_statement_return iteration_statement() throws RecognitionException {
		csParser.iteration_statement_return retval = new csParser.iteration_statement_return();
		retval.start = input.LT(1);
		int iteration_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope while_statement971 =null;
		ParserRuleReturnScope do_statement972 =null;
		ParserRuleReturnScope for_statement973 =null;
		ParserRuleReturnScope foreach_statement974 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:942:20: ( while_statement | do_statement | for_statement | foreach_statement )
			int alt255=4;
			switch ( input.LA(1) ) {
			case 195:
				{
				alt255=1;
				}
				break;
			case 118:
				{
				alt255=2;
				}
				break;
			case 130:
				{
				alt255=3;
				}
				break;
			case 131:
				{
				alt255=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 255, 0, input);
				throw nvae;
			}
			switch (alt255) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:943:9: while_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_while_statement_in_iteration_statement12573);
					while_statement971=while_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, while_statement971.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:944:11: do_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_do_statement_in_iteration_statement12585);
					do_statement972=do_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement972.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:945:11: for_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_for_statement_in_iteration_statement12597);
					for_statement973=for_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_statement973.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:946:11: foreach_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_foreach_statement_in_iteration_statement12609);
					foreach_statement974=foreach_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, foreach_statement974.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 272, iteration_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "iteration_statement"


	public static class while_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "while_statement"
	// /Users/jeremie/ANTLR/cs.g:947:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
	public final csParser.while_statement_return while_statement() throws RecognitionException {
		csParser.while_statement_return retval = new csParser.while_statement_return();
		retval.start = input.LT(1);
		int while_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal975=null;
		Token char_literal976=null;
		Token char_literal978=null;
		ParserRuleReturnScope boolean_expression977 =null;
		ParserRuleReturnScope embedded_statement979 =null;

		CommonTree string_literal975_tree=null;
		CommonTree char_literal976_tree=null;
		CommonTree char_literal978_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:947:16: ( 'while' '(' boolean_expression ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:948:9: 'while' '(' boolean_expression ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal975=(Token)match(input,195,FOLLOW_195_in_while_statement12624); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal975_tree = (CommonTree)adaptor.create(string_literal975);
			adaptor.addChild(root_0, string_literal975_tree);
			}

			char_literal976=(Token)match(input,68,FOLLOW_68_in_while_statement12628); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal976_tree = (CommonTree)adaptor.create(char_literal976);
			adaptor.addChild(root_0, char_literal976_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_while_statement12632);
			boolean_expression977=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression977.getTree());

			char_literal978=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_while_statement12636); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal978_tree = (CommonTree)adaptor.create(char_literal978);
			adaptor.addChild(root_0, char_literal978_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_while_statement12640);
			embedded_statement979=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement979.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 273, while_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "while_statement"


	public static class do_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "do_statement"
	// /Users/jeremie/ANTLR/cs.g:949:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
	public final csParser.do_statement_return do_statement() throws RecognitionException {
		csParser.do_statement_return retval = new csParser.do_statement_return();
		retval.start = input.LT(1);
		int do_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal980=null;
		Token string_literal982=null;
		Token char_literal983=null;
		Token char_literal985=null;
		Token char_literal986=null;
		ParserRuleReturnScope embedded_statement981 =null;
		ParserRuleReturnScope boolean_expression984 =null;

		CommonTree string_literal980_tree=null;
		CommonTree string_literal982_tree=null;
		CommonTree char_literal983_tree=null;
		CommonTree char_literal985_tree=null;
		CommonTree char_literal986_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:949:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
			// /Users/jeremie/ANTLR/cs.g:950:9: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal980=(Token)match(input,118,FOLLOW_118_in_do_statement12655); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal980_tree = (CommonTree)adaptor.create(string_literal980);
			adaptor.addChild(root_0, string_literal980_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_do_statement12659);
			embedded_statement981=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement981.getTree());

			string_literal982=(Token)match(input,195,FOLLOW_195_in_do_statement12663); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal982_tree = (CommonTree)adaptor.create(string_literal982);
			adaptor.addChild(root_0, string_literal982_tree);
			}

			char_literal983=(Token)match(input,68,FOLLOW_68_in_do_statement12667); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal983_tree = (CommonTree)adaptor.create(char_literal983);
			adaptor.addChild(root_0, char_literal983_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_do_statement12671);
			boolean_expression984=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression984.getTree());

			char_literal985=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_do_statement12675); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal985_tree = (CommonTree)adaptor.create(char_literal985);
			adaptor.addChild(root_0, char_literal985_tree);
			}

			char_literal986=(Token)match(input,SEMI,FOLLOW_SEMI_in_do_statement12679); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal986_tree = (CommonTree)adaptor.create(char_literal986);
			adaptor.addChild(root_0, char_literal986_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 274, do_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "do_statement"


	public static class for_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_statement"
	// /Users/jeremie/ANTLR/cs.g:951:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
	public final csParser.for_statement_return for_statement() throws RecognitionException {
		csParser.for_statement_return retval = new csParser.for_statement_return();
		retval.start = input.LT(1);
		int for_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal987=null;
		Token char_literal988=null;
		Token char_literal990=null;
		Token char_literal992=null;
		Token char_literal994=null;
		ParserRuleReturnScope for_initializer989 =null;
		ParserRuleReturnScope for_condition991 =null;
		ParserRuleReturnScope for_iterator993 =null;
		ParserRuleReturnScope embedded_statement995 =null;

		CommonTree string_literal987_tree=null;
		CommonTree char_literal988_tree=null;
		CommonTree char_literal990_tree=null;
		CommonTree char_literal992_tree=null;
		CommonTree char_literal994_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:951:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:952:9: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal987=(Token)match(input,130,FOLLOW_130_in_for_statement12694); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal987_tree = (CommonTree)adaptor.create(string_literal987);
			adaptor.addChild(root_0, string_literal987_tree);
			}

			char_literal988=(Token)match(input,68,FOLLOW_68_in_for_statement12698); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal988_tree = (CommonTree)adaptor.create(char_literal988);
			adaptor.addChild(root_0, char_literal988_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:952:23: ( for_initializer )?
			int alt256=2;
			int LA256_0 = input.LA(1);
			if ( (LA256_0==Character_literal||LA256_0==FALSE||(LA256_0 >= Hex_number && LA256_0 <= IDENTIFIER)||(LA256_0 >= MINUS && LA256_0 <= NUMBER)||LA256_0==Real_literal||LA256_0==STRINGLITERAL||LA256_0==TRUE||LA256_0==Verbatim_string_literal||LA256_0==61||LA256_0==66||(LA256_0 >= 68 && LA256_0 <= 69)||(LA256_0 >= 71 && LA256_0 <= 72)||LA256_0==75||LA256_0==95||(LA256_0 >= 97 && LA256_0 <= 98)||(LA256_0 >= 100 && LA256_0 <= 103)||(LA256_0 >= 105 && LA256_0 <= 106)||(LA256_0 >= 109 && LA256_0 <= 110)||(LA256_0 >= 114 && LA256_0 <= 117)||(LA256_0 >= 119 && LA256_0 <= 120)||LA256_0==122||LA256_0==126||LA256_0==129||LA256_0==132||LA256_0==135||LA256_0==138||LA256_0==141||(LA256_0 >= 143 && LA256_0 <= 144)||(LA256_0 >= 146 && LA256_0 <= 148)||(LA256_0 >= 150 && LA256_0 <= 152)||LA256_0==154||LA256_0==157||LA256_0==160||LA256_0==162||LA256_0==167||LA256_0==169||(LA256_0 >= 171 && LA256_0 <= 174)||LA256_0==177||LA256_0==180||(LA256_0 >= 183 && LA256_0 <= 187)||(LA256_0 >= 189 && LA256_0 <= 190)||LA256_0==192||LA256_0==194||LA256_0==196||LA256_0==202) ) {
				alt256=1;
			}
			switch (alt256) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:952:23: for_initializer
					{
					pushFollow(FOLLOW_for_initializer_in_for_statement12702);
					for_initializer989=for_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_initializer989.getTree());

					}
					break;

			}

			char_literal990=(Token)match(input,SEMI,FOLLOW_SEMI_in_for_statement12707); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal990_tree = (CommonTree)adaptor.create(char_literal990);
			adaptor.addChild(root_0, char_literal990_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:952:48: ( for_condition )?
			int alt257=2;
			int LA257_0 = input.LA(1);
			if ( (LA257_0==Character_literal||LA257_0==FALSE||(LA257_0 >= Hex_number && LA257_0 <= IDENTIFIER)||(LA257_0 >= MINUS && LA257_0 <= NUMBER)||LA257_0==Real_literal||LA257_0==STRINGLITERAL||LA257_0==TRUE||LA257_0==Verbatim_string_literal||LA257_0==61||LA257_0==66||(LA257_0 >= 68 && LA257_0 <= 69)||(LA257_0 >= 71 && LA257_0 <= 72)||LA257_0==75||LA257_0==95||(LA257_0 >= 97 && LA257_0 <= 98)||(LA257_0 >= 100 && LA257_0 <= 103)||(LA257_0 >= 105 && LA257_0 <= 106)||(LA257_0 >= 109 && LA257_0 <= 110)||(LA257_0 >= 114 && LA257_0 <= 117)||(LA257_0 >= 119 && LA257_0 <= 120)||LA257_0==122||LA257_0==126||LA257_0==129||LA257_0==132||LA257_0==135||LA257_0==138||LA257_0==141||(LA257_0 >= 143 && LA257_0 <= 144)||(LA257_0 >= 146 && LA257_0 <= 148)||(LA257_0 >= 150 && LA257_0 <= 152)||LA257_0==154||LA257_0==157||LA257_0==160||LA257_0==162||LA257_0==167||LA257_0==169||(LA257_0 >= 171 && LA257_0 <= 174)||LA257_0==177||LA257_0==180||(LA257_0 >= 183 && LA257_0 <= 187)||(LA257_0 >= 189 && LA257_0 <= 190)||LA257_0==194||LA257_0==196||LA257_0==202) ) {
				alt257=1;
			}
			switch (alt257) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:952:48: for_condition
					{
					pushFollow(FOLLOW_for_condition_in_for_statement12711);
					for_condition991=for_condition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_condition991.getTree());

					}
					break;

			}

			char_literal992=(Token)match(input,SEMI,FOLLOW_SEMI_in_for_statement12716); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal992_tree = (CommonTree)adaptor.create(char_literal992);
			adaptor.addChild(root_0, char_literal992_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:952:71: ( for_iterator )?
			int alt258=2;
			int LA258_0 = input.LA(1);
			if ( (LA258_0==Character_literal||LA258_0==FALSE||(LA258_0 >= Hex_number && LA258_0 <= IDENTIFIER)||(LA258_0 >= MINUS && LA258_0 <= NUMBER)||LA258_0==Real_literal||LA258_0==STRINGLITERAL||LA258_0==TRUE||LA258_0==Verbatim_string_literal||LA258_0==61||LA258_0==66||(LA258_0 >= 68 && LA258_0 <= 69)||(LA258_0 >= 71 && LA258_0 <= 72)||LA258_0==75||LA258_0==95||(LA258_0 >= 97 && LA258_0 <= 98)||(LA258_0 >= 100 && LA258_0 <= 103)||(LA258_0 >= 105 && LA258_0 <= 106)||(LA258_0 >= 109 && LA258_0 <= 110)||(LA258_0 >= 114 && LA258_0 <= 117)||(LA258_0 >= 119 && LA258_0 <= 120)||LA258_0==122||LA258_0==126||LA258_0==129||LA258_0==132||LA258_0==135||LA258_0==138||LA258_0==141||(LA258_0 >= 143 && LA258_0 <= 144)||(LA258_0 >= 146 && LA258_0 <= 148)||(LA258_0 >= 150 && LA258_0 <= 152)||LA258_0==154||LA258_0==157||LA258_0==160||LA258_0==162||LA258_0==167||LA258_0==169||(LA258_0 >= 171 && LA258_0 <= 174)||LA258_0==177||LA258_0==180||(LA258_0 >= 183 && LA258_0 <= 187)||(LA258_0 >= 189 && LA258_0 <= 190)||LA258_0==194||LA258_0==196||LA258_0==202) ) {
				alt258=1;
			}
			switch (alt258) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:952:71: for_iterator
					{
					pushFollow(FOLLOW_for_iterator_in_for_statement12720);
					for_iterator993=for_iterator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_iterator993.getTree());

					}
					break;

			}

			char_literal994=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_for_statement12725); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal994_tree = (CommonTree)adaptor.create(char_literal994);
			adaptor.addChild(root_0, char_literal994_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_for_statement12729);
			embedded_statement995=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement995.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 275, for_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_statement"


	public static class for_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_initializer"
	// /Users/jeremie/ANTLR/cs.g:953:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
	public final csParser.for_initializer_return for_initializer() throws RecognitionException {
		csParser.for_initializer_return retval = new csParser.for_initializer_return();
		retval.start = input.LT(1);
		int for_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope local_variable_declaration996 =null;
		ParserRuleReturnScope statement_expression_list997 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:953:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
			int alt259=2;
			int LA259_0 = input.LA(1);
			if ( (LA259_0==190) ) {
				int LA259_1 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt259=1;
				}
				else if ( (true) ) {
					alt259=2;
				}

			}
			else if ( (LA259_0==120) ) {
				int LA259_2 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt259=1;
				}
				else if ( (true) ) {
					alt259=2;
				}

			}
			else if ( (LA259_0==103||LA259_0==106||LA259_0==109||LA259_0==114||LA259_0==119||LA259_0==129||LA259_0==138||LA259_0==146||LA259_0==151||LA259_0==169||LA259_0==173||LA259_0==177||(LA259_0 >= 185 && LA259_0 <= 186)||LA259_0==189) ) {
				int LA259_3 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt259=1;
				}
				else if ( (true) ) {
					alt259=2;
				}

			}
			else if ( (LA259_0==132) ) {
				int LA259_4 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt259=1;
				}
				else if ( (true) ) {
					alt259=2;
				}

			}
			else if ( (LA259_0==192) && (synpred38_cs())) {
				alt259=1;
			}
			else if ( (LA259_0==Character_literal||LA259_0==FALSE||LA259_0==Hex_number||(LA259_0 >= MINUS && LA259_0 <= NUMBER)||LA259_0==Real_literal||LA259_0==STRINGLITERAL||LA259_0==TRUE||LA259_0==Verbatim_string_literal||LA259_0==61||LA259_0==66||(LA259_0 >= 68 && LA259_0 <= 69)||(LA259_0 >= 71 && LA259_0 <= 72)||LA259_0==75||LA259_0==102||LA259_0==110||(LA259_0 >= 115 && LA259_0 <= 116)||LA259_0==150||LA259_0==174||LA259_0==180||LA259_0==184||LA259_0==187||LA259_0==202) ) {
				alt259=2;
			}
			else if ( (LA259_0==IDENTIFIER||LA259_0==95||(LA259_0 >= 97 && LA259_0 <= 98)||(LA259_0 >= 100 && LA259_0 <= 101)||LA259_0==105||LA259_0==117||LA259_0==122||LA259_0==126||LA259_0==135||LA259_0==141||(LA259_0 >= 143 && LA259_0 <= 144)||(LA259_0 >= 147 && LA259_0 <= 148)||LA259_0==152||LA259_0==154||LA259_0==157||LA259_0==160||LA259_0==162||LA259_0==167||(LA259_0 >= 171 && LA259_0 <= 172)||LA259_0==183||LA259_0==194||LA259_0==196) ) {
				int LA259_25 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt259=1;
				}
				else if ( (true) ) {
					alt259=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 259, 0, input);
				throw nvae;
			}

			switch (alt259) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:954:9: ( local_variable_declaration )=> local_variable_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_local_variable_declaration_in_for_initializer12750);
					local_variable_declaration996=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration996.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:955:11: statement_expression_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_statement_expression_list_in_for_initializer12762);
					statement_expression_list997=statement_expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list997.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 276, for_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_initializer"


	public static class for_condition_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_condition"
	// /Users/jeremie/ANTLR/cs.g:957:1: for_condition : boolean_expression ;
	public final csParser.for_condition_return for_condition() throws RecognitionException {
		csParser.for_condition_return retval = new csParser.for_condition_return();
		retval.start = input.LT(1);
		int for_condition_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope boolean_expression998 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:957:14: ( boolean_expression )
			// /Users/jeremie/ANTLR/cs.g:958:9: boolean_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_boolean_expression_in_for_condition12786);
			boolean_expression998=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression998.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 277, for_condition_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_condition"


	public static class for_iterator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_iterator"
	// /Users/jeremie/ANTLR/cs.g:959:1: for_iterator : statement_expression_list ;
	public final csParser.for_iterator_return for_iterator() throws RecognitionException {
		csParser.for_iterator_return retval = new csParser.for_iterator_return();
		retval.start = input.LT(1);
		int for_iterator_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope statement_expression_list999 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:959:13: ( statement_expression_list )
			// /Users/jeremie/ANTLR/cs.g:960:9: statement_expression_list
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_statement_expression_list_in_for_iterator12801);
			statement_expression_list999=statement_expression_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list999.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 278, for_iterator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_iterator"


	public static class statement_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement_expression_list"
	// /Users/jeremie/ANTLR/cs.g:961:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
	public final csParser.statement_expression_list_return statement_expression_list() throws RecognitionException {
		csParser.statement_expression_list_return retval = new csParser.statement_expression_list_return();
		retval.start = input.LT(1);
		int statement_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1001=null;
		ParserRuleReturnScope statement_expression1000 =null;
		ParserRuleReturnScope statement_expression1002 =null;

		CommonTree char_literal1001_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:961:26: ( statement_expression ( ',' statement_expression )* )
			// /Users/jeremie/ANTLR/cs.g:962:9: statement_expression ( ',' statement_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_statement_expression_in_statement_expression_list12816);
			statement_expression1000=statement_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression1000.getTree());

			// /Users/jeremie/ANTLR/cs.g:962:30: ( ',' statement_expression )*
			loop260:
			while (true) {
				int alt260=2;
				int LA260_0 = input.LA(1);
				if ( (LA260_0==74) ) {
					alt260=1;
				}

				switch (alt260) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:962:31: ',' statement_expression
					{
					char_literal1001=(Token)match(input,74,FOLLOW_74_in_statement_expression_list12819); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1001_tree = (CommonTree)adaptor.create(char_literal1001);
					adaptor.addChild(root_0, char_literal1001_tree);
					}

					pushFollow(FOLLOW_statement_expression_in_statement_expression_list12821);
					statement_expression1002=statement_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression1002.getTree());

					}
					break;

				default :
					break loop260;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 279, statement_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement_expression_list"


	public static class foreach_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "foreach_statement"
	// /Users/jeremie/ANTLR/cs.g:963:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
	public final csParser.foreach_statement_return foreach_statement() throws RecognitionException {
		csParser.foreach_statement_return retval = new csParser.foreach_statement_return();
		retval.start = input.LT(1);
		int foreach_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1003=null;
		Token char_literal1004=null;
		Token string_literal1007=null;
		Token char_literal1009=null;
		ParserRuleReturnScope local_variable_type1005 =null;
		ParserRuleReturnScope identifier1006 =null;
		ParserRuleReturnScope expression1008 =null;
		ParserRuleReturnScope embedded_statement1010 =null;

		CommonTree string_literal1003_tree=null;
		CommonTree char_literal1004_tree=null;
		CommonTree string_literal1007_tree=null;
		CommonTree char_literal1009_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:963:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:964:9: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1003=(Token)match(input,131,FOLLOW_131_in_foreach_statement12838); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1003_tree = (CommonTree)adaptor.create(string_literal1003);
			adaptor.addChild(root_0, string_literal1003_tree);
			}

			char_literal1004=(Token)match(input,68,FOLLOW_68_in_foreach_statement12842); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1004_tree = (CommonTree)adaptor.create(char_literal1004);
			adaptor.addChild(root_0, char_literal1004_tree);
			}

			pushFollow(FOLLOW_local_variable_type_in_foreach_statement12846);
			local_variable_type1005=local_variable_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type1005.getTree());

			pushFollow(FOLLOW_identifier_in_foreach_statement12850);
			identifier1006=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1006.getTree());

			string_literal1007=(Token)match(input,137,FOLLOW_137_in_foreach_statement12854); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1007_tree = (CommonTree)adaptor.create(string_literal1007);
			adaptor.addChild(root_0, string_literal1007_tree);
			}

			pushFollow(FOLLOW_expression_in_foreach_statement12858);
			expression1008=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1008.getTree());

			char_literal1009=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_foreach_statement12862); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1009_tree = (CommonTree)adaptor.create(char_literal1009);
			adaptor.addChild(root_0, char_literal1009_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_foreach_statement12866);
			embedded_statement1010=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1010.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 280, foreach_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "foreach_statement"


	public static class jump_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "jump_statement"
	// /Users/jeremie/ANTLR/cs.g:965:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
	public final csParser.jump_statement_return jump_statement() throws RecognitionException {
		csParser.jump_statement_return retval = new csParser.jump_statement_return();
		retval.start = input.LT(1);
		int jump_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope break_statement1011 =null;
		ParserRuleReturnScope continue_statement1012 =null;
		ParserRuleReturnScope goto_statement1013 =null;
		ParserRuleReturnScope return_statement1014 =null;
		ParserRuleReturnScope throw_statement1015 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:965:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
			int alt261=5;
			switch ( input.LA(1) ) {
			case 104:
				{
				alt261=1;
				}
				break;
			case 113:
				{
				alt261=2;
				}
				break;
			case 134:
				{
				alt261=3;
				}
				break;
			case 168:
				{
				alt261=4;
				}
				break;
			case 181:
				{
				alt261=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 261, 0, input);
				throw nvae;
			}
			switch (alt261) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:966:9: break_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_break_statement_in_jump_statement12881);
					break_statement1011=break_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, break_statement1011.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:967:11: continue_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_continue_statement_in_jump_statement12893);
					continue_statement1012=continue_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, continue_statement1012.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:968:11: goto_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_goto_statement_in_jump_statement12905);
					goto_statement1013=goto_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, goto_statement1013.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:969:11: return_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_return_statement_in_jump_statement12917);
					return_statement1014=return_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, return_statement1014.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:970:11: throw_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_throw_statement_in_jump_statement12929);
					throw_statement1015=throw_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, throw_statement1015.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 281, jump_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "jump_statement"


	public static class break_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "break_statement"
	// /Users/jeremie/ANTLR/cs.g:971:1: break_statement : 'break' ';' ;
	public final csParser.break_statement_return break_statement() throws RecognitionException {
		csParser.break_statement_return retval = new csParser.break_statement_return();
		retval.start = input.LT(1);
		int break_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1016=null;
		Token char_literal1017=null;

		CommonTree string_literal1016_tree=null;
		CommonTree char_literal1017_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:971:16: ( 'break' ';' )
			// /Users/jeremie/ANTLR/cs.g:972:9: 'break' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1016=(Token)match(input,104,FOLLOW_104_in_break_statement12944); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1016_tree = (CommonTree)adaptor.create(string_literal1016);
			adaptor.addChild(root_0, string_literal1016_tree);
			}

			char_literal1017=(Token)match(input,SEMI,FOLLOW_SEMI_in_break_statement12948); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1017_tree = (CommonTree)adaptor.create(char_literal1017);
			adaptor.addChild(root_0, char_literal1017_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 282, break_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "break_statement"


	public static class continue_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "continue_statement"
	// /Users/jeremie/ANTLR/cs.g:973:1: continue_statement : 'continue' ';' ;
	public final csParser.continue_statement_return continue_statement() throws RecognitionException {
		csParser.continue_statement_return retval = new csParser.continue_statement_return();
		retval.start = input.LT(1);
		int continue_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1018=null;
		Token char_literal1019=null;

		CommonTree string_literal1018_tree=null;
		CommonTree char_literal1019_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:973:19: ( 'continue' ';' )
			// /Users/jeremie/ANTLR/cs.g:974:9: 'continue' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1018=(Token)match(input,113,FOLLOW_113_in_continue_statement12963); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1018_tree = (CommonTree)adaptor.create(string_literal1018);
			adaptor.addChild(root_0, string_literal1018_tree);
			}

			char_literal1019=(Token)match(input,SEMI,FOLLOW_SEMI_in_continue_statement12967); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1019_tree = (CommonTree)adaptor.create(char_literal1019);
			adaptor.addChild(root_0, char_literal1019_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 283, continue_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "continue_statement"


	public static class goto_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "goto_statement"
	// /Users/jeremie/ANTLR/cs.g:975:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
	public final csParser.goto_statement_return goto_statement() throws RecognitionException {
		csParser.goto_statement_return retval = new csParser.goto_statement_return();
		retval.start = input.LT(1);
		int goto_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1020=null;
		Token string_literal1022=null;
		Token string_literal1024=null;
		Token char_literal1025=null;
		ParserRuleReturnScope identifier1021 =null;
		ParserRuleReturnScope constant_expression1023 =null;

		CommonTree string_literal1020_tree=null;
		CommonTree string_literal1022_tree=null;
		CommonTree string_literal1024_tree=null;
		CommonTree char_literal1025_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:975:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
			// /Users/jeremie/ANTLR/cs.g:976:9: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1020=(Token)match(input,134,FOLLOW_134_in_goto_statement12982); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1020_tree = (CommonTree)adaptor.create(string_literal1020);
			adaptor.addChild(root_0, string_literal1020_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:976:18: ( identifier | 'case' constant_expression | 'default' )
			int alt262=3;
			switch ( input.LA(1) ) {
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				alt262=1;
				}
				break;
			case 107:
				{
				alt262=2;
				}
				break;
			case 115:
				{
				alt262=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 262, 0, input);
				throw nvae;
			}
			switch (alt262) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:976:20: identifier
					{
					pushFollow(FOLLOW_identifier_in_goto_statement12988);
					identifier1021=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1021.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:977:28: 'case' constant_expression
					{
					string_literal1022=(Token)match(input,107,FOLLOW_107_in_goto_statement13017); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1022_tree = (CommonTree)adaptor.create(string_literal1022);
					adaptor.addChild(root_0, string_literal1022_tree);
					}

					pushFollow(FOLLOW_constant_expression_in_goto_statement13021);
					constant_expression1023=constant_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression1023.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:978:28: 'default'
					{
					string_literal1024=(Token)match(input,115,FOLLOW_115_in_goto_statement13050); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1024_tree = (CommonTree)adaptor.create(string_literal1024);
					adaptor.addChild(root_0, string_literal1024_tree);
					}

					}
					break;

			}

			char_literal1025=(Token)match(input,SEMI,FOLLOW_SEMI_in_goto_statement13055); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1025_tree = (CommonTree)adaptor.create(char_literal1025);
			adaptor.addChild(root_0, char_literal1025_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 284, goto_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "goto_statement"


	public static class return_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "return_statement"
	// /Users/jeremie/ANTLR/cs.g:979:1: return_statement : 'return' ( expression )? ';' ;
	public final csParser.return_statement_return return_statement() throws RecognitionException {
		csParser.return_statement_return retval = new csParser.return_statement_return();
		retval.start = input.LT(1);
		int return_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1026=null;
		Token char_literal1028=null;
		ParserRuleReturnScope expression1027 =null;

		CommonTree string_literal1026_tree=null;
		CommonTree char_literal1028_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:979:17: ( 'return' ( expression )? ';' )
			// /Users/jeremie/ANTLR/cs.g:980:9: 'return' ( expression )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1026=(Token)match(input,168,FOLLOW_168_in_return_statement13070); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1026_tree = (CommonTree)adaptor.create(string_literal1026);
			adaptor.addChild(root_0, string_literal1026_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:980:20: ( expression )?
			int alt263=2;
			int LA263_0 = input.LA(1);
			if ( (LA263_0==Character_literal||LA263_0==FALSE||(LA263_0 >= Hex_number && LA263_0 <= IDENTIFIER)||(LA263_0 >= MINUS && LA263_0 <= NUMBER)||LA263_0==Real_literal||LA263_0==STRINGLITERAL||LA263_0==TRUE||LA263_0==Verbatim_string_literal||LA263_0==61||LA263_0==66||(LA263_0 >= 68 && LA263_0 <= 69)||(LA263_0 >= 71 && LA263_0 <= 72)||LA263_0==75||LA263_0==95||(LA263_0 >= 97 && LA263_0 <= 98)||(LA263_0 >= 100 && LA263_0 <= 103)||(LA263_0 >= 105 && LA263_0 <= 106)||(LA263_0 >= 109 && LA263_0 <= 110)||(LA263_0 >= 114 && LA263_0 <= 117)||(LA263_0 >= 119 && LA263_0 <= 120)||LA263_0==122||LA263_0==126||LA263_0==129||LA263_0==132||LA263_0==135||LA263_0==138||LA263_0==141||(LA263_0 >= 143 && LA263_0 <= 144)||(LA263_0 >= 146 && LA263_0 <= 148)||(LA263_0 >= 150 && LA263_0 <= 152)||LA263_0==154||LA263_0==157||LA263_0==160||LA263_0==162||LA263_0==167||LA263_0==169||(LA263_0 >= 171 && LA263_0 <= 174)||LA263_0==177||LA263_0==180||(LA263_0 >= 183 && LA263_0 <= 187)||(LA263_0 >= 189 && LA263_0 <= 190)||LA263_0==194||LA263_0==196||LA263_0==202) ) {
				alt263=1;
			}
			switch (alt263) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:980:20: expression
					{
					pushFollow(FOLLOW_expression_in_return_statement13074);
					expression1027=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1027.getTree());

					}
					break;

			}

			char_literal1028=(Token)match(input,SEMI,FOLLOW_SEMI_in_return_statement13079); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1028_tree = (CommonTree)adaptor.create(char_literal1028);
			adaptor.addChild(root_0, char_literal1028_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 285, return_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "return_statement"


	public static class throw_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "throw_statement"
	// /Users/jeremie/ANTLR/cs.g:981:1: throw_statement : 'throw' ( expression )? ';' ;
	public final csParser.throw_statement_return throw_statement() throws RecognitionException {
		csParser.throw_statement_return retval = new csParser.throw_statement_return();
		retval.start = input.LT(1);
		int throw_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1029=null;
		Token char_literal1031=null;
		ParserRuleReturnScope expression1030 =null;

		CommonTree string_literal1029_tree=null;
		CommonTree char_literal1031_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:981:16: ( 'throw' ( expression )? ';' )
			// /Users/jeremie/ANTLR/cs.g:982:9: 'throw' ( expression )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1029=(Token)match(input,181,FOLLOW_181_in_throw_statement13094); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1029_tree = (CommonTree)adaptor.create(string_literal1029);
			adaptor.addChild(root_0, string_literal1029_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:982:19: ( expression )?
			int alt264=2;
			int LA264_0 = input.LA(1);
			if ( (LA264_0==Character_literal||LA264_0==FALSE||(LA264_0 >= Hex_number && LA264_0 <= IDENTIFIER)||(LA264_0 >= MINUS && LA264_0 <= NUMBER)||LA264_0==Real_literal||LA264_0==STRINGLITERAL||LA264_0==TRUE||LA264_0==Verbatim_string_literal||LA264_0==61||LA264_0==66||(LA264_0 >= 68 && LA264_0 <= 69)||(LA264_0 >= 71 && LA264_0 <= 72)||LA264_0==75||LA264_0==95||(LA264_0 >= 97 && LA264_0 <= 98)||(LA264_0 >= 100 && LA264_0 <= 103)||(LA264_0 >= 105 && LA264_0 <= 106)||(LA264_0 >= 109 && LA264_0 <= 110)||(LA264_0 >= 114 && LA264_0 <= 117)||(LA264_0 >= 119 && LA264_0 <= 120)||LA264_0==122||LA264_0==126||LA264_0==129||LA264_0==132||LA264_0==135||LA264_0==138||LA264_0==141||(LA264_0 >= 143 && LA264_0 <= 144)||(LA264_0 >= 146 && LA264_0 <= 148)||(LA264_0 >= 150 && LA264_0 <= 152)||LA264_0==154||LA264_0==157||LA264_0==160||LA264_0==162||LA264_0==167||LA264_0==169||(LA264_0 >= 171 && LA264_0 <= 174)||LA264_0==177||LA264_0==180||(LA264_0 >= 183 && LA264_0 <= 187)||(LA264_0 >= 189 && LA264_0 <= 190)||LA264_0==194||LA264_0==196||LA264_0==202) ) {
				alt264=1;
			}
			switch (alt264) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:982:19: expression
					{
					pushFollow(FOLLOW_expression_in_throw_statement13098);
					expression1030=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1030.getTree());

					}
					break;

			}

			char_literal1031=(Token)match(input,SEMI,FOLLOW_SEMI_in_throw_statement13103); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1031_tree = (CommonTree)adaptor.create(char_literal1031);
			adaptor.addChild(root_0, char_literal1031_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 286, throw_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "throw_statement"


	public static class try_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "try_statement"
	// /Users/jeremie/ANTLR/cs.g:983:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
	public final csParser.try_statement_return try_statement() throws RecognitionException {
		csParser.try_statement_return retval = new csParser.try_statement_return();
		retval.start = input.LT(1);
		int try_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1032=null;
		ParserRuleReturnScope block1033 =null;
		ParserRuleReturnScope catch_clauses1034 =null;
		ParserRuleReturnScope finally_clause1035 =null;
		ParserRuleReturnScope finally_clause1036 =null;

		CommonTree string_literal1032_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:983:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
			// /Users/jeremie/ANTLR/cs.g:984:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1032=(Token)match(input,182,FOLLOW_182_in_try_statement13116); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1032_tree = (CommonTree)adaptor.create(string_literal1032);
			adaptor.addChild(root_0, string_literal1032_tree);
			}

			pushFollow(FOLLOW_block_in_try_statement13120);
			block1033=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1033.getTree());

			// /Users/jeremie/ANTLR/cs.g:984:23: ( catch_clauses ( finally_clause )? | finally_clause )
			int alt266=2;
			int LA266_0 = input.LA(1);
			if ( (LA266_0==108) ) {
				alt266=1;
			}
			else if ( (LA266_0==127) ) {
				alt266=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 266, 0, input);
				throw nvae;
			}

			switch (alt266) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:984:25: catch_clauses ( finally_clause )?
					{
					pushFollow(FOLLOW_catch_clauses_in_try_statement13126);
					catch_clauses1034=catch_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, catch_clauses1034.getTree());

					// /Users/jeremie/ANTLR/cs.g:984:41: ( finally_clause )?
					int alt265=2;
					int LA265_0 = input.LA(1);
					if ( (LA265_0==127) ) {
						alt265=1;
					}
					switch (alt265) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:984:41: finally_clause
							{
							pushFollow(FOLLOW_finally_clause_in_try_statement13130);
							finally_clause1035=finally_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause1035.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:985:45: finally_clause
					{
					pushFollow(FOLLOW_finally_clause_in_try_statement13177);
					finally_clause1036=finally_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause1036.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 287, try_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "try_statement"


	public static class catch_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "catch_clauses"
	// /Users/jeremie/ANTLR/cs.g:987:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
	public final csParser.catch_clauses_return catch_clauses() throws RecognitionException {
		csParser.catch_clauses_return retval = new csParser.catch_clauses_return();
		retval.start = input.LT(1);
		int catch_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1037=null;
		ParserRuleReturnScope specific_catch_clauses1038 =null;
		ParserRuleReturnScope general_catch_clause1039 =null;

		CommonTree string_literal1037_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:987:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
			// /Users/jeremie/ANTLR/cs.g:988:9: 'catch' ( specific_catch_clauses | general_catch_clause )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1037=(Token)match(input,108,FOLLOW_108_in_catch_clauses13193); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1037_tree = (CommonTree)adaptor.create(string_literal1037);
			adaptor.addChild(root_0, string_literal1037_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:988:19: ( specific_catch_clauses | general_catch_clause )
			int alt267=2;
			int LA267_0 = input.LA(1);
			if ( (LA267_0==68) ) {
				alt267=1;
			}
			else if ( (LA267_0==SEMI||LA267_0==197) ) {
				alt267=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 267, 0, input);
				throw nvae;
			}

			switch (alt267) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:988:20: specific_catch_clauses
					{
					pushFollow(FOLLOW_specific_catch_clauses_in_catch_clauses13198);
					specific_catch_clauses1038=specific_catch_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clauses1038.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:988:45: general_catch_clause
					{
					pushFollow(FOLLOW_general_catch_clause_in_catch_clauses13202);
					general_catch_clause1039=general_catch_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause1039.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 288, catch_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "catch_clauses"


	public static class specific_catch_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "specific_catch_clauses"
	// /Users/jeremie/ANTLR/cs.g:989:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
	public final csParser.specific_catch_clauses_return specific_catch_clauses() throws RecognitionException {
		csParser.specific_catch_clauses_return retval = new csParser.specific_catch_clauses_return();
		retval.start = input.LT(1);
		int specific_catch_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1041=null;
		ParserRuleReturnScope specific_catch_clause1040 =null;
		ParserRuleReturnScope specific_catch_clause1042 =null;
		ParserRuleReturnScope general_catch_clause1043 =null;

		CommonTree string_literal1041_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:989:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
			// /Users/jeremie/ANTLR/cs.g:990:9: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses13218);
			specific_catch_clause1040=specific_catch_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause1040.getTree());

			// /Users/jeremie/ANTLR/cs.g:990:33: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			loop269:
			while (true) {
				int alt269=2;
				int LA269_0 = input.LA(1);
				if ( (LA269_0==108) ) {
					alt269=1;
				}

				switch (alt269) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:990:34: 'catch' ( specific_catch_clause | general_catch_clause )
					{
					string_literal1041=(Token)match(input,108,FOLLOW_108_in_specific_catch_clauses13223); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1041_tree = (CommonTree)adaptor.create(string_literal1041);
					adaptor.addChild(root_0, string_literal1041_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:990:44: ( specific_catch_clause | general_catch_clause )
					int alt268=2;
					int LA268_0 = input.LA(1);
					if ( (LA268_0==68) ) {
						alt268=1;
					}
					else if ( (LA268_0==SEMI||LA268_0==197) ) {
						alt268=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 268, 0, input);
						throw nvae;
					}

					switch (alt268) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:990:45: specific_catch_clause
							{
							pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses13228);
							specific_catch_clause1042=specific_catch_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause1042.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:990:69: general_catch_clause
							{
							pushFollow(FOLLOW_general_catch_clause_in_specific_catch_clauses13232);
							general_catch_clause1043=general_catch_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause1043.getTree());

							}
							break;

					}

					}
					break;

				default :
					break loop269;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 289, specific_catch_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "specific_catch_clauses"


	public static class specific_catch_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "specific_catch_clause"
	// /Users/jeremie/ANTLR/cs.g:991:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
	public final csParser.specific_catch_clause_return specific_catch_clause() throws RecognitionException {
		csParser.specific_catch_clause_return retval = new csParser.specific_catch_clause_return();
		retval.start = input.LT(1);
		int specific_catch_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1044=null;
		Token char_literal1047=null;
		ParserRuleReturnScope class_type1045 =null;
		ParserRuleReturnScope identifier1046 =null;
		ParserRuleReturnScope block1048 =null;

		CommonTree char_literal1044_tree=null;
		CommonTree char_literal1047_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:991:22: ( '(' class_type ( identifier )? ')' block )
			// /Users/jeremie/ANTLR/cs.g:992:9: '(' class_type ( identifier )? ')' block
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal1044=(Token)match(input,68,FOLLOW_68_in_specific_catch_clause13249); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1044_tree = (CommonTree)adaptor.create(char_literal1044);
			adaptor.addChild(root_0, char_literal1044_tree);
			}

			pushFollow(FOLLOW_class_type_in_specific_catch_clause13253);
			class_type1045=class_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type1045.getTree());

			// /Users/jeremie/ANTLR/cs.g:992:28: ( identifier )?
			int alt270=2;
			int LA270_0 = input.LA(1);
			if ( (LA270_0==IDENTIFIER||LA270_0==95||(LA270_0 >= 97 && LA270_0 <= 98)||(LA270_0 >= 100 && LA270_0 <= 101)||LA270_0==105||LA270_0==117||LA270_0==120||LA270_0==122||LA270_0==126||LA270_0==132||LA270_0==135||LA270_0==141||(LA270_0 >= 143 && LA270_0 <= 144)||(LA270_0 >= 147 && LA270_0 <= 148)||LA270_0==152||LA270_0==154||LA270_0==157||LA270_0==160||LA270_0==162||LA270_0==167||(LA270_0 >= 171 && LA270_0 <= 172)||LA270_0==183||LA270_0==190||LA270_0==194||LA270_0==196) ) {
				alt270=1;
			}
			switch (alt270) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:992:28: identifier
					{
					pushFollow(FOLLOW_identifier_in_specific_catch_clause13257);
					identifier1046=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1046.getTree());

					}
					break;

			}

			char_literal1047=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_specific_catch_clause13262); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1047_tree = (CommonTree)adaptor.create(char_literal1047);
			adaptor.addChild(root_0, char_literal1047_tree);
			}

			pushFollow(FOLLOW_block_in_specific_catch_clause13266);
			block1048=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1048.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 290, specific_catch_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "specific_catch_clause"


	public static class general_catch_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "general_catch_clause"
	// /Users/jeremie/ANTLR/cs.g:993:1: general_catch_clause : block ;
	public final csParser.general_catch_clause_return general_catch_clause() throws RecognitionException {
		csParser.general_catch_clause_return retval = new csParser.general_catch_clause_return();
		retval.start = input.LT(1);
		int general_catch_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block1049 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:993:21: ( block )
			// /Users/jeremie/ANTLR/cs.g:994:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_general_catch_clause13281);
			block1049=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1049.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 291, general_catch_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "general_catch_clause"


	public static class finally_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "finally_clause"
	// /Users/jeremie/ANTLR/cs.g:995:1: finally_clause : 'finally' block ;
	public final csParser.finally_clause_return finally_clause() throws RecognitionException {
		csParser.finally_clause_return retval = new csParser.finally_clause_return();
		retval.start = input.LT(1);
		int finally_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1050=null;
		ParserRuleReturnScope block1051 =null;

		CommonTree string_literal1050_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:995:15: ( 'finally' block )
			// /Users/jeremie/ANTLR/cs.g:996:9: 'finally' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1050=(Token)match(input,127,FOLLOW_127_in_finally_clause13296); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1050_tree = (CommonTree)adaptor.create(string_literal1050);
			adaptor.addChild(root_0, string_literal1050_tree);
			}

			pushFollow(FOLLOW_block_in_finally_clause13300);
			block1051=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1051.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 292, finally_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "finally_clause"


	public static class checked_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "checked_statement"
	// /Users/jeremie/ANTLR/cs.g:997:1: checked_statement : 'checked' block ;
	public final csParser.checked_statement_return checked_statement() throws RecognitionException {
		csParser.checked_statement_return retval = new csParser.checked_statement_return();
		retval.start = input.LT(1);
		int checked_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1052=null;
		ParserRuleReturnScope block1053 =null;

		CommonTree string_literal1052_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:997:18: ( 'checked' block )
			// /Users/jeremie/ANTLR/cs.g:998:9: 'checked' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1052=(Token)match(input,110,FOLLOW_110_in_checked_statement13315); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1052_tree = (CommonTree)adaptor.create(string_literal1052);
			adaptor.addChild(root_0, string_literal1052_tree);
			}

			pushFollow(FOLLOW_block_in_checked_statement13319);
			block1053=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1053.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 293, checked_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "checked_statement"


	public static class unchecked_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unchecked_statement"
	// /Users/jeremie/ANTLR/cs.g:999:1: unchecked_statement : 'unchecked' block ;
	public final csParser.unchecked_statement_return unchecked_statement() throws RecognitionException {
		csParser.unchecked_statement_return retval = new csParser.unchecked_statement_return();
		retval.start = input.LT(1);
		int unchecked_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1054=null;
		ParserRuleReturnScope block1055 =null;

		CommonTree string_literal1054_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:999:20: ( 'unchecked' block )
			// /Users/jeremie/ANTLR/cs.g:1000:9: 'unchecked' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1054=(Token)match(input,187,FOLLOW_187_in_unchecked_statement13334); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1054_tree = (CommonTree)adaptor.create(string_literal1054);
			adaptor.addChild(root_0, string_literal1054_tree);
			}

			pushFollow(FOLLOW_block_in_unchecked_statement13338);
			block1055=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1055.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 294, unchecked_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unchecked_statement"


	public static class lock_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "lock_statement"
	// /Users/jeremie/ANTLR/cs.g:1001:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
	public final csParser.lock_statement_return lock_statement() throws RecognitionException {
		csParser.lock_statement_return retval = new csParser.lock_statement_return();
		retval.start = input.LT(1);
		int lock_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1056=null;
		Token char_literal1057=null;
		Token char_literal1059=null;
		ParserRuleReturnScope expression1058 =null;
		ParserRuleReturnScope embedded_statement1060 =null;

		CommonTree string_literal1056_tree=null;
		CommonTree char_literal1057_tree=null;
		CommonTree char_literal1059_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1001:15: ( 'lock' '(' expression ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:1002:9: 'lock' '(' expression ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1056=(Token)match(input,145,FOLLOW_145_in_lock_statement13353); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1056_tree = (CommonTree)adaptor.create(string_literal1056);
			adaptor.addChild(root_0, string_literal1056_tree);
			}

			char_literal1057=(Token)match(input,68,FOLLOW_68_in_lock_statement13357); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1057_tree = (CommonTree)adaptor.create(char_literal1057);
			adaptor.addChild(root_0, char_literal1057_tree);
			}

			pushFollow(FOLLOW_expression_in_lock_statement13360);
			expression1058=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1058.getTree());

			char_literal1059=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_lock_statement13364); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1059_tree = (CommonTree)adaptor.create(char_literal1059);
			adaptor.addChild(root_0, char_literal1059_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_lock_statement13368);
			embedded_statement1060=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1060.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 295, lock_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "lock_statement"


	public static class using_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_statement"
	// /Users/jeremie/ANTLR/cs.g:1003:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
	public final csParser.using_statement_return using_statement() throws RecognitionException {
		csParser.using_statement_return retval = new csParser.using_statement_return();
		retval.start = input.LT(1);
		int using_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1061=null;
		Token char_literal1062=null;
		Token char_literal1064=null;
		ParserRuleReturnScope resource_acquisition1063 =null;
		ParserRuleReturnScope embedded_statement1065 =null;

		CommonTree string_literal1061_tree=null;
		CommonTree char_literal1062_tree=null;
		CommonTree char_literal1064_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1003:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:1004:9: 'using' '(' resource_acquisition ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1061=(Token)match(input,USING,FOLLOW_USING_in_using_statement13383); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1061_tree = (CommonTree)adaptor.create(string_literal1061);
			adaptor.addChild(root_0, string_literal1061_tree);
			}

			char_literal1062=(Token)match(input,68,FOLLOW_68_in_using_statement13387); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1062_tree = (CommonTree)adaptor.create(char_literal1062);
			adaptor.addChild(root_0, char_literal1062_tree);
			}

			pushFollow(FOLLOW_resource_acquisition_in_using_statement13392);
			resource_acquisition1063=resource_acquisition();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, resource_acquisition1063.getTree());

			char_literal1064=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_using_statement13396); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1064_tree = (CommonTree)adaptor.create(char_literal1064);
			adaptor.addChild(root_0, char_literal1064_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_using_statement13401);
			embedded_statement1065=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1065.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 296, using_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_statement"


	public static class resource_acquisition_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "resource_acquisition"
	// /Users/jeremie/ANTLR/cs.g:1005:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
	public final csParser.resource_acquisition_return resource_acquisition() throws RecognitionException {
		csParser.resource_acquisition_return retval = new csParser.resource_acquisition_return();
		retval.start = input.LT(1);
		int resource_acquisition_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope local_variable_declaration1066 =null;
		ParserRuleReturnScope expression1067 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1005:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
			int alt271=2;
			int LA271_0 = input.LA(1);
			if ( (LA271_0==190) ) {
				int LA271_1 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt271=1;
				}
				else if ( (true) ) {
					alt271=2;
				}

			}
			else if ( (LA271_0==120) ) {
				int LA271_2 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt271=1;
				}
				else if ( (true) ) {
					alt271=2;
				}

			}
			else if ( (LA271_0==103||LA271_0==106||LA271_0==109||LA271_0==114||LA271_0==119||LA271_0==129||LA271_0==138||LA271_0==146||LA271_0==151||LA271_0==169||LA271_0==173||LA271_0==177||(LA271_0 >= 185 && LA271_0 <= 186)||LA271_0==189) ) {
				int LA271_3 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt271=1;
				}
				else if ( (true) ) {
					alt271=2;
				}

			}
			else if ( (LA271_0==132) ) {
				int LA271_4 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt271=1;
				}
				else if ( (true) ) {
					alt271=2;
				}

			}
			else if ( (LA271_0==192) && (synpred39_cs())) {
				alt271=1;
			}
			else if ( (LA271_0==Character_literal||LA271_0==FALSE||LA271_0==Hex_number||(LA271_0 >= MINUS && LA271_0 <= NUMBER)||LA271_0==Real_literal||LA271_0==STRINGLITERAL||LA271_0==TRUE||LA271_0==Verbatim_string_literal||LA271_0==61||LA271_0==66||(LA271_0 >= 68 && LA271_0 <= 69)||(LA271_0 >= 71 && LA271_0 <= 72)||LA271_0==75||LA271_0==102||LA271_0==110||(LA271_0 >= 115 && LA271_0 <= 116)||LA271_0==150||LA271_0==174||LA271_0==180||LA271_0==184||LA271_0==187||LA271_0==202) ) {
				alt271=2;
			}
			else if ( (LA271_0==IDENTIFIER||LA271_0==95||(LA271_0 >= 97 && LA271_0 <= 98)||(LA271_0 >= 100 && LA271_0 <= 101)||LA271_0==105||LA271_0==117||LA271_0==122||LA271_0==126||LA271_0==135||LA271_0==141||(LA271_0 >= 143 && LA271_0 <= 144)||(LA271_0 >= 147 && LA271_0 <= 148)||LA271_0==152||LA271_0==154||LA271_0==157||LA271_0==160||LA271_0==162||LA271_0==167||(LA271_0 >= 171 && LA271_0 <= 172)||LA271_0==183||LA271_0==194||LA271_0==196) ) {
				int LA271_25 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt271=1;
				}
				else if ( (true) ) {
					alt271=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 271, 0, input);
				throw nvae;
			}

			switch (alt271) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1006:9: ( local_variable_declaration )=> local_variable_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_local_variable_declaration_in_resource_acquisition13422);
					local_variable_declaration1066=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration1066.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:1007:11: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_resource_acquisition13434);
					expression1067=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1067.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 297, resource_acquisition_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "resource_acquisition"


	public static class yield_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "yield_statement"
	// /Users/jeremie/ANTLR/cs.g:1008:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
	public final csParser.yield_statement_return yield_statement() throws RecognitionException {
		csParser.yield_statement_return retval = new csParser.yield_statement_return();
		retval.start = input.LT(1);
		int yield_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1068=null;
		Token string_literal1069=null;
		Token char_literal1071=null;
		Token string_literal1072=null;
		Token char_literal1073=null;
		ParserRuleReturnScope expression1070 =null;

		CommonTree string_literal1068_tree=null;
		CommonTree string_literal1069_tree=null;
		CommonTree char_literal1071_tree=null;
		CommonTree string_literal1072_tree=null;
		CommonTree char_literal1073_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1008:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
			// /Users/jeremie/ANTLR/cs.g:1009:9: 'yield' ( 'return' expression ';' | 'break' ';' )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1068=(Token)match(input,196,FOLLOW_196_in_yield_statement13449); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1068_tree = (CommonTree)adaptor.create(string_literal1068);
			adaptor.addChild(root_0, string_literal1068_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:1009:19: ( 'return' expression ';' | 'break' ';' )
			int alt272=2;
			int LA272_0 = input.LA(1);
			if ( (LA272_0==168) ) {
				alt272=1;
			}
			else if ( (LA272_0==104) ) {
				alt272=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 272, 0, input);
				throw nvae;
			}

			switch (alt272) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1009:20: 'return' expression ';'
					{
					string_literal1069=(Token)match(input,168,FOLLOW_168_in_yield_statement13454); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1069_tree = (CommonTree)adaptor.create(string_literal1069);
					adaptor.addChild(root_0, string_literal1069_tree);
					}

					pushFollow(FOLLOW_expression_in_yield_statement13458);
					expression1070=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1070.getTree());

					char_literal1071=(Token)match(input,SEMI,FOLLOW_SEMI_in_yield_statement13462); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1071_tree = (CommonTree)adaptor.create(char_literal1071);
					adaptor.addChild(root_0, char_literal1071_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:1010:21: 'break' ';'
					{
					string_literal1072=(Token)match(input,104,FOLLOW_104_in_yield_statement13484); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1072_tree = (CommonTree)adaptor.create(string_literal1072);
					adaptor.addChild(root_0, string_literal1072_tree);
					}

					char_literal1073=(Token)match(input,SEMI,FOLLOW_SEMI_in_yield_statement13488); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1073_tree = (CommonTree)adaptor.create(char_literal1073);
					adaptor.addChild(root_0, char_literal1073_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 298, yield_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "yield_statement"


	public static class predefined_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "predefined_type"
	// /Users/jeremie/ANTLR/cs.g:1016:1: predefined_type : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
	public final csParser.predefined_type_return predefined_type() throws RecognitionException {
		csParser.predefined_type_return retval = new csParser.predefined_type_return();
		retval.start = input.LT(1);
		int predefined_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1074=null;

		CommonTree set1074_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1016:16: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1074=input.LT(1);
			if ( input.LA(1)==103||input.LA(1)==106||input.LA(1)==109||input.LA(1)==114||input.LA(1)==119||input.LA(1)==129||input.LA(1)==138||input.LA(1)==146||input.LA(1)==151||input.LA(1)==169||input.LA(1)==173||input.LA(1)==177||(input.LA(1) >= 185 && input.LA(1) <= 186)||input.LA(1)==189 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1074));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 299, predefined_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "predefined_type"


	public static class identifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "identifier"
	// /Users/jeremie/ANTLR/cs.g:1020:1: identifier : ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	public final csParser.identifier_return identifier() throws RecognitionException {
		csParser.identifier_return retval = new csParser.identifier_return();
		retval.start = input.LT(1);
		int identifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1075=null;

		CommonTree set1075_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1020:11: ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1075=input.LT(1);
			if ( input.LA(1)==IDENTIFIER||input.LA(1)==95||(input.LA(1) >= 97 && input.LA(1) <= 98)||(input.LA(1) >= 100 && input.LA(1) <= 101)||input.LA(1)==105||input.LA(1)==117||input.LA(1)==120||input.LA(1)==122||input.LA(1)==126||input.LA(1)==132||input.LA(1)==135||input.LA(1)==141||(input.LA(1) >= 143 && input.LA(1) <= 144)||(input.LA(1) >= 147 && input.LA(1) <= 148)||input.LA(1)==152||input.LA(1)==154||input.LA(1)==157||input.LA(1)==160||input.LA(1)==162||input.LA(1)==167||(input.LA(1) >= 171 && input.LA(1) <= 172)||input.LA(1)==183||input.LA(1)==190||input.LA(1)==194||input.LA(1)==196 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1075));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 300, identifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "identifier"


	public static class keyword_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "keyword"
	// /Users/jeremie/ANTLR/cs.g:1024:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
	public final csParser.keyword_return keyword() throws RecognitionException {
		csParser.keyword_return retval = new csParser.keyword_return();
		retval.start = input.LT(1);
		int keyword_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1076=null;

		CommonTree set1076_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1024:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1076=input.LT(1);
			if ( input.LA(1)==ENUM||input.LA(1)==FALSE||input.LA(1)==IF||input.LA(1)==NULL||input.LA(1)==TRUE||input.LA(1)==USING||input.LA(1)==96||input.LA(1)==99||(input.LA(1) >= 102 && input.LA(1) <= 104)||(input.LA(1) >= 106 && input.LA(1) <= 116)||(input.LA(1) >= 118 && input.LA(1) <= 119)||input.LA(1)==121||(input.LA(1) >= 123 && input.LA(1) <= 125)||(input.LA(1) >= 127 && input.LA(1) <= 131)||input.LA(1)==134||(input.LA(1) >= 136 && input.LA(1) <= 140)||input.LA(1)==142||(input.LA(1) >= 145 && input.LA(1) <= 146)||(input.LA(1) >= 149 && input.LA(1) <= 151)||input.LA(1)==153||(input.LA(1) >= 155 && input.LA(1) <= 156)||input.LA(1)==158||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 166)||(input.LA(1) >= 168 && input.LA(1) <= 170)||(input.LA(1) >= 173 && input.LA(1) <= 182)||(input.LA(1) >= 184 && input.LA(1) <= 189)||(input.LA(1) >= 191 && input.LA(1) <= 193) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1076));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 301, keyword_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "keyword"


	public static class also_keyword_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "also_keyword"
	// /Users/jeremie/ANTLR/cs.g:1027:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	public final csParser.also_keyword_return also_keyword() throws RecognitionException {
		csParser.also_keyword_return retval = new csParser.also_keyword_return();
		retval.start = input.LT(1);
		int also_keyword_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1077=null;

		CommonTree set1077_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1027:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1077=input.LT(1);
			if ( input.LA(1)==95||(input.LA(1) >= 97 && input.LA(1) <= 98)||(input.LA(1) >= 100 && input.LA(1) <= 101)||input.LA(1)==105||input.LA(1)==117||input.LA(1)==120||(input.LA(1) >= 122 && input.LA(1) <= 123)||input.LA(1)==126||input.LA(1)==132||input.LA(1)==135||input.LA(1)==141||(input.LA(1) >= 143 && input.LA(1) <= 144)||(input.LA(1) >= 147 && input.LA(1) <= 148)||input.LA(1)==152||input.LA(1)==154||input.LA(1)==157||input.LA(1)==160||input.LA(1)==162||input.LA(1)==167||(input.LA(1) >= 171 && input.LA(1) <= 172)||input.LA(1)==183||input.LA(1)==190||input.LA(1)==194||input.LA(1)==196 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1077));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 302, also_keyword_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "also_keyword"


	public static class literal_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "literal"
	// /Users/jeremie/ANTLR/cs.g:1032:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
	public final csParser.literal_return literal() throws RecognitionException {
		csParser.literal_return retval = new csParser.literal_return();
		retval.start = input.LT(1);
		int literal_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1078=null;

		CommonTree set1078_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1032:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1078=input.LT(1);
			if ( input.LA(1)==Character_literal||input.LA(1)==FALSE||input.LA(1)==Hex_number||(input.LA(1) >= NULL && input.LA(1) <= NUMBER)||input.LA(1)==Real_literal||input.LA(1)==STRINGLITERAL||input.LA(1)==TRUE||input.LA(1)==Verbatim_string_literal ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1078));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 303, literal_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "literal"


	public static class assignment_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assignment_list"
	// /Users/jeremie/ANTLR/cs.g:1241:1: assignment_list : ( assignment ';' )+ ;
	public final csParser.assignment_list_return assignment_list() throws RecognitionException {
		csParser.assignment_list_return retval = new csParser.assignment_list_return();
		retval.start = input.LT(1);
		int assignment_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1080=null;
		ParserRuleReturnScope assignment1079 =null;

		CommonTree char_literal1080_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1241:16: ( ( assignment ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1242:9: ( assignment ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1242:9: ( assignment ';' )+
			int cnt273=0;
			loop273:
			while (true) {
				int alt273=2;
				int LA273_0 = input.LA(1);
				if ( (LA273_0==Character_literal||LA273_0==FALSE||(LA273_0 >= Hex_number && LA273_0 <= IDENTIFIER)||(LA273_0 >= MINUS && LA273_0 <= NUMBER)||LA273_0==Real_literal||LA273_0==STRINGLITERAL||LA273_0==TRUE||LA273_0==Verbatim_string_literal||LA273_0==61||LA273_0==66||(LA273_0 >= 68 && LA273_0 <= 69)||(LA273_0 >= 71 && LA273_0 <= 72)||LA273_0==75||LA273_0==95||(LA273_0 >= 97 && LA273_0 <= 98)||(LA273_0 >= 100 && LA273_0 <= 103)||(LA273_0 >= 105 && LA273_0 <= 106)||(LA273_0 >= 109 && LA273_0 <= 110)||(LA273_0 >= 114 && LA273_0 <= 117)||(LA273_0 >= 119 && LA273_0 <= 120)||LA273_0==122||LA273_0==126||LA273_0==129||LA273_0==132||LA273_0==135||LA273_0==138||LA273_0==141||(LA273_0 >= 143 && LA273_0 <= 144)||(LA273_0 >= 146 && LA273_0 <= 148)||(LA273_0 >= 150 && LA273_0 <= 152)||LA273_0==154||LA273_0==157||LA273_0==160||LA273_0==162||LA273_0==167||LA273_0==169||(LA273_0 >= 171 && LA273_0 <= 174)||LA273_0==177||LA273_0==180||(LA273_0 >= 183 && LA273_0 <= 187)||(LA273_0 >= 189 && LA273_0 <= 190)||LA273_0==194||LA273_0==196||LA273_0==202) ) {
					alt273=1;
				}

				switch (alt273) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1242:10: assignment ';'
					{
					pushFollow(FOLLOW_assignment_in_assignment_list16701);
					assignment1079=assignment();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment1079.getTree());

					char_literal1080=(Token)match(input,SEMI,FOLLOW_SEMI_in_assignment_list16703); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1080_tree = (CommonTree)adaptor.create(char_literal1080);
					adaptor.addChild(root_0, char_literal1080_tree);
					}

					}
					break;

				default :
					if ( cnt273 >= 1 ) break loop273;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(273, input);
					throw eee;
				}
				cnt273++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 304, assignment_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "assignment_list"


	public static class field_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "field_declarations"
	// /Users/jeremie/ANTLR/cs.g:1243:1: field_declarations : ( ( attributes )? ( modifiers )? type field_declaration )+ ;
	public final csParser.field_declarations_return field_declarations() throws RecognitionException {
		csParser.field_declarations_return retval = new csParser.field_declarations_return();
		retval.start = input.LT(1);
		int field_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes1081 =null;
		ParserRuleReturnScope modifiers1082 =null;
		ParserRuleReturnScope type1083 =null;
		ParserRuleReturnScope field_declaration1084 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1243:19: ( ( ( attributes )? ( modifiers )? type field_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1244:9: ( ( attributes )? ( modifiers )? type field_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1244:9: ( ( attributes )? ( modifiers )? type field_declaration )+
			int cnt276=0;
			loop276:
			while (true) {
				int alt276=2;
				int LA276_0 = input.LA(1);
				if ( (LA276_0==IDENTIFIER||LA276_0==91||(LA276_0 >= 95 && LA276_0 <= 98)||(LA276_0 >= 100 && LA276_0 <= 101)||LA276_0==103||(LA276_0 >= 105 && LA276_0 <= 106)||LA276_0==109||LA276_0==114||LA276_0==117||(LA276_0 >= 119 && LA276_0 <= 120)||LA276_0==122||(LA276_0 >= 125 && LA276_0 <= 126)||LA276_0==129||LA276_0==132||LA276_0==135||LA276_0==138||(LA276_0 >= 140 && LA276_0 <= 141)||(LA276_0 >= 143 && LA276_0 <= 144)||(LA276_0 >= 146 && LA276_0 <= 148)||(LA276_0 >= 150 && LA276_0 <= 152)||LA276_0==154||(LA276_0 >= 156 && LA276_0 <= 157)||(LA276_0 >= 160 && LA276_0 <= 165)||LA276_0==167||(LA276_0 >= 169 && LA276_0 <= 173)||(LA276_0 >= 176 && LA276_0 <= 177)||LA276_0==183||(LA276_0 >= 185 && LA276_0 <= 186)||(LA276_0 >= 188 && LA276_0 <= 194)||LA276_0==196) ) {
					alt276=1;
				}

				switch (alt276) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1244:10: ( attributes )? ( modifiers )? type field_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1244:10: ( attributes )?
					int alt274=2;
					int LA274_0 = input.LA(1);
					if ( (LA274_0==91) ) {
						alt274=1;
					}
					switch (alt274) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1244:10: attributes
							{
							pushFollow(FOLLOW_attributes_in_field_declarations16721);
							attributes1081=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1081.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1244:24: ( modifiers )?
					int alt275=2;
					int LA275_0 = input.LA(1);
					if ( (LA275_0==96||LA275_0==125||LA275_0==140||LA275_0==150||LA275_0==156||LA275_0==161||(LA275_0 >= 163 && LA275_0 <= 165)||LA275_0==170||LA275_0==176||LA275_0==188||LA275_0==191||LA275_0==193) ) {
						alt275=1;
					}
					switch (alt275) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1244:24: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_field_declarations16726);
							modifiers1082=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1082.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_type_in_field_declarations16731);
					type1083=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1083.getTree());

					pushFollow(FOLLOW_field_declaration_in_field_declarations16735);
					field_declaration1084=field_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration1084.getTree());

					}
					break;

				default :
					if ( cnt276 >= 1 ) break loop276;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(276, input);
					throw eee;
				}
				cnt276++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 305, field_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "field_declarations"


	public static class property_declaration_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "property_declaration_list"
	// /Users/jeremie/ANTLR/cs.g:1245:1: property_declaration_list : ( ( attributes )? ( modifiers )? type property_declaration )+ ;
	public final csParser.property_declaration_list_return property_declaration_list() throws RecognitionException {
		csParser.property_declaration_list_return retval = new csParser.property_declaration_list_return();
		retval.start = input.LT(1);
		int property_declaration_list_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes1085 =null;
		ParserRuleReturnScope modifiers1086 =null;
		ParserRuleReturnScope type1087 =null;
		ParserRuleReturnScope property_declaration1088 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1245:26: ( ( ( attributes )? ( modifiers )? type property_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1246:9: ( ( attributes )? ( modifiers )? type property_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1246:9: ( ( attributes )? ( modifiers )? type property_declaration )+
			int cnt279=0;
			loop279:
			while (true) {
				int alt279=2;
				int LA279_0 = input.LA(1);
				if ( (LA279_0==IDENTIFIER||LA279_0==91||(LA279_0 >= 95 && LA279_0 <= 98)||(LA279_0 >= 100 && LA279_0 <= 101)||LA279_0==103||(LA279_0 >= 105 && LA279_0 <= 106)||LA279_0==109||LA279_0==114||LA279_0==117||(LA279_0 >= 119 && LA279_0 <= 120)||LA279_0==122||(LA279_0 >= 125 && LA279_0 <= 126)||LA279_0==129||LA279_0==132||LA279_0==135||LA279_0==138||(LA279_0 >= 140 && LA279_0 <= 141)||(LA279_0 >= 143 && LA279_0 <= 144)||(LA279_0 >= 146 && LA279_0 <= 148)||(LA279_0 >= 150 && LA279_0 <= 152)||LA279_0==154||(LA279_0 >= 156 && LA279_0 <= 157)||(LA279_0 >= 160 && LA279_0 <= 165)||LA279_0==167||(LA279_0 >= 169 && LA279_0 <= 173)||(LA279_0 >= 176 && LA279_0 <= 177)||LA279_0==183||(LA279_0 >= 185 && LA279_0 <= 186)||(LA279_0 >= 188 && LA279_0 <= 194)||LA279_0==196) ) {
					alt279=1;
				}

				switch (alt279) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1246:10: ( attributes )? ( modifiers )? type property_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1246:10: ( attributes )?
					int alt277=2;
					int LA277_0 = input.LA(1);
					if ( (LA277_0==91) ) {
						alt277=1;
					}
					switch (alt277) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1246:10: attributes
							{
							pushFollow(FOLLOW_attributes_in_property_declaration_list16753);
							attributes1085=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1085.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1246:24: ( modifiers )?
					int alt278=2;
					int LA278_0 = input.LA(1);
					if ( (LA278_0==96||LA278_0==125||LA278_0==140||LA278_0==150||LA278_0==156||LA278_0==161||(LA278_0 >= 163 && LA278_0 <= 165)||LA278_0==170||LA278_0==176||LA278_0==188||LA278_0==191||LA278_0==193) ) {
						alt278=1;
					}
					switch (alt278) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1246:24: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_property_declaration_list16758);
							modifiers1086=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1086.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_type_in_property_declaration_list16763);
					type1087=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1087.getTree());

					pushFollow(FOLLOW_property_declaration_in_property_declaration_list16767);
					property_declaration1088=property_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration1088.getTree());

					}
					break;

				default :
					if ( cnt279 >= 1 ) break loop279;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(279, input);
					throw eee;
				}
				cnt279++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 306, property_declaration_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "property_declaration_list"


	public static class constant_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declarations"
	// /Users/jeremie/ANTLR/cs.g:1247:1: constant_declarations : ( constant_declaration )+ ;
	public final csParser.constant_declarations_return constant_declarations() throws RecognitionException {
		csParser.constant_declarations_return retval = new csParser.constant_declarations_return();
		retval.start = input.LT(1);
		int constant_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope constant_declaration1089 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1247:22: ( ( constant_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1248:9: ( constant_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1248:9: ( constant_declaration )+
			int cnt280=0;
			loop280:
			while (true) {
				int alt280=2;
				int LA280_0 = input.LA(1);
				if ( (LA280_0==112) ) {
					alt280=1;
				}

				switch (alt280) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1248:9: constant_declaration
					{
					pushFollow(FOLLOW_constant_declaration_in_constant_declarations16784);
					constant_declaration1089=constant_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration1089.getTree());

					}
					break;

				default :
					if ( cnt280 >= 1 ) break loop280;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(280, input);
					throw eee;
				}
				cnt280++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 307, constant_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declarations"


	public static class literals_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "literals"
	// /Users/jeremie/ANTLR/cs.g:1249:1: literals : ( literal )+ ;
	public final csParser.literals_return literals() throws RecognitionException {
		csParser.literals_return retval = new csParser.literals_return();
		retval.start = input.LT(1);
		int literals_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope literal1090 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1249:9: ( ( literal )+ )
			// /Users/jeremie/ANTLR/cs.g:1250:9: ( literal )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1250:9: ( literal )+
			int cnt281=0;
			loop281:
			while (true) {
				int alt281=2;
				int LA281_0 = input.LA(1);
				if ( (LA281_0==Character_literal||LA281_0==FALSE||LA281_0==Hex_number||(LA281_0 >= NULL && LA281_0 <= NUMBER)||LA281_0==Real_literal||LA281_0==STRINGLITERAL||LA281_0==TRUE||LA281_0==Verbatim_string_literal) ) {
					alt281=1;
				}

				switch (alt281) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1250:9: literal
					{
					pushFollow(FOLLOW_literal_in_literals16799);
					literal1090=literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal1090.getTree());

					}
					break;

				default :
					if ( cnt281 >= 1 ) break loop281;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(281, input);
					throw eee;
				}
				cnt281++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 308, literals_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "literals"


	public static class delegate_declaration_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_declaration_list"
	// /Users/jeremie/ANTLR/cs.g:1251:1: delegate_declaration_list : ( ( attributes )? ( modifiers )? delegate_declaration )+ ;
	public final csParser.delegate_declaration_list_return delegate_declaration_list() throws RecognitionException {
		csParser.delegate_declaration_list_return retval = new csParser.delegate_declaration_list_return();
		retval.start = input.LT(1);
		int delegate_declaration_list_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes1091 =null;
		ParserRuleReturnScope modifiers1092 =null;
		ParserRuleReturnScope delegate_declaration1093 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1251:26: ( ( ( attributes )? ( modifiers )? delegate_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1252:9: ( ( attributes )? ( modifiers )? delegate_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1252:9: ( ( attributes )? ( modifiers )? delegate_declaration )+
			int cnt284=0;
			loop284:
			while (true) {
				int alt284=2;
				int LA284_0 = input.LA(1);
				if ( (LA284_0==91||LA284_0==96||LA284_0==116||LA284_0==125||LA284_0==140||LA284_0==150||LA284_0==156||LA284_0==161||(LA284_0 >= 163 && LA284_0 <= 165)||LA284_0==170||LA284_0==176||LA284_0==188||LA284_0==191||LA284_0==193) ) {
					alt284=1;
				}

				switch (alt284) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1252:10: ( attributes )? ( modifiers )? delegate_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1252:10: ( attributes )?
					int alt282=2;
					int LA282_0 = input.LA(1);
					if ( (LA282_0==91) ) {
						alt282=1;
					}
					switch (alt282) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1252:10: attributes
							{
							pushFollow(FOLLOW_attributes_in_delegate_declaration_list16816);
							attributes1091=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1091.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1252:24: ( modifiers )?
					int alt283=2;
					int LA283_0 = input.LA(1);
					if ( (LA283_0==96||LA283_0==125||LA283_0==140||LA283_0==150||LA283_0==156||LA283_0==161||(LA283_0 >= 163 && LA283_0 <= 165)||LA283_0==170||LA283_0==176||LA283_0==188||LA283_0==191||LA283_0==193) ) {
						alt283=1;
					}
					switch (alt283) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1252:24: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_delegate_declaration_list16821);
							modifiers1092=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1092.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_delegate_declaration_in_delegate_declaration_list16826);
					delegate_declaration1093=delegate_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration1093.getTree());

					}
					break;

				default :
					if ( cnt284 >= 1 ) break loop284;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(284, input);
					throw eee;
				}
				cnt284++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 309, delegate_declaration_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_declaration_list"


	public static class local_variable_declaration_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declaration_list"
	// /Users/jeremie/ANTLR/cs.g:1253:1: local_variable_declaration_list : ( local_variable_declaration ';' )+ ;
	public final csParser.local_variable_declaration_list_return local_variable_declaration_list() throws RecognitionException {
		csParser.local_variable_declaration_list_return retval = new csParser.local_variable_declaration_list_return();
		retval.start = input.LT(1);
		int local_variable_declaration_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1095=null;
		ParserRuleReturnScope local_variable_declaration1094 =null;

		CommonTree char_literal1095_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1253:32: ( ( local_variable_declaration ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1254:9: ( local_variable_declaration ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1254:9: ( local_variable_declaration ';' )+
			int cnt285=0;
			loop285:
			while (true) {
				int alt285=2;
				int LA285_0 = input.LA(1);
				if ( (LA285_0==IDENTIFIER||LA285_0==95||(LA285_0 >= 97 && LA285_0 <= 98)||(LA285_0 >= 100 && LA285_0 <= 101)||LA285_0==103||(LA285_0 >= 105 && LA285_0 <= 106)||LA285_0==109||LA285_0==114||LA285_0==117||(LA285_0 >= 119 && LA285_0 <= 120)||LA285_0==122||LA285_0==126||LA285_0==129||LA285_0==132||LA285_0==135||LA285_0==138||LA285_0==141||(LA285_0 >= 143 && LA285_0 <= 144)||(LA285_0 >= 146 && LA285_0 <= 148)||(LA285_0 >= 151 && LA285_0 <= 152)||LA285_0==154||LA285_0==157||LA285_0==160||LA285_0==162||LA285_0==167||LA285_0==169||(LA285_0 >= 171 && LA285_0 <= 173)||LA285_0==177||LA285_0==183||(LA285_0 >= 185 && LA285_0 <= 186)||(LA285_0 >= 189 && LA285_0 <= 190)||LA285_0==192||LA285_0==194||LA285_0==196) ) {
					alt285=1;
				}

				switch (alt285) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1254:10: local_variable_declaration ';'
					{
					pushFollow(FOLLOW_local_variable_declaration_in_local_variable_declaration_list16844);
					local_variable_declaration1094=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration1094.getTree());

					char_literal1095=(Token)match(input,SEMI,FOLLOW_SEMI_in_local_variable_declaration_list16846); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1095_tree = (CommonTree)adaptor.create(char_literal1095);
					adaptor.addChild(root_0, char_literal1095_tree);
					}

					}
					break;

				default :
					if ( cnt285 >= 1 ) break loop285;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(285, input);
					throw eee;
				}
				cnt285++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 310, local_variable_declaration_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declaration_list"


	public static class local_variable_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:1255:1: local_variable_initializer_list : ( local_variable_initializer ';' )+ ;
	public final csParser.local_variable_initializer_list_return local_variable_initializer_list() throws RecognitionException {
		csParser.local_variable_initializer_list_return retval = new csParser.local_variable_initializer_list_return();
		retval.start = input.LT(1);
		int local_variable_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1097=null;
		ParserRuleReturnScope local_variable_initializer1096 =null;

		CommonTree char_literal1097_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1255:32: ( ( local_variable_initializer ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1256:9: ( local_variable_initializer ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1256:9: ( local_variable_initializer ';' )+
			int cnt286=0;
			loop286:
			while (true) {
				int alt286=2;
				int LA286_0 = input.LA(1);
				if ( (LA286_0==Character_literal||LA286_0==FALSE||(LA286_0 >= Hex_number && LA286_0 <= IDENTIFIER)||(LA286_0 >= MINUS && LA286_0 <= NUMBER)||LA286_0==Real_literal||LA286_0==STRINGLITERAL||LA286_0==TRUE||LA286_0==Verbatim_string_literal||LA286_0==61||LA286_0==66||(LA286_0 >= 68 && LA286_0 <= 69)||(LA286_0 >= 71 && LA286_0 <= 72)||LA286_0==75||LA286_0==95||(LA286_0 >= 97 && LA286_0 <= 98)||(LA286_0 >= 100 && LA286_0 <= 103)||(LA286_0 >= 105 && LA286_0 <= 106)||(LA286_0 >= 109 && LA286_0 <= 110)||(LA286_0 >= 114 && LA286_0 <= 117)||(LA286_0 >= 119 && LA286_0 <= 120)||LA286_0==122||LA286_0==126||LA286_0==129||LA286_0==132||LA286_0==135||LA286_0==138||LA286_0==141||(LA286_0 >= 143 && LA286_0 <= 144)||(LA286_0 >= 146 && LA286_0 <= 148)||(LA286_0 >= 150 && LA286_0 <= 152)||LA286_0==154||LA286_0==157||LA286_0==160||LA286_0==162||LA286_0==167||LA286_0==169||(LA286_0 >= 171 && LA286_0 <= 175)||LA286_0==177||LA286_0==180||(LA286_0 >= 183 && LA286_0 <= 187)||(LA286_0 >= 189 && LA286_0 <= 190)||LA286_0==194||(LA286_0 >= 196 && LA286_0 <= 197)||LA286_0==202) ) {
					alt286=1;
				}

				switch (alt286) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1256:10: local_variable_initializer ';'
					{
					pushFollow(FOLLOW_local_variable_initializer_in_local_variable_initializer_list16864);
					local_variable_initializer1096=local_variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer1096.getTree());

					char_literal1097=(Token)match(input,SEMI,FOLLOW_SEMI_in_local_variable_initializer_list16866); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1097_tree = (CommonTree)adaptor.create(char_literal1097);
					adaptor.addChild(root_0, char_literal1097_tree);
					}

					}
					break;

				default :
					if ( cnt286 >= 1 ) break loop286;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(286, input);
					throw eee;
				}
				cnt286++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 311, local_variable_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_initializer_list"


	public static class expression_list_test_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression_list_test"
	// /Users/jeremie/ANTLR/cs.g:1257:1: expression_list_test : ( expression ';' )+ ;
	public final csParser.expression_list_test_return expression_list_test() throws RecognitionException {
		csParser.expression_list_test_return retval = new csParser.expression_list_test_return();
		retval.start = input.LT(1);
		int expression_list_test_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1099=null;
		ParserRuleReturnScope expression1098 =null;

		CommonTree char_literal1099_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1257:21: ( ( expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1258:9: ( expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1258:9: ( expression ';' )+
			int cnt287=0;
			loop287:
			while (true) {
				int alt287=2;
				int LA287_0 = input.LA(1);
				if ( (LA287_0==Character_literal||LA287_0==FALSE||(LA287_0 >= Hex_number && LA287_0 <= IDENTIFIER)||(LA287_0 >= MINUS && LA287_0 <= NUMBER)||LA287_0==Real_literal||LA287_0==STRINGLITERAL||LA287_0==TRUE||LA287_0==Verbatim_string_literal||LA287_0==61||LA287_0==66||(LA287_0 >= 68 && LA287_0 <= 69)||(LA287_0 >= 71 && LA287_0 <= 72)||LA287_0==75||LA287_0==95||(LA287_0 >= 97 && LA287_0 <= 98)||(LA287_0 >= 100 && LA287_0 <= 103)||(LA287_0 >= 105 && LA287_0 <= 106)||(LA287_0 >= 109 && LA287_0 <= 110)||(LA287_0 >= 114 && LA287_0 <= 117)||(LA287_0 >= 119 && LA287_0 <= 120)||LA287_0==122||LA287_0==126||LA287_0==129||LA287_0==132||LA287_0==135||LA287_0==138||LA287_0==141||(LA287_0 >= 143 && LA287_0 <= 144)||(LA287_0 >= 146 && LA287_0 <= 148)||(LA287_0 >= 150 && LA287_0 <= 152)||LA287_0==154||LA287_0==157||LA287_0==160||LA287_0==162||LA287_0==167||LA287_0==169||(LA287_0 >= 171 && LA287_0 <= 174)||LA287_0==177||LA287_0==180||(LA287_0 >= 183 && LA287_0 <= 187)||(LA287_0 >= 189 && LA287_0 <= 190)||LA287_0==194||LA287_0==196||LA287_0==202) ) {
					alt287=1;
				}

				switch (alt287) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1258:10: expression ';'
					{
					pushFollow(FOLLOW_expression_in_expression_list_test16884);
					expression1098=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1098.getTree());

					char_literal1099=(Token)match(input,SEMI,FOLLOW_SEMI_in_expression_list_test16886); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1099_tree = (CommonTree)adaptor.create(char_literal1099);
					adaptor.addChild(root_0, char_literal1099_tree);
					}

					}
					break;

				default :
					if ( cnt287 >= 1 ) break loop287;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(287, input);
					throw eee;
				}
				cnt287++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 312, expression_list_test_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression_list_test"


	public static class unary_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unary_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1259:1: unary_expression_list : ( unary_expression ';' )+ ;
	public final csParser.unary_expression_list_return unary_expression_list() throws RecognitionException {
		csParser.unary_expression_list_return retval = new csParser.unary_expression_list_return();
		retval.start = input.LT(1);
		int unary_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1101=null;
		ParserRuleReturnScope unary_expression1100 =null;

		CommonTree char_literal1101_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1259:22: ( ( unary_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1260:9: ( unary_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1260:9: ( unary_expression ';' )+
			int cnt288=0;
			loop288:
			while (true) {
				int alt288=2;
				int LA288_0 = input.LA(1);
				if ( (LA288_0==Character_literal||LA288_0==FALSE||(LA288_0 >= Hex_number && LA288_0 <= IDENTIFIER)||(LA288_0 >= MINUS && LA288_0 <= NUMBER)||LA288_0==Real_literal||LA288_0==STRINGLITERAL||LA288_0==TRUE||LA288_0==Verbatim_string_literal||LA288_0==61||LA288_0==66||(LA288_0 >= 68 && LA288_0 <= 69)||(LA288_0 >= 71 && LA288_0 <= 72)||LA288_0==75||LA288_0==95||(LA288_0 >= 97 && LA288_0 <= 98)||(LA288_0 >= 100 && LA288_0 <= 103)||(LA288_0 >= 105 && LA288_0 <= 106)||(LA288_0 >= 109 && LA288_0 <= 110)||(LA288_0 >= 114 && LA288_0 <= 117)||(LA288_0 >= 119 && LA288_0 <= 120)||LA288_0==122||LA288_0==126||LA288_0==129||LA288_0==132||LA288_0==135||LA288_0==138||LA288_0==141||(LA288_0 >= 143 && LA288_0 <= 144)||(LA288_0 >= 146 && LA288_0 <= 148)||(LA288_0 >= 150 && LA288_0 <= 152)||LA288_0==154||LA288_0==157||LA288_0==160||LA288_0==162||LA288_0==167||LA288_0==169||(LA288_0 >= 171 && LA288_0 <= 174)||LA288_0==177||LA288_0==180||(LA288_0 >= 183 && LA288_0 <= 187)||(LA288_0 >= 189 && LA288_0 <= 190)||LA288_0==194||LA288_0==196||LA288_0==202) ) {
					alt288=1;
				}

				switch (alt288) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1260:10: unary_expression ';'
					{
					pushFollow(FOLLOW_unary_expression_in_unary_expression_list16904);
					unary_expression1100=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression1100.getTree());

					char_literal1101=(Token)match(input,SEMI,FOLLOW_SEMI_in_unary_expression_list16906); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1101_tree = (CommonTree)adaptor.create(char_literal1101);
					adaptor.addChild(root_0, char_literal1101_tree);
					}

					}
					break;

				default :
					if ( cnt288 >= 1 ) break loop288;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(288, input);
					throw eee;
				}
				cnt288++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 313, unary_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unary_expression_list"


	public static class invocation_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1261:1: invocation_expression_list : ( invocation_expression ';' )+ ;
	public final csParser.invocation_expression_list_return invocation_expression_list() throws RecognitionException {
		csParser.invocation_expression_list_return retval = new csParser.invocation_expression_list_return();
		retval.start = input.LT(1);
		int invocation_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1103=null;
		ParserRuleReturnScope invocation_expression1102 =null;

		CommonTree char_literal1103_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1261:27: ( ( invocation_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1262:9: ( invocation_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1262:9: ( invocation_expression ';' )+
			int cnt289=0;
			loop289:
			while (true) {
				int alt289=2;
				int LA289_0 = input.LA(1);
				if ( (LA289_0==IDENTIFIER||LA289_0==95||(LA289_0 >= 97 && LA289_0 <= 98)||(LA289_0 >= 100 && LA289_0 <= 103)||(LA289_0 >= 105 && LA289_0 <= 106)||LA289_0==109||LA289_0==114||LA289_0==117||(LA289_0 >= 119 && LA289_0 <= 120)||LA289_0==122||LA289_0==126||LA289_0==129||LA289_0==132||LA289_0==135||LA289_0==138||LA289_0==141||(LA289_0 >= 143 && LA289_0 <= 144)||(LA289_0 >= 146 && LA289_0 <= 148)||(LA289_0 >= 151 && LA289_0 <= 152)||LA289_0==154||LA289_0==157||LA289_0==160||LA289_0==162||LA289_0==167||LA289_0==169||(LA289_0 >= 171 && LA289_0 <= 173)||LA289_0==177||LA289_0==180||(LA289_0 >= 183 && LA289_0 <= 186)||(LA289_0 >= 189 && LA289_0 <= 190)||LA289_0==194||LA289_0==196) ) {
					alt289=1;
				}

				switch (alt289) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1262:10: invocation_expression ';'
					{
					pushFollow(FOLLOW_invocation_expression_in_invocation_expression_list16924);
					invocation_expression1102=invocation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_expression1102.getTree());

					char_literal1103=(Token)match(input,SEMI,FOLLOW_SEMI_in_invocation_expression_list16926); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1103_tree = (CommonTree)adaptor.create(char_literal1103);
					adaptor.addChild(root_0, char_literal1103_tree);
					}

					}
					break;

				default :
					if ( cnt289 >= 1 ) break loop289;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(289, input);
					throw eee;
				}
				cnt289++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 314, invocation_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_expression_list"


	public static class primary_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1263:1: primary_expression_list : ( primary_expression ';' )+ ;
	public final csParser.primary_expression_list_return primary_expression_list() throws RecognitionException {
		csParser.primary_expression_list_return retval = new csParser.primary_expression_list_return();
		retval.start = input.LT(1);
		int primary_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1105=null;
		ParserRuleReturnScope primary_expression1104 =null;

		CommonTree char_literal1105_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1263:24: ( ( primary_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1264:9: ( primary_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1264:9: ( primary_expression ';' )+
			int cnt290=0;
			loop290:
			while (true) {
				int alt290=2;
				int LA290_0 = input.LA(1);
				if ( (LA290_0==Character_literal||LA290_0==FALSE||(LA290_0 >= Hex_number && LA290_0 <= IDENTIFIER)||(LA290_0 >= NULL && LA290_0 <= NUMBER)||LA290_0==Real_literal||LA290_0==STRINGLITERAL||LA290_0==TRUE||LA290_0==Verbatim_string_literal||LA290_0==68||LA290_0==95||(LA290_0 >= 97 && LA290_0 <= 98)||(LA290_0 >= 100 && LA290_0 <= 103)||(LA290_0 >= 105 && LA290_0 <= 106)||(LA290_0 >= 109 && LA290_0 <= 110)||(LA290_0 >= 114 && LA290_0 <= 117)||(LA290_0 >= 119 && LA290_0 <= 120)||LA290_0==122||LA290_0==126||LA290_0==129||LA290_0==132||LA290_0==135||LA290_0==138||LA290_0==141||(LA290_0 >= 143 && LA290_0 <= 144)||(LA290_0 >= 146 && LA290_0 <= 148)||(LA290_0 >= 150 && LA290_0 <= 152)||LA290_0==154||LA290_0==157||LA290_0==160||LA290_0==162||LA290_0==167||LA290_0==169||(LA290_0 >= 171 && LA290_0 <= 174)||LA290_0==177||LA290_0==180||(LA290_0 >= 183 && LA290_0 <= 187)||(LA290_0 >= 189 && LA290_0 <= 190)||LA290_0==194||LA290_0==196) ) {
					alt290=1;
				}

				switch (alt290) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1264:10: primary_expression ';'
					{
					pushFollow(FOLLOW_primary_expression_in_primary_expression_list16944);
					primary_expression1104=primary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression1104.getTree());

					char_literal1105=(Token)match(input,SEMI,FOLLOW_SEMI_in_primary_expression_list16946); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1105_tree = (CommonTree)adaptor.create(char_literal1105);
					adaptor.addChild(root_0, char_literal1105_tree);
					}

					}
					break;

				default :
					if ( cnt290 >= 1 ) break loop290;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(290, input);
					throw eee;
				}
				cnt290++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 315, primary_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression_list"


	public static class non_assignment_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_assignment_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1265:1: non_assignment_expression_list : ( non_assignment_expression ';' )+ ;
	public final csParser.non_assignment_expression_list_return non_assignment_expression_list() throws RecognitionException {
		csParser.non_assignment_expression_list_return retval = new csParser.non_assignment_expression_list_return();
		retval.start = input.LT(1);
		int non_assignment_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1107=null;
		ParserRuleReturnScope non_assignment_expression1106 =null;

		CommonTree char_literal1107_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1265:31: ( ( non_assignment_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1266:9: ( non_assignment_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1266:9: ( non_assignment_expression ';' )+
			int cnt291=0;
			loop291:
			while (true) {
				int alt291=2;
				int LA291_0 = input.LA(1);
				if ( (LA291_0==Character_literal||LA291_0==FALSE||(LA291_0 >= Hex_number && LA291_0 <= IDENTIFIER)||(LA291_0 >= MINUS && LA291_0 <= NUMBER)||LA291_0==Real_literal||LA291_0==STRINGLITERAL||LA291_0==TRUE||LA291_0==Verbatim_string_literal||LA291_0==61||LA291_0==66||(LA291_0 >= 68 && LA291_0 <= 69)||(LA291_0 >= 71 && LA291_0 <= 72)||LA291_0==75||LA291_0==95||(LA291_0 >= 97 && LA291_0 <= 98)||(LA291_0 >= 100 && LA291_0 <= 103)||(LA291_0 >= 105 && LA291_0 <= 106)||(LA291_0 >= 109 && LA291_0 <= 110)||(LA291_0 >= 114 && LA291_0 <= 117)||(LA291_0 >= 119 && LA291_0 <= 120)||LA291_0==122||LA291_0==126||LA291_0==129||LA291_0==132||LA291_0==135||LA291_0==138||LA291_0==141||(LA291_0 >= 143 && LA291_0 <= 144)||(LA291_0 >= 146 && LA291_0 <= 148)||(LA291_0 >= 150 && LA291_0 <= 152)||LA291_0==154||LA291_0==157||LA291_0==160||LA291_0==162||LA291_0==167||LA291_0==169||(LA291_0 >= 171 && LA291_0 <= 174)||LA291_0==177||LA291_0==180||(LA291_0 >= 183 && LA291_0 <= 187)||(LA291_0 >= 189 && LA291_0 <= 190)||LA291_0==194||LA291_0==196||LA291_0==202) ) {
					alt291=1;
				}

				switch (alt291) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1266:10: non_assignment_expression ';'
					{
					pushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression_list16964);
					non_assignment_expression1106=non_assignment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression1106.getTree());

					char_literal1107=(Token)match(input,SEMI,FOLLOW_SEMI_in_non_assignment_expression_list16966); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1107_tree = (CommonTree)adaptor.create(char_literal1107);
					adaptor.addChild(root_0, char_literal1107_tree);
					}

					}
					break;

				default :
					if ( cnt291 >= 1 ) break loop291;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(291, input);
					throw eee;
				}
				cnt291++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 316, non_assignment_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_assignment_expression_list"


	public static class method_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_declarations"
	// /Users/jeremie/ANTLR/cs.g:1267:1: method_declarations : ( ( modifiers )? ( 'void' | type ) method_declaration )+ ;
	public final csParser.method_declarations_return method_declarations() throws RecognitionException {
		csParser.method_declarations_return retval = new csParser.method_declarations_return();
		retval.start = input.LT(1);
		int method_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1109=null;
		ParserRuleReturnScope modifiers1108 =null;
		ParserRuleReturnScope type1110 =null;
		ParserRuleReturnScope method_declaration1111 =null;

		CommonTree string_literal1109_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1267:20: ( ( ( modifiers )? ( 'void' | type ) method_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1268:9: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1268:9: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			int cnt294=0;
			loop294:
			while (true) {
				int alt294=2;
				int LA294_0 = input.LA(1);
				if ( (LA294_0==IDENTIFIER||(LA294_0 >= 95 && LA294_0 <= 98)||(LA294_0 >= 100 && LA294_0 <= 101)||LA294_0==103||(LA294_0 >= 105 && LA294_0 <= 106)||LA294_0==109||LA294_0==114||LA294_0==117||(LA294_0 >= 119 && LA294_0 <= 120)||LA294_0==122||(LA294_0 >= 125 && LA294_0 <= 126)||LA294_0==129||LA294_0==132||LA294_0==135||LA294_0==138||(LA294_0 >= 140 && LA294_0 <= 141)||(LA294_0 >= 143 && LA294_0 <= 144)||(LA294_0 >= 146 && LA294_0 <= 148)||(LA294_0 >= 150 && LA294_0 <= 152)||LA294_0==154||(LA294_0 >= 156 && LA294_0 <= 157)||(LA294_0 >= 160 && LA294_0 <= 165)||LA294_0==167||(LA294_0 >= 169 && LA294_0 <= 173)||(LA294_0 >= 176 && LA294_0 <= 177)||LA294_0==183||(LA294_0 >= 185 && LA294_0 <= 186)||(LA294_0 >= 188 && LA294_0 <= 194)||LA294_0==196) ) {
					alt294=1;
				}

				switch (alt294) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1268:10: ( modifiers )? ( 'void' | type ) method_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1268:10: ( modifiers )?
					int alt292=2;
					int LA292_0 = input.LA(1);
					if ( (LA292_0==96||LA292_0==125||LA292_0==140||LA292_0==150||LA292_0==156||LA292_0==161||(LA292_0 >= 163 && LA292_0 <= 165)||LA292_0==170||LA292_0==176||LA292_0==188||LA292_0==191||LA292_0==193) ) {
						alt292=1;
					}
					switch (alt292) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1268:10: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_method_declarations16984);
							modifiers1108=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1108.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1268:21: ( 'void' | type )
					int alt293=2;
					int LA293_0 = input.LA(1);
					if ( (LA293_0==192) ) {
						int LA293_1 = input.LA(2);
						if ( (LA293_1==Character_literal||LA293_1==FALSE||(LA293_1 >= Hex_number && LA293_1 <= IDENTIFIER)||(LA293_1 >= NULL && LA293_1 <= NUMBER)||LA293_1==Real_literal||LA293_1==STRINGLITERAL||LA293_1==TRUE||LA293_1==Verbatim_string_literal||LA293_1==95||(LA293_1 >= 97 && LA293_1 <= 98)||(LA293_1 >= 100 && LA293_1 <= 101)||LA293_1==103||(LA293_1 >= 105 && LA293_1 <= 106)||LA293_1==109||LA293_1==114||LA293_1==117||(LA293_1 >= 119 && LA293_1 <= 120)||LA293_1==122||LA293_1==126||LA293_1==129||LA293_1==132||LA293_1==135||LA293_1==138||LA293_1==141||(LA293_1 >= 143 && LA293_1 <= 144)||(LA293_1 >= 146 && LA293_1 <= 148)||(LA293_1 >= 151 && LA293_1 <= 152)||LA293_1==154||LA293_1==157||LA293_1==160||LA293_1==162||LA293_1==167||LA293_1==169||(LA293_1 >= 171 && LA293_1 <= 173)||LA293_1==177||LA293_1==183||(LA293_1 >= 185 && LA293_1 <= 186)||(LA293_1 >= 189 && LA293_1 <= 190)||LA293_1==194||LA293_1==196) ) {
							alt293=1;
						}
						else if ( (LA293_1==69) ) {
							alt293=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 293, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA293_0==IDENTIFIER||LA293_0==95||(LA293_0 >= 97 && LA293_0 <= 98)||(LA293_0 >= 100 && LA293_0 <= 101)||LA293_0==103||(LA293_0 >= 105 && LA293_0 <= 106)||LA293_0==109||LA293_0==114||LA293_0==117||(LA293_0 >= 119 && LA293_0 <= 120)||LA293_0==122||LA293_0==126||LA293_0==129||LA293_0==132||LA293_0==135||LA293_0==138||LA293_0==141||(LA293_0 >= 143 && LA293_0 <= 144)||(LA293_0 >= 146 && LA293_0 <= 148)||(LA293_0 >= 151 && LA293_0 <= 152)||LA293_0==154||LA293_0==157||LA293_0==160||LA293_0==162||LA293_0==167||LA293_0==169||(LA293_0 >= 171 && LA293_0 <= 173)||LA293_0==177||LA293_0==183||(LA293_0 >= 185 && LA293_0 <= 186)||(LA293_0 >= 189 && LA293_0 <= 190)||LA293_0==194||LA293_0==196) ) {
						alt293=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 293, 0, input);
						throw nvae;
					}

					switch (alt293) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1268:22: 'void'
							{
							string_literal1109=(Token)match(input,192,FOLLOW_192_in_method_declarations16988); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal1109_tree = (CommonTree)adaptor.create(string_literal1109);
							adaptor.addChild(root_0, string_literal1109_tree);
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:1268:31: type
							{
							pushFollow(FOLLOW_type_in_method_declarations16992);
							type1110=type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type1110.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_method_declaration_in_method_declarations16995);
					method_declaration1111=method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration1111.getTree());

					}
					break;

				default :
					if ( cnt294 >= 1 ) break loop294;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(294, input);
					throw eee;
				}
				cnt294++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 317, method_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_declarations"

	// $ANTLR start synpred1_cs
	public final void synpred1_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:51:9: ( 'partial' )
		// /Users/jeremie/ANTLR/cs.g:51:10: 'partial'
		{
		match(input,159,FOLLOW_159_in_synpred1_cs384); if (state.failed) return;

		}

	}
	// $ANTLR end synpred1_cs

	// $ANTLR start synpred2_cs
	public final void synpred2_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:82:18: ( member_name '(' )
		// /Users/jeremie/ANTLR/cs.g:82:19: member_name '('
		{
		pushFollow(FOLLOW_member_name_in_synpred2_cs977);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,68,FOLLOW_68_in_synpred2_cs981); if (state.failed) return;

		}

	}
	// $ANTLR end synpred2_cs

	// $ANTLR start synpred3_cs
	public final void synpred3_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:83:22: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:83:23: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred3_cs1010);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,197,FOLLOW_197_in_synpred3_cs1014); if (state.failed) return;

		}

	}
	// $ANTLR end synpred3_cs

	// $ANTLR start synpred4_cs
	public final void synpred4_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:84:22: ( member_name '.' 'this' )
		// /Users/jeremie/ANTLR/cs.g:84:23: member_name '.' 'this'
		{
		pushFollow(FOLLOW_member_name_in_synpred4_cs1043);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,DOT,FOLLOW_DOT_in_synpred4_cs1047); if (state.failed) return;

		match(input,180,FOLLOW_180_in_synpred4_cs1051); if (state.failed) return;

		}

	}
	// $ANTLR end synpred4_cs

	// $ANTLR start synpred5_cs
	public final void synpred5_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:102:9: ( 'this' brackets )
		// /Users/jeremie/ANTLR/cs.g:102:10: 'this' brackets
		{
		match(input,180,FOLLOW_180_in_synpred5_cs1339); if (state.failed) return;

		pushFollow(FOLLOW_brackets_in_synpred5_cs1344);
		brackets();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred5_cs

	// $ANTLR start synpred6_cs
	public final void synpred6_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:103:11: ( 'base' brackets )
		// /Users/jeremie/ANTLR/cs.g:103:12: 'base' brackets
		{
		match(input,102,FOLLOW_102_in_synpred6_cs1371); if (state.failed) return;

		pushFollow(FOLLOW_brackets_in_synpred6_cs1375);
		brackets();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred6_cs

	// $ANTLR start synpred7_cs
	public final void synpred7_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:105:21: ( object_creation_expression ( '.' | '->' | '[' ) )
		// /Users/jeremie/ANTLR/cs.g:105:22: object_creation_expression ( '.' | '->' | '[' )
		{
		pushFollow(FOLLOW_object_creation_expression_in_synpred7_cs1425);
		object_creation_expression();
		state._fsp--;
		if (state.failed) return;

		if ( input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred7_cs

	// $ANTLR start synpred8_cs
	public final void synpred8_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:109:35: ( delegate_creation_expression )
		// /Users/jeremie/ANTLR/cs.g:109:36: delegate_creation_expression
		{
		pushFollow(FOLLOW_delegate_creation_expression_in_synpred8_cs1606);
		delegate_creation_expression();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred8_cs

	// $ANTLR start synpred9_cs
	public final void synpred9_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:121:11: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:121:12: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred9_cs1985);
		identifier();
		state._fsp--;
		if (state.failed) return;

		match(input,81,FOLLOW_81_in_synpred9_cs1990); if (state.failed) return;

		}

	}
	// $ANTLR end synpred9_cs

	// $ANTLR start synpred10_cs
	public final void synpred10_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:159:18: ( '(' type ')' )
		// /Users/jeremie/ANTLR/cs.g:159:19: '(' type ')'
		{
		match(input,68,FOLLOW_68_in_synpred10_cs2431); if (state.failed) return;

		pushFollow(FOLLOW_type_in_synpred10_cs2435);
		type();
		state._fsp--;
		if (state.failed) return;

		match(input,RPAREN,FOLLOW_RPAREN_in_synpred10_cs2439); if (state.failed) return;

		}

	}
	// $ANTLR end synpred10_cs

	// $ANTLR start synpred11_cs
	public final void synpred11_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:187:9: ( array_creation_expression )
		// /Users/jeremie/ANTLR/cs.g:187:10: array_creation_expression
		{
		pushFollow(FOLLOW_array_creation_expression_in_synpred11_cs3017);
		array_creation_expression();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred11_cs

	// $ANTLR start synpred12_cs
	public final void synpred12_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:196:46: ( arguments ( '[' | '.' | '->' ) )
		// /Users/jeremie/ANTLR/cs.g:196:47: arguments ( '[' | '.' | '->' )
		{
		pushFollow(FOLLOW_arguments_in_synpred12_cs3244);
		arguments();
		state._fsp--;
		if (state.failed) return;

		if ( input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred12_cs

	// $ANTLR start synpred13_cs
	public final void synpred13_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:267:27: ( unbound_type_name )
		// /Users/jeremie/ANTLR/cs.g:267:28: unbound_type_name
		{
		pushFollow(FOLLOW_unbound_type_name_in_synpred13_cs4271);
		unbound_type_name();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred13_cs

	// $ANTLR start synpred14_cs
	public final void synpred14_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:277:19: ( generic_dimension_specifier '.' )
		// /Users/jeremie/ANTLR/cs.g:277:20: generic_dimension_specifier '.'
		{
		pushFollow(FOLLOW_generic_dimension_specifier_in_synpred14_cs4434);
		generic_dimension_specifier();
		state._fsp--;
		if (state.failed) return;

		match(input,DOT,FOLLOW_DOT_in_synpred14_cs4438); if (state.failed) return;

		}

	}
	// $ANTLR end synpred14_cs

	// $ANTLR start synpred15_cs
	public final void synpred15_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:300:9: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:300:10: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred15_cs4661);
		identifier();
		state._fsp--;
		if (state.failed) return;

		match(input,81,FOLLOW_81_in_synpred15_cs4665); if (state.failed) return;

		}

	}
	// $ANTLR end synpred15_cs

	// $ANTLR start synpred16_cs
	public final void synpred16_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:308:11: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:308:12: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred16_cs4759);
		identifier();
		state._fsp--;
		if (state.failed) return;

		match(input,81,FOLLOW_81_in_synpred16_cs4764); if (state.failed) return;

		}

	}
	// $ANTLR end synpred16_cs

	// $ANTLR start synpred17_cs
	public final void synpred17_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:325:11: ( ( predefined_type | type_name ) rank_specifiers )
		// /Users/jeremie/ANTLR/cs.g:325:12: ( predefined_type | type_name ) rank_specifiers
		{
		// /Users/jeremie/ANTLR/cs.g:325:12: ( predefined_type | type_name )
		int alt295=2;
		int LA295_0 = input.LA(1);
		if ( (LA295_0==103||LA295_0==106||LA295_0==109||LA295_0==114||LA295_0==119||LA295_0==129||LA295_0==138||LA295_0==146||LA295_0==151||LA295_0==169||LA295_0==173||LA295_0==177||(LA295_0 >= 185 && LA295_0 <= 186)||LA295_0==189) ) {
			alt295=1;
		}
		else if ( (LA295_0==IDENTIFIER||LA295_0==95||(LA295_0 >= 97 && LA295_0 <= 98)||(LA295_0 >= 100 && LA295_0 <= 101)||LA295_0==105||LA295_0==117||LA295_0==120||LA295_0==122||LA295_0==126||LA295_0==132||LA295_0==135||LA295_0==141||(LA295_0 >= 143 && LA295_0 <= 144)||(LA295_0 >= 147 && LA295_0 <= 148)||LA295_0==152||LA295_0==154||LA295_0==157||LA295_0==160||LA295_0==162||LA295_0==167||(LA295_0 >= 171 && LA295_0 <= 172)||LA295_0==183||LA295_0==190||LA295_0==194||LA295_0==196) ) {
			alt295=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 295, 0, input);
			throw nvae;
		}

		switch (alt295) {
			case 1 :
				// /Users/jeremie/ANTLR/cs.g:325:13: predefined_type
				{
				pushFollow(FOLLOW_predefined_type_in_synpred17_cs4927);
				predefined_type();
				state._fsp--;
				if (state.failed) return;

				}
				break;
			case 2 :
				// /Users/jeremie/ANTLR/cs.g:325:31: type_name
				{
				pushFollow(FOLLOW_type_name_in_synpred17_cs4931);
				type_name();
				state._fsp--;
				if (state.failed) return;

				}
				break;

		}

		pushFollow(FOLLOW_rank_specifiers_in_synpred17_cs4935);
		rank_specifiers();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred17_cs

	// $ANTLR start synpred18_cs
	public final void synpred18_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:326:11: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )
		// /Users/jeremie/ANTLR/cs.g:326:12: ( predefined_type | type_name ) ( ( '*' )+ | '?' )
		{
		// /Users/jeremie/ANTLR/cs.g:326:12: ( predefined_type | type_name )
		int alt296=2;
		int LA296_0 = input.LA(1);
		if ( (LA296_0==103||LA296_0==106||LA296_0==109||LA296_0==114||LA296_0==119||LA296_0==129||LA296_0==138||LA296_0==146||LA296_0==151||LA296_0==169||LA296_0==173||LA296_0==177||(LA296_0 >= 185 && LA296_0 <= 186)||LA296_0==189) ) {
			alt296=1;
		}
		else if ( (LA296_0==IDENTIFIER||LA296_0==95||(LA296_0 >= 97 && LA296_0 <= 98)||(LA296_0 >= 100 && LA296_0 <= 101)||LA296_0==105||LA296_0==117||LA296_0==120||LA296_0==122||LA296_0==126||LA296_0==132||LA296_0==135||LA296_0==141||(LA296_0 >= 143 && LA296_0 <= 144)||(LA296_0 >= 147 && LA296_0 <= 148)||LA296_0==152||LA296_0==154||LA296_0==157||LA296_0==160||LA296_0==162||LA296_0==167||(LA296_0 >= 171 && LA296_0 <= 172)||LA296_0==183||LA296_0==190||LA296_0==194||LA296_0==196) ) {
			alt296=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 296, 0, input);
			throw nvae;
		}

		switch (alt296) {
			case 1 :
				// /Users/jeremie/ANTLR/cs.g:326:13: predefined_type
				{
				pushFollow(FOLLOW_predefined_type_in_synpred18_cs4969);
				predefined_type();
				state._fsp--;
				if (state.failed) return;

				}
				break;
			case 2 :
				// /Users/jeremie/ANTLR/cs.g:326:31: type_name
				{
				pushFollow(FOLLOW_type_name_in_synpred18_cs4973);
				type_name();
				state._fsp--;
				if (state.failed) return;

				}
				break;

		}

		// /Users/jeremie/ANTLR/cs.g:326:43: ( ( '*' )+ | '?' )
		int alt298=2;
		int LA298_0 = input.LA(1);
		if ( (LA298_0==69) ) {
			alt298=1;
		}
		else if ( (LA298_0==89) ) {
			alt298=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 298, 0, input);
			throw nvae;
		}

		switch (alt298) {
			case 1 :
				// /Users/jeremie/ANTLR/cs.g:326:44: ( '*' )+
				{
				// /Users/jeremie/ANTLR/cs.g:326:44: ( '*' )+
				int cnt297=0;
				loop297:
				while (true) {
					int alt297=2;
					int LA297_0 = input.LA(1);
					if ( (LA297_0==69) ) {
						alt297=1;
					}

					switch (alt297) {
					case 1 :
						// /Users/jeremie/ANTLR/cs.g:326:44: '*'
						{
						match(input,69,FOLLOW_69_in_synpred18_cs4978); if (state.failed) return;

						}
						break;

					default :
						if ( cnt297 >= 1 ) break loop297;
						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee = new EarlyExitException(297, input);
						throw eee;
					}
					cnt297++;
				}

				}
				break;
			case 2 :
				// /Users/jeremie/ANTLR/cs.g:326:51: '?'
				{
				match(input,89,FOLLOW_89_in_synpred18_cs4983); if (state.failed) return;

				}
				break;

		}

		}

	}
	// $ANTLR end synpred18_cs

	// $ANTLR start synpred19_cs
	public final void synpred19_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:362:9: ( unary_expression assignment_operator )
		// /Users/jeremie/ANTLR/cs.g:362:10: unary_expression assignment_operator
		{
		pushFollow(FOLLOW_unary_expression_in_synpred19_cs5326);
		unary_expression();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_assignment_operator_in_synpred19_cs5330);
		assignment_operator();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred19_cs

	// $ANTLR start synpred20_cs
	public final void synpred20_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:371:9: ( cast_expression )
		// /Users/jeremie/ANTLR/cs.g:371:10: cast_expression
		{
		pushFollow(FOLLOW_cast_expression_in_synpred20_cs5437);
		cast_expression();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred20_cs

	// $ANTLR start synpred21_cs
	public final void synpred21_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:397:9: ( anonymous_function_signature '=>' )
		// /Users/jeremie/ANTLR/cs.g:397:10: anonymous_function_signature '=>'
		{
		pushFollow(FOLLOW_anonymous_function_signature_in_synpred21_cs5779);
		anonymous_function_signature();
		state._fsp--;
		if (state.failed) return;

		match(input,87,FOLLOW_87_in_synpred21_cs5783); if (state.failed) return;

		}

	}
	// $ANTLR end synpred21_cs

	// $ANTLR start synpred22_cs
	public final void synpred22_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:398:11: ( query_expression )
		// /Users/jeremie/ANTLR/cs.g:398:12: query_expression
		{
		pushFollow(FOLLOW_query_expression_in_synpred22_cs5808);
		query_expression();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred22_cs

	// $ANTLR start synpred23_cs
	public final void synpred23_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:462:57: ( 'into' )
		// /Users/jeremie/ANTLR/cs.g:462:58: 'into'
		{
		match(input,141,FOLLOW_141_in_synpred23_cs6511); if (state.failed) return;

		}

	}
	// $ANTLR end synpred23_cs

	// $ANTLR start synpred24_cs
	public final void synpred24_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:529:46: ( ',' identifier '=' )
		// /Users/jeremie/ANTLR/cs.g:529:47: ',' identifier '='
		{
		match(input,74,FOLLOW_74_in_synpred24_cs7335); if (state.failed) return;

		pushFollow(FOLLOW_identifier_in_synpred24_cs7339);
		identifier();
		state._fsp--;
		if (state.failed) return;

		match(input,85,FOLLOW_85_in_synpred24_cs7343); if (state.failed) return;

		}

	}
	// $ANTLR end synpred24_cs

	// $ANTLR start synpred25_cs
	public final void synpred25_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:610:18: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:610:19: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred25_cs8274);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,197,FOLLOW_197_in_synpred25_cs8278); if (state.failed) return;

		}

	}
	// $ANTLR end synpred25_cs

	// $ANTLR start synpred26_cs
	public final void synpred26_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:717:28: ( member_name '(' )
		// /Users/jeremie/ANTLR/cs.g:717:29: member_name '('
		{
		pushFollow(FOLLOW_member_name_in_synpred26_cs9538);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,68,FOLLOW_68_in_synpred26_cs9542); if (state.failed) return;

		}

	}
	// $ANTLR end synpred26_cs

	// $ANTLR start synpred27_cs
	public final void synpred27_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:718:28: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:718:29: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred27_cs9577);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,197,FOLLOW_197_in_synpred27_cs9581); if (state.failed) return;

		}

	}
	// $ANTLR end synpred27_cs

	// $ANTLR start synpred28_cs
	public final void synpred28_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:769:18: ( member_name '(' )
		// /Users/jeremie/ANTLR/cs.g:769:19: member_name '('
		{
		pushFollow(FOLLOW_member_name_in_synpred28_cs10417);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,68,FOLLOW_68_in_synpred28_cs10421); if (state.failed) return;

		}

	}
	// $ANTLR end synpred28_cs

	// $ANTLR start synpred29_cs
	public final void synpred29_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:770:22: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:770:23: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred29_cs10450);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,197,FOLLOW_197_in_synpred29_cs10454); if (state.failed) return;

		}

	}
	// $ANTLR end synpred29_cs

	// $ANTLR start synpred30_cs
	public final void synpred30_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:771:22: ( member_name '.' 'this' )
		// /Users/jeremie/ANTLR/cs.g:771:23: member_name '.' 'this'
		{
		pushFollow(FOLLOW_member_name_in_synpred30_cs10483);
		member_name();
		state._fsp--;
		if (state.failed) return;

		match(input,DOT,FOLLOW_DOT_in_synpred30_cs10487); if (state.failed) return;

		match(input,180,FOLLOW_180_in_synpred30_cs10491); if (state.failed) return;

		}

	}
	// $ANTLR end synpred30_cs

	// $ANTLR start synpred31_cs
	public final void synpred31_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:843:30: ( arguments ( '[' | '.' | '->' ) )
		// /Users/jeremie/ANTLR/cs.g:843:31: arguments ( '[' | '.' | '->' )
		{
		pushFollow(FOLLOW_arguments_in_synpred31_cs11352);
		arguments();
		state._fsp--;
		if (state.failed) return;

		if ( input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred31_cs

	// $ANTLR start synpred32_cs
	public final void synpred32_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:847:11: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:847:12: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred32_cs11459);
		identifier();
		state._fsp--;
		if (state.failed) return;

		match(input,81,FOLLOW_81_in_synpred32_cs11464); if (state.failed) return;

		}

	}
	// $ANTLR end synpred32_cs

	// $ANTLR start synpred33_cs
	public final void synpred33_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:860:9: ( declaration_statement )
		// /Users/jeremie/ANTLR/cs.g:860:10: declaration_statement
		{
		pushFollow(FOLLOW_declaration_statement_in_synpred33_cs11608);
		declaration_statement();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred33_cs

	// $ANTLR start synpred34_cs
	public final void synpred34_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:861:11: ( identifier ':' )
		// /Users/jeremie/ANTLR/cs.g:861:12: identifier ':'
		{
		pushFollow(FOLLOW_identifier_in_synpred34_cs11626);
		identifier();
		state._fsp--;
		if (state.failed) return;

		match(input,79,FOLLOW_79_in_synpred34_cs11630); if (state.failed) return;

		}

	}
	// $ANTLR end synpred34_cs

	// $ANTLR start synpred35_cs
	public final void synpred35_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:898:9: ( 'var' )
		// /Users/jeremie/ANTLR/cs.g:898:10: 'var'
		{
		match(input,190,FOLLOW_190_in_synpred35_cs12078); if (state.failed) return;

		}

	}
	// $ANTLR end synpred35_cs

	// $ANTLR start synpred36_cs
	public final void synpred36_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:899:11: ( 'dynamic' )
		// /Users/jeremie/ANTLR/cs.g:899:12: 'dynamic'
		{
		match(input,120,FOLLOW_120_in_synpred36_cs12096); if (state.failed) return;

		}

	}
	// $ANTLR end synpred36_cs

	// $ANTLR start synpred37_cs
	public final void synpred37_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:925:69: ( 'else' )
		// /Users/jeremie/ANTLR/cs.g:925:70: 'else'
		{
		match(input,121,FOLLOW_121_in_synpred37_cs12368); if (state.failed) return;

		}

	}
	// $ANTLR end synpred37_cs

	// $ANTLR start synpred38_cs
	public final void synpred38_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:954:9: ( local_variable_declaration )
		// /Users/jeremie/ANTLR/cs.g:954:10: local_variable_declaration
		{
		pushFollow(FOLLOW_local_variable_declaration_in_synpred38_cs12745);
		local_variable_declaration();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred38_cs

	// $ANTLR start synpred39_cs
	public final void synpred39_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:1006:9: ( local_variable_declaration )
		// /Users/jeremie/ANTLR/cs.g:1006:10: local_variable_declaration
		{
		pushFollow(FOLLOW_local_variable_declaration_in_synpred39_cs13417);
		local_variable_declaration();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred39_cs

	// Delegated rules

	public final boolean synpred24_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred24_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred9_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred19_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred2_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred15_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred4_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred12_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred32_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred29_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred18_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred16_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred10_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred5_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred28_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred17_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred14_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred6_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred25_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred37_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred31_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred22_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred11_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred7_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred34_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred23_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred36_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred21_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred13_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred8_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred33_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred26_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred30_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred38_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred35_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred3_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred39_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred1_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred27_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred20_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA50 dfa50 = new DFA50(this);
	protected DFA71 dfa71 = new DFA71(this);
	protected DFA72 dfa72 = new DFA72(this);
	static final String DFA50_eotS =
		"\5\uffff";
	static final String DFA50_eofS =
		"\1\2\3\uffff\1\2";
	static final String DFA50_minS =
		"\1\12\1\5\2\uffff\1\12";
	static final String DFA50_maxS =
		"\1\u00c9\1\u00ca\2\uffff\1\u00c9";
	static final String DFA50_acceptS =
		"\2\uffff\1\1\1\2\1\uffff";
	static final String DFA50_specialS =
		"\5\uffff}>";
	static final String[] DFA50_transitionS = {
			"\1\3\12\uffff\1\2\5\uffff\1\2\6\uffff\1\2\12\uffff\1\3\1\uffff\1\2\2"+
			"\uffff\1\2\13\uffff\6\2\1\3\13\2\1\uffff\6\2\1\uffff\3\2\1\1\4\2\1\uffff"+
			"\5\2\3\uffff\1\2\13\uffff\1\2\2\uffff\1\2\1\uffff\1\2\3\uffff\1\2\5\uffff"+
			"\1\2\2\uffff\1\2\5\uffff\4\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\12\uffff\1\2\6\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\6\2",
			"\1\3\16\uffff\1\3\5\uffff\2\3\6\uffff\3\3\13\uffff\1\3\2\uffff\1\3\1"+
			"\uffff\1\3\4\uffff\1\3\2\uffff\1\3\4\uffff\1\3\1\uffff\2\3\1\uffff\2"+
			"\3\1\uffff\1\2\1\3\20\uffff\1\4\2\uffff\1\3\1\uffff\2\3\1\uffff\4\3\1"+
			"\uffff\2\3\2\uffff\2\3\3\uffff\4\3\1\uffff\2\3\1\uffff\1\3\3\uffff\1"+
			"\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\3\3\1\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff"+
			"\1\3\4\uffff\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\2\uffff\1\3\2\uffff"+
			"\5\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
			"",
			"",
			"\1\3\12\uffff\1\2\5\uffff\1\2\6\uffff\1\2\12\uffff\1\3\1\uffff\1\2\2"+
			"\uffff\1\2\13\uffff\6\2\1\3\13\2\1\uffff\6\2\1\uffff\3\2\1\1\4\2\1\uffff"+
			"\5\2\3\uffff\1\2\13\uffff\1\2\2\uffff\1\2\1\uffff\1\2\3\uffff\1\2\5\uffff"+
			"\1\2\2\uffff\1\2\5\uffff\4\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\12\uffff\1\2\6\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\6\2"
	};

	static final short[] DFA50_eot = DFA.unpackEncodedString(DFA50_eotS);
	static final short[] DFA50_eof = DFA.unpackEncodedString(DFA50_eofS);
	static final char[] DFA50_min = DFA.unpackEncodedStringToUnsignedChars(DFA50_minS);
	static final char[] DFA50_max = DFA.unpackEncodedStringToUnsignedChars(DFA50_maxS);
	static final short[] DFA50_accept = DFA.unpackEncodedString(DFA50_acceptS);
	static final short[] DFA50_special = DFA.unpackEncodedString(DFA50_specialS);
	static final short[][] DFA50_transition;

	static {
		int numStates = DFA50_transitionS.length;
		DFA50_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA50_transition[i] = DFA.unpackEncodedString(DFA50_transitionS[i]);
		}
	}

	protected class DFA50 extends DFA {

		public DFA50(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 50;
			this.eot = DFA50_eot;
			this.eof = DFA50_eof;
			this.min = DFA50_min;
			this.max = DFA50_max;
			this.accept = DFA50_accept;
			this.special = DFA50_special;
			this.transition = DFA50_transition;
		}
		@Override
		public String getDescription() {
			return "194:41: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )";
		}
	}

	static final String DFA71_eotS =
		"\16\uffff";
	static final String DFA71_eofS =
		"\16\uffff";
	static final String DFA71_minS =
		"\1\33\1\12\1\uffff\1\57\1\33\1\25\1\33\1\uffff\1\12\2\uffff\1\12\2\25";
	static final String DFA71_maxS =
		"\1\u00c4\1\133\1\uffff\1\105\3\u00c4\1\uffff\1\133\2\uffff\1\133\2\u00c4";
	static final String DFA71_acceptS =
		"\2\uffff\1\2\4\uffff\1\3\1\uffff\2\1\3\uffff";
	static final String DFA71_specialS =
		"\5\uffff\1\1\6\uffff\1\2\1\0}>";
	static final String[] DFA71_transitionS = {
			"\1\1\103\uffff\1\1\1\uffff\2\1\1\uffff\2\1\1\uffff\1\2\1\uffff\1\1\1"+
			"\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\1\1\uffff\1\2\1\1\1\uffff\1\1\3"+
			"\uffff\1\1\2\uffff\1\2\2\uffff\1\1\2\uffff\1\1\2\uffff\1\2\2\uffff\1"+
			"\1\1\uffff\2\1\1\uffff\1\2\2\1\2\uffff\1\2\1\1\1\uffff\1\1\2\uffff\1"+
			"\1\2\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff\1\2\1\uffff\2\1\1\2\3"+
			"\uffff\1\2\5\uffff\1\1\1\uffff\2\2\2\uffff\1\2\1\1\1\uffff\1\3\1\uffff"+
			"\1\1\1\uffff\1\1",
			"\1\6\44\uffff\1\2\25\uffff\1\2\12\uffff\1\4\1\5\7\uffff\1\2\1\uffff"+
			"\1\2",
			"",
			"\1\7\25\uffff\1\2",
			"\1\10\103\uffff\1\10\1\uffff\2\10\1\uffff\2\10\3\uffff\1\10\13\uffff"+
			"\1\10\2\uffff\1\10\1\uffff\1\10\3\uffff\1\10\5\uffff\1\10\2\uffff\1\10"+
			"\5\uffff\1\10\1\uffff\2\10\2\uffff\2\10\3\uffff\1\10\1\uffff\1\10\2\uffff"+
			"\1\10\2\uffff\1\10\1\uffff\1\10\4\uffff\1\10\3\uffff\2\10\12\uffff\1"+
			"\10\6\uffff\1\10\3\uffff\1\10\1\uffff\1\10",
			"\1\12\5\uffff\1\2\56\uffff\1\11\24\uffff\1\2\1\uffff\2\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\2\2\1\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\5\uffff\1\2\1\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2",
			"\1\13\103\uffff\1\13\1\uffff\2\13\1\uffff\2\13\3\uffff\1\13\13\uffff"+
			"\1\13\2\uffff\1\13\1\uffff\1\13\3\uffff\1\13\5\uffff\1\13\2\uffff\1\13"+
			"\5\uffff\1\13\1\uffff\2\13\2\uffff\2\13\3\uffff\1\13\1\uffff\1\13\2\uffff"+
			"\1\13\2\uffff\1\13\1\uffff\1\13\4\uffff\1\13\3\uffff\2\13\12\uffff\1"+
			"\13\6\uffff\1\13\3\uffff\1\13\1\uffff\1\13",
			"",
			"\1\6\44\uffff\1\2\25\uffff\1\2\13\uffff\1\14\7\uffff\1\2\1\uffff\1\2",
			"",
			"",
			"\1\6\44\uffff\1\2\25\uffff\1\2\13\uffff\1\15\7\uffff\1\2\1\uffff\1\2",
			"\1\12\5\uffff\1\2\56\uffff\1\11\24\uffff\1\2\1\uffff\2\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\2\2\1\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\5\uffff\1\2\1\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2",
			"\1\12\5\uffff\1\2\56\uffff\1\11\24\uffff\1\2\1\uffff\2\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\2\2\1\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\5\uffff\1\2\1\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2"
	};

	static final short[] DFA71_eot = DFA.unpackEncodedString(DFA71_eotS);
	static final short[] DFA71_eof = DFA.unpackEncodedString(DFA71_eofS);
	static final char[] DFA71_min = DFA.unpackEncodedStringToUnsignedChars(DFA71_minS);
	static final char[] DFA71_max = DFA.unpackEncodedStringToUnsignedChars(DFA71_maxS);
	static final short[] DFA71_accept = DFA.unpackEncodedString(DFA71_acceptS);
	static final short[] DFA71_special = DFA.unpackEncodedString(DFA71_specialS);
	static final short[][] DFA71_transition;

	static {
		int numStates = DFA71_transitionS.length;
		DFA71_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA71_transition[i] = DFA.unpackEncodedString(DFA71_transitionS[i]);
		}
	}

	protected class DFA71 extends DFA {

		public DFA71(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 71;
			this.eot = DFA71_eot;
			this.eof = DFA71_eof;
			this.min = DFA71_min;
			this.max = DFA71_max;
			this.accept = DFA71_accept;
			this.special = DFA71_special;
			this.transition = DFA71_transition;
		}
		@Override
		public String getDescription() {
			return "267:26: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )";
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA71_13 = input.LA(1);
						 
						int index71_13 = input.index();
						input.rewind();
						s = -1;
						if ( (LA71_13==74) && (synpred13_cs())) {s = 9;}
						else if ( (LA71_13==GT) && (synpred13_cs())) {s = 10;}
						else if ( (LA71_13==IDENTIFIER||LA71_13==95||(LA71_13 >= 97 && LA71_13 <= 98)||(LA71_13 >= 100 && LA71_13 <= 101)||LA71_13==103||(LA71_13 >= 105 && LA71_13 <= 106)||LA71_13==109||LA71_13==114||LA71_13==117||(LA71_13 >= 119 && LA71_13 <= 120)||LA71_13==122||LA71_13==126||LA71_13==129||LA71_13==132||LA71_13==135||LA71_13==138||LA71_13==141||(LA71_13 >= 143 && LA71_13 <= 144)||(LA71_13 >= 146 && LA71_13 <= 148)||(LA71_13 >= 151 && LA71_13 <= 152)||LA71_13==154||LA71_13==157||LA71_13==160||LA71_13==162||LA71_13==167||LA71_13==169||(LA71_13 >= 171 && LA71_13 <= 173)||LA71_13==177||LA71_13==183||(LA71_13 >= 185 && LA71_13 <= 186)||(LA71_13 >= 189 && LA71_13 <= 190)||LA71_13==192||LA71_13==194||LA71_13==196) ) {s = 2;}
						 
						input.seek(index71_13);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA71_5 = input.LA(1);
						 
						int index71_5 = input.index();
						input.rewind();
						s = -1;
						if ( (LA71_5==74) && (synpred13_cs())) {s = 9;}
						else if ( (LA71_5==GT) && (synpred13_cs())) {s = 10;}
						else if ( (LA71_5==IDENTIFIER||LA71_5==95||(LA71_5 >= 97 && LA71_5 <= 98)||(LA71_5 >= 100 && LA71_5 <= 101)||LA71_5==103||(LA71_5 >= 105 && LA71_5 <= 106)||LA71_5==109||LA71_5==114||LA71_5==117||(LA71_5 >= 119 && LA71_5 <= 120)||LA71_5==122||LA71_5==126||LA71_5==129||LA71_5==132||LA71_5==135||LA71_5==138||LA71_5==141||(LA71_5 >= 143 && LA71_5 <= 144)||(LA71_5 >= 146 && LA71_5 <= 148)||(LA71_5 >= 151 && LA71_5 <= 152)||LA71_5==154||LA71_5==157||LA71_5==160||LA71_5==162||LA71_5==167||LA71_5==169||(LA71_5 >= 171 && LA71_5 <= 173)||LA71_5==177||LA71_5==183||(LA71_5 >= 185 && LA71_5 <= 186)||(LA71_5 >= 189 && LA71_5 <= 190)||LA71_5==192||LA71_5==194||LA71_5==196) ) {s = 2;}
						 
						input.seek(index71_5);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA71_12 = input.LA(1);
						 
						int index71_12 = input.index();
						input.rewind();
						s = -1;
						if ( (LA71_12==74) && (synpred13_cs())) {s = 9;}
						else if ( (LA71_12==GT) && (synpred13_cs())) {s = 10;}
						else if ( (LA71_12==IDENTIFIER||LA71_12==95||(LA71_12 >= 97 && LA71_12 <= 98)||(LA71_12 >= 100 && LA71_12 <= 101)||LA71_12==103||(LA71_12 >= 105 && LA71_12 <= 106)||LA71_12==109||LA71_12==114||LA71_12==117||(LA71_12 >= 119 && LA71_12 <= 120)||LA71_12==122||LA71_12==126||LA71_12==129||LA71_12==132||LA71_12==135||LA71_12==138||LA71_12==141||(LA71_12 >= 143 && LA71_12 <= 144)||(LA71_12 >= 146 && LA71_12 <= 148)||(LA71_12 >= 151 && LA71_12 <= 152)||LA71_12==154||LA71_12==157||LA71_12==160||LA71_12==162||LA71_12==167||LA71_12==169||(LA71_12 >= 171 && LA71_12 <= 173)||LA71_12==177||LA71_12==183||(LA71_12 >= 185 && LA71_12 <= 186)||(LA71_12 >= 189 && LA71_12 <= 190)||LA71_12==192||LA71_12==194||LA71_12==196) ) {s = 2;}
						 
						input.seek(index71_12);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 71, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA72_eotS =
		"\7\uffff";
	static final String DFA72_eofS =
		"\4\uffff\1\5\2\uffff";
	static final String DFA72_minS =
		"\1\12\1\25\1\uffff\1\25\1\12\2\uffff";
	static final String DFA72_maxS =
		"\1\121\1\112\1\uffff\1\112\1\57\2\uffff";
	static final String DFA72_acceptS =
		"\2\uffff\1\2\2\uffff\1\3\1\1";
	static final String DFA72_specialS =
		"\4\uffff\1\0\2\uffff}>";
	static final String[] DFA72_transitionS = {
			"\1\2\106\uffff\1\1",
			"\1\4\64\uffff\1\3",
			"",
			"\1\4\64\uffff\1\3",
			"\1\6\44\uffff\1\5",
			"",
			""
	};

	static final short[] DFA72_eot = DFA.unpackEncodedString(DFA72_eotS);
	static final short[] DFA72_eof = DFA.unpackEncodedString(DFA72_eofS);
	static final char[] DFA72_min = DFA.unpackEncodedStringToUnsignedChars(DFA72_minS);
	static final char[] DFA72_max = DFA.unpackEncodedStringToUnsignedChars(DFA72_maxS);
	static final short[] DFA72_accept = DFA.unpackEncodedString(DFA72_acceptS);
	static final short[] DFA72_special = DFA.unpackEncodedString(DFA72_specialS);
	static final short[][] DFA72_transition;

	static {
		int numStates = DFA72_transitionS.length;
		DFA72_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA72_transition[i] = DFA.unpackEncodedString(DFA72_transitionS[i]);
		}
	}

	protected class DFA72 extends DFA {

		public DFA72(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 72;
			this.eot = DFA72_eot;
			this.eof = DFA72_eof;
			this.min = DFA72_min;
			this.max = DFA72_max;
			this.accept = DFA72_accept;
			this.special = DFA72_special;
			this.transition = DFA72_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 277:17: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*";
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA72_4 = input.LA(1);
						 
						int index72_4 = input.index();
						input.rewind();
						s = -1;
						if ( (LA72_4==EOF||LA72_4==RPAREN) ) {s = 5;}
						else if ( (LA72_4==DOT) && (synpred14_cs())) {s = 6;}
						 
						input.seek(index72_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 72, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	public static final BitSet FOLLOW_namespace_body_in_compilation_unit82 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_149_in_namespace_declaration98 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_qualified_identifier_in_namespace_declaration102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_namespace_block_in_namespace_declaration106 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_namespace_declaration110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_namespace_block126 = new BitSet(new long[]{0x0200000000020000L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000202L});
	public static final BitSet FOLLOW_namespace_body_in_namespace_block130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_namespace_block135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extern_alias_directives_in_namespace_body151 = new BitSet(new long[]{0x0200000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_using_directives_in_namespace_body156 = new BitSet(new long[]{0x0000000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_global_attributes_in_namespace_body161 = new BitSet(new long[]{0x0000000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_member_declarations_in_namespace_body166 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extern_alias_directive_in_extern_alias_directives182 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
	public static final BitSet FOLLOW_125_in_extern_alias_directive198 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_98_in_extern_alias_directive202 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_extern_alias_directive206 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_extern_alias_directive209 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_using_directive_in_using_directives224 = new BitSet(new long[]{0x0200000000000002L});
	public static final BitSet FOLLOW_using_alias_directive_in_using_directive241 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_using_namespace_directive_in_using_directive253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_in_using_alias_directive269 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_using_alias_directive280 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_using_alias_directive284 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_namespace_or_type_name_in_using_alias_directive288 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_using_alias_directive292 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_in_using_namespace_directive307 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_namespace_name_in_using_namespace_directive311 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_using_namespace_directive315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_member_declaration_in_namespace_member_declarations330 = new BitSet(new long[]{0x0000000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_declaration_in_namespace_member_declaration346 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_namespace_member_declaration358 = new BitSet(new long[]{0x0000000000020000L,0x2010800100000000L,0x9005043A90401800L,0x0000000000000002L});
	public static final BitSet FOLLOW_modifiers_in_namespace_member_declaration363 = new BitSet(new long[]{0x0000000000020000L,0x0010800000000000L,0x0004000080000800L});
	public static final BitSet FOLLOW_type_declaration_in_namespace_member_declaration368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_159_in_type_declaration389 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L,0x0004000000000800L});
	public static final BitSet FOLLOW_class_declaration_in_type_declaration394 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_type_declaration462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_type_declaration530 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_type_declaration543 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_type_declaration555 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_type_declaration567 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_declaration_in_type_declaration579 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_declaration_in_type_declaration591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_qualified_identifier607 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_DOT_in_qualified_identifier610 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_qualified_identifier612 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_namespace_or_type_name_in_namespace_name630 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_modifiers646 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_class_member_declaration746 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B780000000L,0xF6873EBFB5DDBD92L,0x0000000000000417L});
	public static final BitSet FOLLOW_modifiers_in_class_member_declaration759 = new BitSet(new long[]{0x0000000008020000L,0x5DB5A6B680000000L,0x66863A85A59DAD92L,0x0000000000000415L});
	public static final BitSet FOLLOW_112_in_class_member_declaration772 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_class_member_declaration776 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_class_member_declaration780 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_class_member_declaration784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_event_declaration_in_class_member_declaration796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_159_in_class_member_declaration824 = new BitSet(new long[]{0x042900180C100020L,0x45A4A6B680000000L,0x66863A85259DAC92L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_class_member_declaration827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_class_member_declaration859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_class_member_declaration891 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_class_member_declaration923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_class_member_declaration936 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_class_member_declaration956 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_class_member_declaration960 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_class_member_declaration972 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66923A85279DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_class_member_declaration986 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_declaration_in_class_member_declaration1019 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_name_in_class_member_declaration1056 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_class_member_declaration1058 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_indexer_declaration_in_class_member_declaration1060 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_indexer_declaration_in_class_member_declaration1083 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_field_declaration_in_class_member_declaration1110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_operator_declaration_in_class_member_declaration1135 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_class_member_declaration1174 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_class_member_declaration1202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_declaration_in_class_member_declaration1222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_declaration_in_class_member_declaration1250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conversion_operator_declaration_in_class_member_declaration1270 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_declaration_in_class_member_declaration1282 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_destructor_declaration_in_class_member_declaration1302 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_primary_expression1349 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_primary_expression1353 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1357 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_180_in_primary_expression1380 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_primary_expression1384 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1388 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_start_in_primary_expression1401 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1405 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_150_in_primary_expression1418 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000035L});
	public static final BitSet FOLLOW_object_creation_expression_in_primary_expression1481 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1485 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_delegate_creation_expression_in_primary_expression1611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_creation_expression_in_primary_expression1647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_object_creation_expression_in_primary_expression1683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeof_expression_in_primary_expression1752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_checked_expression_in_primary_expression1812 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unchecked_expression_in_primary_expression1852 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_default_value_expression_in_primary_expression1890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_method_expression_in_primary_expression1924 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_primary_expression_start1972 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_primary_expression_start1995 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_primary_expression_start1999 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_primary_expression_start2011 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_primary_expression_start2014 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_primary_expression_start2018 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_primary_expression_start2032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_102_in_primary_expression_start2045 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_paren_expression_in_primary_expression_start2057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeof_expression_in_primary_expression_start2069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_literal_in_primary_expression_start2094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_identifier_in_primary_expression_part2119 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_brackets_or_arguments_in_primary_expression_part2131 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_operator_in_access_identifier2146 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_access_identifier2150 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_brackets_in_brackets_or_arguments2186 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_brackets_or_arguments2190 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_91_in_brackets2205 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6900009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_list_in_brackets2209 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_brackets2214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_paren_expression2245 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_paren_expression2249 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_paren_expression2253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_arguments2269 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_list_in_arguments2273 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_arguments2278 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_argument_in_argument_list2294 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_argument_list2297 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_in_argument_list2299 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_argument_name_in_argument2316 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_value_in_argument2320 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_argument_value_in_argument2332 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_argument_name2346 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_argument_name2350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_argument_value2365 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ref_variable_reference_in_argument_value2378 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_155_in_argument_value2391 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_variable_reference_in_argument_value2395 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_166_in_ref_variable_reference2410 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_68_in_ref_variable_reference2446 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_ref_variable_reference2450 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_ref_variable_reference2454 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927AC525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_ref_variable_reference_in_ref_variable_reference2459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_reference_in_ref_variable_reference2463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_reference_in_ref_variable_reference2688 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_variable_reference2712 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rank_specifier_in_rank_specifiers2727 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_rank_specifier2752 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000400L});
	public static final BitSet FOLLOW_dim_separators_in_rank_specifier2756 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_rank_specifier2761 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_dim_separators2777 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_delegate_creation_expression2804 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_delegate_creation_expression2808 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_name_in_delegate_creation_expression2812 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_delegate_creation_expression2816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression2841 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_anonymous_object_initializer2857 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000214L});
	public static final BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer2861 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_anonymous_object_initializer2866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_anonymous_object_initializer2871 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_declarator_in_member_declarator_list2886 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_member_declarator_list2890 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_member_declarator_in_member_declarator_list2892 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_member_declarator2911 = new BitSet(new long[]{0x0000000000000400L,0x0000000000220000L});
	public static final BitSet FOLLOW_generic_argument_list_in_member_declarator2916 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_member_declarator2954 = new BitSet(new long[]{0x042900180C100020L,0x45BC66F680000010L,0x6F927A8525DDA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_primary_or_array_creation_expression_in_member_declarator2958 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_member_declarator2996 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_member_declarator3000 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_creation_expression_in_primary_or_array_creation_expression3022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_primary_expression_in_primary_or_array_creation_expression3034 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_150_in_array_creation_expression3059 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_array_creation_expression3081 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_91_in_array_creation_expression3086 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_list_in_array_creation_expression3090 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_array_creation_expression3094 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_rank_specifiers_in_array_creation_expression3141 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_array_initializer_in_array_creation_expression3146 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_array_creation_expression3259 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_invocation_part_in_array_creation_expression3263 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_invocation_part_in_array_creation_expression3310 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_arguments_in_array_creation_expression3316 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_initializer_in_array_creation_expression3450 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rank_specifier_in_array_creation_expression3520 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_array_initializer_in_array_creation_expression3550 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_array_initializer3613 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F680000DB4L,0x6F927A8525DDA492L,0x0000000000000634L});
	public static final BitSet FOLLOW_variable_initializer_list_in_array_initializer3617 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_array_initializer3622 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_array_initializer3627 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list3642 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_variable_initializer_list3645 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list3647 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_variable_initializer3664 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_initializer_in_variable_initializer3675 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_174_in_sizeof_expression3690 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_sizeof_expression3694 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_unmanaged_type_in_sizeof_expression3698 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeof_expression3702 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_110_in_checked_expression3717 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_checked_expression3721 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_checked_expression3725 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_checked_expression3729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_187_in_unchecked_expression3745 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_unchecked_expression3749 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_unchecked_expression3753 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_unchecked_expression3757 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_115_in_default_value_expression3773 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_default_value_expression3777 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_default_value_expression3781 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_default_value_expression3785 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_116_in_anonymous_method_expression3800 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression3804 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_anonymous_method_expression3809 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_explicit_anonymous_function_signature3823 = new BitSet(new long[]{0x0000800008000000L,0x45A426B680000000L,0x66823AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature3827 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_explicit_anonymous_function_signature3832 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3847 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_explicit_anonymous_function_parameter_list3852 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list3856 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter3881 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_explicit_anonymous_function_parameter3886 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_explicit_anonymous_function_parameter3890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_object_creation_expression3935 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_68_in_object_creation_expression3958 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_list_in_object_creation_expression3962 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_object_creation_expression3967 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression3971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression3996 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_object_or_collection_initializer4022 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F680000DB4L,0x6F927A8525DDA492L,0x0000000000000634L});
	public static final BitSet FOLLOW_object_initializer_in_object_or_collection_initializer4026 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer4047 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_element_initializer_list_in_collection_initializer4064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_collection_initializer4068 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_collection_initializer4073 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_element_initializer_in_element_initializer_list4089 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_element_initializer_list4093 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_element_initializer_in_element_initializer_list4095 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_non_assignment_expression_in_element_initializer4113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_element_initializer4126 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_list_in_element_initializer4130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_element_initializer4134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_initializer_list_in_object_initializer4156 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_object_initializer4161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_object_initializer4166 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_initializer_in_member_initializer_list4182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_member_initializer_list4186 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_member_initializer_in_member_initializer_list4188 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_member_initializer4205 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_member_initializer4209 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_initializer_value_in_member_initializer4213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_initializer_value4229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_or_collection_initializer_in_initializer_value4242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_184_in_typeof_expression4261 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_typeof_expression4265 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_unbound_type_name_in_typeof_expression4276 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_type_in_typeof_expression4322 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_192_in_typeof_expression4369 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_typeof_expression4374 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unbound_type_name_start_in_unbound_type_name4410 = new BitSet(new long[]{0x0000000000000400L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name4443 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name4447 = new BitSet(new long[]{0x0000000000000400L,0x0000000000020000L});
	public static final BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name4468 = new BitSet(new long[]{0x0000000000000400L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name4499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_unbound_type_name_start4523 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_unbound_type_name_start4526 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_unbound_type_name_start4528 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_unbound_type_name_part4544 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_unbound_type_name_part4548 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_generic_dimension_specifier4563 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000400L});
	public static final BitSet FOLLOW_commas_in_generic_dimension_specifier4567 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_generic_dimension_specifier4572 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_commas4588 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_namespace_or_type_name_in_type_name4611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name4627 = new BitSet(new long[]{0x0000000000000402L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_namespace_or_type_name4632 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name4634 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_DOT_in_namespace_or_type_name4639 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name4643 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_identifier_in_type_or_generic4670 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_type_or_generic4674 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_type_or_generic4686 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_qid_start_in_qid4718 = new BitSet(new long[]{0x0000200000000402L});
	public static final BitSet FOLLOW_qid_part_in_qid4722 = new BitSet(new long[]{0x0000200000000402L});
	public static final BitSet FOLLOW_predefined_type_in_qid_start4746 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_qid_start4776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_qid_start4780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_qid_start4794 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_qid_start4799 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_qid_start4803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_literal_in_qid_start4817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_identifier_in_qid_part4859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_generic_argument_list4876 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_arguments_in_generic_argument_list4880 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_generic_argument_list4884 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_type_arguments4900 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_arguments4903 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_type_arguments4905 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_predefined_type_in_type4941 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_type_name_in_type4945 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_rank_specifiers_in_type4950 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_type4954 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_predefined_type_in_type4990 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_type_name_in_type4994 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_69_in_type5000 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_89_in_type5005 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_type5019 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_name_in_type5023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_type5036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_type5038 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_predefined_type_in_non_nullable_type5063 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000020L});
	public static final BitSet FOLLOW_type_name_in_non_nullable_type5067 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000020L});
	public static final BitSet FOLLOW_rank_specifiers_in_non_nullable_type5090 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_non_nullable_type5094 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_non_nullable_type5124 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_192_in_non_nullable_type5157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_non_nullable_type5161 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_type_in_non_array_type5186 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_array_type5200 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_unmanaged_type5214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_class_type5228 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_pointer_type5242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_block5261 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_block5273 = new BitSet(new long[]{0x262D001C1C100020L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000063DL});
	public static final BitSet FOLLOW_statement_list_in_block5277 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_block5282 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_in_statement_list5296 = new BitSet(new long[]{0x262D001C1C100022L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043DL});
	public static final BitSet FOLLOW_assignment_in_expression5335 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_non_assignment_expression_in_expression5355 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_expression_list5378 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_expression_list5382 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_expression_list5386 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_unary_expression_in_assignment5403 = new BitSet(new long[]{0x0000000000200000L,0x0000000040285249L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_assignment_operator_in_assignment5407 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_assignment5411 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cast_expression_in_unary_expression5442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_primary_or_array_creation_expression_in_unary_expression5454 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000900L});
	public static final BitSet FOLLOW_72_in_unary_expression5458 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
	public static final BitSet FOLLOW_75_in_unary_expression5463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_71_in_unary_expression5476 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5480 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINUS_in_unary_expression5493 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5497 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_61_in_unary_expression5510 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5514 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_202_in_unary_expression5527 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5531 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pre_increment_expression_in_unary_expression5544 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pre_decrement_expression_in_unary_expression5557 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pointer_indirection_expression_in_unary_expression5570 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_addressof_expression_in_unary_expression5582 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_cast_expression5606 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_cast_expression5610 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cast_expression5614 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_cast_expression5618 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_assignment_operator5633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_73_in_assignment_operator5637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_76_in_assignment_operator5641 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_70_in_assignment_operator5645 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_78_in_assignment_operator5649 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_64_in_assignment_operator5653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_67_in_assignment_operator5657 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_199_in_assignment_operator5661 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_94_in_assignment_operator5665 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_83_in_assignment_operator5669 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GT_in_assignment_operator5673 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_88_in_assignment_operator5675 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_72_in_pre_increment_expression5691 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_pre_increment_expression5695 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_75_in_pre_decrement_expression5711 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_pre_decrement_expression5715 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_69_in_pointer_indirection_expression5730 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_pointer_indirection_expression5734 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_66_in_addressof_expression5749 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_addressof_expression5753 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_lambda_expression_in_non_assignment_expression5795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_expression_in_non_assignment_expression5813 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conditional_expression_in_non_assignment_expression5826 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression5854 = new BitSet(new long[]{0x8000000000000002L,0x0000000000002020L});
	public static final BitSet FOLLOW_set_in_multiplicative_expression5859 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression5869 = new BitSet(new long[]{0x8000000000000002L,0x0000000000002020L});
	public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression5893 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_additive_expression5896 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression5904 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000080L});
	public static final BitSet FOLLOW_additive_expression_in_shift_expression5922 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L});
	public static final BitSet FOLLOW_82_in_shift_expression5926 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_GT_in_shift_expression5928 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_shift_expression5930 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_additive_expression_in_shift_expression5933 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L});
	public static final BitSet FOLLOW_shift_expression_in_relational_expression5950 = new BitSet(new long[]{0x0000000000200002L,0x0000000801120000L,0x0000000000004000L});
	public static final BitSet FOLLOW_set_in_relational_expression5978 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_shift_expression_in_relational_expression5995 = new BitSet(new long[]{0x0000000000200002L,0x0000000801120000L,0x0000000000004000L});
	public static final BitSet FOLLOW_set_in_relational_expression6025 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_non_nullable_type_in_relational_expression6033 = new BitSet(new long[]{0x0000000000200002L,0x0000000801120000L,0x0000000000004000L});
	public static final BitSet FOLLOW_relational_expression_in_equality_expression6068 = new BitSet(new long[]{0x4000000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_set_in_equality_expression6082 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_relational_expression_in_equality_expression6090 = new BitSet(new long[]{0x4000000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_equality_expression_in_and_expression6107 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
	public static final BitSet FOLLOW_66_in_and_expression6110 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_equality_expression_in_and_expression6114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
	public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression6131 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
	public static final BitSet FOLLOW_93_in_exclusive_or_expression6134 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression6138 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
	public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression6155 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_198_in_inclusive_or_expression6160 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression6164 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression6181 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_65_in_conditional_and_expression6186 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression6190 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression6207 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_200_in_conditional_or_expression6211 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression6215 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression6233 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_90_in_null_coalescing_expression6238 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression6242 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_null_coalescing_expression_in_conditional_expression6259 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_89_in_conditional_expression6264 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_conditional_expression6268 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_conditional_expression6272 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_conditional_expression6276 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_function_signature_in_lambda_expression6303 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_87_in_lambda_expression6307 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_anonymous_function_body_in_lambda_expression6311 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_anonymous_function_signature6325 = new BitSet(new long[]{0x0000800008000000L,0x45A426B680000000L,0x66823AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature6335 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6355 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_anonymous_function_signature6366 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6378 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6401 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_implicit_anonymous_function_parameter_list6406 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6410 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_implicit_anonymous_function_parameter6427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_anonymous_function_body6441 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_anonymous_function_body6453 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_from_clause_in_query_expression6472 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080004018090L,0x0000000000000004L});
	public static final BitSet FOLLOW_query_body_in_query_expression6476 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_body_clauses_in_query_body6500 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080000000080L});
	public static final BitSet FOLLOW_select_or_group_clause_in_query_body6505 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_query_continuation_in_query_body6516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_141_in_query_continuation6533 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_query_continuation6537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080004018090L,0x0000000000000004L});
	public static final BitSet FOLLOW_query_body_in_query_continuation6541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_body_clause_in_query_body_clauses6555 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000004018010L,0x0000000000000004L});
	public static final BitSet FOLLOW_from_clause_in_query_body_clause6571 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_let_clause_in_query_body_clause6583 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_where_clause_in_query_body_clause6595 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_join_clause_in_query_body_clause6607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_orderby_clause_in_query_body_clause6619 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_132_in_from_clause6633 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_from_clause6637 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_from_clause6642 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_137_in_from_clause6646 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_from_clause6650 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_143_in_join_clause6665 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_join_clause6669 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_join_clause6674 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_137_in_join_clause6678 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_join_clause6682 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_152_in_join_clause6686 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_join_clause6690 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_122_in_join_clause6694 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_join_clause6698 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_141_in_join_clause6701 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_join_clause6703 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_144_in_let_clause6720 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_let_clause6724 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_let_clause6728 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_let_clause6732 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_154_in_orderby_clause6746 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_ordering_list_in_orderby_clause6750 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ordering_in_ordering_list6765 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_ordering_list6770 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_ordering_in_ordering_list6774 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_ordering6791 = new BitSet(new long[]{0x0000000000000000L,0x0020001000000000L});
	public static final BitSet FOLLOW_ordering_direction_in_ordering6796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_select_clause_in_select_or_group_clause6846 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_group_clause_in_select_or_group_clause6858 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_171_in_select_clause6873 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_select_clause6877 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_135_in_group_clause6892 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_group_clause6896 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_105_in_group_clause6900 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_group_clause6904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_194_in_where_clause6919 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_where_clause6923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_boolean_expression6938 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_global_attribute_in_global_attributes6957 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_global_attribute6974 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute6978 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_list_in_global_attribute6982 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000400L});
	public static final BitSet FOLLOW_74_in_global_attribute6986 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_global_attribute6991 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier7007 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_global_attribute_target_specifier7011 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_sections_in_attributes7047 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_section_in_attribute_sections7063 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_attribute_section7080 = new BitSet(new long[]{0x0000000008000000L,0x4D20023680000000L,0x408019852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_target_specifier_in_attribute_section7084 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_list_in_attribute_section7089 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000400L});
	public static final BitSet FOLLOW_74_in_attribute_section7093 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_attribute_section7098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_target_in_attribute_target_specifier7114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_attribute_target_specifier7118 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_in_attribute_list7174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_attribute_list7177 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_in_attribute_list7179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_attribute7198 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_attribute_arguments_in_attribute7202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_attribute_arguments7220 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_RPAREN_in_attribute_arguments7225 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_positional_argument_in_attribute_arguments7329 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_named_argument_in_attribute_arguments7348 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_74_in_attribute_arguments7427 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_positional_argument_in_attribute_arguments7436 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_RPAREN_in_attribute_arguments7475 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_positional_argument_in_positional_argument_list7517 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_positional_argument_list7520 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_positional_argument_in_positional_argument_list7522 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attribute_argument_expression_in_positional_argument7540 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_named_argument_in_named_argument_list7556 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_named_argument_list7559 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_named_argument_in_named_argument_list7561 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_named_argument7579 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_named_argument7583 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_attribute_argument_expression_in_named_argument7587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_attribute_argument_expression7603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_111_in_class_declaration7623 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_class_declaration7626 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_class_base_in_class_declaration7630 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration7635 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_class_body_in_class_declaration7640 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_class_declaration7644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_class_base7678 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_interface_type_list_in_class_base7682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_interface_type_list7706 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_interface_type_list7709 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_interface_type_list7713 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_197_in_class_body7731 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000617L});
	public static final BitSet FOLLOW_class_member_declarations_in_class_body7735 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_class_body7740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_member_declaration_in_class_member_declarations7755 = new BitSet(new long[]{0x0000000008020002L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000417L});
	public static final BitSet FOLLOW_112_in_constant_declaration7773 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_constant_declaration7777 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_constant_declaration7781 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_constant_declaration7785 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constant_declarator_in_constant_declarators7800 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_constant_declarators7803 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarator_in_constant_declarators7805 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_constant_declarator7822 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_constant_declarator7827 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_constant_expression_in_constant_declarator7831 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_constant_expression7848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_declarators_in_field_declaration7864 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_field_declaration7868 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_declarator_in_variable_declarators7890 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_variable_declarators7893 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_variable_declarator_in_variable_declarators7897 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_variable_declarator7914 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_variable_declarator7917 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_variable_initializer_in_variable_declarator7921 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_method_header_in_method_declaration7956 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_method_body_in_method_declaration7960 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_method_header7975 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_method_header7978 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_method_header7982 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_method_header7987 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_method_header7991 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_method_body8007 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_qid_in_member_name8022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_property_declaration8055 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_property_declaration8059 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000101A00001020L});
	public static final BitSet FOLLOW_accessor_declarations_in_property_declaration8063 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_property_declaration8067 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_accessor_declarations8082 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000101A00001020L});
	public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations8102 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000101A00001000L});
	public static final BitSet FOLLOW_attributes_in_accessor_declarations8106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000101A00001000L});
	public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations8111 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations8132 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000001A00001020L});
	public static final BitSet FOLLOW_attributes_in_accessor_declarations8136 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001A00001020L});
	public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations8141 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_accessor_modifier_in_get_accessor_declaration8158 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_133_in_get_accessor_declaration8163 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_accessor_body_in_get_accessor_declaration8167 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_accessor_modifier_in_set_accessor_declaration8182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_172_in_set_accessor_declaration8187 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_accessor_body_in_set_accessor_declaration8191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_accessor_body8233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_123_in_event_declaration8250 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_event_declaration8254 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_member_name_in_event_declaration8283 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_event_declaration8287 = new BitSet(new long[]{0x0000000000000000L,0x0000000208000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_event_accessor_declarations_in_event_declaration8291 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_event_declaration8295 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_declarators_in_event_declaration8315 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_event_declaration8319 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_event_modifiers8359 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_event_accessor_declarations8375 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations8382 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_attributes_in_event_accessor_declarations8386 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8391 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8419 = new BitSet(new long[]{0x0000000000000000L,0x0000000208000000L});
	public static final BitSet FOLLOW_attributes_in_event_accessor_declarations8423 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations8428 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_97_in_add_accessor_declaration8445 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_add_accessor_declaration8449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_167_in_remove_accessor_declaration8464 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_remove_accessor_declaration8468 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ENUM_in_enum_declaration8487 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_enum_declaration8491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_enum_base_in_enum_declaration8495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_enum_body_in_enum_declaration8500 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_enum_declaration8504 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_enum_base8520 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L,0x2600220000040400L});
	public static final BitSet FOLLOW_integral_type_in_enum_base8524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_enum_body8539 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852519A090L,0x0000000000000214L});
	public static final BitSet FOLLOW_enum_member_declarations_in_enum_body8542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_enum_body8544 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_enum_body8551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations8566 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_enum_member_declarations8569 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations8571 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attributes_in_enum_member_declaration8588 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_enum_member_declaration8593 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_enum_member_declaration8598 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_enum_member_declaration8602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_116_in_delegate_declaration8673 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_return_type_in_delegate_declaration8677 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_delegate_declaration8681 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020010L});
	public static final BitSet FOLLOW_variant_generic_parameter_list_in_delegate_declaration8684 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_delegate_declaration8706 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_delegate_declaration8710 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_delegate_declaration8715 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration8719 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_delegate_declaration8724 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_delegate_modifiers8739 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_variant_generic_parameter_list8756 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852D19A290L,0x0000000000000014L});
	public static final BitSet FOLLOW_variant_type_parameters_in_variant_generic_parameter_list8760 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_variant_generic_parameter_list8764 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters8779 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_variant_type_parameters8782 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852D19A290L,0x0000000000000014L});
	public static final BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters8784 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attributes_in_variant_type_variable_name8801 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852D19A290L,0x0000000000000014L});
	public static final BitSet FOLLOW_variance_annotation_in_variant_type_variable_name8806 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_variable_name_in_variant_type_variable_name8811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses8846 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraints_clauses8851 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses8855 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_194_in_type_parameter_constraints_clause8872 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_variable_name_in_type_parameter_constraints_clause8876 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_type_parameter_constraints_clause8880 = new BitSet(new long[]{0x0000000008000000L,0x4520823680000000L,0x408418852559A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause8884 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_type_parameter_constraint_list8947 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraint_list8958 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list8962 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraint_list8969 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list8973 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list8987 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraint_list8992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list8996 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list9010 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list9029 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_secondary_constraint_list9032 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list9034 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_secondary_constraint9051 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_type_variable_name9075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_150_in_constructor_constraint9090 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_constructor_constraint9094 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_constructor_constraint9098 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_return_type9113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_return_type9126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_formal_parameter_in_formal_parameter_list9140 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_formal_parameter_list9143 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_in_formal_parameter_list9145 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attributes_in_formal_parameter9162 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_fixed_parameter_in_formal_parameter9168 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parameter_array_in_formal_parameter9172 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_95_in_formal_parameter9186 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters9208 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_fixed_parameters9213 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66923AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters9217 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_parameter_modifier_in_fixed_parameter9235 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_fixed_parameter9240 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_fixed_parameter9244 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_default_argument_in_fixed_parameter9248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_default_argument9265 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_default_argument9267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_158_in_parameter_array9304 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_parameter_array9308 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_parameter_array9312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_139_in_interface_declaration9329 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_interface_declaration9333 = new BitSet(new long[]{0x0000000000000000L,0x0000000000028000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_variant_generic_parameter_list_in_interface_declaration9337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_interface_base_in_interface_declaration9353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration9358 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_interface_body_in_interface_declaration9363 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_interface_declaration9367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_interface_modifiers9384 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_interface_base9404 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_interface_type_list_in_interface_base9406 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_interface_body9421 = new BitSet(new long[]{0x0000000008000000L,0x6DA426B788000000L,0xF6833EBF35DDB492L,0x0000000000000217L});
	public static final BitSet FOLLOW_interface_member_declarations_in_interface_body9425 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_interface_body9430 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_member_declaration_in_interface_member_declarations9445 = new BitSet(new long[]{0x0000000008000002L,0x6DA426B788000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_attributes_in_interface_member_declaration9461 = new BitSet(new long[]{0x0000000008000000L,0x6DA426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_interface_member_declaration9467 = new BitSet(new long[]{0x0000000008000000L,0x4DA426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_192_in_interface_member_declaration9487 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration9491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_event_declaration_in_interface_member_declaration9511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_interface_member_declaration9531 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x409018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration9547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_property_declaration_in_interface_member_declaration9586 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_indexer_declaration_in_interface_member_declaration9624 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_interface_property_declaration9676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_interface_property_declaration9680 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000100000000020L});
	public static final BitSet FOLLOW_interface_accessor_declarations_in_interface_property_declaration9684 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_interface_property_declaration9688 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_interface_method_declaration9703 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020010L});
	public static final BitSet FOLLOW_generic_argument_list_in_interface_method_declaration9707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_interface_method_declaration9722 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_interface_method_declaration9726 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_interface_method_declaration9731 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration9735 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_method_declaration9740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_123_in_interface_event_declaration9765 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_interface_event_declaration9769 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_interface_event_declaration9773 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_event_declaration9777 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_interface_indexer_declaration9803 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_interface_indexer_declaration9807 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_interface_indexer_declaration9811 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_interface_indexer_declaration9815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_interface_indexer_declaration9819 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000100000000020L});
	public static final BitSet FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration9823 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_interface_indexer_declaration9827 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations9842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000020L});
	public static final BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations9865 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations9869 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations9874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations9895 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations9899 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations9904 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_133_in_interface_get_accessor_declaration9921 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_get_accessor_declaration9925 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_172_in_interface_set_accessor_declaration9956 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_set_accessor_declaration9960 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_method_modifiers9991 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_178_in_struct_declaration10017 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_struct_declaration10021 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_struct_interfaces_in_struct_declaration10025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_declaration10030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_struct_body_in_struct_declaration10035 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_struct_declaration10039 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_modifier_in_struct_modifiers10055 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x1000001A00401000L});
	public static final BitSet FOLLOW_79_in_struct_interfaces10106 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_interface_type_list_in_struct_interfaces10110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_struct_body10124 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000217L});
	public static final BitSet FOLLOW_struct_member_declarations_in_struct_body10128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_struct_body10133 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations10147 = new BitSet(new long[]{0x0000000008020002L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000017L});
	public static final BitSet FOLLOW_attributes_in_struct_member_declaration10163 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B780000000L,0xF6873EBFB5DDBD92L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_struct_member_declaration10170 = new BitSet(new long[]{0x0000000008020000L,0x5DB5A6B680000000L,0x66863A85A59DAD92L,0x0000000000000015L});
	public static final BitSet FOLLOW_112_in_struct_member_declaration10183 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_struct_member_declaration10187 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_struct_member_declaration10191 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_struct_member_declaration10195 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_event_declaration_in_struct_member_declaration10207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_159_in_struct_member_declaration10235 = new BitSet(new long[]{0x042900180C100020L,0x45A4A6B680000000L,0x66863A85259DAC92L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration10238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_struct_member_declaration10270 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_struct_member_declaration10302 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_struct_member_declaration10334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_struct_member_declaration10348 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_struct_member_declaration10368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_struct_member_declaration10396 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration10400 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_struct_member_declaration10412 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66923A85279DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration10426 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_declaration_in_struct_member_declaration10459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_name_in_struct_member_declaration10496 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_struct_member_declaration10498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_indexer_declaration_in_struct_member_declaration10500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_indexer_declaration_in_struct_member_declaration10523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_field_declaration_in_struct_member_declaration10550 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_operator_declaration_in_struct_member_declaration10575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_struct_member_declaration10614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_declaration_in_struct_member_declaration10634 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_declaration_in_struct_member_declaration10662 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conversion_operator_declaration_in_struct_member_declaration10682 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_declaration_in_struct_member_declaration10694 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_indexer_declarator_in_indexer_declaration10739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_indexer_declaration10743 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000101A00001020L});
	public static final BitSet FOLLOW_accessor_declarations_in_indexer_declaration10747 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_indexer_declaration10751 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_indexer_declarator10775 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_indexer_declarator10779 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_indexer_declarator10783 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_indexer_declarator10787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_operator_declarator_in_operator_declaration10812 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_operator_body_in_operator_declaration10816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_153_in_operator_declarator10831 = new BitSet(new long[]{0xE020000400300000L,0x00000000215629A4L,0x0000000000000000L,0x0000000000000440L});
	public static final BitSet FOLLOW_set_in_operator_declarator10853 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_operator_declarator10863 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_operator_declarator10867 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_operator_declarator10871 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator10874 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator10878 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_overloadable_unary_operator_in_operator_declarator10899 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator10903 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_overloadable_binary_operator_in_operator_declarator10923 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator10927 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RPAREN_in_unary_operator_declarator10946 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_binary_operator_declarator11003 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_binary_operator_declarator11007 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_binary_operator_declarator11011 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_binary_operator_declarator11015 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_69_in_overloadable_binary_operator11033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_77_in_overloadable_binary_operator11037 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_63_in_overloadable_binary_operator11041 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_66_in_overloadable_binary_operator11045 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_198_in_overloadable_binary_operator11049 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_93_in_overloadable_binary_operator11053 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_82_in_overloadable_binary_operator11057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GT_in_overloadable_binary_operator11061 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_overloadable_binary_operator11063 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_86_in_overloadable_binary_operator11067 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_62_in_overloadable_binary_operator11071 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GT_in_overloadable_binary_operator11075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_overloadable_binary_operator11079 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_88_in_overloadable_binary_operator11083 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_84_in_overloadable_binary_operator11087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration11104 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_operator_body_in_conversion_operator_declaration11108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_conversion_operator_declarator11123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_153_in_conversion_operator_declarator11132 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_conversion_operator_declarator11136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_conversion_operator_declarator11140 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_conversion_operator_declarator11144 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_conversion_operator_declarator11148 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_conversion_operator_declarator11152 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_operator_body11167 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_declarator_in_constructor_declaration11184 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_constructor_body_in_constructor_declaration11188 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_constructor_declarator11203 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_constructor_declarator11207 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_constructor_declarator11211 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_constructor_declarator11216 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
	public static final BitSet FOLLOW_constructor_initializer_in_constructor_declarator11220 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_constructor_initializer11236 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_set_in_constructor_initializer11240 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_constructor_initializer11250 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_list_in_constructor_initializer11254 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_constructor_initializer11259 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_constructor_body11274 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_202_in_destructor_declaration11297 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_destructor_declaration11300 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_destructor_declaration11304 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_destructor_declaration11308 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_destructor_body_in_destructor_declaration11313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_destructor_body11328 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_invocation_start_in_invocation_expression11345 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_arguments_in_invocation_expression11367 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_invocation_part_in_invocation_expression11371 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_invocation_part_in_invocation_expression11424 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_arguments_in_invocation_expression11430 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_invocation_start11445 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_invocation_start11476 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_invocation_start11480 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_invocation_start11492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_102_in_invocation_start11505 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_invocation_start11517 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_invocation_start11522 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_invocation_start11526 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeof_expression_in_invocation_start11540 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_identifier_in_invocation_part11577 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_brackets_in_invocation_part11589 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_statement_in_statement11613 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_labeled_statement_in_statement11635 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_embedded_statement_in_statement11647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_embedded_statement11671 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selection_statement_in_embedded_statement11683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_iteration_statement_in_embedded_statement11703 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_jump_statement_in_embedded_statement11723 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_try_statement_in_embedded_statement11751 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_checked_statement_in_embedded_statement11763 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unchecked_statement_in_embedded_statement11775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_lock_statement_in_embedded_statement11787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_using_statement_in_embedded_statement11799 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_yield_statement_in_embedded_statement11812 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unsafe_statement_in_embedded_statement11825 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fixed_statement_in_embedded_statement11837 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_statement_in_embedded_statement11849 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_128_in_fixed_statement11880 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_fixed_statement11884 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_pointer_type_in_fixed_statement11888 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement11890 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_fixed_statement11894 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_fixed_statement11898 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators11913 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_fixed_pointer_declarators11918 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators11922 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_fixed_pointer_declarator11939 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_fixed_pointer_declarator11943 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator11947 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fixed_pointer_initializer11971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_188_in_unsafe_statement11985 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_unsafe_statement11989 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_labeled_statement12003 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_labeled_statement12007 = new BitSet(new long[]{0x262D001C1C100020L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043DL});
	public static final BitSet FOLLOW_statement_in_labeled_statement12011 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_declaration_statement12027 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_local_constant_declaration_in_declaration_statement12040 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declaration_statement12043 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_type_in_local_variable_declaration12058 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration12062 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_190_in_local_variable_type12083 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_120_in_local_variable_type12101 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_local_variable_type12113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators12128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_local_variable_declarators12131 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators12133 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_local_variable_declarator12150 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_local_variable_declarator12153 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F92FA8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator12157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_local_variable_initializer12175 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_initializer_in_local_variable_initializer12187 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer12200 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_175_in_stackalloc_initializer12214 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer12218 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_stackalloc_initializer12222 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_stackalloc_initializer12226 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_stackalloc_initializer12230 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_112_in_local_constant_declaration12245 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_local_constant_declaration12249 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_local_constant_declaration12253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_expression_statement12268 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_expression_statement12272 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_statement_expression12289 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_if_statement_in_selection_statement12312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_switch_statement_in_selection_statement12324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IF_in_if_statement12348 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_if_statement12352 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_if_statement12356 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_if_statement12360 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_if_statement12364 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
	public static final BitSet FOLLOW_else_statement_in_if_statement12373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_121_in_else_statement12398 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_else_statement12402 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_179_in_switch_statement12424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_switch_statement12428 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_switch_statement12432 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_switch_statement12436 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_switch_block_in_switch_statement12440 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_switch_block12455 = new BitSet(new long[]{0x0000000000000000L,0x0008080000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_switch_sections_in_switch_block12459 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_switch_block12464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_switch_section_in_switch_sections12479 = new BitSet(new long[]{0x0000000000000002L,0x0008080000000000L});
	public static final BitSet FOLLOW_switch_labels_in_switch_section12495 = new BitSet(new long[]{0x262D001C1C100020L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043DL});
	public static final BitSet FOLLOW_statement_list_in_switch_section12499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_switch_label_in_switch_labels12514 = new BitSet(new long[]{0x0000000000000002L,0x0008080000000000L});
	public static final BitSet FOLLOW_107_in_switch_label12531 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_constant_expression_in_switch_label12535 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_switch_label12539 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_115_in_switch_label12553 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_switch_label12557 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_while_statement_in_iteration_statement12573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_do_statement_in_iteration_statement12585 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_for_statement_in_iteration_statement12597 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_foreach_statement_in_iteration_statement12609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_195_in_while_statement12624 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_while_statement12628 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_while_statement12632 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_while_statement12636 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_while_statement12640 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_118_in_do_statement12655 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_do_statement12659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_195_in_do_statement12663 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_do_statement12667 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_do_statement12671 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_do_statement12675 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_do_statement12679 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_130_in_for_statement12694 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_for_statement12698 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000415L});
	public static final BitSet FOLLOW_for_initializer_in_for_statement12702 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_for_statement12707 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_for_condition_in_for_statement12711 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_for_statement12716 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_for_iterator_in_for_statement12720 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_for_statement12725 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_for_statement12729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_for_initializer12750 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_expression_list_in_for_initializer12762 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_boolean_expression_in_for_condition12786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_expression_list_in_for_iterator12801 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_expression_in_statement_expression_list12816 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_statement_expression_list12819 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_statement_expression_in_statement_expression_list12821 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_131_in_foreach_statement12838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_foreach_statement12842 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_local_variable_type_in_foreach_statement12846 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_foreach_statement12850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_137_in_foreach_statement12854 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_foreach_statement12858 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_foreach_statement12862 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_foreach_statement12866 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_break_statement_in_jump_statement12881 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_continue_statement_in_jump_statement12893 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_goto_statement_in_jump_statement12905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_return_statement_in_jump_statement12917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_throw_statement_in_jump_statement12929 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_104_in_break_statement12944 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_break_statement12948 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_113_in_continue_statement12963 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_continue_statement12967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_134_in_goto_statement12982 = new BitSet(new long[]{0x0000000008000000L,0x45280A3680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_goto_statement12988 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_107_in_goto_statement13017 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_constant_expression_in_goto_statement13021 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_115_in_goto_statement13050 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_goto_statement13055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_168_in_return_statement13070 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_return_statement13074 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_return_statement13079 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_181_in_throw_statement13094 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_throw_statement13098 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_throw_statement13103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_182_in_try_statement13116 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_try_statement13120 = new BitSet(new long[]{0x0000000000000000L,0x8000100000000000L});
	public static final BitSet FOLLOW_catch_clauses_in_try_statement13126 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_finally_clause_in_try_statement13130 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_finally_clause_in_try_statement13177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_108_in_catch_clauses13193 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_specific_catch_clauses_in_catch_clauses13198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_general_catch_clause_in_catch_clauses13202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses13218 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
	public static final BitSet FOLLOW_108_in_specific_catch_clauses13223 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses13228 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
	public static final BitSet FOLLOW_general_catch_clause_in_specific_catch_clauses13232 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
	public static final BitSet FOLLOW_68_in_specific_catch_clause13249 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_class_type_in_specific_catch_clause13253 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_specific_catch_clause13257 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_specific_catch_clause13262 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_specific_catch_clause13266 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_general_catch_clause13281 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_127_in_finally_clause13296 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_finally_clause13300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_110_in_checked_statement13315 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_checked_statement13319 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_187_in_unchecked_statement13334 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_unchecked_statement13338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_145_in_lock_statement13353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_lock_statement13357 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_lock_statement13360 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_lock_statement13364 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_lock_statement13368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_in_using_statement13383 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_using_statement13387 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000415L});
	public static final BitSet FOLLOW_resource_acquisition_in_using_statement13392 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_using_statement13396 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_using_statement13401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_resource_acquisition13422 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_resource_acquisition13434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_196_in_yield_statement13449 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_168_in_yield_statement13454 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_yield_statement13458 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_yield_statement13462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_104_in_yield_statement13484 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_yield_statement13488 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assignment_in_assignment_list16701 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_assignment_list16703 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_attributes_in_field_declarations16721 = new BitSet(new long[]{0x0000000008000000L,0x65A426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_field_declarations16726 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_field_declarations16731 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_field_declaration_in_field_declarations16735 = new BitSet(new long[]{0x0000000008000002L,0x65A426B788000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_attributes_in_property_declaration_list16753 = new BitSet(new long[]{0x0000000008000000L,0x65A426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_property_declaration_list16758 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_property_declaration_list16763 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_property_declaration_in_property_declaration_list16767 = new BitSet(new long[]{0x0000000008000002L,0x65A426B788000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_constant_declaration_in_constant_declarations16784 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L});
	public static final BitSet FOLLOW_literal_in_literals16799 = new BitSet(new long[]{0x0429001804100022L});
	public static final BitSet FOLLOW_attributes_in_delegate_declaration_list16816 = new BitSet(new long[]{0x0000000000000000L,0x2010000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_modifiers_in_delegate_declaration_list16821 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_delegate_declaration_in_delegate_declaration_list16826 = new BitSet(new long[]{0x0000000000000002L,0x2010000108000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_local_variable_declaration_list16844 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_local_variable_declaration_list16846 = new BitSet(new long[]{0x0000000008000002L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_initializer_list16864 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_local_variable_initializer_list16866 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F92FA8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_expression_in_expression_list_test16884 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_expression_list_test16886 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression_list16904 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_unary_expression_list16906 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_invocation_expression_in_invocation_expression_list16924 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_invocation_expression_list16926 = new BitSet(new long[]{0x0000000008000002L,0x45A426F680000000L,0x67923A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_primary_expression_in_primary_expression_list16944 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_primary_expression_list16946 = new BitSet(new long[]{0x042900180C100022L,0x45BC66F680000010L,0x6F927A8525DDA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression_list16964 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_non_assignment_expression_list16966 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_modifiers_in_method_declarations16984 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_192_in_method_declarations16988 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_in_method_declarations16992 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_method_declarations16995 = new BitSet(new long[]{0x0000000008000002L,0x65A426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_159_in_synpred1_cs384 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred2_cs977 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_synpred2_cs981 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred3_cs1010 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred3_cs1014 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred4_cs1043 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_synpred4_cs1047 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_180_in_synpred4_cs1051 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_synpred5_cs1339 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_synpred5_cs1344 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_102_in_synpred6_cs1371 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_synpred6_cs1375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_creation_expression_in_synpred7_cs1425 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred7_cs1429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_creation_expression_in_synpred8_cs1606 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred9_cs1985 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred9_cs1990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_synpred10_cs2431 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_synpred10_cs2435 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred10_cs2439 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_creation_expression_in_synpred11_cs3017 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_synpred12_cs3244 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred12_cs3248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unbound_type_name_in_synpred13_cs4271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_dimension_specifier_in_synpred14_cs4434 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_synpred14_cs4438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred15_cs4661 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred15_cs4665 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred16_cs4759 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred16_cs4764 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_synpred17_cs4927 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_type_name_in_synpred17_cs4931 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_rank_specifiers_in_synpred17_cs4935 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_synpred18_cs4969 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_type_name_in_synpred18_cs4973 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_69_in_synpred18_cs4978 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_89_in_synpred18_cs4983 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unary_expression_in_synpred19_cs5326 = new BitSet(new long[]{0x0000000000200000L,0x0000000040285249L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_assignment_operator_in_synpred19_cs5330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cast_expression_in_synpred20_cs5437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_function_signature_in_synpred21_cs5779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_87_in_synpred21_cs5783 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_expression_in_synpred22_cs5808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_141_in_synpred23_cs6511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_synpred24_cs7335 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_synpred24_cs7339 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_synpred24_cs7343 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred25_cs8274 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred25_cs8278 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred26_cs9538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_synpred26_cs9542 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred27_cs9577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred27_cs9581 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred28_cs10417 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_synpred28_cs10421 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred29_cs10450 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred29_cs10454 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred30_cs10483 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_synpred30_cs10487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_180_in_synpred30_cs10491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_synpred31_cs11352 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred31_cs11356 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred32_cs11459 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred32_cs11464 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_statement_in_synpred33_cs11608 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred34_cs11626 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_synpred34_cs11630 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_190_in_synpred35_cs12078 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_120_in_synpred36_cs12096 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_121_in_synpred37_cs12368 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_synpred38_cs12745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_synpred39_cs13417 = new BitSet(new long[]{0x0000000000000002L});
}
