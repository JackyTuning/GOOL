// $ANTLR 3.5 /Users/jeremie/ANTLR/cs.g 2014-01-23 10:18:17

  package gool.parser.csharp;
  
  import gool.parser.csharp.ast.*;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;


@SuppressWarnings("all")
public class csParser extends Parser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "COMMENT", "Character_literal", 
		"DECIMAL_DIGIT", "DEFINE", "DEFINE_TOKEN", "DOC_LINE_COMMENT", "DOT", 
		"Decimal_digits", "Decimal_integer_literal", "ELIF", "ELSE_TOKEN", "ENDIF", 
		"ENDIF_TOKEN", "ENUM", "EscapeSequence", "Exponent_part", "FALSE", "GT", 
		"GooBall", "GooBallIdentifier", "HEX_DIGIT", "HEX_DIGITS", "Hex_number", 
		"IDENTIFIER", "IF", "IF_TOKEN", "INTEGER_TYPE_SUFFIX", "IdentifierPart", 
		"IdentifierStart", "LINE_COMMENT", "MINUS", "NULL", "NUMBER", "PP_AND_EXPRESSION", 
		"PP_CONDITIONAL", "PP_EQUALITY_EXPRESSION", "PP_EXPRESSION", "PP_OR_EXPRESSION", 
		"PP_PRIMARY_EXPRESSION", "PP_UNARY_EXPRESSION", "PREPROCESSOR_DIRECTIVE", 
		"PTR", "Pragma", "RPAREN", "Real_literal", "Real_type_suffix", "SEMI", 
		"STRINGLITERAL", "Sign", "TRUE", "TS", "UNDEF", "UNDEF_TOKEN", "USING", 
		"Verbatim_string_literal", "Verbatim_string_literal_character", "WS", 
		"'!'", "'!='", "'%'", "'%='", "'&&'", "'&'", "'&='", "'('", "'*'", "'*='", 
		"'+'", "'++'", "'+='", "','", "'--'", "'-='", "'/'", "'/='", "':'", "'::'", 
		"'<'", "'<<'", "'<<='", "'<='", "'='", "'=='", "'=>'", "'>='", "'?'", 
		"'??'", "'['", "']'", "'^'", "'^='", "'__arglist'", "'abstract'", "'add'", 
		"'alias'", "'as'", "'ascending'", "'assembly'", "'base'", "'bool'", "'break'", 
		"'by'", "'byte'", "'case'", "'catch'", "'char'", "'checked'", "'class'", 
		"'const'", "'continue'", "'decimal'", "'default'", "'delegate'", "'descending'", 
		"'do'", "'double'", "'dynamic'", "'else'", "'equals'", "'event'", "'explicit'", 
		"'extern'", "'field'", "'finally'", "'fixed'", "'float'", "'for'", "'foreach'", 
		"'from'", "'get'", "'goto'", "'group'", "'implicit'", "'in'", "'int'", 
		"'interface'", "'internal'", "'into'", "'is'", "'join'", "'let'", "'lock'", 
		"'long'", "'method'", "'module'", "'namespace'", "'new'", "'object'", 
		"'on'", "'operator'", "'orderby'", "'out'", "'override'", "'param'", "'params'", 
		"'partial'", "'pragma'", "'private'", "'property'", "'protected'", "'public'", 
		"'readonly'", "'ref'", "'remove'", "'return'", "'sbyte'", "'sealed'", 
		"'select'", "'set'", "'short'", "'sizeof'", "'stackalloc'", "'static'", 
		"'string'", "'struct'", "'switch'", "'this'", "'throw'", "'try'", "'type'", 
		"'typeof'", "'uint'", "'ulong'", "'unchecked'", "'unsafe'", "'ushort'", 
		"'var'", "'virtual'", "'void'", "'volatile'", "'where'", "'while'", "'yield'", 
		"'{'", "'|'", "'|='", "'||'", "'}'", "'~'"
	};
	public static final int EOF=-1;
	public static final int T__61=61;
	public static final int T__62=62;
	public static final int T__63=63;
	public static final int T__64=64;
	public static final int T__65=65;
	public static final int T__66=66;
	public static final int T__67=67;
	public static final int T__68=68;
	public static final int T__69=69;
	public static final int T__70=70;
	public static final int T__71=71;
	public static final int T__72=72;
	public static final int T__73=73;
	public static final int T__74=74;
	public static final int T__75=75;
	public static final int T__76=76;
	public static final int T__77=77;
	public static final int T__78=78;
	public static final int T__79=79;
	public static final int T__80=80;
	public static final int T__81=81;
	public static final int T__82=82;
	public static final int T__83=83;
	public static final int T__84=84;
	public static final int T__85=85;
	public static final int T__86=86;
	public static final int T__87=87;
	public static final int T__88=88;
	public static final int T__89=89;
	public static final int T__90=90;
	public static final int T__91=91;
	public static final int T__92=92;
	public static final int T__93=93;
	public static final int T__94=94;
	public static final int T__95=95;
	public static final int T__96=96;
	public static final int T__97=97;
	public static final int T__98=98;
	public static final int T__99=99;
	public static final int T__100=100;
	public static final int T__101=101;
	public static final int T__102=102;
	public static final int T__103=103;
	public static final int T__104=104;
	public static final int T__105=105;
	public static final int T__106=106;
	public static final int T__107=107;
	public static final int T__108=108;
	public static final int T__109=109;
	public static final int T__110=110;
	public static final int T__111=111;
	public static final int T__112=112;
	public static final int T__113=113;
	public static final int T__114=114;
	public static final int T__115=115;
	public static final int T__116=116;
	public static final int T__117=117;
	public static final int T__118=118;
	public static final int T__119=119;
	public static final int T__120=120;
	public static final int T__121=121;
	public static final int T__122=122;
	public static final int T__123=123;
	public static final int T__124=124;
	public static final int T__125=125;
	public static final int T__126=126;
	public static final int T__127=127;
	public static final int T__128=128;
	public static final int T__129=129;
	public static final int T__130=130;
	public static final int T__131=131;
	public static final int T__132=132;
	public static final int T__133=133;
	public static final int T__134=134;
	public static final int T__135=135;
	public static final int T__136=136;
	public static final int T__137=137;
	public static final int T__138=138;
	public static final int T__139=139;
	public static final int T__140=140;
	public static final int T__141=141;
	public static final int T__142=142;
	public static final int T__143=143;
	public static final int T__144=144;
	public static final int T__145=145;
	public static final int T__146=146;
	public static final int T__147=147;
	public static final int T__148=148;
	public static final int T__149=149;
	public static final int T__150=150;
	public static final int T__151=151;
	public static final int T__152=152;
	public static final int T__153=153;
	public static final int T__154=154;
	public static final int T__155=155;
	public static final int T__156=156;
	public static final int T__157=157;
	public static final int T__158=158;
	public static final int T__159=159;
	public static final int T__160=160;
	public static final int T__161=161;
	public static final int T__162=162;
	public static final int T__163=163;
	public static final int T__164=164;
	public static final int T__165=165;
	public static final int T__166=166;
	public static final int T__167=167;
	public static final int T__168=168;
	public static final int T__169=169;
	public static final int T__170=170;
	public static final int T__171=171;
	public static final int T__172=172;
	public static final int T__173=173;
	public static final int T__174=174;
	public static final int T__175=175;
	public static final int T__176=176;
	public static final int T__177=177;
	public static final int T__178=178;
	public static final int T__179=179;
	public static final int T__180=180;
	public static final int T__181=181;
	public static final int T__182=182;
	public static final int T__183=183;
	public static final int T__184=184;
	public static final int T__185=185;
	public static final int T__186=186;
	public static final int T__187=187;
	public static final int T__188=188;
	public static final int T__189=189;
	public static final int T__190=190;
	public static final int T__191=191;
	public static final int T__192=192;
	public static final int T__193=193;
	public static final int T__194=194;
	public static final int T__195=195;
	public static final int T__196=196;
	public static final int T__197=197;
	public static final int T__198=198;
	public static final int T__199=199;
	public static final int T__200=200;
	public static final int T__201=201;
	public static final int T__202=202;
	public static final int COMMENT=4;
	public static final int Character_literal=5;
	public static final int DECIMAL_DIGIT=6;
	public static final int DEFINE=7;
	public static final int DEFINE_TOKEN=8;
	public static final int DOC_LINE_COMMENT=9;
	public static final int DOT=10;
	public static final int Decimal_digits=11;
	public static final int Decimal_integer_literal=12;
	public static final int ELIF=13;
	public static final int ELSE_TOKEN=14;
	public static final int ENDIF=15;
	public static final int ENDIF_TOKEN=16;
	public static final int ENUM=17;
	public static final int EscapeSequence=18;
	public static final int Exponent_part=19;
	public static final int FALSE=20;
	public static final int GT=21;
	public static final int GooBall=22;
	public static final int GooBallIdentifier=23;
	public static final int HEX_DIGIT=24;
	public static final int HEX_DIGITS=25;
	public static final int Hex_number=26;
	public static final int IDENTIFIER=27;
	public static final int IF=28;
	public static final int IF_TOKEN=29;
	public static final int INTEGER_TYPE_SUFFIX=30;
	public static final int IdentifierPart=31;
	public static final int IdentifierStart=32;
	public static final int LINE_COMMENT=33;
	public static final int MINUS=34;
	public static final int NULL=35;
	public static final int NUMBER=36;
	public static final int PP_AND_EXPRESSION=37;
	public static final int PP_CONDITIONAL=38;
	public static final int PP_EQUALITY_EXPRESSION=39;
	public static final int PP_EXPRESSION=40;
	public static final int PP_OR_EXPRESSION=41;
	public static final int PP_PRIMARY_EXPRESSION=42;
	public static final int PP_UNARY_EXPRESSION=43;
	public static final int PREPROCESSOR_DIRECTIVE=44;
	public static final int PTR=45;
	public static final int Pragma=46;
	public static final int RPAREN=47;
	public static final int Real_literal=48;
	public static final int Real_type_suffix=49;
	public static final int SEMI=50;
	public static final int STRINGLITERAL=51;
	public static final int Sign=52;
	public static final int TRUE=53;
	public static final int TS=54;
	public static final int UNDEF=55;
	public static final int UNDEF_TOKEN=56;
	public static final int USING=57;
	public static final int Verbatim_string_literal=58;
	public static final int Verbatim_string_literal_character=59;
	public static final int WS=60;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public csParser(TokenStream input) {
		this(input, new RecognizerSharedState());
	}
	public csParser(TokenStream input, RecognizerSharedState state) {
		super(input, state);
		this.state.ruleMemo = new HashMap[356+1];


	}

	protected TreeAdaptor adaptor = new CommonTreeAdaptor();

	public void setTreeAdaptor(TreeAdaptor adaptor) {
		this.adaptor = adaptor;
	}
	public TreeAdaptor getTreeAdaptor() {
		return adaptor;
	}
	@Override public String[] getTokenNames() { return csParser.tokenNames; }
	@Override public String getGrammarFileName() { return "/Users/jeremie/ANTLR/cs.g"; }


	public static class compilation_unit_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "compilation_unit"
	// /Users/jeremie/ANTLR/cs.g:26:1: compilation_unit returns [CsharpNode t] : a= namespace_body[true] ;
	public final csParser.compilation_unit_return compilation_unit() throws RecognitionException {
		csParser.compilation_unit_return retval = new csParser.compilation_unit_return();
		retval.start = input.LT(1);
		int compilation_unit_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope a =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:26:40: (a= namespace_body[true] )
			// /Users/jeremie/ANTLR/cs.g:27:9: a= namespace_body[true]
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_namespace_body_in_compilation_unit88);
			a=namespace_body(true);
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

			if ( state.backtracking==0 ) {retval.t = new compilation_unit((a!=null?((csParser.namespace_body_return)a).t:null));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 1, compilation_unit_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "compilation_unit"


	public static class namespace_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_declaration"
	// /Users/jeremie/ANTLR/cs.g:29:1: namespace_declaration : 'namespace' qualified_identifier namespace_block ( ';' )? ;
	public final csParser.namespace_declaration_return namespace_declaration() throws RecognitionException {
		csParser.namespace_declaration_return retval = new csParser.namespace_declaration_return();
		retval.start = input.LT(1);
		int namespace_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1=null;
		Token char_literal4=null;
		ParserRuleReturnScope qualified_identifier2 =null;
		ParserRuleReturnScope namespace_block3 =null;

		CommonTree string_literal1_tree=null;
		CommonTree char_literal4_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:29:22: ( 'namespace' qualified_identifier namespace_block ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:30:9: 'namespace' qualified_identifier namespace_block ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1=(Token)match(input,149,FOLLOW_149_in_namespace_declaration114); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1_tree = (CommonTree)adaptor.create(string_literal1);
			adaptor.addChild(root_0, string_literal1_tree);
			}

			pushFollow(FOLLOW_qualified_identifier_in_namespace_declaration118);
			qualified_identifier2=qualified_identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, qualified_identifier2.getTree());

			pushFollow(FOLLOW_namespace_block_in_namespace_declaration122);
			namespace_block3=namespace_block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_block3.getTree());

			// /Users/jeremie/ANTLR/cs.g:30:64: ( ';' )?
			int alt1=2;
			int LA1_0 = input.LA(1);
			if ( (LA1_0==SEMI) ) {
				alt1=1;
			}
			switch (alt1) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:30:64: ';'
					{
					char_literal4=(Token)match(input,SEMI,FOLLOW_SEMI_in_namespace_declaration126); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal4_tree = (CommonTree)adaptor.create(char_literal4);
					adaptor.addChild(root_0, char_literal4_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 2, namespace_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_declaration"


	public static class namespace_block_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_block"
	// /Users/jeremie/ANTLR/cs.g:31:1: namespace_block : '{' namespace_body[false] '}' ;
	public final csParser.namespace_block_return namespace_block() throws RecognitionException {
		csParser.namespace_block_return retval = new csParser.namespace_block_return();
		retval.start = input.LT(1);
		int namespace_block_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal5=null;
		Token char_literal7=null;
		ParserRuleReturnScope namespace_body6 =null;

		CommonTree char_literal5_tree=null;
		CommonTree char_literal7_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:31:16: ( '{' namespace_body[false] '}' )
			// /Users/jeremie/ANTLR/cs.g:32:9: '{' namespace_body[false] '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal5=(Token)match(input,197,FOLLOW_197_in_namespace_block142); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal5_tree = (CommonTree)adaptor.create(char_literal5);
			adaptor.addChild(root_0, char_literal5_tree);
			}

			pushFollow(FOLLOW_namespace_body_in_namespace_block146);
			namespace_body6=namespace_body(false);
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_body6.getTree());

			char_literal7=(Token)match(input,201,FOLLOW_201_in_namespace_block151); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal7_tree = (CommonTree)adaptor.create(char_literal7);
			adaptor.addChild(root_0, char_literal7_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 3, namespace_block_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_block"


	public static class namespace_body_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_body"
	// /Users/jeremie/ANTLR/cs.g:33:1: namespace_body[boolean bGlobal] returns [CsharpNode t] : (a= extern_alias_directives )? (b= using_directives )? (c= global_attributes )? (d= namespace_member_declarations )? ;
	public final csParser.namespace_body_return namespace_body(boolean bGlobal) throws RecognitionException {
		csParser.namespace_body_return retval = new csParser.namespace_body_return();
		retval.start = input.LT(1);
		int namespace_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope a =null;
		ParserRuleReturnScope b =null;
		ParserRuleReturnScope c =null;
		ParserRuleReturnScope d =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:33:55: ( (a= extern_alias_directives )? (b= using_directives )? (c= global_attributes )? (d= namespace_member_declarations )? )
			// /Users/jeremie/ANTLR/cs.g:34:9: (a= extern_alias_directives )? (b= using_directives )? (c= global_attributes )? (d= namespace_member_declarations )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:34:10: (a= extern_alias_directives )?
			int alt2=2;
			int LA2_0 = input.LA(1);
			if ( (LA2_0==125) ) {
				int LA2_1 = input.LA(2);
				if ( (LA2_1==98) ) {
					alt2=1;
				}
			}
			switch (alt2) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:34:10: a= extern_alias_directives
					{
					pushFollow(FOLLOW_extern_alias_directives_in_namespace_body173);
					a=extern_alias_directives();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:34:39: (b= using_directives )?
			int alt3=2;
			int LA3_0 = input.LA(1);
			if ( (LA3_0==USING) ) {
				alt3=1;
			}
			switch (alt3) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:34:39: b= using_directives
					{
					pushFollow(FOLLOW_using_directives_in_namespace_body180);
					b=using_directives();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, b.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:34:61: (c= global_attributes )?
			int alt4=2;
			int LA4_0 = input.LA(1);
			if ( (LA4_0==91) ) {
				int LA4_1 = input.LA(2);
				if ( (LA4_1==101||LA4_1==148) ) {
					int LA4_3 = input.LA(3);
					if ( (LA4_3==79) ) {
						alt4=1;
					}
				}
			}
			switch (alt4) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:34:61: c= global_attributes
					{
					pushFollow(FOLLOW_global_attributes_in_namespace_body187);
					c=global_attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, c.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:34:84: (d= namespace_member_declarations )?
			int alt5=2;
			int LA5_0 = input.LA(1);
			if ( (LA5_0==ENUM||LA5_0==91||LA5_0==96||LA5_0==111||LA5_0==116||LA5_0==125||(LA5_0 >= 139 && LA5_0 <= 140)||(LA5_0 >= 149 && LA5_0 <= 150)||LA5_0==156||LA5_0==159||LA5_0==161||(LA5_0 >= 163 && LA5_0 <= 165)||LA5_0==170||LA5_0==176||LA5_0==178||LA5_0==188||LA5_0==191||LA5_0==193) ) {
				alt5=1;
			}
			switch (alt5) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:34:84: d= namespace_member_declarations
					{
					pushFollow(FOLLOW_namespace_member_declarations_in_namespace_body194);
					d=namespace_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, d.getTree());

					}
					break;

			}

			if ( state.backtracking==0 ) {retval.t =new namespace_body((a!=null?((csParser.extern_alias_directives_return)a).t:null),(b!=null?((csParser.using_directives_return)b).t:null),(c!=null?((csParser.global_attributes_return)c).t:null), (d!=null?((csParser.namespace_member_declarations_return)d).t:null));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 4, namespace_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_body"


	public static class extern_alias_directives_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "extern_alias_directives"
	// /Users/jeremie/ANTLR/cs.g:36:1: extern_alias_directives returns [UnknowNode t] : ( extern_alias_directive )+ ;
	public final csParser.extern_alias_directives_return extern_alias_directives() throws RecognitionException {
		csParser.extern_alias_directives_return retval = new csParser.extern_alias_directives_return();
		retval.start = input.LT(1);
		int extern_alias_directives_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope extern_alias_directive8 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:36:47: ( ( extern_alias_directive )+ )
			// /Users/jeremie/ANTLR/cs.g:37:9: ( extern_alias_directive )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:37:9: ( extern_alias_directive )+
			int cnt6=0;
			loop6:
			while (true) {
				int alt6=2;
				int LA6_0 = input.LA(1);
				if ( (LA6_0==125) ) {
					int LA6_2 = input.LA(2);
					if ( (LA6_2==98) ) {
						alt6=1;
					}

				}

				switch (alt6) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:37:9: extern_alias_directive
					{
					pushFollow(FOLLOW_extern_alias_directive_in_extern_alias_directives225);
					extern_alias_directive8=extern_alias_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, extern_alias_directive8.getTree());

					}
					break;

				default :
					if ( cnt6 >= 1 ) break loop6;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(6, input);
					throw eee;
				}
				cnt6++;
			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 5, extern_alias_directives_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "extern_alias_directives"


	public static class extern_alias_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "extern_alias_directive"
	// /Users/jeremie/ANTLR/cs.g:38:1: extern_alias_directive : 'extern' 'alias' identifier ';' ;
	public final csParser.extern_alias_directive_return extern_alias_directive() throws RecognitionException {
		csParser.extern_alias_directive_return retval = new csParser.extern_alias_directive_return();
		retval.start = input.LT(1);
		int extern_alias_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal9=null;
		Token string_literal10=null;
		Token char_literal12=null;
		ParserRuleReturnScope identifier11 =null;

		CommonTree string_literal9_tree=null;
		CommonTree string_literal10_tree=null;
		CommonTree char_literal12_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:38:23: ( 'extern' 'alias' identifier ';' )
			// /Users/jeremie/ANTLR/cs.g:39:9: 'extern' 'alias' identifier ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal9=(Token)match(input,125,FOLLOW_125_in_extern_alias_directive242); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal9_tree = (CommonTree)adaptor.create(string_literal9);
			adaptor.addChild(root_0, string_literal9_tree);
			}

			string_literal10=(Token)match(input,98,FOLLOW_98_in_extern_alias_directive246); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal10_tree = (CommonTree)adaptor.create(string_literal10);
			adaptor.addChild(root_0, string_literal10_tree);
			}

			pushFollow(FOLLOW_identifier_in_extern_alias_directive250);
			identifier11=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier11.getTree());

			char_literal12=(Token)match(input,SEMI,FOLLOW_SEMI_in_extern_alias_directive253); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal12_tree = (CommonTree)adaptor.create(char_literal12);
			adaptor.addChild(root_0, char_literal12_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 6, extern_alias_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "extern_alias_directive"


	public static class using_directives_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_directives"
	// /Users/jeremie/ANTLR/cs.g:40:1: using_directives returns [UnknowNode t] : ( using_directive )+ ;
	public final csParser.using_directives_return using_directives() throws RecognitionException {
		csParser.using_directives_return retval = new csParser.using_directives_return();
		retval.start = input.LT(1);
		int using_directives_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope using_directive13 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:40:40: ( ( using_directive )+ )
			// /Users/jeremie/ANTLR/cs.g:41:9: ( using_directive )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:41:9: ( using_directive )+
			int cnt7=0;
			loop7:
			while (true) {
				int alt7=2;
				int LA7_0 = input.LA(1);
				if ( (LA7_0==USING) ) {
					alt7=1;
				}

				switch (alt7) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:41:9: using_directive
					{
					pushFollow(FOLLOW_using_directive_in_using_directives272);
					using_directive13=using_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_directive13.getTree());

					}
					break;

				default :
					if ( cnt7 >= 1 ) break loop7;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(7, input);
					throw eee;
				}
				cnt7++;
			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 7, using_directives_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_directives"


	public static class using_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_directive"
	// /Users/jeremie/ANTLR/cs.g:43:1: using_directive : ( using_alias_directive | using_namespace_directive ) ;
	public final csParser.using_directive_return using_directive() throws RecognitionException {
		csParser.using_directive_return retval = new csParser.using_directive_return();
		retval.start = input.LT(1);
		int using_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope using_alias_directive14 =null;
		ParserRuleReturnScope using_namespace_directive15 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:43:16: ( ( using_alias_directive | using_namespace_directive ) )
			// /Users/jeremie/ANTLR/cs.g:44:9: ( using_alias_directive | using_namespace_directive )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:44:9: ( using_alias_directive | using_namespace_directive )
			int alt8=2;
			int LA8_0 = input.LA(1);
			if ( (LA8_0==USING) ) {
				int LA8_1 = input.LA(2);
				if ( (LA8_1==IDENTIFIER||LA8_1==95||(LA8_1 >= 97 && LA8_1 <= 98)||(LA8_1 >= 100 && LA8_1 <= 101)||LA8_1==105||LA8_1==117||LA8_1==120||LA8_1==122||LA8_1==126||LA8_1==132||LA8_1==135||LA8_1==141||(LA8_1 >= 143 && LA8_1 <= 144)||(LA8_1 >= 147 && LA8_1 <= 148)||LA8_1==152||LA8_1==154||LA8_1==157||LA8_1==160||LA8_1==162||LA8_1==167||(LA8_1 >= 171 && LA8_1 <= 172)||LA8_1==183||LA8_1==190||LA8_1==194||LA8_1==196) ) {
					int LA8_2 = input.LA(3);
					if ( (LA8_2==85) ) {
						alt8=1;
					}
					else if ( (LA8_2==DOT||LA8_2==SEMI||(LA8_2 >= 80 && LA8_2 <= 81)) ) {
						alt8=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 8, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 8, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 8, 0, input);
				throw nvae;
			}

			switch (alt8) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:44:10: using_alias_directive
					{
					pushFollow(FOLLOW_using_alias_directive_in_using_directive291);
					using_alias_directive14=using_alias_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_alias_directive14.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:45:11: using_namespace_directive
					{
					pushFollow(FOLLOW_using_namespace_directive_in_using_directive303);
					using_namespace_directive15=using_namespace_directive();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_namespace_directive15.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 8, using_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_directive"


	public static class using_alias_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_alias_directive"
	// /Users/jeremie/ANTLR/cs.g:46:1: using_alias_directive : 'using' identifier '=' namespace_or_type_name ';' ;
	public final csParser.using_alias_directive_return using_alias_directive() throws RecognitionException {
		csParser.using_alias_directive_return retval = new csParser.using_alias_directive_return();
		retval.start = input.LT(1);
		int using_alias_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal16=null;
		Token char_literal18=null;
		Token char_literal20=null;
		ParserRuleReturnScope identifier17 =null;
		ParserRuleReturnScope namespace_or_type_name19 =null;

		CommonTree string_literal16_tree=null;
		CommonTree char_literal18_tree=null;
		CommonTree char_literal20_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:46:22: ( 'using' identifier '=' namespace_or_type_name ';' )
			// /Users/jeremie/ANTLR/cs.g:47:9: 'using' identifier '=' namespace_or_type_name ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal16=(Token)match(input,USING,FOLLOW_USING_in_using_alias_directive319); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal16_tree = (CommonTree)adaptor.create(string_literal16);
			adaptor.addChild(root_0, string_literal16_tree);
			}

			pushFollow(FOLLOW_identifier_in_using_alias_directive330);
			identifier17=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier17.getTree());

			char_literal18=(Token)match(input,85,FOLLOW_85_in_using_alias_directive334); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal18_tree = (CommonTree)adaptor.create(char_literal18);
			adaptor.addChild(root_0, char_literal18_tree);
			}

			pushFollow(FOLLOW_namespace_or_type_name_in_using_alias_directive338);
			namespace_or_type_name19=namespace_or_type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name19.getTree());

			char_literal20=(Token)match(input,SEMI,FOLLOW_SEMI_in_using_alias_directive342); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal20_tree = (CommonTree)adaptor.create(char_literal20);
			adaptor.addChild(root_0, char_literal20_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 9, using_alias_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_alias_directive"


	public static class using_namespace_directive_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_namespace_directive"
	// /Users/jeremie/ANTLR/cs.g:48:1: using_namespace_directive : 'using' namespace_name ';' ;
	public final csParser.using_namespace_directive_return using_namespace_directive() throws RecognitionException {
		csParser.using_namespace_directive_return retval = new csParser.using_namespace_directive_return();
		retval.start = input.LT(1);
		int using_namespace_directive_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal21=null;
		Token char_literal23=null;
		ParserRuleReturnScope namespace_name22 =null;

		CommonTree string_literal21_tree=null;
		CommonTree char_literal23_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:48:26: ( 'using' namespace_name ';' )
			// /Users/jeremie/ANTLR/cs.g:49:9: 'using' namespace_name ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal21=(Token)match(input,USING,FOLLOW_USING_in_using_namespace_directive357); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal21_tree = (CommonTree)adaptor.create(string_literal21);
			adaptor.addChild(root_0, string_literal21_tree);
			}

			pushFollow(FOLLOW_namespace_name_in_using_namespace_directive361);
			namespace_name22=namespace_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_name22.getTree());

			char_literal23=(Token)match(input,SEMI,FOLLOW_SEMI_in_using_namespace_directive365); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal23_tree = (CommonTree)adaptor.create(char_literal23);
			adaptor.addChild(root_0, char_literal23_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 10, using_namespace_directive_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_namespace_directive"


	public static class namespace_member_declarations_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:50:1: namespace_member_declarations returns [CsharpNode t] : (a= namespace_member_declaration )+ ;
	public final csParser.namespace_member_declarations_return namespace_member_declarations() throws RecognitionException {
		csParser.namespace_member_declarations_return retval = new csParser.namespace_member_declarations_return();
		retval.start = input.LT(1);
		int namespace_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope a =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:50:53: ( (a= namespace_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:51:9: (a= namespace_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:51:9: (a= namespace_member_declaration )+
			int cnt9=0;
			loop9:
			while (true) {
				int alt9=2;
				int LA9_0 = input.LA(1);
				if ( (LA9_0==ENUM||LA9_0==91||LA9_0==96||LA9_0==111||LA9_0==116||LA9_0==125||(LA9_0 >= 139 && LA9_0 <= 140)||(LA9_0 >= 149 && LA9_0 <= 150)||LA9_0==156||LA9_0==159||LA9_0==161||(LA9_0 >= 163 && LA9_0 <= 165)||LA9_0==170||LA9_0==176||LA9_0==178||LA9_0==188||LA9_0==191||LA9_0==193) ) {
					alt9=1;
				}

				switch (alt9) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:51:10: a= namespace_member_declaration
					{
					pushFollow(FOLLOW_namespace_member_declaration_in_namespace_member_declarations387);
					a=namespace_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

					if ( state.backtracking==0 ) { if (retval.t == null) {retval.t =new namespace_member_declarations(); ((namespace_member_declarations)retval.t).add((a!=null?((csParser.namespace_member_declaration_return)a).t:null));} else {((namespace_member_declarations)retval.t).add((a!=null?((csParser.namespace_member_declaration_return)a).t:null));} }
					}
					break;

				default :
					if ( cnt9 >= 1 ) break loop9;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(9, input);
					throw eee;
				}
				cnt9++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 11, namespace_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_member_declarations"


	public static class namespace_member_declaration_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:53:1: namespace_member_declaration returns [CsharpNode t] : (a= namespace_declaration | (a= attributes )? (b= modifiers )? c= type_declaration );
	public final csParser.namespace_member_declaration_return namespace_member_declaration() throws RecognitionException {
		csParser.namespace_member_declaration_return retval = new csParser.namespace_member_declaration_return();
		retval.start = input.LT(1);
		int namespace_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope a =null;
		ParserRuleReturnScope b =null;
		ParserRuleReturnScope c =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:53:52: (a= namespace_declaration | (a= attributes )? (b= modifiers )? c= type_declaration )
			int alt12=2;
			int LA12_0 = input.LA(1);
			if ( (LA12_0==149) ) {
				alt12=1;
			}
			else if ( (LA12_0==ENUM||LA12_0==91||LA12_0==96||LA12_0==111||LA12_0==116||LA12_0==125||(LA12_0 >= 139 && LA12_0 <= 140)||LA12_0==150||LA12_0==156||LA12_0==159||LA12_0==161||(LA12_0 >= 163 && LA12_0 <= 165)||LA12_0==170||LA12_0==176||LA12_0==178||LA12_0==188||LA12_0==191||LA12_0==193) ) {
				alt12=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 12, 0, input);
				throw nvae;
			}

			switch (alt12) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:54:9: a= namespace_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_namespace_declaration_in_namespace_member_declaration423);
					a=namespace_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

					if ( state.backtracking==0 ) {retval.t =new UnknowNode(a);}
					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:55:11: (a= attributes )? (b= modifiers )? c= type_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:55:12: (a= attributes )?
					int alt10=2;
					int LA10_0 = input.LA(1);
					if ( (LA10_0==91) ) {
						alt10=1;
					}
					switch (alt10) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:55:12: a= attributes
							{
							pushFollow(FOLLOW_attributes_in_namespace_member_declaration439);
							a=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:55:28: (b= modifiers )?
					int alt11=2;
					int LA11_0 = input.LA(1);
					if ( (LA11_0==96||LA11_0==125||LA11_0==140||LA11_0==150||LA11_0==156||LA11_0==161||(LA11_0 >= 163 && LA11_0 <= 165)||LA11_0==170||LA11_0==176||LA11_0==188||LA11_0==191||LA11_0==193) ) {
						alt11=1;
					}
					switch (alt11) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:55:28: b= modifiers
							{
							pushFollow(FOLLOW_modifiers_in_namespace_member_declaration446);
							b=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, b.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_type_declaration_in_namespace_member_declaration453);
					c=type_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, c.getTree());

					if ( state.backtracking==0 ) {retval.t =new namespace_member_declaration((a!=null?((csParser.attributes_return)a).t:null),(b!=null?((csParser.modifiers_return)b).t:null), (c!=null?((csParser.type_declaration_return)c).t:null));}
					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 12, namespace_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_member_declaration"


	public static class type_declaration_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_declaration"
	// /Users/jeremie/ANTLR/cs.g:57:1: type_declaration returns [CsharpNode t] : ( ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) ) | (a= class_declaration |u= struct_declaration |u= interface_declaration |u= enum_declaration |u= delegate_declaration ) );
	public final csParser.type_declaration_return type_declaration() throws RecognitionException {
		csParser.type_declaration_return retval = new csParser.type_declaration_return();
		retval.start = input.LT(1);
		int type_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal24=null;
		ParserRuleReturnScope a =null;
		ParserRuleReturnScope u =null;
		ParserRuleReturnScope class_declaration25 =null;
		ParserRuleReturnScope struct_declaration26 =null;
		ParserRuleReturnScope interface_declaration27 =null;

		CommonTree string_literal24_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:57:40: ( ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) ) | (a= class_declaration |u= struct_declaration |u= interface_declaration |u= enum_declaration |u= delegate_declaration ) )
			int alt15=2;
			int LA15_0 = input.LA(1);
			if ( (LA15_0==159) && (synpred1_cs())) {
				alt15=1;
			}
			else if ( (LA15_0==ENUM||LA15_0==111||LA15_0==116||LA15_0==139||LA15_0==178) ) {
				alt15=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 15, 0, input);
				throw nvae;
			}

			switch (alt15) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:58:9: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:58:9: ( ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration ) )
					// /Users/jeremie/ANTLR/cs.g:58:10: ( 'partial' )=> 'partial' ( class_declaration | struct_declaration | interface_declaration )
					{
					string_literal24=(Token)match(input,159,FOLLOW_159_in_type_declaration490); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal24_tree = (CommonTree)adaptor.create(string_literal24);
					adaptor.addChild(root_0, string_literal24_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:58:37: ( class_declaration | struct_declaration | interface_declaration )
					int alt13=3;
					switch ( input.LA(1) ) {
					case 111:
						{
						alt13=1;
						}
						break;
					case 178:
						{
						alt13=2;
						}
						break;
					case 139:
						{
						alt13=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 13, 0, input);
						throw nvae;
					}
					switch (alt13) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:58:38: class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_type_declaration495);
							class_declaration25=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration25.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:59:67: struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_type_declaration563);
							struct_declaration26=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration26.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:60:67: interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_type_declaration631);
							interface_declaration27=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration27.getTree());

							}
							break;

					}

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:61:11: (a= class_declaration |u= struct_declaration |u= interface_declaration |u= enum_declaration |u= delegate_declaration )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:61:11: (a= class_declaration |u= struct_declaration |u= interface_declaration |u= enum_declaration |u= delegate_declaration )
					int alt14=5;
					switch ( input.LA(1) ) {
					case 111:
						{
						alt14=1;
						}
						break;
					case 178:
						{
						alt14=2;
						}
						break;
					case 139:
						{
						alt14=3;
						}
						break;
					case ENUM:
						{
						alt14=4;
						}
						break;
					case 116:
						{
						alt14=5;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 14, 0, input);
						throw nvae;
					}
					switch (alt14) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:61:12: a= class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_type_declaration648);
							a=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:62:11: u= struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_type_declaration663);
							u=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:63:11: u= interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_type_declaration677);
							u=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:64:11: u= enum_declaration
							{
							pushFollow(FOLLOW_enum_declaration_in_type_declaration691);
							u=enum_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 5 :
							// /Users/jeremie/ANTLR/cs.g:65:11: u= delegate_declaration
							{
							pushFollow(FOLLOW_delegate_declaration_in_type_declaration705);
							u=delegate_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;

					}

					if ( state.backtracking==0 ) {if (a != null) retval.t =new type_declaration((a!=null?((csParser.class_declaration_return)a).t:null)); else retval.t =new type_declaration(new UnknowNode(u));}
					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 13, type_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_declaration"


	public static class qualified_identifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qualified_identifier"
	// /Users/jeremie/ANTLR/cs.g:68:1: qualified_identifier : identifier ( '.' identifier )* ;
	public final csParser.qualified_identifier_return qualified_identifier() throws RecognitionException {
		csParser.qualified_identifier_return retval = new csParser.qualified_identifier_return();
		retval.start = input.LT(1);
		int qualified_identifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal29=null;
		ParserRuleReturnScope identifier28 =null;
		ParserRuleReturnScope identifier30 =null;

		CommonTree char_literal29_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:68:21: ( identifier ( '.' identifier )* )
			// /Users/jeremie/ANTLR/cs.g:69:9: identifier ( '.' identifier )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_qualified_identifier733);
			identifier28=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier28.getTree());

			// /Users/jeremie/ANTLR/cs.g:69:20: ( '.' identifier )*
			loop16:
			while (true) {
				int alt16=2;
				int LA16_0 = input.LA(1);
				if ( (LA16_0==DOT) ) {
					alt16=1;
				}

				switch (alt16) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:69:21: '.' identifier
					{
					char_literal29=(Token)match(input,DOT,FOLLOW_DOT_in_qualified_identifier736); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal29_tree = (CommonTree)adaptor.create(char_literal29);
					adaptor.addChild(root_0, char_literal29_tree);
					}

					pushFollow(FOLLOW_identifier_in_qualified_identifier738);
					identifier30=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier30.getTree());

					}
					break;

				default :
					break loop16;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 14, qualified_identifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qualified_identifier"


	public static class namespace_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_name"
	// /Users/jeremie/ANTLR/cs.g:70:1: namespace_name : namespace_or_type_name ;
	public final csParser.namespace_name_return namespace_name() throws RecognitionException {
		csParser.namespace_name_return retval = new csParser.namespace_name_return();
		retval.start = input.LT(1);
		int namespace_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_or_type_name31 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:71:9: ( namespace_or_type_name )
			// /Users/jeremie/ANTLR/cs.g:71:11: namespace_or_type_name
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_namespace_or_type_name_in_namespace_name756);
			namespace_or_type_name31=namespace_or_type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name31.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 15, namespace_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_name"


	public static class modifiers_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "modifiers"
	// /Users/jeremie/ANTLR/cs.g:73:1: modifiers returns [UnknowNode t] : ( modifier )+ ;
	public final csParser.modifiers_return modifiers() throws RecognitionException {
		csParser.modifiers_return retval = new csParser.modifiers_return();
		retval.start = input.LT(1);
		int modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier32 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:73:34: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:74:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:74:9: ( modifier )+
			int cnt17=0;
			loop17:
			while (true) {
				int alt17=2;
				int LA17_0 = input.LA(1);
				if ( (LA17_0==96||LA17_0==125||LA17_0==140||LA17_0==150||LA17_0==156||LA17_0==161||(LA17_0 >= 163 && LA17_0 <= 165)||LA17_0==170||LA17_0==176||LA17_0==188||LA17_0==191||LA17_0==193) ) {
					alt17=1;
				}

				switch (alt17) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:74:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_modifiers777);
					modifier32=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier32.getTree());

					}
					break;

				default :
					if ( cnt17 >= 1 ) break loop17;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(17, input);
					throw eee;
				}
				cnt17++;
			}

			if ( state.backtracking==0 ) {retval.t = new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 16, modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "modifiers"


	public static class modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "modifier"
	// /Users/jeremie/ANTLR/cs.g:75:1: modifier : ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' );
	public final csParser.modifier_return modifier() throws RecognitionException {
		csParser.modifier_return retval = new csParser.modifier_return();
		retval.start = input.LT(1);
		int modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set33=null;

		CommonTree set33_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:75:9: ( 'new' | 'public' | 'protected' | 'private' | 'internal' | 'unsafe' | 'abstract' | 'sealed' | 'static' | 'readonly' | 'volatile' | 'extern' | 'virtual' | 'override' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set33=input.LT(1);
			if ( input.LA(1)==96||input.LA(1)==125||input.LA(1)==140||input.LA(1)==150||input.LA(1)==156||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 165)||input.LA(1)==170||input.LA(1)==176||input.LA(1)==188||input.LA(1)==191||input.LA(1)==193 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set33));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 17, modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "modifier"


	public static class class_member_declaration_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:79:1: class_member_declaration returns [CsharpNode t] : (b= attributes )? (c= modifiers )? ( 'const' type constant_declarators ';' | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) |e= 'void' u= method_declaration |d= type ( ( member_name '(' )=>u= method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration |u= indexer_declaration |u= field_declaration |u= operator_declaration ) | (a= class_declaration |u= struct_declaration |u= enum_declaration |u= event_declaration |u= interface_declaration |u= delegate_declaration |u= conversion_operator_declaration |u= constructor_declaration |u= destructor_declaration ) ) ;
	public final csParser.class_member_declaration_return class_member_declaration() throws RecognitionException {
		csParser.class_member_declaration_return retval = new csParser.class_member_declaration_return();
		retval.start = input.LT(1);
		int class_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token e=null;
		Token string_literal34=null;
		Token char_literal37=null;
		Token string_literal38=null;
		Token char_literal45=null;
		ParserRuleReturnScope b =null;
		ParserRuleReturnScope c =null;
		ParserRuleReturnScope u =null;
		ParserRuleReturnScope d =null;
		ParserRuleReturnScope a =null;
		ParserRuleReturnScope type35 =null;
		ParserRuleReturnScope constant_declarators36 =null;
		ParserRuleReturnScope method_declaration39 =null;
		ParserRuleReturnScope interface_declaration40 =null;
		ParserRuleReturnScope class_declaration41 =null;
		ParserRuleReturnScope struct_declaration42 =null;
		ParserRuleReturnScope property_declaration43 =null;
		ParserRuleReturnScope type_name44 =null;
		ParserRuleReturnScope indexer_declaration46 =null;

		CommonTree e_tree=null;
		CommonTree string_literal34_tree=null;
		CommonTree char_literal37_tree=null;
		CommonTree string_literal38_tree=null;
		CommonTree char_literal45_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:79:48: ( (b= attributes )? (c= modifiers )? ( 'const' type constant_declarators ';' | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) |e= 'void' u= method_declaration |d= type ( ( member_name '(' )=>u= method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration |u= indexer_declaration |u= field_declaration |u= operator_declaration ) | (a= class_declaration |u= struct_declaration |u= enum_declaration |u= event_declaration |u= interface_declaration |u= delegate_declaration |u= conversion_operator_declaration |u= constructor_declaration |u= destructor_declaration ) ) )
			// /Users/jeremie/ANTLR/cs.g:80:9: (b= attributes )? (c= modifiers )? ( 'const' type constant_declarators ';' | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) |e= 'void' u= method_declaration |d= type ( ( member_name '(' )=>u= method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration |u= indexer_declaration |u= field_declaration |u= operator_declaration ) | (a= class_declaration |u= struct_declaration |u= enum_declaration |u= event_declaration |u= interface_declaration |u= delegate_declaration |u= conversion_operator_declaration |u= constructor_declaration |u= destructor_declaration ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:80:10: (b= attributes )?
			int alt18=2;
			int LA18_0 = input.LA(1);
			if ( (LA18_0==91) ) {
				alt18=1;
			}
			switch (alt18) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:80:10: b= attributes
					{
					pushFollow(FOLLOW_attributes_in_class_member_declaration877);
					b=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, b.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:81:10: (c= modifiers )?
			int alt19=2;
			int LA19_0 = input.LA(1);
			if ( (LA19_0==96||LA19_0==125||LA19_0==140||LA19_0==150||LA19_0==156||LA19_0==161||(LA19_0 >= 163 && LA19_0 <= 165)||LA19_0==170||LA19_0==176||LA19_0==188||LA19_0==191||LA19_0==193) ) {
				alt19=1;
			}
			switch (alt19) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:81:10: c= modifiers
					{
					pushFollow(FOLLOW_modifiers_in_class_member_declaration890);
					c=modifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, c.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:82:9: ( 'const' type constant_declarators ';' | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) |e= 'void' u= method_declaration |d= type ( ( member_name '(' )=>u= method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration |u= indexer_declaration |u= field_declaration |u= operator_declaration ) | (a= class_declaration |u= struct_declaration |u= enum_declaration |u= event_declaration |u= interface_declaration |u= delegate_declaration |u= conversion_operator_declaration |u= constructor_declaration |u= destructor_declaration ) )
			int alt23=5;
			switch ( input.LA(1) ) {
			case 112:
				{
				alt23=1;
				}
				break;
			case 159:
				{
				alt23=2;
				}
				break;
			case 192:
				{
				int LA23_3 = input.LA(2);
				if ( (LA23_3==Character_literal||LA23_3==FALSE||(LA23_3 >= Hex_number && LA23_3 <= IDENTIFIER)||(LA23_3 >= NULL && LA23_3 <= NUMBER)||LA23_3==Real_literal||LA23_3==STRINGLITERAL||LA23_3==TRUE||LA23_3==Verbatim_string_literal||LA23_3==95||(LA23_3 >= 97 && LA23_3 <= 98)||(LA23_3 >= 100 && LA23_3 <= 101)||LA23_3==103||(LA23_3 >= 105 && LA23_3 <= 106)||LA23_3==109||LA23_3==114||LA23_3==117||(LA23_3 >= 119 && LA23_3 <= 120)||LA23_3==122||LA23_3==126||LA23_3==129||LA23_3==132||LA23_3==135||LA23_3==138||LA23_3==141||(LA23_3 >= 143 && LA23_3 <= 144)||(LA23_3 >= 146 && LA23_3 <= 148)||(LA23_3 >= 151 && LA23_3 <= 152)||LA23_3==154||LA23_3==157||LA23_3==160||LA23_3==162||LA23_3==167||LA23_3==169||(LA23_3 >= 171 && LA23_3 <= 173)||LA23_3==177||LA23_3==183||(LA23_3 >= 185 && LA23_3 <= 186)||(LA23_3 >= 189 && LA23_3 <= 190)||LA23_3==194||LA23_3==196) ) {
					alt23=3;
				}
				else if ( (LA23_3==69) ) {
					alt23=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 23, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt23=4;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA23_5 = input.LA(2);
				if ( (LA23_5==Character_literal||LA23_5==DOT||LA23_5==FALSE||(LA23_5 >= Hex_number && LA23_5 <= IDENTIFIER)||(LA23_5 >= NULL && LA23_5 <= NUMBER)||LA23_5==Real_literal||LA23_5==STRINGLITERAL||LA23_5==TRUE||LA23_5==Verbatim_string_literal||LA23_5==69||(LA23_5 >= 80 && LA23_5 <= 81)||LA23_5==89||LA23_5==91||LA23_5==95||(LA23_5 >= 97 && LA23_5 <= 98)||(LA23_5 >= 100 && LA23_5 <= 101)||LA23_5==103||(LA23_5 >= 105 && LA23_5 <= 106)||LA23_5==109||LA23_5==114||LA23_5==117||(LA23_5 >= 119 && LA23_5 <= 120)||LA23_5==122||LA23_5==126||LA23_5==129||LA23_5==132||LA23_5==135||LA23_5==138||LA23_5==141||(LA23_5 >= 143 && LA23_5 <= 144)||(LA23_5 >= 146 && LA23_5 <= 148)||(LA23_5 >= 151 && LA23_5 <= 154)||LA23_5==157||LA23_5==160||LA23_5==162||LA23_5==167||LA23_5==169||(LA23_5 >= 171 && LA23_5 <= 173)||LA23_5==177||LA23_5==180||LA23_5==183||(LA23_5 >= 185 && LA23_5 <= 186)||(LA23_5 >= 189 && LA23_5 <= 190)||LA23_5==194||LA23_5==196) ) {
					alt23=4;
				}
				else if ( (LA23_5==68) ) {
					alt23=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 23, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ENUM:
			case 111:
			case 116:
			case 123:
			case 124:
			case 136:
			case 139:
			case 178:
			case 202:
				{
				alt23=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 23, 0, input);
				throw nvae;
			}
			switch (alt23) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:82:11: 'const' type constant_declarators ';'
					{
					string_literal34=(Token)match(input,112,FOLLOW_112_in_class_member_declaration903); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal34_tree = (CommonTree)adaptor.create(string_literal34);
					adaptor.addChild(root_0, string_literal34_tree);
					}

					pushFollow(FOLLOW_type_in_class_member_declaration907);
					type35=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type35.getTree());

					pushFollow(FOLLOW_constant_declarators_in_class_member_declaration911);
					constant_declarators36=constant_declarators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators36.getTree());

					char_literal37=(Token)match(input,SEMI,FOLLOW_SEMI_in_class_member_declaration915); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal37_tree = (CommonTree)adaptor.create(char_literal37);
					adaptor.addChild(root_0, char_literal37_tree);
					}

					if ( state.backtracking==0 ) {/*TODO*/}
					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:83:11: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					{
					string_literal38=(Token)match(input,159,FOLLOW_159_in_class_member_declaration929); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal38_tree = (CommonTree)adaptor.create(string_literal38);
					adaptor.addChild(root_0, string_literal38_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:83:21: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					int alt20=4;
					switch ( input.LA(1) ) {
					case Character_literal:
					case FALSE:
					case Hex_number:
					case IDENTIFIER:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 103:
					case 105:
					case 106:
					case 109:
					case 114:
					case 117:
					case 119:
					case 120:
					case 122:
					case 126:
					case 129:
					case 132:
					case 135:
					case 138:
					case 141:
					case 143:
					case 144:
					case 146:
					case 147:
					case 148:
					case 151:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 169:
					case 171:
					case 172:
					case 173:
					case 177:
					case 183:
					case 185:
					case 186:
					case 189:
					case 190:
					case 194:
					case 196:
						{
						alt20=1;
						}
						break;
					case 139:
						{
						alt20=2;
						}
						break;
					case 111:
						{
						alt20=3;
						}
						break;
					case 178:
						{
						alt20=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 20, 0, input);
						throw nvae;
					}
					switch (alt20) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:83:22: method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_class_member_declaration932);
							method_declaration39=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration39.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:84:30: interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_class_member_declaration964);
							interface_declaration40=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration40.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:85:30: class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_class_member_declaration996);
							class_declaration41=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration41.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:86:30: struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_class_member_declaration1028);
							struct_declaration42=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration42.getTree());

							}
							break;

					}

					if ( state.backtracking==0 ) {/*TODO*/}
					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:87:11: e= 'void' u= method_declaration
					{
					e=(Token)match(input,192,FOLLOW_192_in_class_member_declaration1045); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					e_tree = (CommonTree)adaptor.create(e);
					adaptor.addChild(root_0, e_tree);
					}

					pushFollow(FOLLOW_method_declaration_in_class_member_declaration1050);
					u=method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

					if ( state.backtracking==0 ) {retval.t =new class_member_declaration_type((b!=null?((csParser.attributes_return)b).t:null),(c!=null?((csParser.modifiers_return)c).t:null),new TokenNode(e),new UnknowNode(u));}
					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:88:11: d= type ( ( member_name '(' )=>u= method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration |u= indexer_declaration |u= field_declaration |u= operator_declaration )
					{
					pushFollow(FOLLOW_type_in_class_member_declaration1066);
					d=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, d.getTree());

					// /Users/jeremie/ANTLR/cs.g:88:18: ( ( member_name '(' )=>u= method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration |u= indexer_declaration |u= field_declaration |u= operator_declaration )
					int alt21=6;
					switch ( input.LA(1) ) {
					case 103:
					case 106:
					case 109:
					case 114:
					case 119:
					case 129:
					case 138:
					case 146:
					case 151:
					case 169:
					case 173:
					case 177:
					case 185:
					case 186:
					case 189:
						{
						int LA21_1 = input.LA(2);
						if ( (synpred2_cs()) ) {
							alt21=1;
						}
						else if ( (synpred3_cs()) ) {
							alt21=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 21, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						int LA21_2 = input.LA(2);
						if ( (synpred2_cs()) ) {
							alt21=1;
						}
						else if ( (synpred3_cs()) ) {
							alt21=2;
						}
						else if ( (synpred4_cs()) ) {
							alt21=3;
						}
						else if ( (true) ) {
							alt21=5;
						}

						}
						break;
					case Character_literal:
					case FALSE:
					case Hex_number:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
						{
						int LA21_3 = input.LA(2);
						if ( (synpred2_cs()) ) {
							alt21=1;
						}
						else if ( (synpred3_cs()) ) {
							alt21=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 21, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case 180:
						{
						alt21=4;
						}
						break;
					case 153:
						{
						alt21=6;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 21, 0, input);
						throw nvae;
					}
					switch (alt21) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:88:20: ( member_name '(' )=>u= method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_class_member_declaration1082);
							u=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:89:22: ( member_name '{' )=> property_declaration
							{
							pushFollow(FOLLOW_property_declaration_in_class_member_declaration1115);
							property_declaration43=property_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration43.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:90:22: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
							{
							pushFollow(FOLLOW_type_name_in_class_member_declaration1152);
							type_name44=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name44.getTree());

							char_literal45=(Token)match(input,DOT,FOLLOW_DOT_in_class_member_declaration1154); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal45_tree = (CommonTree)adaptor.create(char_literal45);
							adaptor.addChild(root_0, char_literal45_tree);
							}

							pushFollow(FOLLOW_indexer_declaration_in_class_member_declaration1156);
							indexer_declaration46=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration46.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:91:18: u= indexer_declaration
							{
							pushFollow(FOLLOW_indexer_declaration_in_class_member_declaration1177);
							u=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 5 :
							// /Users/jeremie/ANTLR/cs.g:92:18: u= field_declaration
							{
							pushFollow(FOLLOW_field_declaration_in_class_member_declaration1206);
							u=field_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 6 :
							// /Users/jeremie/ANTLR/cs.g:93:18: u= operator_declaration
							{
							pushFollow(FOLLOW_operator_declaration_in_class_member_declaration1233);
							u=operator_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;

					}

					if (a != null) retval.t =new class_member_declaration_type((b!=null?((csParser.attributes_return)b).t:null),(c!=null?((csParser.modifiers_return)c).t:null),(d!=null?((csParser.type_return)d).t:null),(a!=null?((csParser.class_declaration_return)a).t:null)); 
					               else retval.t =new class_member_declaration_type((b!=null?((csParser.attributes_return)b).t:null),(c!=null?((csParser.modifiers_return)c).t:null),(d!=null?((csParser.type_return)d).t:null),new UnknowNode(u));
					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:99:11: (a= class_declaration |u= struct_declaration |u= enum_declaration |u= event_declaration |u= interface_declaration |u= delegate_declaration |u= conversion_operator_declaration |u= constructor_declaration |u= destructor_declaration )
					{
					// /Users/jeremie/ANTLR/cs.g:99:11: (a= class_declaration |u= struct_declaration |u= enum_declaration |u= event_declaration |u= interface_declaration |u= delegate_declaration |u= conversion_operator_declaration |u= constructor_declaration |u= destructor_declaration )
					int alt22=9;
					switch ( input.LA(1) ) {
					case 111:
						{
						alt22=1;
						}
						break;
					case 178:
						{
						alt22=2;
						}
						break;
					case ENUM:
						{
						alt22=3;
						}
						break;
					case 123:
						{
						alt22=4;
						}
						break;
					case 139:
						{
						alt22=5;
						}
						break;
					case 116:
						{
						alt22=6;
						}
						break;
					case 124:
					case 136:
						{
						alt22=7;
						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						alt22=8;
						}
						break;
					case 202:
						{
						alt22=9;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 22, 0, input);
						throw nvae;
					}
					switch (alt22) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:99:12: a= class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_class_member_declaration1293);
							a=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:100:11: u= struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_class_member_declaration1323);
							u=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:101:11: u= enum_declaration
							{
							pushFollow(FOLLOW_enum_declaration_in_class_member_declaration1345);
							u=enum_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:102:11: u= event_declaration
							{
							pushFollow(FOLLOW_event_declaration_in_class_member_declaration1361);
							u=event_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 5 :
							// /Users/jeremie/ANTLR/cs.g:103:11: u= interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_class_member_declaration1391);
							u=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 6 :
							// /Users/jeremie/ANTLR/cs.g:104:11: u= delegate_declaration
							{
							pushFollow(FOLLOW_delegate_declaration_in_class_member_declaration1413);
							u=delegate_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 7 :
							// /Users/jeremie/ANTLR/cs.g:105:11: u= conversion_operator_declaration
							{
							pushFollow(FOLLOW_conversion_operator_declaration_in_class_member_declaration1435);
							u=conversion_operator_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 8 :
							// /Users/jeremie/ANTLR/cs.g:106:11: u= constructor_declaration
							{
							pushFollow(FOLLOW_constructor_declaration_in_class_member_declaration1449);
							u=constructor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;
						case 9 :
							// /Users/jeremie/ANTLR/cs.g:107:11: u= destructor_declaration
							{
							pushFollow(FOLLOW_destructor_declaration_in_class_member_declaration1471);
							u=destructor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

							}
							break;

					}

					if (a != null) retval.t =new class_member_declaration((b!=null?((csParser.attributes_return)b).t:null),(c!=null?((csParser.modifiers_return)c).t:null),(a!=null?((csParser.class_declaration_return)a).t:null)); 
					        else retval.t =new class_member_declaration((b!=null?((csParser.attributes_return)b).t:null),(c!=null?((csParser.modifiers_return)c).t:null),new UnknowNode(u));
					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 18, class_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_member_declaration"


	public static class primary_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression"
	// /Users/jeremie/ANTLR/cs.g:113:1: primary_expression : ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression );
	public final csParser.primary_expression_return primary_expression() throws RecognitionException {
		csParser.primary_expression_return retval = new csParser.primary_expression_return();
		retval.start = input.LT(1);
		int primary_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal47=null;
		Token string_literal50=null;
		Token string_literal55=null;
		ParserRuleReturnScope brackets48 =null;
		ParserRuleReturnScope primary_expression_part49 =null;
		ParserRuleReturnScope brackets51 =null;
		ParserRuleReturnScope primary_expression_part52 =null;
		ParserRuleReturnScope primary_expression_start53 =null;
		ParserRuleReturnScope primary_expression_part54 =null;
		ParserRuleReturnScope object_creation_expression56 =null;
		ParserRuleReturnScope primary_expression_part57 =null;
		ParserRuleReturnScope delegate_creation_expression58 =null;
		ParserRuleReturnScope object_creation_expression59 =null;
		ParserRuleReturnScope anonymous_object_creation_expression60 =null;
		ParserRuleReturnScope sizeof_expression61 =null;
		ParserRuleReturnScope checked_expression62 =null;
		ParserRuleReturnScope unchecked_expression63 =null;
		ParserRuleReturnScope default_value_expression64 =null;
		ParserRuleReturnScope anonymous_method_expression65 =null;

		CommonTree string_literal47_tree=null;
		CommonTree string_literal50_tree=null;
		CommonTree string_literal55_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:113:19: ( ( 'this' brackets )=> 'this' brackets ( primary_expression_part )* | ( 'base' brackets )=> 'this' brackets ( primary_expression_part )* | primary_expression_start ( primary_expression_part )* | 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression ) | sizeof_expression | checked_expression | unchecked_expression | default_value_expression | anonymous_method_expression )
			int alt29=9;
			switch ( input.LA(1) ) {
			case 180:
				{
				int LA29_1 = input.LA(2);
				if ( (synpred5_cs()) ) {
					alt29=1;
				}
				else if ( (synpred6_cs()) ) {
					alt29=2;
				}
				else if ( (true) ) {
					alt29=3;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 68:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 184:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt29=3;
				}
				break;
			case 150:
				{
				alt29=4;
				}
				break;
			case 174:
				{
				alt29=5;
				}
				break;
			case 110:
				{
				alt29=6;
				}
				break;
			case 187:
				{
				alt29=7;
				}
				break;
			case 115:
				{
				alt29=8;
				}
				break;
			case 116:
				{
				alt29=9;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 29, 0, input);
				throw nvae;
			}
			switch (alt29) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:114:9: ( 'this' brackets )=> 'this' brackets ( primary_expression_part )*
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal47=(Token)match(input,180,FOLLOW_180_in_primary_expression1530); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal47_tree = (CommonTree)adaptor.create(string_literal47);
					adaptor.addChild(root_0, string_literal47_tree);
					}

					pushFollow(FOLLOW_brackets_in_primary_expression1534);
					brackets48=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets48.getTree());

					// /Users/jeremie/ANTLR/cs.g:114:53: ( primary_expression_part )*
					loop24:
					while (true) {
						int alt24=2;
						int LA24_0 = input.LA(1);
						if ( (LA24_0==DOT||LA24_0==PTR||LA24_0==68||LA24_0==91) ) {
							alt24=1;
						}

						switch (alt24) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:114:53: primary_expression_part
							{
							pushFollow(FOLLOW_primary_expression_part_in_primary_expression1538);
							primary_expression_part49=primary_expression_part();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part49.getTree());

							}
							break;

						default :
							break loop24;
						}
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:115:11: ( 'base' brackets )=> 'this' brackets ( primary_expression_part )*
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal50=(Token)match(input,180,FOLLOW_180_in_primary_expression1561); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal50_tree = (CommonTree)adaptor.create(string_literal50);
					adaptor.addChild(root_0, string_literal50_tree);
					}

					pushFollow(FOLLOW_brackets_in_primary_expression1565);
					brackets51=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets51.getTree());

					// /Users/jeremie/ANTLR/cs.g:115:54: ( primary_expression_part )*
					loop25:
					while (true) {
						int alt25=2;
						int LA25_0 = input.LA(1);
						if ( (LA25_0==DOT||LA25_0==PTR||LA25_0==68||LA25_0==91) ) {
							alt25=1;
						}

						switch (alt25) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:115:54: primary_expression_part
							{
							pushFollow(FOLLOW_primary_expression_part_in_primary_expression1569);
							primary_expression_part52=primary_expression_part();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part52.getTree());

							}
							break;

						default :
							break loop25;
						}
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:116:11: primary_expression_start ( primary_expression_part )*
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_primary_expression_start_in_primary_expression1582);
					primary_expression_start53=primary_expression_start();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_start53.getTree());

					// /Users/jeremie/ANTLR/cs.g:116:38: ( primary_expression_part )*
					loop26:
					while (true) {
						int alt26=2;
						int LA26_0 = input.LA(1);
						if ( (LA26_0==DOT||LA26_0==PTR||LA26_0==68||LA26_0==91) ) {
							alt26=1;
						}

						switch (alt26) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:116:38: primary_expression_part
							{
							pushFollow(FOLLOW_primary_expression_part_in_primary_expression1586);
							primary_expression_part54=primary_expression_part();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part54.getTree());

							}
							break;

						default :
							break loop26;
						}
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:117:11: 'new' ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal55=(Token)match(input,150,FOLLOW_150_in_primary_expression1599); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal55_tree = (CommonTree)adaptor.create(string_literal55);
					adaptor.addChild(root_0, string_literal55_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:117:17: ( ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+ | ( delegate_creation_expression )=> delegate_creation_expression | object_creation_expression | anonymous_object_creation_expression )
					int alt28=4;
					switch ( input.LA(1) ) {
					case 103:
					case 106:
					case 109:
					case 114:
					case 119:
					case 129:
					case 138:
					case 146:
					case 151:
					case 169:
					case 173:
					case 177:
					case 185:
					case 186:
					case 189:
						{
						int LA28_1 = input.LA(2);
						if ( (synpred7_cs()) ) {
							alt28=1;
						}
						else if ( (true) ) {
							alt28=3;
						}

						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						int LA28_2 = input.LA(2);
						if ( (synpred7_cs()) ) {
							alt28=1;
						}
						else if ( (synpred8_cs()) ) {
							alt28=2;
						}
						else if ( (true) ) {
							alt28=3;
						}

						}
						break;
					case 192:
						{
						int LA28_3 = input.LA(2);
						if ( (synpred7_cs()) ) {
							alt28=1;
						}
						else if ( (true) ) {
							alt28=3;
						}

						}
						break;
					case 197:
						{
						alt28=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 28, 0, input);
						throw nvae;
					}
					switch (alt28) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:117:21: ( object_creation_expression ( '.' | '->' | '[' ) )=> object_creation_expression ( primary_expression_part )+
							{
							pushFollow(FOLLOW_object_creation_expression_in_primary_expression1662);
							object_creation_expression56=object_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression56.getTree());

							// /Users/jeremie/ANTLR/cs.g:118:70: ( primary_expression_part )+
							int cnt27=0;
							loop27:
							while (true) {
								int alt27=2;
								int LA27_0 = input.LA(1);
								if ( (LA27_0==DOT||LA27_0==PTR||LA27_0==68||LA27_0==91) ) {
									alt27=1;
								}

								switch (alt27) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:118:70: primary_expression_part
									{
									pushFollow(FOLLOW_primary_expression_part_in_primary_expression1666);
									primary_expression_part57=primary_expression_part();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression_part57.getTree());

									}
									break;

								default :
									if ( cnt27 >= 1 ) break loop27;
									if (state.backtracking>0) {state.failed=true; return retval;}
									EarlyExitException eee = new EarlyExitException(27, input);
									throw eee;
								}
								cnt27++;
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:121:35: ( delegate_creation_expression )=> delegate_creation_expression
							{
							pushFollow(FOLLOW_delegate_creation_expression_in_primary_expression1792);
							delegate_creation_expression58=delegate_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_creation_expression58.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:122:35: object_creation_expression
							{
							pushFollow(FOLLOW_object_creation_expression_in_primary_expression1828);
							object_creation_expression59=object_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, object_creation_expression59.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:123:35: anonymous_object_creation_expression
							{
							pushFollow(FOLLOW_anonymous_object_creation_expression_in_primary_expression1864);
							anonymous_object_creation_expression60=anonymous_object_creation_expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_creation_expression60.getTree());

							}
							break;

					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:124:11: sizeof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_sizeof_expression_in_primary_expression1933);
					sizeof_expression61=sizeof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, sizeof_expression61.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:125:11: checked_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_checked_expression_in_primary_expression1993);
					checked_expression62=checked_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_expression62.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:126:11: unchecked_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_unchecked_expression_in_primary_expression2033);
					unchecked_expression63=unchecked_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_expression63.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:127:11: default_value_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_default_value_expression_in_primary_expression2071);
					default_value_expression64=default_value_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, default_value_expression64.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:128:11: anonymous_method_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_anonymous_method_expression_in_primary_expression2105);
					anonymous_method_expression65=anonymous_method_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_method_expression65.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 19, primary_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression"


	public static class primary_expression_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression_start"
	// /Users/jeremie/ANTLR/cs.g:131:1: primary_expression_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal );
	public final csParser.primary_expression_start_return primary_expression_start() throws RecognitionException {
		csParser.primary_expression_start_return retval = new csParser.primary_expression_start_return();
		retval.start = input.LT(1);
		int primary_expression_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal70=null;
		Token string_literal72=null;
		Token string_literal73=null;
		ParserRuleReturnScope predefined_type66 =null;
		ParserRuleReturnScope identifier67 =null;
		ParserRuleReturnScope generic_argument_list68 =null;
		ParserRuleReturnScope identifier69 =null;
		ParserRuleReturnScope identifier71 =null;
		ParserRuleReturnScope paren_expression74 =null;
		ParserRuleReturnScope typeof_expression75 =null;
		ParserRuleReturnScope literal76 =null;

		CommonTree string_literal70_tree=null;
		CommonTree string_literal72_tree=null;
		CommonTree string_literal73_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:131:25: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | 'this' | 'base' | paren_expression | typeof_expression | literal )
			int alt31=8;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt31=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA31_2 = input.LA(2);
				if ( (synpred9_cs()) ) {
					alt31=2;
				}
				else if ( (true) ) {
					alt31=3;
				}

				}
				break;
			case 180:
				{
				alt31=4;
				}
				break;
			case 102:
				{
				alt31=5;
				}
				break;
			case 68:
				{
				alt31=6;
				}
				break;
			case 184:
				{
				alt31=7;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt31=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 31, 0, input);
				throw nvae;
			}
			switch (alt31) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:132:9: predefined_type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_predefined_type_in_primary_expression_start2153);
					predefined_type66=predefined_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type66.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:133:11: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_primary_expression_start2176);
					identifier67=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier67.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_primary_expression_start2180);
					generic_argument_list68=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list68.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:134:11: identifier ( '::' identifier )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_primary_expression_start2192);
					identifier69=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier69.getTree());

					// /Users/jeremie/ANTLR/cs.g:134:22: ( '::' identifier )?
					int alt30=2;
					int LA30_0 = input.LA(1);
					if ( (LA30_0==80) ) {
						alt30=1;
					}
					switch (alt30) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:134:23: '::' identifier
							{
							string_literal70=(Token)match(input,80,FOLLOW_80_in_primary_expression_start2195); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal70_tree = (CommonTree)adaptor.create(string_literal70);
							adaptor.addChild(root_0, string_literal70_tree);
							}

							pushFollow(FOLLOW_identifier_in_primary_expression_start2199);
							identifier71=identifier();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier71.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:135:11: 'this'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal72=(Token)match(input,180,FOLLOW_180_in_primary_expression_start2213); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal72_tree = (CommonTree)adaptor.create(string_literal72);
					adaptor.addChild(root_0, string_literal72_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:136:11: 'base'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal73=(Token)match(input,102,FOLLOW_102_in_primary_expression_start2226); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal73_tree = (CommonTree)adaptor.create(string_literal73);
					adaptor.addChild(root_0, string_literal73_tree);
					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:137:11: paren_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_paren_expression_in_primary_expression_start2238);
					paren_expression74=paren_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, paren_expression74.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:138:11: typeof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeof_expression_in_primary_expression_start2250);
					typeof_expression75=typeof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression75.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:139:11: literal
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_literal_in_primary_expression_start2275);
					literal76=literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal76.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 20, primary_expression_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression_start"


	public static class primary_expression_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression_part"
	// /Users/jeremie/ANTLR/cs.g:142:1: primary_expression_part : ( access_identifier | brackets_or_arguments );
	public final csParser.primary_expression_part_return primary_expression_part() throws RecognitionException {
		csParser.primary_expression_part_return retval = new csParser.primary_expression_part_return();
		retval.start = input.LT(1);
		int primary_expression_part_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_identifier77 =null;
		ParserRuleReturnScope brackets_or_arguments78 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:142:24: ( access_identifier | brackets_or_arguments )
			int alt32=2;
			int LA32_0 = input.LA(1);
			if ( (LA32_0==DOT||LA32_0==PTR) ) {
				alt32=1;
			}
			else if ( (LA32_0==68||LA32_0==91) ) {
				alt32=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 32, 0, input);
				throw nvae;
			}

			switch (alt32) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:143:10: access_identifier
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_access_identifier_in_primary_expression_part2300);
					access_identifier77=access_identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier77.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:144:11: brackets_or_arguments
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_brackets_or_arguments_in_primary_expression_part2312);
					brackets_or_arguments78=brackets_or_arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets_or_arguments78.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 21, primary_expression_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression_part"


	public static class access_identifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "access_identifier"
	// /Users/jeremie/ANTLR/cs.g:145:1: access_identifier : access_operator type_or_generic ;
	public final csParser.access_identifier_return access_identifier() throws RecognitionException {
		csParser.access_identifier_return retval = new csParser.access_identifier_return();
		retval.start = input.LT(1);
		int access_identifier_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_operator79 =null;
		ParserRuleReturnScope type_or_generic80 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:145:18: ( access_operator type_or_generic )
			// /Users/jeremie/ANTLR/cs.g:146:9: access_operator type_or_generic
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_access_operator_in_access_identifier2327);
			access_operator79=access_operator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, access_operator79.getTree());

			pushFollow(FOLLOW_type_or_generic_in_access_identifier2331);
			type_or_generic80=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic80.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 22, access_identifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "access_identifier"


	public static class access_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "access_operator"
	// /Users/jeremie/ANTLR/cs.g:147:1: access_operator : ( '.' | '->' );
	public final csParser.access_operator_return access_operator() throws RecognitionException {
		csParser.access_operator_return retval = new csParser.access_operator_return();
		retval.start = input.LT(1);
		int access_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set81=null;

		CommonTree set81_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:147:16: ( '.' | '->' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set81=input.LT(1);
			if ( input.LA(1)==DOT||input.LA(1)==PTR ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set81));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 23, access_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "access_operator"


	public static class brackets_or_arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "brackets_or_arguments"
	// /Users/jeremie/ANTLR/cs.g:149:1: brackets_or_arguments : ( brackets | arguments );
	public final csParser.brackets_or_arguments_return brackets_or_arguments() throws RecognitionException {
		csParser.brackets_or_arguments_return retval = new csParser.brackets_or_arguments_return();
		retval.start = input.LT(1);
		int brackets_or_arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope brackets82 =null;
		ParserRuleReturnScope arguments83 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:149:22: ( brackets | arguments )
			int alt33=2;
			int LA33_0 = input.LA(1);
			if ( (LA33_0==91) ) {
				alt33=1;
			}
			else if ( (LA33_0==68) ) {
				alt33=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 33, 0, input);
				throw nvae;
			}

			switch (alt33) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:150:9: brackets
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_brackets_in_brackets_or_arguments2367);
					brackets82=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets82.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:150:20: arguments
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_arguments_in_brackets_or_arguments2371);
					arguments83=arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments83.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 24, brackets_or_arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "brackets_or_arguments"


	public static class brackets_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "brackets"
	// /Users/jeremie/ANTLR/cs.g:151:1: brackets : '[' ( expression_list )? ']' ;
	public final csParser.brackets_return brackets() throws RecognitionException {
		csParser.brackets_return retval = new csParser.brackets_return();
		retval.start = input.LT(1);
		int brackets_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal84=null;
		Token char_literal86=null;
		ParserRuleReturnScope expression_list85 =null;

		CommonTree char_literal84_tree=null;
		CommonTree char_literal86_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:151:9: ( '[' ( expression_list )? ']' )
			// /Users/jeremie/ANTLR/cs.g:152:9: '[' ( expression_list )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal84=(Token)match(input,91,FOLLOW_91_in_brackets2386); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal84_tree = (CommonTree)adaptor.create(char_literal84);
			adaptor.addChild(root_0, char_literal84_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:152:15: ( expression_list )?
			int alt34=2;
			int LA34_0 = input.LA(1);
			if ( (LA34_0==Character_literal||LA34_0==FALSE||(LA34_0 >= Hex_number && LA34_0 <= IDENTIFIER)||(LA34_0 >= MINUS && LA34_0 <= NUMBER)||LA34_0==Real_literal||LA34_0==STRINGLITERAL||LA34_0==TRUE||LA34_0==Verbatim_string_literal||LA34_0==61||LA34_0==66||(LA34_0 >= 68 && LA34_0 <= 69)||(LA34_0 >= 71 && LA34_0 <= 72)||LA34_0==75||LA34_0==95||(LA34_0 >= 97 && LA34_0 <= 98)||(LA34_0 >= 100 && LA34_0 <= 103)||(LA34_0 >= 105 && LA34_0 <= 106)||(LA34_0 >= 109 && LA34_0 <= 110)||(LA34_0 >= 114 && LA34_0 <= 117)||(LA34_0 >= 119 && LA34_0 <= 120)||LA34_0==122||LA34_0==126||LA34_0==129||LA34_0==132||LA34_0==135||LA34_0==138||LA34_0==141||(LA34_0 >= 143 && LA34_0 <= 144)||(LA34_0 >= 146 && LA34_0 <= 148)||(LA34_0 >= 150 && LA34_0 <= 152)||LA34_0==154||LA34_0==157||LA34_0==160||LA34_0==162||LA34_0==167||LA34_0==169||(LA34_0 >= 171 && LA34_0 <= 174)||LA34_0==177||LA34_0==180||(LA34_0 >= 183 && LA34_0 <= 187)||(LA34_0 >= 189 && LA34_0 <= 190)||LA34_0==194||LA34_0==196||LA34_0==202) ) {
				alt34=1;
			}
			switch (alt34) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:152:15: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_brackets2390);
					expression_list85=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list85.getTree());

					}
					break;

			}

			char_literal86=(Token)match(input,92,FOLLOW_92_in_brackets2395); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal86_tree = (CommonTree)adaptor.create(char_literal86);
			adaptor.addChild(root_0, char_literal86_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 25, brackets_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "brackets"


	public static class paren_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "paren_expression"
	// /Users/jeremie/ANTLR/cs.g:153:1: paren_expression : '(' expression ')' ;
	public final csParser.paren_expression_return paren_expression() throws RecognitionException {
		csParser.paren_expression_return retval = new csParser.paren_expression_return();
		retval.start = input.LT(1);
		int paren_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal87=null;
		Token char_literal89=null;
		ParserRuleReturnScope expression88 =null;

		CommonTree char_literal87_tree=null;
		CommonTree char_literal89_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:153:17: ( '(' expression ')' )
			// /Users/jeremie/ANTLR/cs.g:154:9: '(' expression ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal87=(Token)match(input,68,FOLLOW_68_in_paren_expression2426); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal87_tree = (CommonTree)adaptor.create(char_literal87);
			adaptor.addChild(root_0, char_literal87_tree);
			}

			pushFollow(FOLLOW_expression_in_paren_expression2430);
			expression88=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression88.getTree());

			char_literal89=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_paren_expression2434); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal89_tree = (CommonTree)adaptor.create(char_literal89);
			adaptor.addChild(root_0, char_literal89_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 26, paren_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "paren_expression"


	public static class arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "arguments"
	// /Users/jeremie/ANTLR/cs.g:155:1: arguments : '(' ( argument_list )? ')' ;
	public final csParser.arguments_return arguments() throws RecognitionException {
		csParser.arguments_return retval = new csParser.arguments_return();
		retval.start = input.LT(1);
		int arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal90=null;
		Token char_literal92=null;
		ParserRuleReturnScope argument_list91 =null;

		CommonTree char_literal90_tree=null;
		CommonTree char_literal92_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:155:10: ( '(' ( argument_list )? ')' )
			// /Users/jeremie/ANTLR/cs.g:156:9: '(' ( argument_list )? ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal90=(Token)match(input,68,FOLLOW_68_in_arguments2450); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal90_tree = (CommonTree)adaptor.create(char_literal90);
			adaptor.addChild(root_0, char_literal90_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:156:15: ( argument_list )?
			int alt35=2;
			int LA35_0 = input.LA(1);
			if ( (LA35_0==Character_literal||LA35_0==FALSE||(LA35_0 >= Hex_number && LA35_0 <= IDENTIFIER)||(LA35_0 >= MINUS && LA35_0 <= NUMBER)||LA35_0==Real_literal||LA35_0==STRINGLITERAL||LA35_0==TRUE||LA35_0==Verbatim_string_literal||LA35_0==61||LA35_0==66||(LA35_0 >= 68 && LA35_0 <= 69)||(LA35_0 >= 71 && LA35_0 <= 72)||LA35_0==75||LA35_0==95||(LA35_0 >= 97 && LA35_0 <= 98)||(LA35_0 >= 100 && LA35_0 <= 103)||(LA35_0 >= 105 && LA35_0 <= 106)||(LA35_0 >= 109 && LA35_0 <= 110)||(LA35_0 >= 114 && LA35_0 <= 117)||(LA35_0 >= 119 && LA35_0 <= 120)||LA35_0==122||LA35_0==126||LA35_0==129||LA35_0==132||LA35_0==135||LA35_0==138||LA35_0==141||(LA35_0 >= 143 && LA35_0 <= 144)||(LA35_0 >= 146 && LA35_0 <= 148)||(LA35_0 >= 150 && LA35_0 <= 152)||(LA35_0 >= 154 && LA35_0 <= 155)||LA35_0==157||LA35_0==160||LA35_0==162||(LA35_0 >= 166 && LA35_0 <= 167)||LA35_0==169||(LA35_0 >= 171 && LA35_0 <= 174)||LA35_0==177||LA35_0==180||(LA35_0 >= 183 && LA35_0 <= 187)||(LA35_0 >= 189 && LA35_0 <= 190)||LA35_0==194||LA35_0==196||LA35_0==202) ) {
				alt35=1;
			}
			switch (alt35) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:156:15: argument_list
					{
					pushFollow(FOLLOW_argument_list_in_arguments2454);
					argument_list91=argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list91.getTree());

					}
					break;

			}

			char_literal92=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_arguments2459); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal92_tree = (CommonTree)adaptor.create(char_literal92);
			adaptor.addChild(root_0, char_literal92_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 27, arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "arguments"


	public static class argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument_list"
	// /Users/jeremie/ANTLR/cs.g:157:1: argument_list : argument ( ',' argument )* ;
	public final csParser.argument_list_return argument_list() throws RecognitionException {
		csParser.argument_list_return retval = new csParser.argument_list_return();
		retval.start = input.LT(1);
		int argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal94=null;
		ParserRuleReturnScope argument93 =null;
		ParserRuleReturnScope argument95 =null;

		CommonTree char_literal94_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:157:14: ( argument ( ',' argument )* )
			// /Users/jeremie/ANTLR/cs.g:158:9: argument ( ',' argument )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_argument_in_argument_list2475);
			argument93=argument();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, argument93.getTree());

			// /Users/jeremie/ANTLR/cs.g:158:18: ( ',' argument )*
			loop36:
			while (true) {
				int alt36=2;
				int LA36_0 = input.LA(1);
				if ( (LA36_0==74) ) {
					alt36=1;
				}

				switch (alt36) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:158:19: ',' argument
					{
					char_literal94=(Token)match(input,74,FOLLOW_74_in_argument_list2478); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal94_tree = (CommonTree)adaptor.create(char_literal94);
					adaptor.addChild(root_0, char_literal94_tree);
					}

					pushFollow(FOLLOW_argument_in_argument_list2480);
					argument95=argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument95.getTree());

					}
					break;

				default :
					break loop36;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 28, argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument_list"


	public static class argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument"
	// /Users/jeremie/ANTLR/cs.g:160:1: argument : ( argument_name argument_value | argument_value );
	public final csParser.argument_return argument() throws RecognitionException {
		csParser.argument_return retval = new csParser.argument_return();
		retval.start = input.LT(1);
		int argument_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope argument_name96 =null;
		ParserRuleReturnScope argument_value97 =null;
		ParserRuleReturnScope argument_value98 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:160:9: ( argument_name argument_value | argument_value )
			int alt37=2;
			switch ( input.LA(1) ) {
			case 132:
				{
				int LA37_1 = input.LA(2);
				if ( (LA37_1==79) ) {
					alt37=1;
				}
				else if ( (LA37_1==DOT||LA37_1==GT||LA37_1==IDENTIFIER||LA37_1==MINUS||LA37_1==PTR||LA37_1==RPAREN||(LA37_1 >= 62 && LA37_1 <= 78)||(LA37_1 >= 80 && LA37_1 <= 91)||(LA37_1 >= 93 && LA37_1 <= 95)||(LA37_1 >= 97 && LA37_1 <= 101)||LA37_1==103||(LA37_1 >= 105 && LA37_1 <= 106)||LA37_1==109||LA37_1==114||LA37_1==117||(LA37_1 >= 119 && LA37_1 <= 120)||LA37_1==122||LA37_1==126||LA37_1==129||LA37_1==132||LA37_1==135||LA37_1==138||(LA37_1 >= 141 && LA37_1 <= 144)||(LA37_1 >= 146 && LA37_1 <= 148)||(LA37_1 >= 151 && LA37_1 <= 152)||LA37_1==154||LA37_1==157||LA37_1==160||LA37_1==162||LA37_1==167||LA37_1==169||(LA37_1 >= 171 && LA37_1 <= 173)||LA37_1==177||LA37_1==183||(LA37_1 >= 185 && LA37_1 <= 186)||(LA37_1 >= 189 && LA37_1 <= 190)||LA37_1==192||LA37_1==194||LA37_1==196||(LA37_1 >= 198 && LA37_1 <= 200)) ) {
					alt37=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 37, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 155:
			case 166:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 202:
				{
				alt37=2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA37_3 = input.LA(2);
				if ( (LA37_3==79) ) {
					alt37=1;
				}
				else if ( (LA37_3==DOT||LA37_3==GT||LA37_3==MINUS||LA37_3==PTR||LA37_3==RPAREN||(LA37_3 >= 62 && LA37_3 <= 78)||(LA37_3 >= 80 && LA37_3 <= 91)||(LA37_3 >= 93 && LA37_3 <= 94)||LA37_3==99||LA37_3==142||(LA37_3 >= 198 && LA37_3 <= 200)) ) {
					alt37=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 37, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 37, 0, input);
				throw nvae;
			}
			switch (alt37) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:161:9: argument_name argument_value
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_argument_name_in_argument2497);
					argument_name96=argument_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_name96.getTree());

					pushFollow(FOLLOW_argument_value_in_argument2501);
					argument_value97=argument_value();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value97.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:162:11: argument_value
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_argument_value_in_argument2513);
					argument_value98=argument_value();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_value98.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 29, argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument"


	public static class argument_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument_name"
	// /Users/jeremie/ANTLR/cs.g:163:1: argument_name : identifier ':' ;
	public final csParser.argument_name_return argument_name() throws RecognitionException {
		csParser.argument_name_return retval = new csParser.argument_name_return();
		retval.start = input.LT(1);
		int argument_name_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal100=null;
		ParserRuleReturnScope identifier99 =null;

		CommonTree char_literal100_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:163:14: ( identifier ':' )
			// /Users/jeremie/ANTLR/cs.g:164:9: identifier ':'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_argument_name2527);
			identifier99=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier99.getTree());

			char_literal100=(Token)match(input,79,FOLLOW_79_in_argument_name2531); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal100_tree = (CommonTree)adaptor.create(char_literal100);
			adaptor.addChild(root_0, char_literal100_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 30, argument_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument_name"


	public static class argument_value_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "argument_value"
	// /Users/jeremie/ANTLR/cs.g:165:1: argument_value : ( expression | ref_variable_reference | 'out' variable_reference );
	public final csParser.argument_value_return argument_value() throws RecognitionException {
		csParser.argument_value_return retval = new csParser.argument_value_return();
		retval.start = input.LT(1);
		int argument_value_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal103=null;
		ParserRuleReturnScope expression101 =null;
		ParserRuleReturnScope ref_variable_reference102 =null;
		ParserRuleReturnScope variable_reference104 =null;

		CommonTree string_literal103_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:165:15: ( expression | ref_variable_reference | 'out' variable_reference )
			int alt38=3;
			switch ( input.LA(1) ) {
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
			case 202:
				{
				alt38=1;
				}
				break;
			case 166:
				{
				alt38=2;
				}
				break;
			case 155:
				{
				alt38=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 38, 0, input);
				throw nvae;
			}
			switch (alt38) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:166:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_argument_value2546);
					expression101=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression101.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:167:11: ref_variable_reference
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_ref_variable_reference_in_argument_value2559);
					ref_variable_reference102=ref_variable_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ref_variable_reference102.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:168:11: 'out' variable_reference
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal103=(Token)match(input,155,FOLLOW_155_in_argument_value2572); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal103_tree = (CommonTree)adaptor.create(string_literal103);
					adaptor.addChild(root_0, string_literal103_tree);
					}

					pushFollow(FOLLOW_variable_reference_in_argument_value2576);
					variable_reference104=variable_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference104.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 31, argument_value_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "argument_value"


	public static class ref_variable_reference_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ref_variable_reference"
	// /Users/jeremie/ANTLR/cs.g:169:1: ref_variable_reference : 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) ;
	public final csParser.ref_variable_reference_return ref_variable_reference() throws RecognitionException {
		csParser.ref_variable_reference_return retval = new csParser.ref_variable_reference_return();
		retval.start = input.LT(1);
		int ref_variable_reference_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal105=null;
		Token char_literal106=null;
		Token char_literal108=null;
		ParserRuleReturnScope type107 =null;
		ParserRuleReturnScope ref_variable_reference109 =null;
		ParserRuleReturnScope variable_reference110 =null;
		ParserRuleReturnScope variable_reference111 =null;

		CommonTree string_literal105_tree=null;
		CommonTree char_literal106_tree=null;
		CommonTree char_literal108_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:169:23: ( 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference ) )
			// /Users/jeremie/ANTLR/cs.g:170:9: 'ref' ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal105=(Token)match(input,166,FOLLOW_166_in_ref_variable_reference2591); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal105_tree = (CommonTree)adaptor.create(string_literal105);
			adaptor.addChild(root_0, string_literal105_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:171:17: ( ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference ) | variable_reference )
			int alt40=2;
			int LA40_0 = input.LA(1);
			if ( (LA40_0==68) ) {
				int LA40_1 = input.LA(2);
				if ( (synpred10_cs()) ) {
					alt40=1;
				}
				else if ( (true) ) {
					alt40=2;
				}

			}
			else if ( (LA40_0==Character_literal||LA40_0==FALSE||(LA40_0 >= Hex_number && LA40_0 <= IDENTIFIER)||(LA40_0 >= MINUS && LA40_0 <= NUMBER)||LA40_0==Real_literal||LA40_0==STRINGLITERAL||LA40_0==TRUE||LA40_0==Verbatim_string_literal||LA40_0==61||LA40_0==66||LA40_0==69||(LA40_0 >= 71 && LA40_0 <= 72)||LA40_0==75||LA40_0==95||(LA40_0 >= 97 && LA40_0 <= 98)||(LA40_0 >= 100 && LA40_0 <= 103)||(LA40_0 >= 105 && LA40_0 <= 106)||(LA40_0 >= 109 && LA40_0 <= 110)||(LA40_0 >= 114 && LA40_0 <= 117)||(LA40_0 >= 119 && LA40_0 <= 120)||LA40_0==122||LA40_0==126||LA40_0==129||LA40_0==132||LA40_0==135||LA40_0==138||LA40_0==141||(LA40_0 >= 143 && LA40_0 <= 144)||(LA40_0 >= 146 && LA40_0 <= 148)||(LA40_0 >= 150 && LA40_0 <= 152)||LA40_0==154||LA40_0==157||LA40_0==160||LA40_0==162||LA40_0==167||LA40_0==169||(LA40_0 >= 171 && LA40_0 <= 174)||LA40_0==177||LA40_0==180||(LA40_0 >= 183 && LA40_0 <= 187)||(LA40_0 >= 189 && LA40_0 <= 190)||LA40_0==194||LA40_0==196||LA40_0==202) ) {
				alt40=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 40, 0, input);
				throw nvae;
			}

			switch (alt40) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:171:18: ( '(' type ')' )=> '(' type ')' ( ref_variable_reference | variable_reference )
					{
					char_literal106=(Token)match(input,68,FOLLOW_68_in_ref_variable_reference2627); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal106_tree = (CommonTree)adaptor.create(char_literal106);
					adaptor.addChild(root_0, char_literal106_tree);
					}

					pushFollow(FOLLOW_type_in_ref_variable_reference2631);
					type107=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type107.getTree());

					char_literal108=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_ref_variable_reference2635); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal108_tree = (CommonTree)adaptor.create(char_literal108);
					adaptor.addChild(root_0, char_literal108_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:171:61: ( ref_variable_reference | variable_reference )
					int alt39=2;
					int LA39_0 = input.LA(1);
					if ( (LA39_0==166) ) {
						alt39=1;
					}
					else if ( (LA39_0==Character_literal||LA39_0==FALSE||(LA39_0 >= Hex_number && LA39_0 <= IDENTIFIER)||(LA39_0 >= MINUS && LA39_0 <= NUMBER)||LA39_0==Real_literal||LA39_0==STRINGLITERAL||LA39_0==TRUE||LA39_0==Verbatim_string_literal||LA39_0==61||LA39_0==66||(LA39_0 >= 68 && LA39_0 <= 69)||(LA39_0 >= 71 && LA39_0 <= 72)||LA39_0==75||LA39_0==95||(LA39_0 >= 97 && LA39_0 <= 98)||(LA39_0 >= 100 && LA39_0 <= 103)||(LA39_0 >= 105 && LA39_0 <= 106)||(LA39_0 >= 109 && LA39_0 <= 110)||(LA39_0 >= 114 && LA39_0 <= 117)||(LA39_0 >= 119 && LA39_0 <= 120)||LA39_0==122||LA39_0==126||LA39_0==129||LA39_0==132||LA39_0==135||LA39_0==138||LA39_0==141||(LA39_0 >= 143 && LA39_0 <= 144)||(LA39_0 >= 146 && LA39_0 <= 148)||(LA39_0 >= 150 && LA39_0 <= 152)||LA39_0==154||LA39_0==157||LA39_0==160||LA39_0==162||LA39_0==167||LA39_0==169||(LA39_0 >= 171 && LA39_0 <= 174)||LA39_0==177||LA39_0==180||(LA39_0 >= 183 && LA39_0 <= 187)||(LA39_0 >= 189 && LA39_0 <= 190)||LA39_0==194||LA39_0==196||LA39_0==202) ) {
						alt39=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 39, 0, input);
						throw nvae;
					}

					switch (alt39) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:171:62: ref_variable_reference
							{
							pushFollow(FOLLOW_ref_variable_reference_in_ref_variable_reference2640);
							ref_variable_reference109=ref_variable_reference();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, ref_variable_reference109.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:171:87: variable_reference
							{
							pushFollow(FOLLOW_variable_reference_in_ref_variable_reference2644);
							variable_reference110=variable_reference();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference110.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:173:19: variable_reference
					{
					pushFollow(FOLLOW_variable_reference_in_ref_variable_reference2869);
					variable_reference111=variable_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_reference111.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 32, ref_variable_reference_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ref_variable_reference"


	public static class variable_reference_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_reference"
	// /Users/jeremie/ANTLR/cs.g:175:1: variable_reference : expression ;
	public final csParser.variable_reference_return variable_reference() throws RecognitionException {
		csParser.variable_reference_return retval = new csParser.variable_reference_return();
		retval.start = input.LT(1);
		int variable_reference_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression112 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:175:19: ( expression )
			// /Users/jeremie/ANTLR/cs.g:176:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_variable_reference2893);
			expression112=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression112.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 33, variable_reference_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_reference"


	public static class rank_specifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "rank_specifiers"
	// /Users/jeremie/ANTLR/cs.g:177:1: rank_specifiers : ( rank_specifier )+ ;
	public final csParser.rank_specifiers_return rank_specifiers() throws RecognitionException {
		csParser.rank_specifiers_return retval = new csParser.rank_specifiers_return();
		retval.start = input.LT(1);
		int rank_specifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope rank_specifier113 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:177:16: ( ( rank_specifier )+ )
			// /Users/jeremie/ANTLR/cs.g:178:9: ( rank_specifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:178:9: ( rank_specifier )+
			int cnt41=0;
			loop41:
			while (true) {
				int alt41=2;
				int LA41_0 = input.LA(1);
				if ( (LA41_0==91) ) {
					int LA41_2 = input.LA(2);
					if ( (LA41_2==74||LA41_2==92) ) {
						alt41=1;
					}

				}

				switch (alt41) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:178:9: rank_specifier
					{
					pushFollow(FOLLOW_rank_specifier_in_rank_specifiers2908);
					rank_specifier113=rank_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier113.getTree());

					}
					break;

				default :
					if ( cnt41 >= 1 ) break loop41;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(41, input);
					throw eee;
				}
				cnt41++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 34, rank_specifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "rank_specifiers"


	public static class rank_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "rank_specifier"
	// /Users/jeremie/ANTLR/cs.g:179:1: rank_specifier : '[' ( dim_separators )? ']' ;
	public final csParser.rank_specifier_return rank_specifier() throws RecognitionException {
		csParser.rank_specifier_return retval = new csParser.rank_specifier_return();
		retval.start = input.LT(1);
		int rank_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal114=null;
		Token char_literal116=null;
		ParserRuleReturnScope dim_separators115 =null;

		CommonTree char_literal114_tree=null;
		CommonTree char_literal116_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:179:15: ( '[' ( dim_separators )? ']' )
			// /Users/jeremie/ANTLR/cs.g:180:9: '[' ( dim_separators )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal114=(Token)match(input,91,FOLLOW_91_in_rank_specifier2933); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal114_tree = (CommonTree)adaptor.create(char_literal114);
			adaptor.addChild(root_0, char_literal114_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:180:15: ( dim_separators )?
			int alt42=2;
			int LA42_0 = input.LA(1);
			if ( (LA42_0==74) ) {
				alt42=1;
			}
			switch (alt42) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:180:15: dim_separators
					{
					pushFollow(FOLLOW_dim_separators_in_rank_specifier2937);
					dim_separators115=dim_separators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, dim_separators115.getTree());

					}
					break;

			}

			char_literal116=(Token)match(input,92,FOLLOW_92_in_rank_specifier2942); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal116_tree = (CommonTree)adaptor.create(char_literal116);
			adaptor.addChild(root_0, char_literal116_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 35, rank_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "rank_specifier"


	public static class dim_separators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "dim_separators"
	// /Users/jeremie/ANTLR/cs.g:181:1: dim_separators : ( ',' )+ ;
	public final csParser.dim_separators_return dim_separators() throws RecognitionException {
		csParser.dim_separators_return retval = new csParser.dim_separators_return();
		retval.start = input.LT(1);
		int dim_separators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal117=null;

		CommonTree char_literal117_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:181:15: ( ( ',' )+ )
			// /Users/jeremie/ANTLR/cs.g:182:9: ( ',' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:182:9: ( ',' )+
			int cnt43=0;
			loop43:
			while (true) {
				int alt43=2;
				int LA43_0 = input.LA(1);
				if ( (LA43_0==74) ) {
					alt43=1;
				}

				switch (alt43) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:182:9: ','
					{
					char_literal117=(Token)match(input,74,FOLLOW_74_in_dim_separators2958); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal117_tree = (CommonTree)adaptor.create(char_literal117);
					adaptor.addChild(root_0, char_literal117_tree);
					}

					}
					break;

				default :
					if ( cnt43 >= 1 ) break loop43;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(43, input);
					throw eee;
				}
				cnt43++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 36, dim_separators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "dim_separators"


	public static class delegate_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:184:1: delegate_creation_expression : type_name '(' type_name ')' ;
	public final csParser.delegate_creation_expression_return delegate_creation_expression() throws RecognitionException {
		csParser.delegate_creation_expression_return retval = new csParser.delegate_creation_expression_return();
		retval.start = input.LT(1);
		int delegate_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal119=null;
		Token char_literal121=null;
		ParserRuleReturnScope type_name118 =null;
		ParserRuleReturnScope type_name120 =null;

		CommonTree char_literal119_tree=null;
		CommonTree char_literal121_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:184:29: ( type_name '(' type_name ')' )
			// /Users/jeremie/ANTLR/cs.g:186:9: type_name '(' type_name ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_delegate_creation_expression2985);
			type_name118=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name118.getTree());

			char_literal119=(Token)match(input,68,FOLLOW_68_in_delegate_creation_expression2989); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal119_tree = (CommonTree)adaptor.create(char_literal119);
			adaptor.addChild(root_0, char_literal119_tree);
			}

			pushFollow(FOLLOW_type_name_in_delegate_creation_expression2993);
			type_name120=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name120.getTree());

			char_literal121=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delegate_creation_expression2997); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal121_tree = (CommonTree)adaptor.create(char_literal121);
			adaptor.addChild(root_0, char_literal121_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 37, delegate_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_creation_expression"


	public static class anonymous_object_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_object_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:187:1: anonymous_object_creation_expression : anonymous_object_initializer ;
	public final csParser.anonymous_object_creation_expression_return anonymous_object_creation_expression() throws RecognitionException {
		csParser.anonymous_object_creation_expression_return retval = new csParser.anonymous_object_creation_expression_return();
		retval.start = input.LT(1);
		int anonymous_object_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope anonymous_object_initializer122 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:187:37: ( anonymous_object_initializer )
			// /Users/jeremie/ANTLR/cs.g:189:9: anonymous_object_initializer
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression3022);
			anonymous_object_initializer122=anonymous_object_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_object_initializer122.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 38, anonymous_object_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_object_creation_expression"


	public static class anonymous_object_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_object_initializer"
	// /Users/jeremie/ANTLR/cs.g:190:1: anonymous_object_initializer : '{' ( member_declarator_list )? ( ',' )? '}' ;
	public final csParser.anonymous_object_initializer_return anonymous_object_initializer() throws RecognitionException {
		csParser.anonymous_object_initializer_return retval = new csParser.anonymous_object_initializer_return();
		retval.start = input.LT(1);
		int anonymous_object_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal123=null;
		Token char_literal125=null;
		Token char_literal126=null;
		ParserRuleReturnScope member_declarator_list124 =null;

		CommonTree char_literal123_tree=null;
		CommonTree char_literal125_tree=null;
		CommonTree char_literal126_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:190:29: ( '{' ( member_declarator_list )? ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:191:9: '{' ( member_declarator_list )? ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal123=(Token)match(input,197,FOLLOW_197_in_anonymous_object_initializer3038); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal123_tree = (CommonTree)adaptor.create(char_literal123);
			adaptor.addChild(root_0, char_literal123_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:191:15: ( member_declarator_list )?
			int alt44=2;
			int LA44_0 = input.LA(1);
			if ( (LA44_0==IDENTIFIER||LA44_0==95||(LA44_0 >= 97 && LA44_0 <= 98)||(LA44_0 >= 100 && LA44_0 <= 101)||LA44_0==105||LA44_0==117||LA44_0==120||LA44_0==122||LA44_0==126||LA44_0==132||LA44_0==135||LA44_0==141||(LA44_0 >= 143 && LA44_0 <= 144)||(LA44_0 >= 147 && LA44_0 <= 148)||LA44_0==152||LA44_0==154||LA44_0==157||LA44_0==160||LA44_0==162||LA44_0==167||(LA44_0 >= 171 && LA44_0 <= 172)||LA44_0==183||LA44_0==190||LA44_0==194||LA44_0==196) ) {
				alt44=1;
			}
			switch (alt44) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:191:15: member_declarator_list
					{
					pushFollow(FOLLOW_member_declarator_list_in_anonymous_object_initializer3042);
					member_declarator_list124=member_declarator_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator_list124.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:191:41: ( ',' )?
			int alt45=2;
			int LA45_0 = input.LA(1);
			if ( (LA45_0==74) ) {
				alt45=1;
			}
			switch (alt45) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:191:41: ','
					{
					char_literal125=(Token)match(input,74,FOLLOW_74_in_anonymous_object_initializer3047); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal125_tree = (CommonTree)adaptor.create(char_literal125);
					adaptor.addChild(root_0, char_literal125_tree);
					}

					}
					break;

			}

			char_literal126=(Token)match(input,201,FOLLOW_201_in_anonymous_object_initializer3052); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal126_tree = (CommonTree)adaptor.create(char_literal126);
			adaptor.addChild(root_0, char_literal126_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 39, anonymous_object_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_object_initializer"


	public static class member_declarator_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_declarator_list"
	// /Users/jeremie/ANTLR/cs.g:192:1: member_declarator_list : member_declarator ( ',' member_declarator )* ;
	public final csParser.member_declarator_list_return member_declarator_list() throws RecognitionException {
		csParser.member_declarator_list_return retval = new csParser.member_declarator_list_return();
		retval.start = input.LT(1);
		int member_declarator_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal128=null;
		ParserRuleReturnScope member_declarator127 =null;
		ParserRuleReturnScope member_declarator129 =null;

		CommonTree char_literal128_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:192:23: ( member_declarator ( ',' member_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:193:9: member_declarator ( ',' member_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_declarator_in_member_declarator_list3067);
			member_declarator127=member_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator127.getTree());

			// /Users/jeremie/ANTLR/cs.g:193:28: ( ',' member_declarator )*
			loop46:
			while (true) {
				int alt46=2;
				int LA46_0 = input.LA(1);
				if ( (LA46_0==74) ) {
					int LA46_1 = input.LA(2);
					if ( (LA46_1==IDENTIFIER||LA46_1==95||(LA46_1 >= 97 && LA46_1 <= 98)||(LA46_1 >= 100 && LA46_1 <= 101)||LA46_1==105||LA46_1==117||LA46_1==120||LA46_1==122||LA46_1==126||LA46_1==132||LA46_1==135||LA46_1==141||(LA46_1 >= 143 && LA46_1 <= 144)||(LA46_1 >= 147 && LA46_1 <= 148)||LA46_1==152||LA46_1==154||LA46_1==157||LA46_1==160||LA46_1==162||LA46_1==167||(LA46_1 >= 171 && LA46_1 <= 172)||LA46_1==183||LA46_1==190||LA46_1==194||LA46_1==196) ) {
						alt46=1;
					}

				}

				switch (alt46) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:193:29: ',' member_declarator
					{
					char_literal128=(Token)match(input,74,FOLLOW_74_in_member_declarator_list3071); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal128_tree = (CommonTree)adaptor.create(char_literal128);
					adaptor.addChild(root_0, char_literal128_tree);
					}

					pushFollow(FOLLOW_member_declarator_in_member_declarator_list3073);
					member_declarator129=member_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_declarator129.getTree());

					}
					break;

				default :
					break loop46;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 40, member_declarator_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_declarator_list"


	public static class member_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_declarator"
	// /Users/jeremie/ANTLR/cs.g:194:1: member_declarator : identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) ;
	public final csParser.member_declarator_return member_declarator() throws RecognitionException {
		csParser.member_declarator_return retval = new csParser.member_declarator_return();
		retval.start = input.LT(1);
		int member_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal132=null;
		Token char_literal134=null;
		ParserRuleReturnScope identifier130 =null;
		ParserRuleReturnScope generic_argument_list131 =null;
		ParserRuleReturnScope primary_or_array_creation_expression133 =null;
		ParserRuleReturnScope expression135 =null;

		CommonTree char_literal132_tree=null;
		CommonTree char_literal134_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:194:18: ( identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression ) )
			// /Users/jeremie/ANTLR/cs.g:195:9: identifier ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_member_declarator3092);
			identifier130=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier130.getTree());

			// /Users/jeremie/ANTLR/cs.g:195:22: ( generic_argument_list | ( '.' primary_or_array_creation_expression ) | '=' expression )
			int alt47=3;
			switch ( input.LA(1) ) {
			case 81:
				{
				alt47=1;
				}
				break;
			case DOT:
				{
				alt47=2;
				}
				break;
			case 85:
				{
				alt47=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 47, 0, input);
				throw nvae;
			}
			switch (alt47) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:195:23: generic_argument_list
					{
					pushFollow(FOLLOW_generic_argument_list_in_member_declarator3097);
					generic_argument_list131=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list131.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:196:36: ( '.' primary_or_array_creation_expression )
					{
					// /Users/jeremie/ANTLR/cs.g:196:36: ( '.' primary_or_array_creation_expression )
					// /Users/jeremie/ANTLR/cs.g:196:37: '.' primary_or_array_creation_expression
					{
					char_literal132=(Token)match(input,DOT,FOLLOW_DOT_in_member_declarator3135); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal132_tree = (CommonTree)adaptor.create(char_literal132);
					adaptor.addChild(root_0, char_literal132_tree);
					}

					pushFollow(FOLLOW_primary_or_array_creation_expression_in_member_declarator3139);
					primary_or_array_creation_expression133=primary_or_array_creation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_or_array_creation_expression133.getTree());

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:197:36: '=' expression
					{
					char_literal134=(Token)match(input,85,FOLLOW_85_in_member_declarator3177); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal134_tree = (CommonTree)adaptor.create(char_literal134);
					adaptor.addChild(root_0, char_literal134_tree);
					}

					pushFollow(FOLLOW_expression_in_member_declarator3181);
					expression135=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression135.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 41, member_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_declarator"


	public static class primary_or_array_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_or_array_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:198:1: primary_or_array_creation_expression : ( ( array_creation_expression )=> array_creation_expression | primary_expression );
	public final csParser.primary_or_array_creation_expression_return primary_or_array_creation_expression() throws RecognitionException {
		csParser.primary_or_array_creation_expression_return retval = new csParser.primary_or_array_creation_expression_return();
		retval.start = input.LT(1);
		int primary_or_array_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope array_creation_expression136 =null;
		ParserRuleReturnScope primary_expression137 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:198:37: ( ( array_creation_expression )=> array_creation_expression | primary_expression )
			int alt48=2;
			int LA48_0 = input.LA(1);
			if ( (LA48_0==150) ) {
				int LA48_1 = input.LA(2);
				if ( (synpred11_cs()) ) {
					alt48=1;
				}
				else if ( (true) ) {
					alt48=2;
				}

			}
			else if ( (LA48_0==Character_literal||LA48_0==FALSE||(LA48_0 >= Hex_number && LA48_0 <= IDENTIFIER)||(LA48_0 >= NULL && LA48_0 <= NUMBER)||LA48_0==Real_literal||LA48_0==STRINGLITERAL||LA48_0==TRUE||LA48_0==Verbatim_string_literal||LA48_0==68||LA48_0==95||(LA48_0 >= 97 && LA48_0 <= 98)||(LA48_0 >= 100 && LA48_0 <= 103)||(LA48_0 >= 105 && LA48_0 <= 106)||(LA48_0 >= 109 && LA48_0 <= 110)||(LA48_0 >= 114 && LA48_0 <= 117)||(LA48_0 >= 119 && LA48_0 <= 120)||LA48_0==122||LA48_0==126||LA48_0==129||LA48_0==132||LA48_0==135||LA48_0==138||LA48_0==141||(LA48_0 >= 143 && LA48_0 <= 144)||(LA48_0 >= 146 && LA48_0 <= 148)||(LA48_0 >= 151 && LA48_0 <= 152)||LA48_0==154||LA48_0==157||LA48_0==160||LA48_0==162||LA48_0==167||LA48_0==169||(LA48_0 >= 171 && LA48_0 <= 174)||LA48_0==177||LA48_0==180||(LA48_0 >= 183 && LA48_0 <= 187)||(LA48_0 >= 189 && LA48_0 <= 190)||LA48_0==194||LA48_0==196) ) {
				alt48=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 48, 0, input);
				throw nvae;
			}

			switch (alt48) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:199:9: ( array_creation_expression )=> array_creation_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_array_creation_expression_in_primary_or_array_creation_expression3203);
					array_creation_expression136=array_creation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_creation_expression136.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:200:11: primary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_primary_expression_in_primary_or_array_creation_expression3215);
					primary_expression137=primary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression137.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 42, primary_or_array_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_or_array_creation_expression"


	public static class array_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "array_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:203:1: array_creation_expression : 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) ;
	public final csParser.array_creation_expression_return array_creation_expression() throws RecognitionException {
		csParser.array_creation_expression_return retval = new csParser.array_creation_expression_return();
		retval.start = input.LT(1);
		int array_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal138=null;
		Token char_literal140=null;
		Token char_literal142=null;
		ParserRuleReturnScope type139 =null;
		ParserRuleReturnScope expression_list141 =null;
		ParserRuleReturnScope rank_specifiers143 =null;
		ParserRuleReturnScope array_initializer144 =null;
		ParserRuleReturnScope arguments145 =null;
		ParserRuleReturnScope invocation_part146 =null;
		ParserRuleReturnScope invocation_part147 =null;
		ParserRuleReturnScope arguments148 =null;
		ParserRuleReturnScope array_initializer149 =null;
		ParserRuleReturnScope rank_specifier150 =null;
		ParserRuleReturnScope array_initializer151 =null;

		CommonTree string_literal138_tree=null;
		CommonTree char_literal140_tree=null;
		CommonTree char_literal142_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:203:26: ( 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) ) )
			// /Users/jeremie/ANTLR/cs.g:204:9: 'new' ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal138=(Token)match(input,150,FOLLOW_150_in_array_creation_expression3240); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal138_tree = (CommonTree)adaptor.create(string_literal138);
			adaptor.addChild(root_0, string_literal138_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:205:17: ( type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer ) | rank_specifier ( array_initializer ) )
			int alt54=2;
			int LA54_0 = input.LA(1);
			if ( (LA54_0==IDENTIFIER||LA54_0==95||(LA54_0 >= 97 && LA54_0 <= 98)||(LA54_0 >= 100 && LA54_0 <= 101)||LA54_0==103||(LA54_0 >= 105 && LA54_0 <= 106)||LA54_0==109||LA54_0==114||LA54_0==117||(LA54_0 >= 119 && LA54_0 <= 120)||LA54_0==122||LA54_0==126||LA54_0==129||LA54_0==132||LA54_0==135||LA54_0==138||LA54_0==141||(LA54_0 >= 143 && LA54_0 <= 144)||(LA54_0 >= 146 && LA54_0 <= 148)||(LA54_0 >= 151 && LA54_0 <= 152)||LA54_0==154||LA54_0==157||LA54_0==160||LA54_0==162||LA54_0==167||LA54_0==169||(LA54_0 >= 171 && LA54_0 <= 173)||LA54_0==177||LA54_0==183||(LA54_0 >= 185 && LA54_0 <= 186)||(LA54_0 >= 189 && LA54_0 <= 190)||LA54_0==192||LA54_0==194||LA54_0==196) ) {
				alt54=1;
			}
			else if ( (LA54_0==91) ) {
				alt54=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 54, 0, input);
				throw nvae;
			}

			switch (alt54) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:205:18: type ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
					{
					pushFollow(FOLLOW_type_in_array_creation_expression3262);
					type139=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type139.getTree());

					// /Users/jeremie/ANTLR/cs.g:205:25: ( '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ) | array_initializer )
					int alt53=2;
					int LA53_0 = input.LA(1);
					if ( (LA53_0==91) ) {
						alt53=1;
					}
					else if ( (LA53_0==197) ) {
						alt53=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 53, 0, input);
						throw nvae;
					}

					switch (alt53) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:205:26: '[' expression_list ']' ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
							{
							char_literal140=(Token)match(input,91,FOLLOW_91_in_array_creation_expression3267); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal140_tree = (CommonTree)adaptor.create(char_literal140);
							adaptor.addChild(root_0, char_literal140_tree);
							}

							pushFollow(FOLLOW_expression_list_in_array_creation_expression3271);
							expression_list141=expression_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list141.getTree());

							char_literal142=(Token)match(input,92,FOLLOW_92_in_array_creation_expression3275); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal142_tree = (CommonTree)adaptor.create(char_literal142);
							adaptor.addChild(root_0, char_literal142_tree);
							}

							// /Users/jeremie/ANTLR/cs.g:206:41: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
							int alt52=2;
							alt52 = dfa52.predict(input);
							switch (alt52) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:206:43: ( rank_specifiers )? ( array_initializer )?
									{
									// /Users/jeremie/ANTLR/cs.g:206:43: ( rank_specifiers )?
									int alt49=2;
									int LA49_0 = input.LA(1);
									if ( (LA49_0==91) ) {
										alt49=1;
									}
									switch (alt49) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:206:43: rank_specifiers
											{
											pushFollow(FOLLOW_rank_specifiers_in_array_creation_expression3322);
											rank_specifiers143=rank_specifiers();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers143.getTree());

											}
											break;

									}

									// /Users/jeremie/ANTLR/cs.g:206:62: ( array_initializer )?
									int alt50=2;
									int LA50_0 = input.LA(1);
									if ( (LA50_0==197) ) {
										alt50=1;
									}
									switch (alt50) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:206:62: array_initializer
											{
											pushFollow(FOLLOW_array_initializer_in_array_creation_expression3327);
											array_initializer144=array_initializer();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer144.getTree());

											}
											break;

									}

									}
									break;
								case 2 :
									// /Users/jeremie/ANTLR/cs.g:208:43: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
									{
									// /Users/jeremie/ANTLR/cs.g:208:43: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
									loop51:
									while (true) {
										int alt51=3;
										int LA51_0 = input.LA(1);
										if ( (LA51_0==68) ) {
											int LA51_1 = input.LA(2);
											if ( (synpred12_cs()) ) {
												alt51=1;
											}

										}
										else if ( (LA51_0==DOT||LA51_0==PTR||LA51_0==91) ) {
											alt51=2;
										}

										switch (alt51) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:208:45: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
											{
											// /Users/jeremie/ANTLR/cs.g:208:45: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
											// /Users/jeremie/ANTLR/cs.g:208:46: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
											{
											pushFollow(FOLLOW_arguments_in_array_creation_expression3440);
											arguments145=arguments();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments145.getTree());

											pushFollow(FOLLOW_invocation_part_in_array_creation_expression3444);
											invocation_part146=invocation_part();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part146.getTree());

											}

											}
											break;
										case 2 :
											// /Users/jeremie/ANTLR/cs.g:209:45: invocation_part
											{
											pushFollow(FOLLOW_invocation_part_in_array_creation_expression3491);
											invocation_part147=invocation_part();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part147.getTree());

											}
											break;

										default :
											break loop51;
										}
									}

									pushFollow(FOLLOW_arguments_in_array_creation_expression3497);
									arguments148=arguments();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments148.getTree());

									}
									break;

							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:211:35: array_initializer
							{
							pushFollow(FOLLOW_array_initializer_in_array_creation_expression3631);
							array_initializer149=array_initializer();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer149.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:213:19: rank_specifier ( array_initializer )
					{
					pushFollow(FOLLOW_rank_specifier_in_array_creation_expression3701);
					rank_specifier150=rank_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifier150.getTree());

					// /Users/jeremie/ANTLR/cs.g:214:25: ( array_initializer )
					// /Users/jeremie/ANTLR/cs.g:214:26: array_initializer
					{
					pushFollow(FOLLOW_array_initializer_in_array_creation_expression3731);
					array_initializer151=array_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer151.getTree());

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 43, array_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "array_creation_expression"


	public static class array_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "array_initializer"
	// /Users/jeremie/ANTLR/cs.g:217:1: array_initializer : '{' ( variable_initializer_list )? ( ',' )? '}' ;
	public final csParser.array_initializer_return array_initializer() throws RecognitionException {
		csParser.array_initializer_return retval = new csParser.array_initializer_return();
		retval.start = input.LT(1);
		int array_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal152=null;
		Token char_literal154=null;
		Token char_literal155=null;
		ParserRuleReturnScope variable_initializer_list153 =null;

		CommonTree char_literal152_tree=null;
		CommonTree char_literal154_tree=null;
		CommonTree char_literal155_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:217:18: ( '{' ( variable_initializer_list )? ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:218:9: '{' ( variable_initializer_list )? ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal152=(Token)match(input,197,FOLLOW_197_in_array_initializer3794); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal152_tree = (CommonTree)adaptor.create(char_literal152);
			adaptor.addChild(root_0, char_literal152_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:218:15: ( variable_initializer_list )?
			int alt55=2;
			int LA55_0 = input.LA(1);
			if ( (LA55_0==Character_literal||LA55_0==FALSE||(LA55_0 >= Hex_number && LA55_0 <= IDENTIFIER)||(LA55_0 >= MINUS && LA55_0 <= NUMBER)||LA55_0==Real_literal||LA55_0==STRINGLITERAL||LA55_0==TRUE||LA55_0==Verbatim_string_literal||LA55_0==61||LA55_0==66||(LA55_0 >= 68 && LA55_0 <= 69)||(LA55_0 >= 71 && LA55_0 <= 72)||LA55_0==75||LA55_0==95||(LA55_0 >= 97 && LA55_0 <= 98)||(LA55_0 >= 100 && LA55_0 <= 103)||(LA55_0 >= 105 && LA55_0 <= 106)||(LA55_0 >= 109 && LA55_0 <= 110)||(LA55_0 >= 114 && LA55_0 <= 117)||(LA55_0 >= 119 && LA55_0 <= 120)||LA55_0==122||LA55_0==126||LA55_0==129||LA55_0==132||LA55_0==135||LA55_0==138||LA55_0==141||(LA55_0 >= 143 && LA55_0 <= 144)||(LA55_0 >= 146 && LA55_0 <= 148)||(LA55_0 >= 150 && LA55_0 <= 152)||LA55_0==154||LA55_0==157||LA55_0==160||LA55_0==162||LA55_0==167||LA55_0==169||(LA55_0 >= 171 && LA55_0 <= 174)||LA55_0==177||LA55_0==180||(LA55_0 >= 183 && LA55_0 <= 187)||(LA55_0 >= 189 && LA55_0 <= 190)||LA55_0==194||(LA55_0 >= 196 && LA55_0 <= 197)||LA55_0==202) ) {
				alt55=1;
			}
			switch (alt55) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:218:15: variable_initializer_list
					{
					pushFollow(FOLLOW_variable_initializer_list_in_array_initializer3798);
					variable_initializer_list153=variable_initializer_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer_list153.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:218:44: ( ',' )?
			int alt56=2;
			int LA56_0 = input.LA(1);
			if ( (LA56_0==74) ) {
				alt56=1;
			}
			switch (alt56) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:218:44: ','
					{
					char_literal154=(Token)match(input,74,FOLLOW_74_in_array_initializer3803); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal154_tree = (CommonTree)adaptor.create(char_literal154);
					adaptor.addChild(root_0, char_literal154_tree);
					}

					}
					break;

			}

			char_literal155=(Token)match(input,201,FOLLOW_201_in_array_initializer3808); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal155_tree = (CommonTree)adaptor.create(char_literal155);
			adaptor.addChild(root_0, char_literal155_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 44, array_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "array_initializer"


	public static class variable_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:219:1: variable_initializer_list : variable_initializer ( ',' variable_initializer )* ;
	public final csParser.variable_initializer_list_return variable_initializer_list() throws RecognitionException {
		csParser.variable_initializer_list_return retval = new csParser.variable_initializer_list_return();
		retval.start = input.LT(1);
		int variable_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal157=null;
		ParserRuleReturnScope variable_initializer156 =null;
		ParserRuleReturnScope variable_initializer158 =null;

		CommonTree char_literal157_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:219:26: ( variable_initializer ( ',' variable_initializer )* )
			// /Users/jeremie/ANTLR/cs.g:220:9: variable_initializer ( ',' variable_initializer )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list3823);
			variable_initializer156=variable_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer156.getTree());

			// /Users/jeremie/ANTLR/cs.g:220:30: ( ',' variable_initializer )*
			loop57:
			while (true) {
				int alt57=2;
				int LA57_0 = input.LA(1);
				if ( (LA57_0==74) ) {
					int LA57_1 = input.LA(2);
					if ( (LA57_1==Character_literal||LA57_1==FALSE||(LA57_1 >= Hex_number && LA57_1 <= IDENTIFIER)||(LA57_1 >= MINUS && LA57_1 <= NUMBER)||LA57_1==Real_literal||LA57_1==STRINGLITERAL||LA57_1==TRUE||LA57_1==Verbatim_string_literal||LA57_1==61||LA57_1==66||(LA57_1 >= 68 && LA57_1 <= 69)||(LA57_1 >= 71 && LA57_1 <= 72)||LA57_1==75||LA57_1==95||(LA57_1 >= 97 && LA57_1 <= 98)||(LA57_1 >= 100 && LA57_1 <= 103)||(LA57_1 >= 105 && LA57_1 <= 106)||(LA57_1 >= 109 && LA57_1 <= 110)||(LA57_1 >= 114 && LA57_1 <= 117)||(LA57_1 >= 119 && LA57_1 <= 120)||LA57_1==122||LA57_1==126||LA57_1==129||LA57_1==132||LA57_1==135||LA57_1==138||LA57_1==141||(LA57_1 >= 143 && LA57_1 <= 144)||(LA57_1 >= 146 && LA57_1 <= 148)||(LA57_1 >= 150 && LA57_1 <= 152)||LA57_1==154||LA57_1==157||LA57_1==160||LA57_1==162||LA57_1==167||LA57_1==169||(LA57_1 >= 171 && LA57_1 <= 174)||LA57_1==177||LA57_1==180||(LA57_1 >= 183 && LA57_1 <= 187)||(LA57_1 >= 189 && LA57_1 <= 190)||LA57_1==194||(LA57_1 >= 196 && LA57_1 <= 197)||LA57_1==202) ) {
						alt57=1;
					}

				}

				switch (alt57) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:220:31: ',' variable_initializer
					{
					char_literal157=(Token)match(input,74,FOLLOW_74_in_variable_initializer_list3826); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal157_tree = (CommonTree)adaptor.create(char_literal157);
					adaptor.addChild(root_0, char_literal157_tree);
					}

					pushFollow(FOLLOW_variable_initializer_in_variable_initializer_list3828);
					variable_initializer158=variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer158.getTree());

					}
					break;

				default :
					break loop57;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 45, variable_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_initializer_list"


	public static class variable_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_initializer"
	// /Users/jeremie/ANTLR/cs.g:221:1: variable_initializer : ( expression | array_initializer );
	public final csParser.variable_initializer_return variable_initializer() throws RecognitionException {
		csParser.variable_initializer_return retval = new csParser.variable_initializer_return();
		retval.start = input.LT(1);
		int variable_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression159 =null;
		ParserRuleReturnScope array_initializer160 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:221:21: ( expression | array_initializer )
			int alt58=2;
			int LA58_0 = input.LA(1);
			if ( (LA58_0==Character_literal||LA58_0==FALSE||(LA58_0 >= Hex_number && LA58_0 <= IDENTIFIER)||(LA58_0 >= MINUS && LA58_0 <= NUMBER)||LA58_0==Real_literal||LA58_0==STRINGLITERAL||LA58_0==TRUE||LA58_0==Verbatim_string_literal||LA58_0==61||LA58_0==66||(LA58_0 >= 68 && LA58_0 <= 69)||(LA58_0 >= 71 && LA58_0 <= 72)||LA58_0==75||LA58_0==95||(LA58_0 >= 97 && LA58_0 <= 98)||(LA58_0 >= 100 && LA58_0 <= 103)||(LA58_0 >= 105 && LA58_0 <= 106)||(LA58_0 >= 109 && LA58_0 <= 110)||(LA58_0 >= 114 && LA58_0 <= 117)||(LA58_0 >= 119 && LA58_0 <= 120)||LA58_0==122||LA58_0==126||LA58_0==129||LA58_0==132||LA58_0==135||LA58_0==138||LA58_0==141||(LA58_0 >= 143 && LA58_0 <= 144)||(LA58_0 >= 146 && LA58_0 <= 148)||(LA58_0 >= 150 && LA58_0 <= 152)||LA58_0==154||LA58_0==157||LA58_0==160||LA58_0==162||LA58_0==167||LA58_0==169||(LA58_0 >= 171 && LA58_0 <= 174)||LA58_0==177||LA58_0==180||(LA58_0 >= 183 && LA58_0 <= 187)||(LA58_0 >= 189 && LA58_0 <= 190)||LA58_0==194||LA58_0==196||LA58_0==202) ) {
				alt58=1;
			}
			else if ( (LA58_0==197) ) {
				alt58=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 58, 0, input);
				throw nvae;
			}

			switch (alt58) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:222:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_variable_initializer3845);
					expression159=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression159.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:222:29: array_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_array_initializer_in_variable_initializer3856);
					array_initializer160=array_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer160.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 46, variable_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_initializer"


	public static class sizeof_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "sizeof_expression"
	// /Users/jeremie/ANTLR/cs.g:223:1: sizeof_expression : 'sizeof' '(' unmanaged_type ')' ;
	public final csParser.sizeof_expression_return sizeof_expression() throws RecognitionException {
		csParser.sizeof_expression_return retval = new csParser.sizeof_expression_return();
		retval.start = input.LT(1);
		int sizeof_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal161=null;
		Token char_literal162=null;
		Token char_literal164=null;
		ParserRuleReturnScope unmanaged_type163 =null;

		CommonTree string_literal161_tree=null;
		CommonTree char_literal162_tree=null;
		CommonTree char_literal164_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:223:18: ( 'sizeof' '(' unmanaged_type ')' )
			// /Users/jeremie/ANTLR/cs.g:224:9: 'sizeof' '(' unmanaged_type ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal161=(Token)match(input,174,FOLLOW_174_in_sizeof_expression3871); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal161_tree = (CommonTree)adaptor.create(string_literal161);
			adaptor.addChild(root_0, string_literal161_tree);
			}

			char_literal162=(Token)match(input,68,FOLLOW_68_in_sizeof_expression3875); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal162_tree = (CommonTree)adaptor.create(char_literal162);
			adaptor.addChild(root_0, char_literal162_tree);
			}

			pushFollow(FOLLOW_unmanaged_type_in_sizeof_expression3879);
			unmanaged_type163=unmanaged_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type163.getTree());

			char_literal164=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_sizeof_expression3883); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal164_tree = (CommonTree)adaptor.create(char_literal164);
			adaptor.addChild(root_0, char_literal164_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 47, sizeof_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "sizeof_expression"


	public static class checked_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "checked_expression"
	// /Users/jeremie/ANTLR/cs.g:225:1: checked_expression : 'checked' '(' expression ')' ;
	public final csParser.checked_expression_return checked_expression() throws RecognitionException {
		csParser.checked_expression_return retval = new csParser.checked_expression_return();
		retval.start = input.LT(1);
		int checked_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal165=null;
		Token char_literal166=null;
		Token char_literal168=null;
		ParserRuleReturnScope expression167 =null;

		CommonTree string_literal165_tree=null;
		CommonTree char_literal166_tree=null;
		CommonTree char_literal168_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:225:19: ( 'checked' '(' expression ')' )
			// /Users/jeremie/ANTLR/cs.g:226:9: 'checked' '(' expression ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal165=(Token)match(input,110,FOLLOW_110_in_checked_expression3898); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal165_tree = (CommonTree)adaptor.create(string_literal165);
			adaptor.addChild(root_0, string_literal165_tree);
			}

			char_literal166=(Token)match(input,68,FOLLOW_68_in_checked_expression3902); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal166_tree = (CommonTree)adaptor.create(char_literal166);
			adaptor.addChild(root_0, char_literal166_tree);
			}

			pushFollow(FOLLOW_expression_in_checked_expression3906);
			expression167=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression167.getTree());

			char_literal168=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_checked_expression3910); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal168_tree = (CommonTree)adaptor.create(char_literal168);
			adaptor.addChild(root_0, char_literal168_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 48, checked_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "checked_expression"


	public static class unchecked_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unchecked_expression"
	// /Users/jeremie/ANTLR/cs.g:227:1: unchecked_expression : 'unchecked' '(' expression ')' ;
	public final csParser.unchecked_expression_return unchecked_expression() throws RecognitionException {
		csParser.unchecked_expression_return retval = new csParser.unchecked_expression_return();
		retval.start = input.LT(1);
		int unchecked_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal169=null;
		Token char_literal170=null;
		Token char_literal172=null;
		ParserRuleReturnScope expression171 =null;

		CommonTree string_literal169_tree=null;
		CommonTree char_literal170_tree=null;
		CommonTree char_literal172_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:227:21: ( 'unchecked' '(' expression ')' )
			// /Users/jeremie/ANTLR/cs.g:228:9: 'unchecked' '(' expression ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal169=(Token)match(input,187,FOLLOW_187_in_unchecked_expression3926); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal169_tree = (CommonTree)adaptor.create(string_literal169);
			adaptor.addChild(root_0, string_literal169_tree);
			}

			char_literal170=(Token)match(input,68,FOLLOW_68_in_unchecked_expression3930); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal170_tree = (CommonTree)adaptor.create(char_literal170);
			adaptor.addChild(root_0, char_literal170_tree);
			}

			pushFollow(FOLLOW_expression_in_unchecked_expression3934);
			expression171=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression171.getTree());

			char_literal172=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unchecked_expression3938); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal172_tree = (CommonTree)adaptor.create(char_literal172);
			adaptor.addChild(root_0, char_literal172_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 49, unchecked_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unchecked_expression"


	public static class default_value_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "default_value_expression"
	// /Users/jeremie/ANTLR/cs.g:229:1: default_value_expression : 'default' '(' type ')' ;
	public final csParser.default_value_expression_return default_value_expression() throws RecognitionException {
		csParser.default_value_expression_return retval = new csParser.default_value_expression_return();
		retval.start = input.LT(1);
		int default_value_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal173=null;
		Token char_literal174=null;
		Token char_literal176=null;
		ParserRuleReturnScope type175 =null;

		CommonTree string_literal173_tree=null;
		CommonTree char_literal174_tree=null;
		CommonTree char_literal176_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:229:25: ( 'default' '(' type ')' )
			// /Users/jeremie/ANTLR/cs.g:230:9: 'default' '(' type ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal173=(Token)match(input,115,FOLLOW_115_in_default_value_expression3954); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal173_tree = (CommonTree)adaptor.create(string_literal173);
			adaptor.addChild(root_0, string_literal173_tree);
			}

			char_literal174=(Token)match(input,68,FOLLOW_68_in_default_value_expression3958); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal174_tree = (CommonTree)adaptor.create(char_literal174);
			adaptor.addChild(root_0, char_literal174_tree);
			}

			pushFollow(FOLLOW_type_in_default_value_expression3962);
			type175=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type175.getTree());

			char_literal176=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_default_value_expression3966); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal176_tree = (CommonTree)adaptor.create(char_literal176);
			adaptor.addChild(root_0, char_literal176_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 50, default_value_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "default_value_expression"


	public static class anonymous_method_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_method_expression"
	// /Users/jeremie/ANTLR/cs.g:231:1: anonymous_method_expression : 'delegate' ( explicit_anonymous_function_signature )? block ;
	public final csParser.anonymous_method_expression_return anonymous_method_expression() throws RecognitionException {
		csParser.anonymous_method_expression_return retval = new csParser.anonymous_method_expression_return();
		retval.start = input.LT(1);
		int anonymous_method_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal177=null;
		ParserRuleReturnScope explicit_anonymous_function_signature178 =null;
		ParserRuleReturnScope block179 =null;

		CommonTree string_literal177_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:231:28: ( 'delegate' ( explicit_anonymous_function_signature )? block )
			// /Users/jeremie/ANTLR/cs.g:232:9: 'delegate' ( explicit_anonymous_function_signature )? block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal177=(Token)match(input,116,FOLLOW_116_in_anonymous_method_expression3981); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal177_tree = (CommonTree)adaptor.create(string_literal177);
			adaptor.addChild(root_0, string_literal177_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:232:22: ( explicit_anonymous_function_signature )?
			int alt59=2;
			int LA59_0 = input.LA(1);
			if ( (LA59_0==68) ) {
				alt59=1;
			}
			switch (alt59) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:232:22: explicit_anonymous_function_signature
					{
					pushFollow(FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression3985);
					explicit_anonymous_function_signature178=explicit_anonymous_function_signature();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_signature178.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_block_in_anonymous_method_expression3990);
			block179=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block179.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 51, anonymous_method_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_method_expression"


	public static class explicit_anonymous_function_signature_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "explicit_anonymous_function_signature"
	// /Users/jeremie/ANTLR/cs.g:233:1: explicit_anonymous_function_signature : '(' ( explicit_anonymous_function_parameter_list )? ')' ;
	public final csParser.explicit_anonymous_function_signature_return explicit_anonymous_function_signature() throws RecognitionException {
		csParser.explicit_anonymous_function_signature_return retval = new csParser.explicit_anonymous_function_signature_return();
		retval.start = input.LT(1);
		int explicit_anonymous_function_signature_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal180=null;
		Token char_literal182=null;
		ParserRuleReturnScope explicit_anonymous_function_parameter_list181 =null;

		CommonTree char_literal180_tree=null;
		CommonTree char_literal182_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:233:38: ( '(' ( explicit_anonymous_function_parameter_list )? ')' )
			// /Users/jeremie/ANTLR/cs.g:234:9: '(' ( explicit_anonymous_function_parameter_list )? ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal180=(Token)match(input,68,FOLLOW_68_in_explicit_anonymous_function_signature4004); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal180_tree = (CommonTree)adaptor.create(char_literal180);
			adaptor.addChild(root_0, char_literal180_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:234:15: ( explicit_anonymous_function_parameter_list )?
			int alt60=2;
			int LA60_0 = input.LA(1);
			if ( (LA60_0==IDENTIFIER||LA60_0==95||(LA60_0 >= 97 && LA60_0 <= 98)||(LA60_0 >= 100 && LA60_0 <= 101)||LA60_0==103||(LA60_0 >= 105 && LA60_0 <= 106)||LA60_0==109||LA60_0==114||LA60_0==117||(LA60_0 >= 119 && LA60_0 <= 120)||LA60_0==122||LA60_0==126||LA60_0==129||LA60_0==132||LA60_0==135||LA60_0==138||LA60_0==141||(LA60_0 >= 143 && LA60_0 <= 144)||(LA60_0 >= 146 && LA60_0 <= 148)||(LA60_0 >= 151 && LA60_0 <= 152)||(LA60_0 >= 154 && LA60_0 <= 155)||LA60_0==157||LA60_0==160||LA60_0==162||(LA60_0 >= 166 && LA60_0 <= 167)||LA60_0==169||(LA60_0 >= 171 && LA60_0 <= 173)||LA60_0==177||LA60_0==183||(LA60_0 >= 185 && LA60_0 <= 186)||(LA60_0 >= 189 && LA60_0 <= 190)||LA60_0==192||LA60_0==194||LA60_0==196) ) {
				alt60=1;
			}
			switch (alt60) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:234:15: explicit_anonymous_function_parameter_list
					{
					pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature4008);
					explicit_anonymous_function_parameter_list181=explicit_anonymous_function_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list181.getTree());

					}
					break;

			}

			char_literal182=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_explicit_anonymous_function_signature4013); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal182_tree = (CommonTree)adaptor.create(char_literal182);
			adaptor.addChild(root_0, char_literal182_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 52, explicit_anonymous_function_signature_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "explicit_anonymous_function_signature"


	public static class explicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "explicit_anonymous_function_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:235:1: explicit_anonymous_function_parameter_list : explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* ;
	public final csParser.explicit_anonymous_function_parameter_list_return explicit_anonymous_function_parameter_list() throws RecognitionException {
		csParser.explicit_anonymous_function_parameter_list_return retval = new csParser.explicit_anonymous_function_parameter_list_return();
		retval.start = input.LT(1);
		int explicit_anonymous_function_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal184=null;
		ParserRuleReturnScope explicit_anonymous_function_parameter183 =null;
		ParserRuleReturnScope explicit_anonymous_function_parameter185 =null;

		CommonTree char_literal184_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:235:43: ( explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:236:9: explicit_anonymous_function_parameter ( ',' explicit_anonymous_function_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list4028);
			explicit_anonymous_function_parameter183=explicit_anonymous_function_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter183.getTree());

			// /Users/jeremie/ANTLR/cs.g:236:49: ( ',' explicit_anonymous_function_parameter )*
			loop61:
			while (true) {
				int alt61=2;
				int LA61_0 = input.LA(1);
				if ( (LA61_0==74) ) {
					alt61=1;
				}

				switch (alt61) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:236:50: ',' explicit_anonymous_function_parameter
					{
					char_literal184=(Token)match(input,74,FOLLOW_74_in_explicit_anonymous_function_parameter_list4033); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal184_tree = (CommonTree)adaptor.create(char_literal184);
					adaptor.addChild(root_0, char_literal184_tree);
					}

					pushFollow(FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list4037);
					explicit_anonymous_function_parameter185=explicit_anonymous_function_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter185.getTree());

					}
					break;

				default :
					break loop61;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 53, explicit_anonymous_function_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "explicit_anonymous_function_parameter_list"


	public static class explicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "explicit_anonymous_function_parameter"
	// /Users/jeremie/ANTLR/cs.g:237:1: explicit_anonymous_function_parameter : ( anonymous_function_parameter_modifier )? type identifier ;
	public final csParser.explicit_anonymous_function_parameter_return explicit_anonymous_function_parameter() throws RecognitionException {
		csParser.explicit_anonymous_function_parameter_return retval = new csParser.explicit_anonymous_function_parameter_return();
		retval.start = input.LT(1);
		int explicit_anonymous_function_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope anonymous_function_parameter_modifier186 =null;
		ParserRuleReturnScope type187 =null;
		ParserRuleReturnScope identifier188 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:237:38: ( ( anonymous_function_parameter_modifier )? type identifier )
			// /Users/jeremie/ANTLR/cs.g:238:9: ( anonymous_function_parameter_modifier )? type identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:238:9: ( anonymous_function_parameter_modifier )?
			int alt62=2;
			int LA62_0 = input.LA(1);
			if ( (LA62_0==155||LA62_0==166) ) {
				alt62=1;
			}
			switch (alt62) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:238:9: anonymous_function_parameter_modifier
					{
					pushFollow(FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter4062);
					anonymous_function_parameter_modifier186=anonymous_function_parameter_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_parameter_modifier186.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_type_in_explicit_anonymous_function_parameter4067);
			type187=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type187.getTree());

			pushFollow(FOLLOW_identifier_in_explicit_anonymous_function_parameter4071);
			identifier188=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier188.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 54, explicit_anonymous_function_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "explicit_anonymous_function_parameter"


	public static class anonymous_function_parameter_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_function_parameter_modifier"
	// /Users/jeremie/ANTLR/cs.g:239:1: anonymous_function_parameter_modifier : ( 'ref' | 'out' );
	public final csParser.anonymous_function_parameter_modifier_return anonymous_function_parameter_modifier() throws RecognitionException {
		csParser.anonymous_function_parameter_modifier_return retval = new csParser.anonymous_function_parameter_modifier_return();
		retval.start = input.LT(1);
		int anonymous_function_parameter_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set189=null;

		CommonTree set189_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:239:38: ( 'ref' | 'out' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set189=input.LT(1);
			if ( input.LA(1)==155||input.LA(1)==166 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set189));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 55, anonymous_function_parameter_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_function_parameter_modifier"


	public static class object_creation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "object_creation_expression"
	// /Users/jeremie/ANTLR/cs.g:244:1: object_creation_expression : type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) ;
	public final csParser.object_creation_expression_return object_creation_expression() throws RecognitionException {
		csParser.object_creation_expression_return retval = new csParser.object_creation_expression_return();
		retval.start = input.LT(1);
		int object_creation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal191=null;
		Token char_literal193=null;
		ParserRuleReturnScope type190 =null;
		ParserRuleReturnScope argument_list192 =null;
		ParserRuleReturnScope object_or_collection_initializer194 =null;
		ParserRuleReturnScope object_or_collection_initializer195 =null;

		CommonTree char_literal191_tree=null;
		CommonTree char_literal193_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:244:27: ( type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer ) )
			// /Users/jeremie/ANTLR/cs.g:246:9: type ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_object_creation_expression4116);
			type190=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type190.getTree());

			// /Users/jeremie/ANTLR/cs.g:247:17: ( '(' ( argument_list )? ')' ( object_or_collection_initializer )? | object_or_collection_initializer )
			int alt65=2;
			int LA65_0 = input.LA(1);
			if ( (LA65_0==68) ) {
				alt65=1;
			}
			else if ( (LA65_0==197) ) {
				alt65=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 65, 0, input);
				throw nvae;
			}

			switch (alt65) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:247:19: '(' ( argument_list )? ')' ( object_or_collection_initializer )?
					{
					char_literal191=(Token)match(input,68,FOLLOW_68_in_object_creation_expression4139); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal191_tree = (CommonTree)adaptor.create(char_literal191);
					adaptor.addChild(root_0, char_literal191_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:247:25: ( argument_list )?
					int alt63=2;
					int LA63_0 = input.LA(1);
					if ( (LA63_0==Character_literal||LA63_0==FALSE||(LA63_0 >= Hex_number && LA63_0 <= IDENTIFIER)||(LA63_0 >= MINUS && LA63_0 <= NUMBER)||LA63_0==Real_literal||LA63_0==STRINGLITERAL||LA63_0==TRUE||LA63_0==Verbatim_string_literal||LA63_0==61||LA63_0==66||(LA63_0 >= 68 && LA63_0 <= 69)||(LA63_0 >= 71 && LA63_0 <= 72)||LA63_0==75||LA63_0==95||(LA63_0 >= 97 && LA63_0 <= 98)||(LA63_0 >= 100 && LA63_0 <= 103)||(LA63_0 >= 105 && LA63_0 <= 106)||(LA63_0 >= 109 && LA63_0 <= 110)||(LA63_0 >= 114 && LA63_0 <= 117)||(LA63_0 >= 119 && LA63_0 <= 120)||LA63_0==122||LA63_0==126||LA63_0==129||LA63_0==132||LA63_0==135||LA63_0==138||LA63_0==141||(LA63_0 >= 143 && LA63_0 <= 144)||(LA63_0 >= 146 && LA63_0 <= 148)||(LA63_0 >= 150 && LA63_0 <= 152)||(LA63_0 >= 154 && LA63_0 <= 155)||LA63_0==157||LA63_0==160||LA63_0==162||(LA63_0 >= 166 && LA63_0 <= 167)||LA63_0==169||(LA63_0 >= 171 && LA63_0 <= 174)||LA63_0==177||LA63_0==180||(LA63_0 >= 183 && LA63_0 <= 187)||(LA63_0 >= 189 && LA63_0 <= 190)||LA63_0==194||LA63_0==196||LA63_0==202) ) {
						alt63=1;
					}
					switch (alt63) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:247:25: argument_list
							{
							pushFollow(FOLLOW_argument_list_in_object_creation_expression4143);
							argument_list192=argument_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list192.getTree());

							}
							break;

					}

					char_literal193=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_object_creation_expression4148); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal193_tree = (CommonTree)adaptor.create(char_literal193);
					adaptor.addChild(root_0, char_literal193_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:247:48: ( object_or_collection_initializer )?
					int alt64=2;
					int LA64_0 = input.LA(1);
					if ( (LA64_0==197) ) {
						alt64=1;
					}
					switch (alt64) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:247:48: object_or_collection_initializer
							{
							pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression4152);
							object_or_collection_initializer194=object_or_collection_initializer();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer194.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:248:21: object_or_collection_initializer
					{
					pushFollow(FOLLOW_object_or_collection_initializer_in_object_creation_expression4177);
					object_or_collection_initializer195=object_or_collection_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer195.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 56, object_creation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "object_creation_expression"


	public static class object_or_collection_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "object_or_collection_initializer"
	// /Users/jeremie/ANTLR/cs.g:250:1: object_or_collection_initializer : '{' ( object_initializer | collection_initializer ) ;
	public final csParser.object_or_collection_initializer_return object_or_collection_initializer() throws RecognitionException {
		csParser.object_or_collection_initializer_return retval = new csParser.object_or_collection_initializer_return();
		retval.start = input.LT(1);
		int object_or_collection_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal196=null;
		ParserRuleReturnScope object_initializer197 =null;
		ParserRuleReturnScope collection_initializer198 =null;

		CommonTree char_literal196_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:250:33: ( '{' ( object_initializer | collection_initializer ) )
			// /Users/jeremie/ANTLR/cs.g:251:9: '{' ( object_initializer | collection_initializer )
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal196=(Token)match(input,197,FOLLOW_197_in_object_or_collection_initializer4203); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal196_tree = (CommonTree)adaptor.create(char_literal196);
			adaptor.addChild(root_0, char_literal196_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:251:14: ( object_initializer | collection_initializer )
			int alt66=2;
			switch ( input.LA(1) ) {
			case 132:
				{
				int LA66_1 = input.LA(2);
				if ( (LA66_1==85) ) {
					alt66=1;
				}
				else if ( (LA66_1==DOT||LA66_1==GT||LA66_1==IDENTIFIER||LA66_1==MINUS||LA66_1==PTR||(LA66_1 >= 62 && LA66_1 <= 63)||(LA66_1 >= 65 && LA66_1 <= 66)||(LA66_1 >= 68 && LA66_1 <= 69)||(LA66_1 >= 71 && LA66_1 <= 72)||(LA66_1 >= 74 && LA66_1 <= 75)||LA66_1==77||(LA66_1 >= 80 && LA66_1 <= 82)||LA66_1==84||(LA66_1 >= 86 && LA66_1 <= 91)||LA66_1==93||LA66_1==95||(LA66_1 >= 97 && LA66_1 <= 101)||LA66_1==103||(LA66_1 >= 105 && LA66_1 <= 106)||LA66_1==109||LA66_1==114||LA66_1==117||(LA66_1 >= 119 && LA66_1 <= 120)||LA66_1==122||LA66_1==126||LA66_1==129||LA66_1==132||LA66_1==135||LA66_1==138||(LA66_1 >= 141 && LA66_1 <= 144)||(LA66_1 >= 146 && LA66_1 <= 148)||(LA66_1 >= 151 && LA66_1 <= 152)||LA66_1==154||LA66_1==157||LA66_1==160||LA66_1==162||LA66_1==167||LA66_1==169||(LA66_1 >= 171 && LA66_1 <= 173)||LA66_1==177||LA66_1==183||(LA66_1 >= 185 && LA66_1 <= 186)||(LA66_1 >= 189 && LA66_1 <= 190)||LA66_1==192||LA66_1==194||LA66_1==196||LA66_1==198||(LA66_1 >= 200 && LA66_1 <= 201)) ) {
					alt66=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 66, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 74:
			case 201:
				{
				alt66=1;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 197:
			case 202:
				{
				alt66=2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA66_4 = input.LA(2);
				if ( (LA66_4==85) ) {
					alt66=1;
				}
				else if ( (LA66_4==DOT||LA66_4==GT||LA66_4==MINUS||LA66_4==PTR||(LA66_4 >= 62 && LA66_4 <= 63)||(LA66_4 >= 65 && LA66_4 <= 66)||(LA66_4 >= 68 && LA66_4 <= 69)||(LA66_4 >= 71 && LA66_4 <= 72)||(LA66_4 >= 74 && LA66_4 <= 75)||LA66_4==77||(LA66_4 >= 80 && LA66_4 <= 82)||LA66_4==84||(LA66_4 >= 86 && LA66_4 <= 91)||LA66_4==93||LA66_4==99||LA66_4==142||LA66_4==198||(LA66_4 >= 200 && LA66_4 <= 201)) ) {
					alt66=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 66, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 66, 0, input);
				throw nvae;
			}
			switch (alt66) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:251:15: object_initializer
					{
					pushFollow(FOLLOW_object_initializer_in_object_or_collection_initializer4207);
					object_initializer197=object_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, object_initializer197.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:252:19: collection_initializer
					{
					pushFollow(FOLLOW_collection_initializer_in_object_or_collection_initializer4228);
					collection_initializer198=collection_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, collection_initializer198.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 57, object_or_collection_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "object_or_collection_initializer"


	public static class collection_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "collection_initializer"
	// /Users/jeremie/ANTLR/cs.g:253:1: collection_initializer : element_initializer_list ( ',' )? '}' ;
	public final csParser.collection_initializer_return collection_initializer() throws RecognitionException {
		csParser.collection_initializer_return retval = new csParser.collection_initializer_return();
		retval.start = input.LT(1);
		int collection_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal200=null;
		Token char_literal201=null;
		ParserRuleReturnScope element_initializer_list199 =null;

		CommonTree char_literal200_tree=null;
		CommonTree char_literal201_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:253:23: ( element_initializer_list ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:254:9: element_initializer_list ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_element_initializer_list_in_collection_initializer4245);
			element_initializer_list199=element_initializer_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer_list199.getTree());

			// /Users/jeremie/ANTLR/cs.g:254:36: ( ',' )?
			int alt67=2;
			int LA67_0 = input.LA(1);
			if ( (LA67_0==74) ) {
				alt67=1;
			}
			switch (alt67) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:254:36: ','
					{
					char_literal200=(Token)match(input,74,FOLLOW_74_in_collection_initializer4249); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal200_tree = (CommonTree)adaptor.create(char_literal200);
					adaptor.addChild(root_0, char_literal200_tree);
					}

					}
					break;

			}

			char_literal201=(Token)match(input,201,FOLLOW_201_in_collection_initializer4254); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal201_tree = (CommonTree)adaptor.create(char_literal201);
			adaptor.addChild(root_0, char_literal201_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 58, collection_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "collection_initializer"


	public static class element_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "element_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:255:1: element_initializer_list : element_initializer ( ',' element_initializer )* ;
	public final csParser.element_initializer_list_return element_initializer_list() throws RecognitionException {
		csParser.element_initializer_list_return retval = new csParser.element_initializer_list_return();
		retval.start = input.LT(1);
		int element_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal203=null;
		ParserRuleReturnScope element_initializer202 =null;
		ParserRuleReturnScope element_initializer204 =null;

		CommonTree char_literal203_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:255:25: ( element_initializer ( ',' element_initializer )* )
			// /Users/jeremie/ANTLR/cs.g:256:9: element_initializer ( ',' element_initializer )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_element_initializer_in_element_initializer_list4270);
			element_initializer202=element_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer202.getTree());

			// /Users/jeremie/ANTLR/cs.g:256:30: ( ',' element_initializer )*
			loop68:
			while (true) {
				int alt68=2;
				int LA68_0 = input.LA(1);
				if ( (LA68_0==74) ) {
					int LA68_1 = input.LA(2);
					if ( (LA68_1==Character_literal||LA68_1==FALSE||(LA68_1 >= Hex_number && LA68_1 <= IDENTIFIER)||(LA68_1 >= MINUS && LA68_1 <= NUMBER)||LA68_1==Real_literal||LA68_1==STRINGLITERAL||LA68_1==TRUE||LA68_1==Verbatim_string_literal||LA68_1==61||LA68_1==66||(LA68_1 >= 68 && LA68_1 <= 69)||(LA68_1 >= 71 && LA68_1 <= 72)||LA68_1==75||LA68_1==95||(LA68_1 >= 97 && LA68_1 <= 98)||(LA68_1 >= 100 && LA68_1 <= 103)||(LA68_1 >= 105 && LA68_1 <= 106)||(LA68_1 >= 109 && LA68_1 <= 110)||(LA68_1 >= 114 && LA68_1 <= 117)||(LA68_1 >= 119 && LA68_1 <= 120)||LA68_1==122||LA68_1==126||LA68_1==129||LA68_1==132||LA68_1==135||LA68_1==138||LA68_1==141||(LA68_1 >= 143 && LA68_1 <= 144)||(LA68_1 >= 146 && LA68_1 <= 148)||(LA68_1 >= 150 && LA68_1 <= 152)||LA68_1==154||LA68_1==157||LA68_1==160||LA68_1==162||LA68_1==167||LA68_1==169||(LA68_1 >= 171 && LA68_1 <= 174)||LA68_1==177||LA68_1==180||(LA68_1 >= 183 && LA68_1 <= 187)||(LA68_1 >= 189 && LA68_1 <= 190)||LA68_1==194||(LA68_1 >= 196 && LA68_1 <= 197)||LA68_1==202) ) {
						alt68=1;
					}

				}

				switch (alt68) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:256:31: ',' element_initializer
					{
					char_literal203=(Token)match(input,74,FOLLOW_74_in_element_initializer_list4274); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal203_tree = (CommonTree)adaptor.create(char_literal203);
					adaptor.addChild(root_0, char_literal203_tree);
					}

					pushFollow(FOLLOW_element_initializer_in_element_initializer_list4276);
					element_initializer204=element_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, element_initializer204.getTree());

					}
					break;

				default :
					break loop68;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 59, element_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "element_initializer_list"


	public static class element_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "element_initializer"
	// /Users/jeremie/ANTLR/cs.g:257:1: element_initializer : ( non_assignment_expression | '{' expression_list '}' );
	public final csParser.element_initializer_return element_initializer() throws RecognitionException {
		csParser.element_initializer_return retval = new csParser.element_initializer_return();
		retval.start = input.LT(1);
		int element_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal206=null;
		Token char_literal208=null;
		ParserRuleReturnScope non_assignment_expression205 =null;
		ParserRuleReturnScope expression_list207 =null;

		CommonTree char_literal206_tree=null;
		CommonTree char_literal208_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:257:20: ( non_assignment_expression | '{' expression_list '}' )
			int alt69=2;
			int LA69_0 = input.LA(1);
			if ( (LA69_0==Character_literal||LA69_0==FALSE||(LA69_0 >= Hex_number && LA69_0 <= IDENTIFIER)||(LA69_0 >= MINUS && LA69_0 <= NUMBER)||LA69_0==Real_literal||LA69_0==STRINGLITERAL||LA69_0==TRUE||LA69_0==Verbatim_string_literal||LA69_0==61||LA69_0==66||(LA69_0 >= 68 && LA69_0 <= 69)||(LA69_0 >= 71 && LA69_0 <= 72)||LA69_0==75||LA69_0==95||(LA69_0 >= 97 && LA69_0 <= 98)||(LA69_0 >= 100 && LA69_0 <= 103)||(LA69_0 >= 105 && LA69_0 <= 106)||(LA69_0 >= 109 && LA69_0 <= 110)||(LA69_0 >= 114 && LA69_0 <= 117)||(LA69_0 >= 119 && LA69_0 <= 120)||LA69_0==122||LA69_0==126||LA69_0==129||LA69_0==132||LA69_0==135||LA69_0==138||LA69_0==141||(LA69_0 >= 143 && LA69_0 <= 144)||(LA69_0 >= 146 && LA69_0 <= 148)||(LA69_0 >= 150 && LA69_0 <= 152)||LA69_0==154||LA69_0==157||LA69_0==160||LA69_0==162||LA69_0==167||LA69_0==169||(LA69_0 >= 171 && LA69_0 <= 174)||LA69_0==177||LA69_0==180||(LA69_0 >= 183 && LA69_0 <= 187)||(LA69_0 >= 189 && LA69_0 <= 190)||LA69_0==194||LA69_0==196||LA69_0==202) ) {
				alt69=1;
			}
			else if ( (LA69_0==197) ) {
				alt69=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 69, 0, input);
				throw nvae;
			}

			switch (alt69) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:258:9: non_assignment_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_non_assignment_expression_in_element_initializer4294);
					non_assignment_expression205=non_assignment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression205.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:259:11: '{' expression_list '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal206=(Token)match(input,197,FOLLOW_197_in_element_initializer4307); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal206_tree = (CommonTree)adaptor.create(char_literal206);
					adaptor.addChild(root_0, char_literal206_tree);
					}

					pushFollow(FOLLOW_expression_list_in_element_initializer4311);
					expression_list207=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list207.getTree());

					char_literal208=(Token)match(input,201,FOLLOW_201_in_element_initializer4315); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal208_tree = (CommonTree)adaptor.create(char_literal208);
					adaptor.addChild(root_0, char_literal208_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 60, element_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "element_initializer"


	public static class object_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "object_initializer"
	// /Users/jeremie/ANTLR/cs.g:266:1: object_initializer : ( member_initializer_list )? ( ',' )? '}' ;
	public final csParser.object_initializer_return object_initializer() throws RecognitionException {
		csParser.object_initializer_return retval = new csParser.object_initializer_return();
		retval.start = input.LT(1);
		int object_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal210=null;
		Token char_literal211=null;
		ParserRuleReturnScope member_initializer_list209 =null;

		CommonTree char_literal210_tree=null;
		CommonTree char_literal211_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:266:19: ( ( member_initializer_list )? ( ',' )? '}' )
			// /Users/jeremie/ANTLR/cs.g:267:9: ( member_initializer_list )? ( ',' )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:267:9: ( member_initializer_list )?
			int alt70=2;
			int LA70_0 = input.LA(1);
			if ( (LA70_0==IDENTIFIER||LA70_0==95||(LA70_0 >= 97 && LA70_0 <= 98)||(LA70_0 >= 100 && LA70_0 <= 101)||LA70_0==105||LA70_0==117||LA70_0==120||LA70_0==122||LA70_0==126||LA70_0==132||LA70_0==135||LA70_0==141||(LA70_0 >= 143 && LA70_0 <= 144)||(LA70_0 >= 147 && LA70_0 <= 148)||LA70_0==152||LA70_0==154||LA70_0==157||LA70_0==160||LA70_0==162||LA70_0==167||(LA70_0 >= 171 && LA70_0 <= 172)||LA70_0==183||LA70_0==190||LA70_0==194||LA70_0==196) ) {
				alt70=1;
			}
			switch (alt70) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:267:9: member_initializer_list
					{
					pushFollow(FOLLOW_member_initializer_list_in_object_initializer4337);
					member_initializer_list209=member_initializer_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer_list209.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:267:36: ( ',' )?
			int alt71=2;
			int LA71_0 = input.LA(1);
			if ( (LA71_0==74) ) {
				alt71=1;
			}
			switch (alt71) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:267:36: ','
					{
					char_literal210=(Token)match(input,74,FOLLOW_74_in_object_initializer4342); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal210_tree = (CommonTree)adaptor.create(char_literal210);
					adaptor.addChild(root_0, char_literal210_tree);
					}

					}
					break;

			}

			char_literal211=(Token)match(input,201,FOLLOW_201_in_object_initializer4347); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal211_tree = (CommonTree)adaptor.create(char_literal211);
			adaptor.addChild(root_0, char_literal211_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 61, object_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "object_initializer"


	public static class member_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:268:1: member_initializer_list : member_initializer ( ',' member_initializer ) ;
	public final csParser.member_initializer_list_return member_initializer_list() throws RecognitionException {
		csParser.member_initializer_list_return retval = new csParser.member_initializer_list_return();
		retval.start = input.LT(1);
		int member_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal213=null;
		ParserRuleReturnScope member_initializer212 =null;
		ParserRuleReturnScope member_initializer214 =null;

		CommonTree char_literal213_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:268:24: ( member_initializer ( ',' member_initializer ) )
			// /Users/jeremie/ANTLR/cs.g:269:9: member_initializer ( ',' member_initializer )
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_initializer_in_member_initializer_list4363);
			member_initializer212=member_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer212.getTree());

			// /Users/jeremie/ANTLR/cs.g:269:29: ( ',' member_initializer )
			// /Users/jeremie/ANTLR/cs.g:269:30: ',' member_initializer
			{
			char_literal213=(Token)match(input,74,FOLLOW_74_in_member_initializer_list4367); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal213_tree = (CommonTree)adaptor.create(char_literal213);
			adaptor.addChild(root_0, char_literal213_tree);
			}

			pushFollow(FOLLOW_member_initializer_in_member_initializer_list4369);
			member_initializer214=member_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_initializer214.getTree());

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 62, member_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_initializer_list"


	public static class member_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_initializer"
	// /Users/jeremie/ANTLR/cs.g:270:1: member_initializer : identifier '=' initializer_value ;
	public final csParser.member_initializer_return member_initializer() throws RecognitionException {
		csParser.member_initializer_return retval = new csParser.member_initializer_return();
		retval.start = input.LT(1);
		int member_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal216=null;
		ParserRuleReturnScope identifier215 =null;
		ParserRuleReturnScope initializer_value217 =null;

		CommonTree char_literal216_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:270:19: ( identifier '=' initializer_value )
			// /Users/jeremie/ANTLR/cs.g:271:9: identifier '=' initializer_value
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_member_initializer4386);
			identifier215=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier215.getTree());

			char_literal216=(Token)match(input,85,FOLLOW_85_in_member_initializer4390); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal216_tree = (CommonTree)adaptor.create(char_literal216);
			adaptor.addChild(root_0, char_literal216_tree);
			}

			pushFollow(FOLLOW_initializer_value_in_member_initializer4394);
			initializer_value217=initializer_value();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, initializer_value217.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 63, member_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_initializer"


	public static class initializer_value_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "initializer_value"
	// /Users/jeremie/ANTLR/cs.g:272:1: initializer_value : ( expression | object_or_collection_initializer );
	public final csParser.initializer_value_return initializer_value() throws RecognitionException {
		csParser.initializer_value_return retval = new csParser.initializer_value_return();
		retval.start = input.LT(1);
		int initializer_value_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression218 =null;
		ParserRuleReturnScope object_or_collection_initializer219 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:272:18: ( expression | object_or_collection_initializer )
			int alt72=2;
			int LA72_0 = input.LA(1);
			if ( (LA72_0==Character_literal||LA72_0==FALSE||(LA72_0 >= Hex_number && LA72_0 <= IDENTIFIER)||(LA72_0 >= MINUS && LA72_0 <= NUMBER)||LA72_0==Real_literal||LA72_0==STRINGLITERAL||LA72_0==TRUE||LA72_0==Verbatim_string_literal||LA72_0==61||LA72_0==66||(LA72_0 >= 68 && LA72_0 <= 69)||(LA72_0 >= 71 && LA72_0 <= 72)||LA72_0==75||LA72_0==95||(LA72_0 >= 97 && LA72_0 <= 98)||(LA72_0 >= 100 && LA72_0 <= 103)||(LA72_0 >= 105 && LA72_0 <= 106)||(LA72_0 >= 109 && LA72_0 <= 110)||(LA72_0 >= 114 && LA72_0 <= 117)||(LA72_0 >= 119 && LA72_0 <= 120)||LA72_0==122||LA72_0==126||LA72_0==129||LA72_0==132||LA72_0==135||LA72_0==138||LA72_0==141||(LA72_0 >= 143 && LA72_0 <= 144)||(LA72_0 >= 146 && LA72_0 <= 148)||(LA72_0 >= 150 && LA72_0 <= 152)||LA72_0==154||LA72_0==157||LA72_0==160||LA72_0==162||LA72_0==167||LA72_0==169||(LA72_0 >= 171 && LA72_0 <= 174)||LA72_0==177||LA72_0==180||(LA72_0 >= 183 && LA72_0 <= 187)||(LA72_0 >= 189 && LA72_0 <= 190)||LA72_0==194||LA72_0==196||LA72_0==202) ) {
				alt72=1;
			}
			else if ( (LA72_0==197) ) {
				alt72=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 72, 0, input);
				throw nvae;
			}

			switch (alt72) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:273:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_initializer_value4410);
					expression218=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression218.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:274:11: object_or_collection_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_object_or_collection_initializer_in_initializer_value4423);
					object_or_collection_initializer219=object_or_collection_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, object_or_collection_initializer219.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 64, initializer_value_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "initializer_value"


	public static class typeof_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "typeof_expression"
	// /Users/jeremie/ANTLR/cs.g:278:1: typeof_expression : 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' ;
	public final csParser.typeof_expression_return typeof_expression() throws RecognitionException {
		csParser.typeof_expression_return retval = new csParser.typeof_expression_return();
		retval.start = input.LT(1);
		int typeof_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal220=null;
		Token char_literal221=null;
		Token string_literal224=null;
		Token char_literal225=null;
		ParserRuleReturnScope unbound_type_name222 =null;
		ParserRuleReturnScope type223 =null;

		CommonTree string_literal220_tree=null;
		CommonTree char_literal221_tree=null;
		CommonTree string_literal224_tree=null;
		CommonTree char_literal225_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:278:18: ( 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')' )
			// /Users/jeremie/ANTLR/cs.g:279:9: 'typeof' '(' ( ( unbound_type_name )=> unbound_type_name | type | 'void' ) ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal220=(Token)match(input,184,FOLLOW_184_in_typeof_expression4442); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal220_tree = (CommonTree)adaptor.create(string_literal220);
			adaptor.addChild(root_0, string_literal220_tree);
			}

			char_literal221=(Token)match(input,68,FOLLOW_68_in_typeof_expression4446); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal221_tree = (CommonTree)adaptor.create(char_literal221);
			adaptor.addChild(root_0, char_literal221_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:279:26: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )
			int alt73=3;
			alt73 = dfa73.predict(input);
			switch (alt73) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:279:27: ( unbound_type_name )=> unbound_type_name
					{
					pushFollow(FOLLOW_unbound_type_name_in_typeof_expression4457);
					unbound_type_name222=unbound_type_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name222.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:280:45: type
					{
					pushFollow(FOLLOW_type_in_typeof_expression4503);
					type223=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type223.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:281:45: 'void'
					{
					string_literal224=(Token)match(input,192,FOLLOW_192_in_typeof_expression4550); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal224_tree = (CommonTree)adaptor.create(string_literal224);
					adaptor.addChild(root_0, string_literal224_tree);
					}

					}
					break;

			}

			char_literal225=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_typeof_expression4555); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal225_tree = (CommonTree)adaptor.create(char_literal225);
			adaptor.addChild(root_0, char_literal225_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 65, typeof_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "typeof_expression"


	public static class unbound_type_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unbound_type_name"
	// /Users/jeremie/ANTLR/cs.g:286:1: unbound_type_name : unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier ;
	public final csParser.unbound_type_name_return unbound_type_name() throws RecognitionException {
		csParser.unbound_type_name_return retval = new csParser.unbound_type_name_return();
		retval.start = input.LT(1);
		int unbound_type_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope unbound_type_name_start226 =null;
		ParserRuleReturnScope generic_dimension_specifier227 =null;
		ParserRuleReturnScope unbound_type_name_part228 =null;
		ParserRuleReturnScope unbound_type_name_part229 =null;
		ParserRuleReturnScope generic_dimension_specifier230 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:286:18: ( unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier )
			// /Users/jeremie/ANTLR/cs.g:288:9: unbound_type_name_start ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )* generic_dimension_specifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_unbound_type_name_start_in_unbound_type_name4591);
			unbound_type_name_start226=unbound_type_name_start();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_start226.getTree());

			// /Users/jeremie/ANTLR/cs.g:289:17: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*
			loop74:
			while (true) {
				int alt74=3;
				alt74 = dfa74.predict(input);
				switch (alt74) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:289:18: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					{
					// /Users/jeremie/ANTLR/cs.g:289:18: ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part )
					// /Users/jeremie/ANTLR/cs.g:289:19: ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part
					{
					pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name4624);
					generic_dimension_specifier227=generic_dimension_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier227.getTree());

					pushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name4628);
					unbound_type_name_part228=unbound_type_name_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_part228.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:290:19: unbound_type_name_part
					{
					pushFollow(FOLLOW_unbound_type_name_part_in_unbound_type_name4649);
					unbound_type_name_part229=unbound_type_name_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unbound_type_name_part229.getTree());

					}
					break;

				default :
					break loop74;
				}
			}

			pushFollow(FOLLOW_generic_dimension_specifier_in_unbound_type_name4680);
			generic_dimension_specifier230=generic_dimension_specifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_dimension_specifier230.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 66, unbound_type_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unbound_type_name"


	public static class unbound_type_name_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unbound_type_name_start"
	// /Users/jeremie/ANTLR/cs.g:294:1: unbound_type_name_start : identifier ( '::' identifier )? ;
	public final csParser.unbound_type_name_start_return unbound_type_name_start() throws RecognitionException {
		csParser.unbound_type_name_start_return retval = new csParser.unbound_type_name_start_return();
		retval.start = input.LT(1);
		int unbound_type_name_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal232=null;
		ParserRuleReturnScope identifier231 =null;
		ParserRuleReturnScope identifier233 =null;

		CommonTree string_literal232_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:294:24: ( identifier ( '::' identifier )? )
			// /Users/jeremie/ANTLR/cs.g:295:9: identifier ( '::' identifier )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_unbound_type_name_start4704);
			identifier231=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier231.getTree());

			// /Users/jeremie/ANTLR/cs.g:295:20: ( '::' identifier )?
			int alt75=2;
			int LA75_0 = input.LA(1);
			if ( (LA75_0==80) ) {
				alt75=1;
			}
			switch (alt75) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:295:21: '::' identifier
					{
					string_literal232=(Token)match(input,80,FOLLOW_80_in_unbound_type_name_start4707); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal232_tree = (CommonTree)adaptor.create(string_literal232);
					adaptor.addChild(root_0, string_literal232_tree);
					}

					pushFollow(FOLLOW_identifier_in_unbound_type_name_start4709);
					identifier233=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier233.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 67, unbound_type_name_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unbound_type_name_start"


	public static class unbound_type_name_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unbound_type_name_part"
	// /Users/jeremie/ANTLR/cs.g:296:1: unbound_type_name_part : '.' identifier ;
	public final csParser.unbound_type_name_part_return unbound_type_name_part() throws RecognitionException {
		csParser.unbound_type_name_part_return retval = new csParser.unbound_type_name_part_return();
		retval.start = input.LT(1);
		int unbound_type_name_part_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal234=null;
		ParserRuleReturnScope identifier235 =null;

		CommonTree char_literal234_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:296:23: ( '.' identifier )
			// /Users/jeremie/ANTLR/cs.g:297:9: '.' identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal234=(Token)match(input,DOT,FOLLOW_DOT_in_unbound_type_name_part4725); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal234_tree = (CommonTree)adaptor.create(char_literal234);
			adaptor.addChild(root_0, char_literal234_tree);
			}

			pushFollow(FOLLOW_identifier_in_unbound_type_name_part4729);
			identifier235=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier235.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 68, unbound_type_name_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unbound_type_name_part"


	public static class generic_dimension_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "generic_dimension_specifier"
	// /Users/jeremie/ANTLR/cs.g:298:1: generic_dimension_specifier : '<' ( commas )? '>' ;
	public final csParser.generic_dimension_specifier_return generic_dimension_specifier() throws RecognitionException {
		csParser.generic_dimension_specifier_return retval = new csParser.generic_dimension_specifier_return();
		retval.start = input.LT(1);
		int generic_dimension_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal236=null;
		Token char_literal238=null;
		ParserRuleReturnScope commas237 =null;

		CommonTree char_literal236_tree=null;
		CommonTree char_literal238_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:298:28: ( '<' ( commas )? '>' )
			// /Users/jeremie/ANTLR/cs.g:299:9: '<' ( commas )? '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal236=(Token)match(input,81,FOLLOW_81_in_generic_dimension_specifier4744); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal236_tree = (CommonTree)adaptor.create(char_literal236);
			adaptor.addChild(root_0, char_literal236_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:299:15: ( commas )?
			int alt76=2;
			int LA76_0 = input.LA(1);
			if ( (LA76_0==74) ) {
				alt76=1;
			}
			switch (alt76) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:299:15: commas
					{
					pushFollow(FOLLOW_commas_in_generic_dimension_specifier4748);
					commas237=commas();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, commas237.getTree());

					}
					break;

			}

			char_literal238=(Token)match(input,GT,FOLLOW_GT_in_generic_dimension_specifier4753); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal238_tree = (CommonTree)adaptor.create(char_literal238);
			adaptor.addChild(root_0, char_literal238_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 69, generic_dimension_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "generic_dimension_specifier"


	public static class commas_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "commas"
	// /Users/jeremie/ANTLR/cs.g:300:1: commas : ( ',' )+ ;
	public final csParser.commas_return commas() throws RecognitionException {
		csParser.commas_return retval = new csParser.commas_return();
		retval.start = input.LT(1);
		int commas_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal239=null;

		CommonTree char_literal239_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:300:7: ( ( ',' )+ )
			// /Users/jeremie/ANTLR/cs.g:301:9: ( ',' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:301:9: ( ',' )+
			int cnt77=0;
			loop77:
			while (true) {
				int alt77=2;
				int LA77_0 = input.LA(1);
				if ( (LA77_0==74) ) {
					alt77=1;
				}

				switch (alt77) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:301:9: ','
					{
					char_literal239=(Token)match(input,74,FOLLOW_74_in_commas4769); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal239_tree = (CommonTree)adaptor.create(char_literal239);
					adaptor.addChild(root_0, char_literal239_tree);
					}

					}
					break;

				default :
					if ( cnt77 >= 1 ) break loop77;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(77, input);
					throw eee;
				}
				cnt77++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 70, commas_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "commas"


	public static class type_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_name"
	// /Users/jeremie/ANTLR/cs.g:307:1: type_name : namespace_or_type_name ;
	public final csParser.type_name_return type_name() throws RecognitionException {
		csParser.type_name_return retval = new csParser.type_name_return();
		retval.start = input.LT(1);
		int type_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope namespace_or_type_name240 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:307:10: ( namespace_or_type_name )
			// /Users/jeremie/ANTLR/cs.g:308:9: namespace_or_type_name
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_namespace_or_type_name_in_type_name4792);
			namespace_or_type_name240=namespace_or_type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, namespace_or_type_name240.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 71, type_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_name"


	public static class namespace_or_type_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "namespace_or_type_name"
	// /Users/jeremie/ANTLR/cs.g:309:1: namespace_or_type_name : type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* ;
	public final csParser.namespace_or_type_name_return namespace_or_type_name() throws RecognitionException {
		csParser.namespace_or_type_name_return retval = new csParser.namespace_or_type_name_return();
		retval.start = input.LT(1);
		int namespace_or_type_name_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal242=null;
		Token char_literal244=null;
		ParserRuleReturnScope type_or_generic241 =null;
		ParserRuleReturnScope type_or_generic243 =null;
		ParserRuleReturnScope type_or_generic245 =null;

		CommonTree string_literal242_tree=null;
		CommonTree char_literal244_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:309:23: ( type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )* )
			// /Users/jeremie/ANTLR/cs.g:310:10: type_or_generic ( '::' type_or_generic )? ( '.' type_or_generic )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name4808);
			type_or_generic241=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic241.getTree());

			// /Users/jeremie/ANTLR/cs.g:310:28: ( '::' type_or_generic )?
			int alt78=2;
			int LA78_0 = input.LA(1);
			if ( (LA78_0==80) ) {
				alt78=1;
			}
			switch (alt78) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:310:29: '::' type_or_generic
					{
					string_literal242=(Token)match(input,80,FOLLOW_80_in_namespace_or_type_name4813); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal242_tree = (CommonTree)adaptor.create(string_literal242);
					adaptor.addChild(root_0, string_literal242_tree);
					}

					pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name4815);
					type_or_generic243=type_or_generic();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic243.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:310:52: ( '.' type_or_generic )*
			loop79:
			while (true) {
				int alt79=2;
				int LA79_0 = input.LA(1);
				if ( (LA79_0==DOT) ) {
					int LA79_2 = input.LA(2);
					if ( (LA79_2==IDENTIFIER||LA79_2==95||(LA79_2 >= 97 && LA79_2 <= 98)||(LA79_2 >= 100 && LA79_2 <= 101)||LA79_2==105||LA79_2==117||LA79_2==120||LA79_2==122||LA79_2==126||LA79_2==132||LA79_2==135||LA79_2==141||(LA79_2 >= 143 && LA79_2 <= 144)||(LA79_2 >= 147 && LA79_2 <= 148)||LA79_2==152||LA79_2==154||LA79_2==157||LA79_2==160||LA79_2==162||LA79_2==167||(LA79_2 >= 171 && LA79_2 <= 172)||LA79_2==183||LA79_2==190||LA79_2==194||LA79_2==196) ) {
						alt79=1;
					}

				}

				switch (alt79) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:310:53: '.' type_or_generic
					{
					char_literal244=(Token)match(input,DOT,FOLLOW_DOT_in_namespace_or_type_name4820); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal244_tree = (CommonTree)adaptor.create(char_literal244);
					adaptor.addChild(root_0, char_literal244_tree);
					}

					pushFollow(FOLLOW_type_or_generic_in_namespace_or_type_name4824);
					type_or_generic245=type_or_generic();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic245.getTree());

					}
					break;

				default :
					break loop79;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 72, namespace_or_type_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "namespace_or_type_name"


	public static class type_or_generic_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_or_generic"
	// /Users/jeremie/ANTLR/cs.g:311:1: type_or_generic returns [UnknowNode t] : ( ( identifier '<' )=> identifier generic_argument_list | identifier ) ;
	public final csParser.type_or_generic_return type_or_generic() throws RecognitionException {
		csParser.type_or_generic_return retval = new csParser.type_or_generic_return();
		retval.start = input.LT(1);
		int type_or_generic_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope identifier246 =null;
		ParserRuleReturnScope generic_argument_list247 =null;
		ParserRuleReturnScope identifier248 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:311:39: ( ( ( identifier '<' )=> identifier generic_argument_list | identifier ) )
			// /Users/jeremie/ANTLR/cs.g:312:9: ( ( identifier '<' )=> identifier generic_argument_list | identifier )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:312:9: ( ( identifier '<' )=> identifier generic_argument_list | identifier )
			int alt80=2;
			int LA80_0 = input.LA(1);
			if ( (LA80_0==IDENTIFIER||LA80_0==95||(LA80_0 >= 97 && LA80_0 <= 98)||(LA80_0 >= 100 && LA80_0 <= 101)||LA80_0==105||LA80_0==117||LA80_0==120||LA80_0==122||LA80_0==126||LA80_0==132||LA80_0==135||LA80_0==141||(LA80_0 >= 143 && LA80_0 <= 144)||(LA80_0 >= 147 && LA80_0 <= 148)||LA80_0==152||LA80_0==154||LA80_0==157||LA80_0==160||LA80_0==162||LA80_0==167||(LA80_0 >= 171 && LA80_0 <= 172)||LA80_0==183||LA80_0==190||LA80_0==194||LA80_0==196) ) {
				int LA80_1 = input.LA(2);
				if ( (synpred15_cs()) ) {
					alt80=1;
				}
				else if ( (true) ) {
					alt80=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 80, 0, input);
				throw nvae;
			}

			switch (alt80) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:312:10: ( identifier '<' )=> identifier generic_argument_list
					{
					pushFollow(FOLLOW_identifier_in_type_or_generic4856);
					identifier246=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier246.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_type_or_generic4860);
					generic_argument_list247=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list247.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:313:11: identifier
					{
					pushFollow(FOLLOW_identifier_in_type_or_generic4872);
					identifier248=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier248.getTree());

					}
					break;

			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 73, type_or_generic_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_or_generic"


	public static class qid_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qid"
	// /Users/jeremie/ANTLR/cs.g:316:1: qid : qid_start ( qid_part )* ;
	public final csParser.qid_return qid() throws RecognitionException {
		csParser.qid_return retval = new csParser.qid_return();
		retval.start = input.LT(1);
		int qid_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope qid_start249 =null;
		ParserRuleReturnScope qid_part250 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:316:4: ( qid_start ( qid_part )* )
			// /Users/jeremie/ANTLR/cs.g:317:9: qid_start ( qid_part )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_qid_start_in_qid4907);
			qid_start249=qid_start();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, qid_start249.getTree());

			// /Users/jeremie/ANTLR/cs.g:317:21: ( qid_part )*
			loop81:
			while (true) {
				int alt81=2;
				int LA81_0 = input.LA(1);
				if ( (LA81_0==DOT) ) {
					int LA81_2 = input.LA(2);
					if ( (LA81_2==IDENTIFIER||LA81_2==95||(LA81_2 >= 97 && LA81_2 <= 98)||(LA81_2 >= 100 && LA81_2 <= 101)||LA81_2==105||LA81_2==117||LA81_2==120||LA81_2==122||LA81_2==126||LA81_2==132||LA81_2==135||LA81_2==141||(LA81_2 >= 143 && LA81_2 <= 144)||(LA81_2 >= 147 && LA81_2 <= 148)||LA81_2==152||LA81_2==154||LA81_2==157||LA81_2==160||LA81_2==162||LA81_2==167||(LA81_2 >= 171 && LA81_2 <= 172)||LA81_2==183||LA81_2==190||LA81_2==194||LA81_2==196) ) {
						alt81=1;
					}

				}
				else if ( (LA81_0==PTR) ) {
					alt81=1;
				}

				switch (alt81) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:317:21: qid_part
					{
					pushFollow(FOLLOW_qid_part_in_qid4911);
					qid_part250=qid_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, qid_part250.getTree());

					}
					break;

				default :
					break loop81;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 74, qid_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qid"


	public static class qid_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qid_start"
	// /Users/jeremie/ANTLR/cs.g:319:1: qid_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal );
	public final csParser.qid_start_return qid_start() throws RecognitionException {
		csParser.qid_start_return retval = new csParser.qid_start_return();
		retval.start = input.LT(1);
		int qid_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal255=null;
		ParserRuleReturnScope predefined_type251 =null;
		ParserRuleReturnScope identifier252 =null;
		ParserRuleReturnScope generic_argument_list253 =null;
		ParserRuleReturnScope identifier254 =null;
		ParserRuleReturnScope identifier256 =null;
		ParserRuleReturnScope literal257 =null;

		CommonTree string_literal255_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:319:10: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | identifier ( '::' identifier )? | literal )
			int alt83=4;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt83=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA83_2 = input.LA(2);
				if ( (LA83_2==81) && (synpred16_cs())) {
					alt83=2;
				}
				else if ( (LA83_2==DOT||LA83_2==PTR||LA83_2==68||LA83_2==80||LA83_2==197) ) {
					alt83=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 83, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				alt83=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 83, 0, input);
				throw nvae;
			}
			switch (alt83) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:320:9: predefined_type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_predefined_type_in_qid_start4935);
					predefined_type251=predefined_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type251.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:321:11: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_qid_start4965);
					identifier252=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier252.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_qid_start4969);
					generic_argument_list253=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list253.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:324:11: identifier ( '::' identifier )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_qid_start4983);
					identifier254=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier254.getTree());

					// /Users/jeremie/ANTLR/cs.g:324:24: ( '::' identifier )?
					int alt82=2;
					int LA82_0 = input.LA(1);
					if ( (LA82_0==80) ) {
						alt82=1;
					}
					switch (alt82) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:324:25: '::' identifier
							{
							string_literal255=(Token)match(input,80,FOLLOW_80_in_qid_start4988); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal255_tree = (CommonTree)adaptor.create(string_literal255);
							adaptor.addChild(root_0, string_literal255_tree);
							}

							pushFollow(FOLLOW_identifier_in_qid_start4992);
							identifier256=identifier();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier256.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:325:11: literal
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_literal_in_qid_start5006);
					literal257=literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal257.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 75, qid_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qid_start"


	public static class qid_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "qid_part"
	// /Users/jeremie/ANTLR/cs.g:329:1: qid_part : access_identifier ;
	public final csParser.qid_part_return qid_part() throws RecognitionException {
		csParser.qid_part_return retval = new csParser.qid_part_return();
		retval.start = input.LT(1);
		int qid_part_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_identifier258 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:329:9: ( access_identifier )
			// /Users/jeremie/ANTLR/cs.g:330:9: access_identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_access_identifier_in_qid_part5048);
			access_identifier258=access_identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier258.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 76, qid_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "qid_part"


	public static class generic_argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "generic_argument_list"
	// /Users/jeremie/ANTLR/cs.g:332:1: generic_argument_list : '<' type_arguments '>' ;
	public final csParser.generic_argument_list_return generic_argument_list() throws RecognitionException {
		csParser.generic_argument_list_return retval = new csParser.generic_argument_list_return();
		retval.start = input.LT(1);
		int generic_argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal259=null;
		Token char_literal261=null;
		ParserRuleReturnScope type_arguments260 =null;

		CommonTree char_literal259_tree=null;
		CommonTree char_literal261_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:332:22: ( '<' type_arguments '>' )
			// /Users/jeremie/ANTLR/cs.g:333:9: '<' type_arguments '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal259=(Token)match(input,81,FOLLOW_81_in_generic_argument_list5065); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal259_tree = (CommonTree)adaptor.create(char_literal259);
			adaptor.addChild(root_0, char_literal259_tree);
			}

			pushFollow(FOLLOW_type_arguments_in_generic_argument_list5069);
			type_arguments260=type_arguments();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_arguments260.getTree());

			char_literal261=(Token)match(input,GT,FOLLOW_GT_in_generic_argument_list5073); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal261_tree = (CommonTree)adaptor.create(char_literal261);
			adaptor.addChild(root_0, char_literal261_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 77, generic_argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "generic_argument_list"


	public static class type_arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_arguments"
	// /Users/jeremie/ANTLR/cs.g:334:1: type_arguments : type ( ',' type )* ;
	public final csParser.type_arguments_return type_arguments() throws RecognitionException {
		csParser.type_arguments_return retval = new csParser.type_arguments_return();
		retval.start = input.LT(1);
		int type_arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal263=null;
		ParserRuleReturnScope type262 =null;
		ParserRuleReturnScope type264 =null;

		CommonTree char_literal263_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:334:15: ( type ( ',' type )* )
			// /Users/jeremie/ANTLR/cs.g:335:9: type ( ',' type )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_type_arguments5089);
			type262=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type262.getTree());

			// /Users/jeremie/ANTLR/cs.g:335:14: ( ',' type )*
			loop84:
			while (true) {
				int alt84=2;
				int LA84_0 = input.LA(1);
				if ( (LA84_0==74) ) {
					alt84=1;
				}

				switch (alt84) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:335:15: ',' type
					{
					char_literal263=(Token)match(input,74,FOLLOW_74_in_type_arguments5092); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal263_tree = (CommonTree)adaptor.create(char_literal263);
					adaptor.addChild(root_0, char_literal263_tree);
					}

					pushFollow(FOLLOW_type_in_type_arguments5094);
					type264=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type264.getTree());

					}
					break;

				default :
					break loop84;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 78, type_arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_arguments"


	public static class type_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type"
	// /Users/jeremie/ANTLR/cs.g:337:1: type returns [UnknowNode t] : ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ );
	public final csParser.type_return type() throws RecognitionException {
		csParser.type_return retval = new csParser.type_return();
		retval.start = input.LT(1);
		int type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal268=null;
		Token char_literal271=null;
		Token char_literal272=null;
		Token string_literal275=null;
		Token char_literal276=null;
		ParserRuleReturnScope predefined_type265 =null;
		ParserRuleReturnScope type_name266 =null;
		ParserRuleReturnScope rank_specifiers267 =null;
		ParserRuleReturnScope predefined_type269 =null;
		ParserRuleReturnScope type_name270 =null;
		ParserRuleReturnScope predefined_type273 =null;
		ParserRuleReturnScope type_name274 =null;

		CommonTree char_literal268_tree=null;
		CommonTree char_literal271_tree=null;
		CommonTree char_literal272_tree=null;
		CommonTree string_literal275_tree=null;
		CommonTree char_literal276_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:337:29: ( ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )* | ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' ) | ( predefined_type | type_name ) | 'void' ( '*' )+ )
			int alt92=4;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				int LA92_1 = input.LA(2);
				if ( (synpred17_cs()) ) {
					alt92=1;
				}
				else if ( (synpred18_cs()) ) {
					alt92=2;
				}
				else if ( (true) ) {
					alt92=3;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA92_2 = input.LA(2);
				if ( (synpred17_cs()) ) {
					alt92=1;
				}
				else if ( (synpred18_cs()) ) {
					alt92=2;
				}
				else if ( (true) ) {
					alt92=3;
				}

				}
				break;
			case 192:
				{
				alt92=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 92, 0, input);
				throw nvae;
			}
			switch (alt92) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:338:11: ( ( predefined_type | type_name ) rank_specifiers )=> ( predefined_type | type_name ) rank_specifiers ( '*' )*
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:338:63: ( predefined_type | type_name )
					int alt85=2;
					int LA85_0 = input.LA(1);
					if ( (LA85_0==103||LA85_0==106||LA85_0==109||LA85_0==114||LA85_0==119||LA85_0==129||LA85_0==138||LA85_0==146||LA85_0==151||LA85_0==169||LA85_0==173||LA85_0==177||(LA85_0 >= 185 && LA85_0 <= 186)||LA85_0==189) ) {
						alt85=1;
					}
					else if ( (LA85_0==IDENTIFIER||LA85_0==95||(LA85_0 >= 97 && LA85_0 <= 98)||(LA85_0 >= 100 && LA85_0 <= 101)||LA85_0==105||LA85_0==117||LA85_0==120||LA85_0==122||LA85_0==126||LA85_0==132||LA85_0==135||LA85_0==141||(LA85_0 >= 143 && LA85_0 <= 144)||(LA85_0 >= 147 && LA85_0 <= 148)||LA85_0==152||LA85_0==154||LA85_0==157||LA85_0==160||LA85_0==162||LA85_0==167||(LA85_0 >= 171 && LA85_0 <= 172)||LA85_0==183||LA85_0==190||LA85_0==194||LA85_0==196) ) {
						alt85=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 85, 0, input);
						throw nvae;
					}

					switch (alt85) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:338:64: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_type5135);
							predefined_type265=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type265.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:338:82: type_name
							{
							pushFollow(FOLLOW_type_name_in_type5139);
							type_name266=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name266.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_rank_specifiers_in_type5144);
					rank_specifiers267=rank_specifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers267.getTree());

					// /Users/jeremie/ANTLR/cs.g:338:113: ( '*' )*
					loop86:
					while (true) {
						int alt86=2;
						int LA86_0 = input.LA(1);
						if ( (LA86_0==69) ) {
							alt86=1;
						}

						switch (alt86) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:338:113: '*'
							{
							char_literal268=(Token)match(input,69,FOLLOW_69_in_type5148); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal268_tree = (CommonTree)adaptor.create(char_literal268);
							adaptor.addChild(root_0, char_literal268_tree);
							}

							}
							break;

						default :
							break loop86;
						}
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:339:11: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )=> ( predefined_type | type_name ) ( ( '*' )+ | '?' )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:339:60: ( predefined_type | type_name )
					int alt87=2;
					int LA87_0 = input.LA(1);
					if ( (LA87_0==103||LA87_0==106||LA87_0==109||LA87_0==114||LA87_0==119||LA87_0==129||LA87_0==138||LA87_0==146||LA87_0==151||LA87_0==169||LA87_0==173||LA87_0==177||(LA87_0 >= 185 && LA87_0 <= 186)||LA87_0==189) ) {
						alt87=1;
					}
					else if ( (LA87_0==IDENTIFIER||LA87_0==95||(LA87_0 >= 97 && LA87_0 <= 98)||(LA87_0 >= 100 && LA87_0 <= 101)||LA87_0==105||LA87_0==117||LA87_0==120||LA87_0==122||LA87_0==126||LA87_0==132||LA87_0==135||LA87_0==141||(LA87_0 >= 143 && LA87_0 <= 144)||(LA87_0 >= 147 && LA87_0 <= 148)||LA87_0==152||LA87_0==154||LA87_0==157||LA87_0==160||LA87_0==162||LA87_0==167||(LA87_0 >= 171 && LA87_0 <= 172)||LA87_0==183||LA87_0==190||LA87_0==194||LA87_0==196) ) {
						alt87=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 87, 0, input);
						throw nvae;
					}

					switch (alt87) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:339:61: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_type5184);
							predefined_type269=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type269.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:339:79: type_name
							{
							pushFollow(FOLLOW_type_name_in_type5188);
							type_name270=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name270.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:339:92: ( ( '*' )+ | '?' )
					int alt89=2;
					int LA89_0 = input.LA(1);
					if ( (LA89_0==69) ) {
						alt89=1;
					}
					else if ( (LA89_0==89) ) {
						alt89=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 89, 0, input);
						throw nvae;
					}

					switch (alt89) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:339:93: ( '*' )+
							{
							// /Users/jeremie/ANTLR/cs.g:339:93: ( '*' )+
							int cnt88=0;
							loop88:
							while (true) {
								int alt88=2;
								int LA88_0 = input.LA(1);
								if ( (LA88_0==69) ) {
									alt88=1;
								}

								switch (alt88) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:339:93: '*'
									{
									char_literal271=(Token)match(input,69,FOLLOW_69_in_type5194); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									char_literal271_tree = (CommonTree)adaptor.create(char_literal271);
									adaptor.addChild(root_0, char_literal271_tree);
									}

									}
									break;

								default :
									if ( cnt88 >= 1 ) break loop88;
									if (state.backtracking>0) {state.failed=true; return retval;}
									EarlyExitException eee = new EarlyExitException(88, input);
									throw eee;
								}
								cnt88++;
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:339:100: '?'
							{
							char_literal272=(Token)match(input,89,FOLLOW_89_in_type5199); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal272_tree = (CommonTree)adaptor.create(char_literal272);
							adaptor.addChild(root_0, char_literal272_tree);
							}

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:340:11: ( predefined_type | type_name )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:340:11: ( predefined_type | type_name )
					int alt90=2;
					int LA90_0 = input.LA(1);
					if ( (LA90_0==103||LA90_0==106||LA90_0==109||LA90_0==114||LA90_0==119||LA90_0==129||LA90_0==138||LA90_0==146||LA90_0==151||LA90_0==169||LA90_0==173||LA90_0==177||(LA90_0 >= 185 && LA90_0 <= 186)||LA90_0==189) ) {
						alt90=1;
					}
					else if ( (LA90_0==IDENTIFIER||LA90_0==95||(LA90_0 >= 97 && LA90_0 <= 98)||(LA90_0 >= 100 && LA90_0 <= 101)||LA90_0==105||LA90_0==117||LA90_0==120||LA90_0==122||LA90_0==126||LA90_0==132||LA90_0==135||LA90_0==141||(LA90_0 >= 143 && LA90_0 <= 144)||(LA90_0 >= 147 && LA90_0 <= 148)||LA90_0==152||LA90_0==154||LA90_0==157||LA90_0==160||LA90_0==162||LA90_0==167||(LA90_0 >= 171 && LA90_0 <= 172)||LA90_0==183||LA90_0==190||LA90_0==194||LA90_0==196) ) {
						alt90=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 90, 0, input);
						throw nvae;
					}

					switch (alt90) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:340:12: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_type5213);
							predefined_type273=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type273.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:340:30: type_name
							{
							pushFollow(FOLLOW_type_name_in_type5217);
							type_name274=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name274.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:341:11: 'void' ( '*' )+
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal275=(Token)match(input,192,FOLLOW_192_in_type5230); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal275_tree = (CommonTree)adaptor.create(string_literal275);
					adaptor.addChild(root_0, string_literal275_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:341:18: ( '*' )+
					int cnt91=0;
					loop91:
					while (true) {
						int alt91=2;
						int LA91_0 = input.LA(1);
						if ( (LA91_0==69) ) {
							alt91=1;
						}

						switch (alt91) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:341:18: '*'
							{
							char_literal276=(Token)match(input,69,FOLLOW_69_in_type5232); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal276_tree = (CommonTree)adaptor.create(char_literal276);
							adaptor.addChild(root_0, char_literal276_tree);
							}

							}
							break;

						default :
							if ( cnt91 >= 1 ) break loop91;
							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee = new EarlyExitException(91, input);
							throw eee;
						}
						cnt91++;
					}

					if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 79, type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type"


	public static class non_nullable_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_nullable_type"
	// /Users/jeremie/ANTLR/cs.g:344:1: non_nullable_type : ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ );
	public final csParser.non_nullable_type_return non_nullable_type() throws RecognitionException {
		csParser.non_nullable_type_return retval = new csParser.non_nullable_type_return();
		retval.start = input.LT(1);
		int non_nullable_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal280=null;
		Token char_literal281=null;
		Token string_literal282=null;
		Token char_literal283=null;
		ParserRuleReturnScope predefined_type277 =null;
		ParserRuleReturnScope type_name278 =null;
		ParserRuleReturnScope rank_specifiers279 =null;

		CommonTree char_literal280_tree=null;
		CommonTree char_literal281_tree=null;
		CommonTree string_literal282_tree=null;
		CommonTree char_literal283_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:344:18: ( ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? ) | 'void' ( '*' )+ )
			int alt99=2;
			int LA99_0 = input.LA(1);
			if ( (LA99_0==IDENTIFIER||LA99_0==95||(LA99_0 >= 97 && LA99_0 <= 98)||(LA99_0 >= 100 && LA99_0 <= 101)||LA99_0==103||(LA99_0 >= 105 && LA99_0 <= 106)||LA99_0==109||LA99_0==114||LA99_0==117||(LA99_0 >= 119 && LA99_0 <= 120)||LA99_0==122||LA99_0==126||LA99_0==129||LA99_0==132||LA99_0==135||LA99_0==138||LA99_0==141||(LA99_0 >= 143 && LA99_0 <= 144)||(LA99_0 >= 146 && LA99_0 <= 148)||(LA99_0 >= 151 && LA99_0 <= 152)||LA99_0==154||LA99_0==157||LA99_0==160||LA99_0==162||LA99_0==167||LA99_0==169||(LA99_0 >= 171 && LA99_0 <= 173)||LA99_0==177||LA99_0==183||(LA99_0 >= 185 && LA99_0 <= 186)||(LA99_0 >= 189 && LA99_0 <= 190)||LA99_0==194||LA99_0==196) ) {
				alt99=1;
			}
			else if ( (LA99_0==192) ) {
				alt99=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				throw nvae;
			}

			switch (alt99) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:345:9: ( predefined_type | type_name ) ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:345:9: ( predefined_type | type_name )
					int alt93=2;
					int LA93_0 = input.LA(1);
					if ( (LA93_0==103||LA93_0==106||LA93_0==109||LA93_0==114||LA93_0==119||LA93_0==129||LA93_0==138||LA93_0==146||LA93_0==151||LA93_0==169||LA93_0==173||LA93_0==177||(LA93_0 >= 185 && LA93_0 <= 186)||LA93_0==189) ) {
						alt93=1;
					}
					else if ( (LA93_0==IDENTIFIER||LA93_0==95||(LA93_0 >= 97 && LA93_0 <= 98)||(LA93_0 >= 100 && LA93_0 <= 101)||LA93_0==105||LA93_0==117||LA93_0==120||LA93_0==122||LA93_0==126||LA93_0==132||LA93_0==135||LA93_0==141||(LA93_0 >= 143 && LA93_0 <= 144)||(LA93_0 >= 147 && LA93_0 <= 148)||LA93_0==152||LA93_0==154||LA93_0==157||LA93_0==160||LA93_0==162||LA93_0==167||(LA93_0 >= 171 && LA93_0 <= 172)||LA93_0==183||LA93_0==190||LA93_0==194||LA93_0==196) ) {
						alt93=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 93, 0, input);
						throw nvae;
					}

					switch (alt93) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:345:10: predefined_type
							{
							pushFollow(FOLLOW_predefined_type_in_non_nullable_type5259);
							predefined_type277=predefined_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type277.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:345:28: type_name
							{
							pushFollow(FOLLOW_type_name_in_non_nullable_type5263);
							type_name278=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name278.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:346:17: ( rank_specifiers ( '*' )* | ( ( '*' )+ )? )
					int alt97=2;
					int LA97_0 = input.LA(1);
					if ( (LA97_0==91) ) {
						alt97=1;
					}
					else if ( (LA97_0==EOF||LA97_0==GT||LA97_0==IDENTIFIER||LA97_0==RPAREN||LA97_0==SEMI||LA97_0==62||(LA97_0 >= 65 && LA97_0 <= 66)||LA97_0==69||LA97_0==74||LA97_0==79||LA97_0==81||LA97_0==84||LA97_0==86||(LA97_0 >= 88 && LA97_0 <= 90)||(LA97_0 >= 92 && LA97_0 <= 93)||LA97_0==95||(LA97_0 >= 97 && LA97_0 <= 101)||LA97_0==105||LA97_0==117||LA97_0==120||LA97_0==122||LA97_0==126||LA97_0==132||LA97_0==135||(LA97_0 >= 141 && LA97_0 <= 144)||(LA97_0 >= 147 && LA97_0 <= 148)||LA97_0==152||LA97_0==154||LA97_0==157||LA97_0==160||LA97_0==162||LA97_0==167||(LA97_0 >= 171 && LA97_0 <= 172)||LA97_0==183||LA97_0==190||LA97_0==194||LA97_0==196||LA97_0==198||(LA97_0 >= 200 && LA97_0 <= 201)) ) {
						alt97=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 97, 0, input);
						throw nvae;
					}

					switch (alt97) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:346:21: rank_specifiers ( '*' )*
							{
							pushFollow(FOLLOW_rank_specifiers_in_non_nullable_type5286);
							rank_specifiers279=rank_specifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, rank_specifiers279.getTree());

							// /Users/jeremie/ANTLR/cs.g:346:39: ( '*' )*
							loop94:
							while (true) {
								int alt94=2;
								int LA94_0 = input.LA(1);
								if ( (LA94_0==69) ) {
									alt94=1;
								}

								switch (alt94) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:346:39: '*'
									{
									char_literal280=(Token)match(input,69,FOLLOW_69_in_non_nullable_type5290); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									char_literal280_tree = (CommonTree)adaptor.create(char_literal280);
									adaptor.addChild(root_0, char_literal280_tree);
									}

									}
									break;

								default :
									break loop94;
								}
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:347:27: ( ( '*' )+ )?
							{
							// /Users/jeremie/ANTLR/cs.g:347:27: ( ( '*' )+ )?
							int alt96=2;
							int LA96_0 = input.LA(1);
							if ( (LA96_0==69) ) {
								alt96=1;
							}
							switch (alt96) {
								case 1 :
									// /Users/jeremie/ANTLR/cs.g:347:28: ( '*' )+
									{
									// /Users/jeremie/ANTLR/cs.g:347:28: ( '*' )+
									int cnt95=0;
									loop95:
									while (true) {
										int alt95=2;
										int LA95_0 = input.LA(1);
										if ( (LA95_0==69) ) {
											alt95=1;
										}

										switch (alt95) {
										case 1 :
											// /Users/jeremie/ANTLR/cs.g:347:28: '*'
											{
											char_literal281=(Token)match(input,69,FOLLOW_69_in_non_nullable_type5320); if (state.failed) return retval;
											if ( state.backtracking==0 ) {
											char_literal281_tree = (CommonTree)adaptor.create(char_literal281);
											adaptor.addChild(root_0, char_literal281_tree);
											}

											}
											break;

										default :
											if ( cnt95 >= 1 ) break loop95;
											if (state.backtracking>0) {state.failed=true; return retval;}
											EarlyExitException eee = new EarlyExitException(95, input);
											throw eee;
										}
										cnt95++;
									}

									}
									break;

							}

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:349:11: 'void' ( '*' )+
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal282=(Token)match(input,192,FOLLOW_192_in_non_nullable_type5353); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal282_tree = (CommonTree)adaptor.create(string_literal282);
					adaptor.addChild(root_0, string_literal282_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:349:20: ( '*' )+
					int cnt98=0;
					loop98:
					while (true) {
						int alt98=2;
						int LA98_0 = input.LA(1);
						if ( (LA98_0==69) ) {
							alt98=1;
						}

						switch (alt98) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:349:20: '*'
							{
							char_literal283=(Token)match(input,69,FOLLOW_69_in_non_nullable_type5357); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal283_tree = (CommonTree)adaptor.create(char_literal283);
							adaptor.addChild(root_0, char_literal283_tree);
							}

							}
							break;

						default :
							if ( cnt98 >= 1 ) break loop98;
							if (state.backtracking>0) {state.failed=true; return retval;}
							EarlyExitException eee = new EarlyExitException(98, input);
							throw eee;
						}
						cnt98++;
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 80, non_nullable_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_nullable_type"


	public static class non_array_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_array_type"
	// /Users/jeremie/ANTLR/cs.g:351:1: non_array_type : type ;
	public final csParser.non_array_type_return non_array_type() throws RecognitionException {
		csParser.non_array_type_return retval = new csParser.non_array_type_return();
		retval.start = input.LT(1);
		int non_array_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type284 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:351:15: ( type )
			// /Users/jeremie/ANTLR/cs.g:352:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_non_array_type5382);
			type284=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type284.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 81, non_array_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_array_type"


	public static class array_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "array_type"
	// /Users/jeremie/ANTLR/cs.g:353:1: array_type : type ;
	public final csParser.array_type_return array_type() throws RecognitionException {
		csParser.array_type_return retval = new csParser.array_type_return();
		retval.start = input.LT(1);
		int array_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type285 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:353:11: ( type )
			// /Users/jeremie/ANTLR/cs.g:354:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_array_type5396);
			type285=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type285.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 82, array_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "array_type"


	public static class unmanaged_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unmanaged_type"
	// /Users/jeremie/ANTLR/cs.g:355:1: unmanaged_type : type ;
	public final csParser.unmanaged_type_return unmanaged_type() throws RecognitionException {
		csParser.unmanaged_type_return retval = new csParser.unmanaged_type_return();
		retval.start = input.LT(1);
		int unmanaged_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type286 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:355:15: ( type )
			// /Users/jeremie/ANTLR/cs.g:356:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_unmanaged_type5410);
			type286=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type286.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 83, unmanaged_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unmanaged_type"


	public static class class_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_type"
	// /Users/jeremie/ANTLR/cs.g:357:1: class_type : type ;
	public final csParser.class_type_return class_type() throws RecognitionException {
		csParser.class_type_return retval = new csParser.class_type_return();
		retval.start = input.LT(1);
		int class_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type287 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:357:11: ( type )
			// /Users/jeremie/ANTLR/cs.g:358:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_class_type5424);
			type287=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type287.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 84, class_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_type"


	public static class pointer_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pointer_type"
	// /Users/jeremie/ANTLR/cs.g:359:1: pointer_type : type ;
	public final csParser.pointer_type_return pointer_type() throws RecognitionException {
		csParser.pointer_type_return retval = new csParser.pointer_type_return();
		retval.start = input.LT(1);
		int pointer_type_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type288 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:359:13: ( type )
			// /Users/jeremie/ANTLR/cs.g:360:9: type
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_pointer_type5438);
			type288=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type288.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 85, pointer_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pointer_type"


	public static class block_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "block"
	// /Users/jeremie/ANTLR/cs.g:366:1: block : ( ';' | '{' ( statement_list )? '}' );
	public final csParser.block_return block() throws RecognitionException {
		csParser.block_return retval = new csParser.block_return();
		retval.start = input.LT(1);
		int block_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal289=null;
		Token char_literal290=null;
		Token char_literal292=null;
		ParserRuleReturnScope statement_list291 =null;

		CommonTree char_literal289_tree=null;
		CommonTree char_literal290_tree=null;
		CommonTree char_literal292_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:366:6: ( ';' | '{' ( statement_list )? '}' )
			int alt101=2;
			int LA101_0 = input.LA(1);
			if ( (LA101_0==SEMI) ) {
				alt101=1;
			}
			else if ( (LA101_0==197) ) {
				alt101=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 101, 0, input);
				throw nvae;
			}

			switch (alt101) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:367:9: ';'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal289=(Token)match(input,SEMI,FOLLOW_SEMI_in_block5457); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal289_tree = (CommonTree)adaptor.create(char_literal289);
					adaptor.addChild(root_0, char_literal289_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:368:11: '{' ( statement_list )? '}'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal290=(Token)match(input,197,FOLLOW_197_in_block5469); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal290_tree = (CommonTree)adaptor.create(char_literal290);
					adaptor.addChild(root_0, char_literal290_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:368:17: ( statement_list )?
					int alt100=2;
					int LA100_0 = input.LA(1);
					if ( (LA100_0==Character_literal||LA100_0==FALSE||(LA100_0 >= Hex_number && LA100_0 <= IF)||(LA100_0 >= MINUS && LA100_0 <= NUMBER)||LA100_0==Real_literal||(LA100_0 >= SEMI && LA100_0 <= STRINGLITERAL)||LA100_0==TRUE||(LA100_0 >= USING && LA100_0 <= Verbatim_string_literal)||LA100_0==61||LA100_0==66||(LA100_0 >= 68 && LA100_0 <= 69)||(LA100_0 >= 71 && LA100_0 <= 72)||LA100_0==75||LA100_0==95||(LA100_0 >= 97 && LA100_0 <= 98)||(LA100_0 >= 100 && LA100_0 <= 106)||(LA100_0 >= 109 && LA100_0 <= 110)||(LA100_0 >= 112 && LA100_0 <= 120)||LA100_0==122||LA100_0==126||(LA100_0 >= 128 && LA100_0 <= 132)||(LA100_0 >= 134 && LA100_0 <= 135)||LA100_0==138||LA100_0==141||(LA100_0 >= 143 && LA100_0 <= 148)||(LA100_0 >= 150 && LA100_0 <= 152)||LA100_0==154||LA100_0==157||LA100_0==160||LA100_0==162||(LA100_0 >= 167 && LA100_0 <= 169)||(LA100_0 >= 171 && LA100_0 <= 174)||LA100_0==177||(LA100_0 >= 179 && LA100_0 <= 190)||LA100_0==192||(LA100_0 >= 194 && LA100_0 <= 197)||LA100_0==202) ) {
						alt100=1;
					}
					switch (alt100) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:368:17: statement_list
							{
							pushFollow(FOLLOW_statement_list_in_block5473);
							statement_list291=statement_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list291.getTree());

							}
							break;

					}

					char_literal292=(Token)match(input,201,FOLLOW_201_in_block5478); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal292_tree = (CommonTree)adaptor.create(char_literal292);
					adaptor.addChild(root_0, char_literal292_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 86, block_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "block"


	public static class statement_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement_list"
	// /Users/jeremie/ANTLR/cs.g:369:1: statement_list : ( statement )+ ;
	public final csParser.statement_list_return statement_list() throws RecognitionException {
		csParser.statement_list_return retval = new csParser.statement_list_return();
		retval.start = input.LT(1);
		int statement_list_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope statement293 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:369:15: ( ( statement )+ )
			// /Users/jeremie/ANTLR/cs.g:370:9: ( statement )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:370:9: ( statement )+
			int cnt102=0;
			loop102:
			while (true) {
				int alt102=2;
				int LA102_0 = input.LA(1);
				if ( (LA102_0==115) ) {
					int LA102_2 = input.LA(2);
					if ( (LA102_2==68) ) {
						alt102=1;
					}

				}
				else if ( (LA102_0==Character_literal||LA102_0==FALSE||(LA102_0 >= Hex_number && LA102_0 <= IF)||(LA102_0 >= MINUS && LA102_0 <= NUMBER)||LA102_0==Real_literal||(LA102_0 >= SEMI && LA102_0 <= STRINGLITERAL)||LA102_0==TRUE||(LA102_0 >= USING && LA102_0 <= Verbatim_string_literal)||LA102_0==61||LA102_0==66||(LA102_0 >= 68 && LA102_0 <= 69)||(LA102_0 >= 71 && LA102_0 <= 72)||LA102_0==75||LA102_0==95||(LA102_0 >= 97 && LA102_0 <= 98)||(LA102_0 >= 100 && LA102_0 <= 106)||(LA102_0 >= 109 && LA102_0 <= 110)||(LA102_0 >= 112 && LA102_0 <= 114)||(LA102_0 >= 116 && LA102_0 <= 120)||LA102_0==122||LA102_0==126||(LA102_0 >= 128 && LA102_0 <= 132)||(LA102_0 >= 134 && LA102_0 <= 135)||LA102_0==138||LA102_0==141||(LA102_0 >= 143 && LA102_0 <= 148)||(LA102_0 >= 150 && LA102_0 <= 152)||LA102_0==154||LA102_0==157||LA102_0==160||LA102_0==162||(LA102_0 >= 167 && LA102_0 <= 169)||(LA102_0 >= 171 && LA102_0 <= 174)||LA102_0==177||(LA102_0 >= 179 && LA102_0 <= 190)||LA102_0==192||(LA102_0 >= 194 && LA102_0 <= 197)||LA102_0==202) ) {
					alt102=1;
				}

				switch (alt102) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:370:9: statement
					{
					pushFollow(FOLLOW_statement_in_statement_list5492);
					statement293=statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, statement293.getTree());

					}
					break;

				default :
					if ( cnt102 >= 1 ) break loop102;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(102, input);
					throw eee;
				}
				cnt102++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 87, statement_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement_list"


	public static class expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression"
	// /Users/jeremie/ANTLR/cs.g:375:1: expression : ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression );
	public final csParser.expression_return expression() throws RecognitionException {
		csParser.expression_return retval = new csParser.expression_return();
		retval.start = input.LT(1);
		int expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope assignment294 =null;
		ParserRuleReturnScope non_assignment_expression295 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:375:11: ( ( unary_expression assignment_operator )=> assignment | non_assignment_expression )
			int alt103=2;
			switch ( input.LA(1) ) {
			case 68:
				{
				int LA103_1 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 150:
				{
				int LA103_2 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 180:
				{
				int LA103_3 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				int LA103_4 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 132:
				{
				int LA103_5 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 102:
				{
				int LA103_6 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 184:
				{
				int LA103_7 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
				{
				int LA103_8 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 174:
				{
				int LA103_9 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 110:
				{
				int LA103_10 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 187:
				{
				int LA103_11 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 115:
				{
				int LA103_12 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 116:
				{
				int LA103_13 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 71:
				{
				int LA103_14 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case MINUS:
				{
				int LA103_15 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 61:
				{
				int LA103_16 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 202:
				{
				int LA103_17 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 72:
				{
				int LA103_18 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 75:
				{
				int LA103_19 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 69:
				{
				int LA103_20 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case 66:
				{
				int LA103_21 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA103_22 = input.LA(2);
				if ( (synpred19_cs()) ) {
					alt103=1;
				}
				else if ( (true) ) {
					alt103=2;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 103, 0, input);
				throw nvae;
			}
			switch (alt103) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:376:9: ( unary_expression assignment_operator )=> assignment
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_assignment_in_expression5531);
					assignment294=assignment();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment294.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:377:11: non_assignment_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_non_assignment_expression_in_expression5551);
					non_assignment_expression295=non_assignment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression295.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 88, expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression"


	public static class expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression_list"
	// /Users/jeremie/ANTLR/cs.g:379:1: expression_list : expression ( ',' expression )* ;
	public final csParser.expression_list_return expression_list() throws RecognitionException {
		csParser.expression_list_return retval = new csParser.expression_list_return();
		retval.start = input.LT(1);
		int expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal297=null;
		ParserRuleReturnScope expression296 =null;
		ParserRuleReturnScope expression298 =null;

		CommonTree char_literal297_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:379:16: ( expression ( ',' expression )* )
			// /Users/jeremie/ANTLR/cs.g:380:9: expression ( ',' expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_expression_list5574);
			expression296=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression296.getTree());

			// /Users/jeremie/ANTLR/cs.g:380:21: ( ',' expression )*
			loop104:
			while (true) {
				int alt104=2;
				int LA104_0 = input.LA(1);
				if ( (LA104_0==74) ) {
					alt104=1;
				}

				switch (alt104) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:380:22: ',' expression
					{
					char_literal297=(Token)match(input,74,FOLLOW_74_in_expression_list5578); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal297_tree = (CommonTree)adaptor.create(char_literal297);
					adaptor.addChild(root_0, char_literal297_tree);
					}

					pushFollow(FOLLOW_expression_in_expression_list5582);
					expression298=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression298.getTree());

					}
					break;

				default :
					break loop104;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 89, expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression_list"


	public static class assignment_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assignment"
	// /Users/jeremie/ANTLR/cs.g:381:1: assignment : unary_expression assignment_operator expression ;
	public final csParser.assignment_return assignment() throws RecognitionException {
		csParser.assignment_return retval = new csParser.assignment_return();
		retval.start = input.LT(1);
		int assignment_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope unary_expression299 =null;
		ParserRuleReturnScope assignment_operator300 =null;
		ParserRuleReturnScope expression301 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:381:11: ( unary_expression assignment_operator expression )
			// /Users/jeremie/ANTLR/cs.g:382:9: unary_expression assignment_operator expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_unary_expression_in_assignment5599);
			unary_expression299=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression299.getTree());

			pushFollow(FOLLOW_assignment_operator_in_assignment5603);
			assignment_operator300=assignment_operator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment_operator300.getTree());

			pushFollow(FOLLOW_expression_in_assignment5607);
			expression301=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression301.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 90, assignment_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "assignment"


	public static class unary_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unary_expression"
	// /Users/jeremie/ANTLR/cs.g:383:1: unary_expression : ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression );
	public final csParser.unary_expression_return unary_expression() throws RecognitionException {
		csParser.unary_expression_return retval = new csParser.unary_expression_return();
		retval.start = input.LT(1);
		int unary_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal304=null;
		Token string_literal305=null;
		Token char_literal306=null;
		Token char_literal308=null;
		Token char_literal310=null;
		Token char_literal312=null;
		ParserRuleReturnScope cast_expression302 =null;
		ParserRuleReturnScope primary_or_array_creation_expression303 =null;
		ParserRuleReturnScope unary_expression307 =null;
		ParserRuleReturnScope unary_expression309 =null;
		ParserRuleReturnScope unary_expression311 =null;
		ParserRuleReturnScope unary_expression313 =null;
		ParserRuleReturnScope pre_increment_expression314 =null;
		ParserRuleReturnScope pre_decrement_expression315 =null;
		ParserRuleReturnScope pointer_indirection_expression316 =null;
		ParserRuleReturnScope addressof_expression317 =null;

		CommonTree string_literal304_tree=null;
		CommonTree string_literal305_tree=null;
		CommonTree char_literal306_tree=null;
		CommonTree char_literal308_tree=null;
		CommonTree char_literal310_tree=null;
		CommonTree char_literal312_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:383:17: ( ( cast_expression )=> cast_expression | primary_or_array_creation_expression ( '++' )? ( '--' )? | '+' unary_expression | '-' unary_expression | '!' unary_expression | '~' unary_expression | pre_increment_expression | pre_decrement_expression | pointer_indirection_expression | addressof_expression )
			int alt107=10;
			switch ( input.LA(1) ) {
			case 68:
				{
				int LA107_1 = input.LA(2);
				if ( (synpred20_cs()) ) {
					alt107=1;
				}
				else if ( (true) ) {
					alt107=2;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt107=2;
				}
				break;
			case 71:
				{
				alt107=3;
				}
				break;
			case MINUS:
				{
				alt107=4;
				}
				break;
			case 61:
				{
				alt107=5;
				}
				break;
			case 202:
				{
				alt107=6;
				}
				break;
			case 72:
				{
				alt107=7;
				}
				break;
			case 75:
				{
				alt107=8;
				}
				break;
			case 69:
				{
				alt107=9;
				}
				break;
			case 66:
				{
				alt107=10;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 107, 0, input);
				throw nvae;
			}
			switch (alt107) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:385:9: ( cast_expression )=> cast_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_cast_expression_in_unary_expression5638);
					cast_expression302=cast_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_expression302.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:386:11: primary_or_array_creation_expression ( '++' )? ( '--' )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_primary_or_array_creation_expression_in_unary_expression5650);
					primary_or_array_creation_expression303=primary_or_array_creation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_or_array_creation_expression303.getTree());

					// /Users/jeremie/ANTLR/cs.g:386:50: ( '++' )?
					int alt105=2;
					int LA105_0 = input.LA(1);
					if ( (LA105_0==72) ) {
						alt105=1;
					}
					switch (alt105) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:386:50: '++'
							{
							string_literal304=(Token)match(input,72,FOLLOW_72_in_unary_expression5654); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal304_tree = (CommonTree)adaptor.create(string_literal304);
							adaptor.addChild(root_0, string_literal304_tree);
							}

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:386:58: ( '--' )?
					int alt106=2;
					int LA106_0 = input.LA(1);
					if ( (LA106_0==75) ) {
						alt106=1;
					}
					switch (alt106) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:386:58: '--'
							{
							string_literal305=(Token)match(input,75,FOLLOW_75_in_unary_expression5659); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal305_tree = (CommonTree)adaptor.create(string_literal305);
							adaptor.addChild(root_0, string_literal305_tree);
							}

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:387:11: '+' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal306=(Token)match(input,71,FOLLOW_71_in_unary_expression5672); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal306_tree = (CommonTree)adaptor.create(char_literal306);
					adaptor.addChild(root_0, char_literal306_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5676);
					unary_expression307=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression307.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:388:11: '-' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal308=(Token)match(input,MINUS,FOLLOW_MINUS_in_unary_expression5689); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal308_tree = (CommonTree)adaptor.create(char_literal308);
					adaptor.addChild(root_0, char_literal308_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5693);
					unary_expression309=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression309.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:389:11: '!' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal310=(Token)match(input,61,FOLLOW_61_in_unary_expression5706); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal310_tree = (CommonTree)adaptor.create(char_literal310);
					adaptor.addChild(root_0, char_literal310_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5710);
					unary_expression311=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression311.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:390:11: '~' unary_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal312=(Token)match(input,202,FOLLOW_202_in_unary_expression5723); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal312_tree = (CommonTree)adaptor.create(char_literal312);
					adaptor.addChild(root_0, char_literal312_tree);
					}

					pushFollow(FOLLOW_unary_expression_in_unary_expression5727);
					unary_expression313=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression313.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:391:11: pre_increment_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_pre_increment_expression_in_unary_expression5740);
					pre_increment_expression314=pre_increment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_increment_expression314.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:392:11: pre_decrement_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_pre_decrement_expression_in_unary_expression5753);
					pre_decrement_expression315=pre_decrement_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pre_decrement_expression315.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:393:11: pointer_indirection_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_pointer_indirection_expression_in_unary_expression5766);
					pointer_indirection_expression316=pointer_indirection_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_indirection_expression316.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:394:11: addressof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_addressof_expression_in_unary_expression5778);
					addressof_expression317=addressof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, addressof_expression317.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 91, unary_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unary_expression"


	public static class cast_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "cast_expression"
	// /Users/jeremie/ANTLR/cs.g:396:1: cast_expression : '(' type ')' unary_expression ;
	public final csParser.cast_expression_return cast_expression() throws RecognitionException {
		csParser.cast_expression_return retval = new csParser.cast_expression_return();
		retval.start = input.LT(1);
		int cast_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal318=null;
		Token char_literal320=null;
		ParserRuleReturnScope type319 =null;
		ParserRuleReturnScope unary_expression321 =null;

		CommonTree char_literal318_tree=null;
		CommonTree char_literal320_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:396:16: ( '(' type ')' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:397:9: '(' type ')' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal318=(Token)match(input,68,FOLLOW_68_in_cast_expression5802); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal318_tree = (CommonTree)adaptor.create(char_literal318);
			adaptor.addChild(root_0, char_literal318_tree);
			}

			pushFollow(FOLLOW_type_in_cast_expression5806);
			type319=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type319.getTree());

			char_literal320=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_cast_expression5810); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal320_tree = (CommonTree)adaptor.create(char_literal320);
			adaptor.addChild(root_0, char_literal320_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_cast_expression5814);
			unary_expression321=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression321.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 92, cast_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "cast_expression"


	public static class assignment_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assignment_operator"
	// /Users/jeremie/ANTLR/cs.g:398:1: assignment_operator : ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' );
	public final csParser.assignment_operator_return assignment_operator() throws RecognitionException {
		csParser.assignment_operator_return retval = new csParser.assignment_operator_return();
		retval.start = input.LT(1);
		int assignment_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal322=null;
		Token string_literal323=null;
		Token string_literal324=null;
		Token string_literal325=null;
		Token string_literal326=null;
		Token string_literal327=null;
		Token string_literal328=null;
		Token string_literal329=null;
		Token string_literal330=null;
		Token string_literal331=null;
		Token char_literal332=null;
		Token string_literal333=null;

		CommonTree char_literal322_tree=null;
		CommonTree string_literal323_tree=null;
		CommonTree string_literal324_tree=null;
		CommonTree string_literal325_tree=null;
		CommonTree string_literal326_tree=null;
		CommonTree string_literal327_tree=null;
		CommonTree string_literal328_tree=null;
		CommonTree string_literal329_tree=null;
		CommonTree string_literal330_tree=null;
		CommonTree string_literal331_tree=null;
		CommonTree char_literal332_tree=null;
		CommonTree string_literal333_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:398:20: ( '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '&=' | '|=' | '^=' | '<<=' | '>' '>=' )
			int alt108=11;
			switch ( input.LA(1) ) {
			case 85:
				{
				alt108=1;
				}
				break;
			case 73:
				{
				alt108=2;
				}
				break;
			case 76:
				{
				alt108=3;
				}
				break;
			case 70:
				{
				alt108=4;
				}
				break;
			case 78:
				{
				alt108=5;
				}
				break;
			case 64:
				{
				alt108=6;
				}
				break;
			case 67:
				{
				alt108=7;
				}
				break;
			case 199:
				{
				alt108=8;
				}
				break;
			case 94:
				{
				alt108=9;
				}
				break;
			case 83:
				{
				alt108=10;
				}
				break;
			case GT:
				{
				alt108=11;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 108, 0, input);
				throw nvae;
			}
			switch (alt108) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:399:9: '='
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal322=(Token)match(input,85,FOLLOW_85_in_assignment_operator5829); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal322_tree = (CommonTree)adaptor.create(char_literal322);
					adaptor.addChild(root_0, char_literal322_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:399:15: '+='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal323=(Token)match(input,73,FOLLOW_73_in_assignment_operator5833); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal323_tree = (CommonTree)adaptor.create(string_literal323);
					adaptor.addChild(root_0, string_literal323_tree);
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:399:22: '-='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal324=(Token)match(input,76,FOLLOW_76_in_assignment_operator5837); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal324_tree = (CommonTree)adaptor.create(string_literal324);
					adaptor.addChild(root_0, string_literal324_tree);
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:399:29: '*='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal325=(Token)match(input,70,FOLLOW_70_in_assignment_operator5841); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal325_tree = (CommonTree)adaptor.create(string_literal325);
					adaptor.addChild(root_0, string_literal325_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:399:36: '/='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal326=(Token)match(input,78,FOLLOW_78_in_assignment_operator5845); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal326_tree = (CommonTree)adaptor.create(string_literal326);
					adaptor.addChild(root_0, string_literal326_tree);
					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:399:43: '%='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal327=(Token)match(input,64,FOLLOW_64_in_assignment_operator5849); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal327_tree = (CommonTree)adaptor.create(string_literal327);
					adaptor.addChild(root_0, string_literal327_tree);
					}

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:399:50: '&='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal328=(Token)match(input,67,FOLLOW_67_in_assignment_operator5853); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal328_tree = (CommonTree)adaptor.create(string_literal328);
					adaptor.addChild(root_0, string_literal328_tree);
					}

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:399:57: '|='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal329=(Token)match(input,199,FOLLOW_199_in_assignment_operator5857); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal329_tree = (CommonTree)adaptor.create(string_literal329);
					adaptor.addChild(root_0, string_literal329_tree);
					}

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:399:64: '^='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal330=(Token)match(input,94,FOLLOW_94_in_assignment_operator5861); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal330_tree = (CommonTree)adaptor.create(string_literal330);
					adaptor.addChild(root_0, string_literal330_tree);
					}

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:399:71: '<<='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal331=(Token)match(input,83,FOLLOW_83_in_assignment_operator5865); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal331_tree = (CommonTree)adaptor.create(string_literal331);
					adaptor.addChild(root_0, string_literal331_tree);
					}

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:399:79: '>' '>='
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal332=(Token)match(input,GT,FOLLOW_GT_in_assignment_operator5869); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal332_tree = (CommonTree)adaptor.create(char_literal332);
					adaptor.addChild(root_0, char_literal332_tree);
					}

					string_literal333=(Token)match(input,88,FOLLOW_88_in_assignment_operator5871); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal333_tree = (CommonTree)adaptor.create(string_literal333);
					adaptor.addChild(root_0, string_literal333_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 93, assignment_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "assignment_operator"


	public static class pre_increment_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pre_increment_expression"
	// /Users/jeremie/ANTLR/cs.g:400:1: pre_increment_expression : '++' unary_expression ;
	public final csParser.pre_increment_expression_return pre_increment_expression() throws RecognitionException {
		csParser.pre_increment_expression_return retval = new csParser.pre_increment_expression_return();
		retval.start = input.LT(1);
		int pre_increment_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal334=null;
		ParserRuleReturnScope unary_expression335 =null;

		CommonTree string_literal334_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:400:25: ( '++' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:401:9: '++' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal334=(Token)match(input,72,FOLLOW_72_in_pre_increment_expression5887); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal334_tree = (CommonTree)adaptor.create(string_literal334);
			adaptor.addChild(root_0, string_literal334_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_pre_increment_expression5891);
			unary_expression335=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression335.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 94, pre_increment_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pre_increment_expression"


	public static class pre_decrement_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pre_decrement_expression"
	// /Users/jeremie/ANTLR/cs.g:402:1: pre_decrement_expression : '--' unary_expression ;
	public final csParser.pre_decrement_expression_return pre_decrement_expression() throws RecognitionException {
		csParser.pre_decrement_expression_return retval = new csParser.pre_decrement_expression_return();
		retval.start = input.LT(1);
		int pre_decrement_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal336=null;
		ParserRuleReturnScope unary_expression337 =null;

		CommonTree string_literal336_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:402:25: ( '--' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:403:9: '--' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal336=(Token)match(input,75,FOLLOW_75_in_pre_decrement_expression5907); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal336_tree = (CommonTree)adaptor.create(string_literal336);
			adaptor.addChild(root_0, string_literal336_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_pre_decrement_expression5911);
			unary_expression337=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression337.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 95, pre_decrement_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pre_decrement_expression"


	public static class pointer_indirection_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "pointer_indirection_expression"
	// /Users/jeremie/ANTLR/cs.g:404:1: pointer_indirection_expression : '*' unary_expression ;
	public final csParser.pointer_indirection_expression_return pointer_indirection_expression() throws RecognitionException {
		csParser.pointer_indirection_expression_return retval = new csParser.pointer_indirection_expression_return();
		retval.start = input.LT(1);
		int pointer_indirection_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal338=null;
		ParserRuleReturnScope unary_expression339 =null;

		CommonTree char_literal338_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:404:31: ( '*' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:405:9: '*' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal338=(Token)match(input,69,FOLLOW_69_in_pointer_indirection_expression5926); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal338_tree = (CommonTree)adaptor.create(char_literal338);
			adaptor.addChild(root_0, char_literal338_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_pointer_indirection_expression5930);
			unary_expression339=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression339.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 96, pointer_indirection_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "pointer_indirection_expression"


	public static class addressof_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "addressof_expression"
	// /Users/jeremie/ANTLR/cs.g:406:1: addressof_expression : '&' unary_expression ;
	public final csParser.addressof_expression_return addressof_expression() throws RecognitionException {
		csParser.addressof_expression_return retval = new csParser.addressof_expression_return();
		retval.start = input.LT(1);
		int addressof_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal340=null;
		ParserRuleReturnScope unary_expression341 =null;

		CommonTree char_literal340_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:406:21: ( '&' unary_expression )
			// /Users/jeremie/ANTLR/cs.g:407:9: '&' unary_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal340=(Token)match(input,66,FOLLOW_66_in_addressof_expression5945); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal340_tree = (CommonTree)adaptor.create(char_literal340);
			adaptor.addChild(root_0, char_literal340_tree);
			}

			pushFollow(FOLLOW_unary_expression_in_addressof_expression5949);
			unary_expression341=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression341.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 97, addressof_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "addressof_expression"


	public static class non_assignment_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_assignment_expression"
	// /Users/jeremie/ANTLR/cs.g:409:1: non_assignment_expression : ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression );
	public final csParser.non_assignment_expression_return non_assignment_expression() throws RecognitionException {
		csParser.non_assignment_expression_return retval = new csParser.non_assignment_expression_return();
		retval.start = input.LT(1);
		int non_assignment_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope lambda_expression342 =null;
		ParserRuleReturnScope query_expression343 =null;
		ParserRuleReturnScope conditional_expression344 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:409:26: ( ( anonymous_function_signature '=>' )=> lambda_expression | ( query_expression )=> query_expression | conditional_expression )
			int alt109=3;
			switch ( input.LA(1) ) {
			case 68:
				{
				int LA109_1 = input.LA(2);
				if ( (synpred21_cs()) ) {
					alt109=1;
				}
				else if ( (true) ) {
					alt109=3;
				}

				}
				break;
			case 132:
				{
				int LA109_2 = input.LA(2);
				if ( (synpred21_cs()) ) {
					alt109=1;
				}
				else if ( (synpred22_cs()) ) {
					alt109=2;
				}
				else if ( (true) ) {
					alt109=3;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA109_3 = input.LA(2);
				if ( (synpred21_cs()) ) {
					alt109=1;
				}
				else if ( (true) ) {
					alt109=3;
				}

				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 69:
			case 71:
			case 72:
			case 75:
			case 102:
			case 103:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 119:
			case 129:
			case 138:
			case 146:
			case 150:
			case 151:
			case 169:
			case 173:
			case 174:
			case 177:
			case 180:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 202:
				{
				alt109=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 109, 0, input);
				throw nvae;
			}
			switch (alt109) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:411:9: ( anonymous_function_signature '=>' )=> lambda_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_lambda_expression_in_non_assignment_expression5991);
					lambda_expression342=lambda_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, lambda_expression342.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:412:11: ( query_expression )=> query_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_query_expression_in_non_assignment_expression6009);
					query_expression343=query_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_expression343.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:413:11: conditional_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_conditional_expression_in_non_assignment_expression6022);
					conditional_expression344=conditional_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_expression344.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 98, non_assignment_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_assignment_expression"


	public static class multiplicative_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "multiplicative_expression"
	// /Users/jeremie/ANTLR/cs.g:420:1: multiplicative_expression : unary_expression ( ( '*' | '/' | '%' ) unary_expression )* ;
	public final csParser.multiplicative_expression_return multiplicative_expression() throws RecognitionException {
		csParser.multiplicative_expression_return retval = new csParser.multiplicative_expression_return();
		retval.start = input.LT(1);
		int multiplicative_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set346=null;
		ParserRuleReturnScope unary_expression345 =null;
		ParserRuleReturnScope unary_expression347 =null;

		CommonTree set346_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:420:26: ( unary_expression ( ( '*' | '/' | '%' ) unary_expression )* )
			// /Users/jeremie/ANTLR/cs.g:421:9: unary_expression ( ( '*' | '/' | '%' ) unary_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_unary_expression_in_multiplicative_expression6050);
			unary_expression345=unary_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression345.getTree());

			// /Users/jeremie/ANTLR/cs.g:421:26: ( ( '*' | '/' | '%' ) unary_expression )*
			loop110:
			while (true) {
				int alt110=2;
				int LA110_0 = input.LA(1);
				if ( (LA110_0==63||LA110_0==69||LA110_0==77) ) {
					alt110=1;
				}

				switch (alt110) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:421:29: ( '*' | '/' | '%' ) unary_expression
					{
					set346=input.LT(1);
					if ( input.LA(1)==63||input.LA(1)==69||input.LA(1)==77 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set346));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_unary_expression_in_multiplicative_expression6065);
					unary_expression347=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression347.getTree());

					}
					break;

				default :
					break loop110;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 99, multiplicative_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "multiplicative_expression"


	public static class additive_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "additive_expression"
	// /Users/jeremie/ANTLR/cs.g:422:1: additive_expression : multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* ;
	public final csParser.additive_expression_return additive_expression() throws RecognitionException {
		csParser.additive_expression_return retval = new csParser.additive_expression_return();
		retval.start = input.LT(1);
		int additive_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set349=null;
		ParserRuleReturnScope multiplicative_expression348 =null;
		ParserRuleReturnScope multiplicative_expression350 =null;

		CommonTree set349_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:422:20: ( multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )* )
			// /Users/jeremie/ANTLR/cs.g:423:9: multiplicative_expression ( ( '+' | '-' ) multiplicative_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_multiplicative_expression_in_additive_expression6089);
			multiplicative_expression348=multiplicative_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression348.getTree());

			// /Users/jeremie/ANTLR/cs.g:423:35: ( ( '+' | '-' ) multiplicative_expression )*
			loop111:
			while (true) {
				int alt111=2;
				int LA111_0 = input.LA(1);
				if ( (LA111_0==MINUS||LA111_0==71) ) {
					alt111=1;
				}

				switch (alt111) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:423:36: ( '+' | '-' ) multiplicative_expression
					{
					set349=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==71 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set349));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_multiplicative_expression_in_additive_expression6100);
					multiplicative_expression350=multiplicative_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, multiplicative_expression350.getTree());

					}
					break;

				default :
					break loop111;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 100, additive_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "additive_expression"


	public static class shift_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "shift_expression"
	// /Users/jeremie/ANTLR/cs.g:425:1: shift_expression : additive_expression ( ( '<<' | '>' '>' ) additive_expression )* ;
	public final csParser.shift_expression_return shift_expression() throws RecognitionException {
		csParser.shift_expression_return retval = new csParser.shift_expression_return();
		retval.start = input.LT(1);
		int shift_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal352=null;
		Token char_literal353=null;
		Token char_literal354=null;
		ParserRuleReturnScope additive_expression351 =null;
		ParserRuleReturnScope additive_expression355 =null;

		CommonTree string_literal352_tree=null;
		CommonTree char_literal353_tree=null;
		CommonTree char_literal354_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:425:17: ( additive_expression ( ( '<<' | '>' '>' ) additive_expression )* )
			// /Users/jeremie/ANTLR/cs.g:426:9: additive_expression ( ( '<<' | '>' '>' ) additive_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_additive_expression_in_shift_expression6118);
			additive_expression351=additive_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression351.getTree());

			// /Users/jeremie/ANTLR/cs.g:426:29: ( ( '<<' | '>' '>' ) additive_expression )*
			loop113:
			while (true) {
				int alt113=2;
				int LA113_0 = input.LA(1);
				if ( (LA113_0==GT) ) {
					int LA113_1 = input.LA(2);
					if ( (LA113_1==GT) ) {
						alt113=1;
					}

				}
				else if ( (LA113_0==82) ) {
					alt113=1;
				}

				switch (alt113) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:426:30: ( '<<' | '>' '>' ) additive_expression
					{
					// /Users/jeremie/ANTLR/cs.g:426:30: ( '<<' | '>' '>' )
					int alt112=2;
					int LA112_0 = input.LA(1);
					if ( (LA112_0==82) ) {
						alt112=1;
					}
					else if ( (LA112_0==GT) ) {
						alt112=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 112, 0, input);
						throw nvae;
					}

					switch (alt112) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:426:31: '<<'
							{
							string_literal352=(Token)match(input,82,FOLLOW_82_in_shift_expression6122); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal352_tree = (CommonTree)adaptor.create(string_literal352);
							adaptor.addChild(root_0, string_literal352_tree);
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:426:36: '>' '>'
							{
							char_literal353=(Token)match(input,GT,FOLLOW_GT_in_shift_expression6124); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal353_tree = (CommonTree)adaptor.create(char_literal353);
							adaptor.addChild(root_0, char_literal353_tree);
							}

							char_literal354=(Token)match(input,GT,FOLLOW_GT_in_shift_expression6126); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal354_tree = (CommonTree)adaptor.create(char_literal354);
							adaptor.addChild(root_0, char_literal354_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_additive_expression_in_shift_expression6129);
					additive_expression355=additive_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, additive_expression355.getTree());

					}
					break;

				default :
					break loop113;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 101, shift_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "shift_expression"


	public static class relational_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "relational_expression"
	// /Users/jeremie/ANTLR/cs.g:427:1: relational_expression : shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* ;
	public final csParser.relational_expression_return relational_expression() throws RecognitionException {
		csParser.relational_expression_return retval = new csParser.relational_expression_return();
		retval.start = input.LT(1);
		int relational_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set357=null;
		Token set359=null;
		ParserRuleReturnScope shift_expression356 =null;
		ParserRuleReturnScope shift_expression358 =null;
		ParserRuleReturnScope non_nullable_type360 =null;

		CommonTree set357_tree=null;
		CommonTree set359_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:427:22: ( shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )* )
			// /Users/jeremie/ANTLR/cs.g:428:9: shift_expression ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_shift_expression_in_relational_expression6146);
			shift_expression356=shift_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression356.getTree());

			// /Users/jeremie/ANTLR/cs.g:429:17: ( ( ( '<' | '>' | '>=' | '<=' ) shift_expression ) | ( ( 'is' | 'as' ) non_nullable_type ) )*
			loop114:
			while (true) {
				int alt114=3;
				int LA114_0 = input.LA(1);
				if ( (LA114_0==GT||LA114_0==81||LA114_0==84||LA114_0==88) ) {
					alt114=1;
				}
				else if ( (LA114_0==99||LA114_0==142) ) {
					alt114=2;
				}

				switch (alt114) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:429:26: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					{
					// /Users/jeremie/ANTLR/cs.g:429:26: ( ( '<' | '>' | '>=' | '<=' ) shift_expression )
					// /Users/jeremie/ANTLR/cs.g:429:27: ( '<' | '>' | '>=' | '<=' ) shift_expression
					{
					set357=input.LT(1);
					if ( input.LA(1)==GT||input.LA(1)==81||input.LA(1)==84||input.LA(1)==88 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set357));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_shift_expression_in_relational_expression6191);
					shift_expression358=shift_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, shift_expression358.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:430:27: ( ( 'is' | 'as' ) non_nullable_type )
					{
					// /Users/jeremie/ANTLR/cs.g:430:27: ( ( 'is' | 'as' ) non_nullable_type )
					// /Users/jeremie/ANTLR/cs.g:430:28: ( 'is' | 'as' ) non_nullable_type
					{
					set359=input.LT(1);
					if ( input.LA(1)==99||input.LA(1)==142 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set359));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_non_nullable_type_in_relational_expression6229);
					non_nullable_type360=non_nullable_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_nullable_type360.getTree());

					}

					}
					break;

				default :
					break loop114;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 102, relational_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "relational_expression"


	public static class equality_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "equality_expression"
	// /Users/jeremie/ANTLR/cs.g:432:1: equality_expression : relational_expression ( ( '==' | '!=' ) relational_expression )* ;
	public final csParser.equality_expression_return equality_expression() throws RecognitionException {
		csParser.equality_expression_return retval = new csParser.equality_expression_return();
		retval.start = input.LT(1);
		int equality_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set362=null;
		ParserRuleReturnScope relational_expression361 =null;
		ParserRuleReturnScope relational_expression363 =null;

		CommonTree set362_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:432:20: ( relational_expression ( ( '==' | '!=' ) relational_expression )* )
			// /Users/jeremie/ANTLR/cs.g:433:9: relational_expression ( ( '==' | '!=' ) relational_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_relational_expression_in_equality_expression6264);
			relational_expression361=relational_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression361.getTree());

			// /Users/jeremie/ANTLR/cs.g:434:12: ( ( '==' | '!=' ) relational_expression )*
			loop115:
			while (true) {
				int alt115=2;
				int LA115_0 = input.LA(1);
				if ( (LA115_0==62||LA115_0==86) ) {
					alt115=1;
				}

				switch (alt115) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:434:13: ( '==' | '!=' ) relational_expression
					{
					set362=input.LT(1);
					if ( input.LA(1)==62||input.LA(1)==86 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set362));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_relational_expression_in_equality_expression6286);
					relational_expression363=relational_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_expression363.getTree());

					}
					break;

				default :
					break loop115;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 103, equality_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "equality_expression"


	public static class and_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "and_expression"
	// /Users/jeremie/ANTLR/cs.g:435:1: and_expression : equality_expression ( '&' equality_expression )* ;
	public final csParser.and_expression_return and_expression() throws RecognitionException {
		csParser.and_expression_return retval = new csParser.and_expression_return();
		retval.start = input.LT(1);
		int and_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal365=null;
		ParserRuleReturnScope equality_expression364 =null;
		ParserRuleReturnScope equality_expression366 =null;

		CommonTree char_literal365_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:435:15: ( equality_expression ( '&' equality_expression )* )
			// /Users/jeremie/ANTLR/cs.g:436:9: equality_expression ( '&' equality_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_equality_expression_in_and_expression6303);
			equality_expression364=equality_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression364.getTree());

			// /Users/jeremie/ANTLR/cs.g:436:29: ( '&' equality_expression )*
			loop116:
			while (true) {
				int alt116=2;
				int LA116_0 = input.LA(1);
				if ( (LA116_0==66) ) {
					alt116=1;
				}

				switch (alt116) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:436:30: '&' equality_expression
					{
					char_literal365=(Token)match(input,66,FOLLOW_66_in_and_expression6306); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal365_tree = (CommonTree)adaptor.create(char_literal365);
					adaptor.addChild(root_0, char_literal365_tree);
					}

					pushFollow(FOLLOW_equality_expression_in_and_expression6310);
					equality_expression366=equality_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, equality_expression366.getTree());

					}
					break;

				default :
					break loop116;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 104, and_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "and_expression"


	public static class exclusive_or_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "exclusive_or_expression"
	// /Users/jeremie/ANTLR/cs.g:437:1: exclusive_or_expression : and_expression ( '^' and_expression )* ;
	public final csParser.exclusive_or_expression_return exclusive_or_expression() throws RecognitionException {
		csParser.exclusive_or_expression_return retval = new csParser.exclusive_or_expression_return();
		retval.start = input.LT(1);
		int exclusive_or_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal368=null;
		ParserRuleReturnScope and_expression367 =null;
		ParserRuleReturnScope and_expression369 =null;

		CommonTree char_literal368_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:437:24: ( and_expression ( '^' and_expression )* )
			// /Users/jeremie/ANTLR/cs.g:438:9: and_expression ( '^' and_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_and_expression_in_exclusive_or_expression6327);
			and_expression367=and_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression367.getTree());

			// /Users/jeremie/ANTLR/cs.g:438:24: ( '^' and_expression )*
			loop117:
			while (true) {
				int alt117=2;
				int LA117_0 = input.LA(1);
				if ( (LA117_0==93) ) {
					alt117=1;
				}

				switch (alt117) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:438:25: '^' and_expression
					{
					char_literal368=(Token)match(input,93,FOLLOW_93_in_exclusive_or_expression6330); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal368_tree = (CommonTree)adaptor.create(char_literal368);
					adaptor.addChild(root_0, char_literal368_tree);
					}

					pushFollow(FOLLOW_and_expression_in_exclusive_or_expression6334);
					and_expression369=and_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, and_expression369.getTree());

					}
					break;

				default :
					break loop117;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 105, exclusive_or_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "exclusive_or_expression"


	public static class inclusive_or_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "inclusive_or_expression"
	// /Users/jeremie/ANTLR/cs.g:439:1: inclusive_or_expression : exclusive_or_expression ( '|' exclusive_or_expression )* ;
	public final csParser.inclusive_or_expression_return inclusive_or_expression() throws RecognitionException {
		csParser.inclusive_or_expression_return retval = new csParser.inclusive_or_expression_return();
		retval.start = input.LT(1);
		int inclusive_or_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal371=null;
		ParserRuleReturnScope exclusive_or_expression370 =null;
		ParserRuleReturnScope exclusive_or_expression372 =null;

		CommonTree char_literal371_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:439:24: ( exclusive_or_expression ( '|' exclusive_or_expression )* )
			// /Users/jeremie/ANTLR/cs.g:440:9: exclusive_or_expression ( '|' exclusive_or_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression6351);
			exclusive_or_expression370=exclusive_or_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression370.getTree());

			// /Users/jeremie/ANTLR/cs.g:440:35: ( '|' exclusive_or_expression )*
			loop118:
			while (true) {
				int alt118=2;
				int LA118_0 = input.LA(1);
				if ( (LA118_0==198) ) {
					alt118=1;
				}

				switch (alt118) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:440:36: '|' exclusive_or_expression
					{
					char_literal371=(Token)match(input,198,FOLLOW_198_in_inclusive_or_expression6356); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal371_tree = (CommonTree)adaptor.create(char_literal371);
					adaptor.addChild(root_0, char_literal371_tree);
					}

					pushFollow(FOLLOW_exclusive_or_expression_in_inclusive_or_expression6360);
					exclusive_or_expression372=exclusive_or_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exclusive_or_expression372.getTree());

					}
					break;

				default :
					break loop118;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 106, inclusive_or_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "inclusive_or_expression"


	public static class conditional_and_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conditional_and_expression"
	// /Users/jeremie/ANTLR/cs.g:441:1: conditional_and_expression : inclusive_or_expression ( '&&' inclusive_or_expression )* ;
	public final csParser.conditional_and_expression_return conditional_and_expression() throws RecognitionException {
		csParser.conditional_and_expression_return retval = new csParser.conditional_and_expression_return();
		retval.start = input.LT(1);
		int conditional_and_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal374=null;
		ParserRuleReturnScope inclusive_or_expression373 =null;
		ParserRuleReturnScope inclusive_or_expression375 =null;

		CommonTree string_literal374_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:441:27: ( inclusive_or_expression ( '&&' inclusive_or_expression )* )
			// /Users/jeremie/ANTLR/cs.g:442:9: inclusive_or_expression ( '&&' inclusive_or_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression6377);
			inclusive_or_expression373=inclusive_or_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression373.getTree());

			// /Users/jeremie/ANTLR/cs.g:442:35: ( '&&' inclusive_or_expression )*
			loop119:
			while (true) {
				int alt119=2;
				int LA119_0 = input.LA(1);
				if ( (LA119_0==65) ) {
					alt119=1;
				}

				switch (alt119) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:442:36: '&&' inclusive_or_expression
					{
					string_literal374=(Token)match(input,65,FOLLOW_65_in_conditional_and_expression6382); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal374_tree = (CommonTree)adaptor.create(string_literal374);
					adaptor.addChild(root_0, string_literal374_tree);
					}

					pushFollow(FOLLOW_inclusive_or_expression_in_conditional_and_expression6386);
					inclusive_or_expression375=inclusive_or_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, inclusive_or_expression375.getTree());

					}
					break;

				default :
					break loop119;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 107, conditional_and_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conditional_and_expression"


	public static class conditional_or_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conditional_or_expression"
	// /Users/jeremie/ANTLR/cs.g:443:1: conditional_or_expression : conditional_and_expression ( '||' conditional_and_expression )* ;
	public final csParser.conditional_or_expression_return conditional_or_expression() throws RecognitionException {
		csParser.conditional_or_expression_return retval = new csParser.conditional_or_expression_return();
		retval.start = input.LT(1);
		int conditional_or_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal377=null;
		ParserRuleReturnScope conditional_and_expression376 =null;
		ParserRuleReturnScope conditional_and_expression378 =null;

		CommonTree string_literal377_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:443:26: ( conditional_and_expression ( '||' conditional_and_expression )* )
			// /Users/jeremie/ANTLR/cs.g:444:9: conditional_and_expression ( '||' conditional_and_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression6403);
			conditional_and_expression376=conditional_and_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression376.getTree());

			// /Users/jeremie/ANTLR/cs.g:444:37: ( '||' conditional_and_expression )*
			loop120:
			while (true) {
				int alt120=2;
				int LA120_0 = input.LA(1);
				if ( (LA120_0==200) ) {
					alt120=1;
				}

				switch (alt120) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:444:38: '||' conditional_and_expression
					{
					string_literal377=(Token)match(input,200,FOLLOW_200_in_conditional_or_expression6407); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal377_tree = (CommonTree)adaptor.create(string_literal377);
					adaptor.addChild(root_0, string_literal377_tree);
					}

					pushFollow(FOLLOW_conditional_and_expression_in_conditional_or_expression6411);
					conditional_and_expression378=conditional_and_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_and_expression378.getTree());

					}
					break;

				default :
					break loop120;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 108, conditional_or_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conditional_or_expression"


	public static class null_coalescing_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "null_coalescing_expression"
	// /Users/jeremie/ANTLR/cs.g:446:1: null_coalescing_expression : conditional_or_expression ( '??' conditional_or_expression )* ;
	public final csParser.null_coalescing_expression_return null_coalescing_expression() throws RecognitionException {
		csParser.null_coalescing_expression_return retval = new csParser.null_coalescing_expression_return();
		retval.start = input.LT(1);
		int null_coalescing_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal380=null;
		ParserRuleReturnScope conditional_or_expression379 =null;
		ParserRuleReturnScope conditional_or_expression381 =null;

		CommonTree string_literal380_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:446:27: ( conditional_or_expression ( '??' conditional_or_expression )* )
			// /Users/jeremie/ANTLR/cs.g:447:9: conditional_or_expression ( '??' conditional_or_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression6429);
			conditional_or_expression379=conditional_or_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression379.getTree());

			// /Users/jeremie/ANTLR/cs.g:447:37: ( '??' conditional_or_expression )*
			loop121:
			while (true) {
				int alt121=2;
				int LA121_0 = input.LA(1);
				if ( (LA121_0==90) ) {
					alt121=1;
				}

				switch (alt121) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:447:38: '??' conditional_or_expression
					{
					string_literal380=(Token)match(input,90,FOLLOW_90_in_null_coalescing_expression6434); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal380_tree = (CommonTree)adaptor.create(string_literal380);
					adaptor.addChild(root_0, string_literal380_tree);
					}

					pushFollow(FOLLOW_conditional_or_expression_in_null_coalescing_expression6438);
					conditional_or_expression381=conditional_or_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conditional_or_expression381.getTree());

					}
					break;

				default :
					break loop121;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 109, null_coalescing_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "null_coalescing_expression"


	public static class conditional_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conditional_expression"
	// /Users/jeremie/ANTLR/cs.g:448:1: conditional_expression : null_coalescing_expression ( '?' expression ':' expression )? ;
	public final csParser.conditional_expression_return conditional_expression() throws RecognitionException {
		csParser.conditional_expression_return retval = new csParser.conditional_expression_return();
		retval.start = input.LT(1);
		int conditional_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal383=null;
		Token char_literal385=null;
		ParserRuleReturnScope null_coalescing_expression382 =null;
		ParserRuleReturnScope expression384 =null;
		ParserRuleReturnScope expression386 =null;

		CommonTree char_literal383_tree=null;
		CommonTree char_literal385_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:448:23: ( null_coalescing_expression ( '?' expression ':' expression )? )
			// /Users/jeremie/ANTLR/cs.g:449:9: null_coalescing_expression ( '?' expression ':' expression )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_null_coalescing_expression_in_conditional_expression6455);
			null_coalescing_expression382=null_coalescing_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, null_coalescing_expression382.getTree());

			// /Users/jeremie/ANTLR/cs.g:449:38: ( '?' expression ':' expression )?
			int alt122=2;
			int LA122_0 = input.LA(1);
			if ( (LA122_0==89) ) {
				alt122=1;
			}
			switch (alt122) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:449:39: '?' expression ':' expression
					{
					char_literal383=(Token)match(input,89,FOLLOW_89_in_conditional_expression6460); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal383_tree = (CommonTree)adaptor.create(char_literal383);
					adaptor.addChild(root_0, char_literal383_tree);
					}

					pushFollow(FOLLOW_expression_in_conditional_expression6464);
					expression384=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression384.getTree());

					char_literal385=(Token)match(input,79,FOLLOW_79_in_conditional_expression6468); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal385_tree = (CommonTree)adaptor.create(char_literal385);
					adaptor.addChild(root_0, char_literal385_tree);
					}

					pushFollow(FOLLOW_expression_in_conditional_expression6472);
					expression386=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression386.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 110, conditional_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conditional_expression"


	public static class lambda_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "lambda_expression"
	// /Users/jeremie/ANTLR/cs.g:454:1: lambda_expression : anonymous_function_signature '=>' anonymous_function_body ;
	public final csParser.lambda_expression_return lambda_expression() throws RecognitionException {
		csParser.lambda_expression_return retval = new csParser.lambda_expression_return();
		retval.start = input.LT(1);
		int lambda_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal388=null;
		ParserRuleReturnScope anonymous_function_signature387 =null;
		ParserRuleReturnScope anonymous_function_body389 =null;

		CommonTree string_literal388_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:454:18: ( anonymous_function_signature '=>' anonymous_function_body )
			// /Users/jeremie/ANTLR/cs.g:455:9: anonymous_function_signature '=>' anonymous_function_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_anonymous_function_signature_in_lambda_expression6499);
			anonymous_function_signature387=anonymous_function_signature();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_signature387.getTree());

			string_literal388=(Token)match(input,87,FOLLOW_87_in_lambda_expression6503); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal388_tree = (CommonTree)adaptor.create(string_literal388);
			adaptor.addChild(root_0, string_literal388_tree);
			}

			pushFollow(FOLLOW_anonymous_function_body_in_lambda_expression6507);
			anonymous_function_body389=anonymous_function_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, anonymous_function_body389.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 111, lambda_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "lambda_expression"


	public static class anonymous_function_signature_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_function_signature"
	// /Users/jeremie/ANTLR/cs.g:456:1: anonymous_function_signature : ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list );
	public final csParser.anonymous_function_signature_return anonymous_function_signature() throws RecognitionException {
		csParser.anonymous_function_signature_return retval = new csParser.anonymous_function_signature_return();
		retval.start = input.LT(1);
		int anonymous_function_signature_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal390=null;
		Token char_literal393=null;
		ParserRuleReturnScope explicit_anonymous_function_parameter_list391 =null;
		ParserRuleReturnScope implicit_anonymous_function_parameter_list392 =null;
		ParserRuleReturnScope implicit_anonymous_function_parameter_list394 =null;

		CommonTree char_literal390_tree=null;
		CommonTree char_literal393_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:456:29: ( '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')' | implicit_anonymous_function_parameter_list )
			int alt124=2;
			int LA124_0 = input.LA(1);
			if ( (LA124_0==68) ) {
				alt124=1;
			}
			else if ( (LA124_0==IDENTIFIER||LA124_0==95||(LA124_0 >= 97 && LA124_0 <= 98)||(LA124_0 >= 100 && LA124_0 <= 101)||LA124_0==105||LA124_0==117||LA124_0==120||LA124_0==122||LA124_0==126||LA124_0==132||LA124_0==135||LA124_0==141||(LA124_0 >= 143 && LA124_0 <= 144)||(LA124_0 >= 147 && LA124_0 <= 148)||LA124_0==152||LA124_0==154||LA124_0==157||LA124_0==160||LA124_0==162||LA124_0==167||(LA124_0 >= 171 && LA124_0 <= 172)||LA124_0==183||LA124_0==190||LA124_0==194||LA124_0==196) ) {
				alt124=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 124, 0, input);
				throw nvae;
			}

			switch (alt124) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:457:9: '(' ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )? ')'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal390=(Token)match(input,68,FOLLOW_68_in_anonymous_function_signature6521); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal390_tree = (CommonTree)adaptor.create(char_literal390);
					adaptor.addChild(root_0, char_literal390_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:457:20: ( explicit_anonymous_function_parameter_list | implicit_anonymous_function_parameter_list )?
					int alt123=3;
					int LA123_0 = input.LA(1);
					if ( (LA123_0==103||LA123_0==106||LA123_0==109||LA123_0==114||LA123_0==119||LA123_0==129||LA123_0==138||LA123_0==146||LA123_0==151||LA123_0==155||LA123_0==166||LA123_0==169||LA123_0==173||LA123_0==177||(LA123_0 >= 185 && LA123_0 <= 186)||LA123_0==189||LA123_0==192) ) {
						alt123=1;
					}
					else if ( (LA123_0==IDENTIFIER||LA123_0==95||(LA123_0 >= 97 && LA123_0 <= 98)||(LA123_0 >= 100 && LA123_0 <= 101)||LA123_0==105||LA123_0==117||LA123_0==120||LA123_0==122||LA123_0==126||LA123_0==132||LA123_0==135||LA123_0==141||(LA123_0 >= 143 && LA123_0 <= 144)||(LA123_0 >= 147 && LA123_0 <= 148)||LA123_0==152||LA123_0==154||LA123_0==157||LA123_0==160||LA123_0==162||LA123_0==167||(LA123_0 >= 171 && LA123_0 <= 172)||LA123_0==183||LA123_0==190||LA123_0==194||LA123_0==196) ) {
						int LA123_2 = input.LA(2);
						if ( (LA123_2==DOT||LA123_2==IDENTIFIER||LA123_2==69||(LA123_2 >= 80 && LA123_2 <= 81)||LA123_2==89||LA123_2==91||LA123_2==95||(LA123_2 >= 97 && LA123_2 <= 98)||(LA123_2 >= 100 && LA123_2 <= 101)||LA123_2==105||LA123_2==117||LA123_2==120||LA123_2==122||LA123_2==126||LA123_2==132||LA123_2==135||LA123_2==141||(LA123_2 >= 143 && LA123_2 <= 144)||(LA123_2 >= 147 && LA123_2 <= 148)||LA123_2==152||LA123_2==154||LA123_2==157||LA123_2==160||LA123_2==162||LA123_2==167||(LA123_2 >= 171 && LA123_2 <= 172)||LA123_2==183||LA123_2==190||LA123_2==194||LA123_2==196) ) {
							alt123=1;
						}
						else if ( (LA123_2==RPAREN||LA123_2==74) ) {
							alt123=2;
						}
					}
					switch (alt123) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:457:21: explicit_anonymous_function_parameter_list
							{
							pushFollow(FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature6531);
							explicit_anonymous_function_parameter_list391=explicit_anonymous_function_parameter_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, explicit_anonymous_function_parameter_list391.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:458:19: implicit_anonymous_function_parameter_list
							{
							pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6551);
							implicit_anonymous_function_parameter_list392=implicit_anonymous_function_parameter_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list392.getTree());

							}
							break;

					}

					char_literal393=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_anonymous_function_signature6562); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal393_tree = (CommonTree)adaptor.create(char_literal393);
					adaptor.addChild(root_0, char_literal393_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:459:11: implicit_anonymous_function_parameter_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6574);
					implicit_anonymous_function_parameter_list394=implicit_anonymous_function_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter_list394.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 112, anonymous_function_signature_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_function_signature"


	public static class implicit_anonymous_function_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implicit_anonymous_function_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:461:1: implicit_anonymous_function_parameter_list : implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* ;
	public final csParser.implicit_anonymous_function_parameter_list_return implicit_anonymous_function_parameter_list() throws RecognitionException {
		csParser.implicit_anonymous_function_parameter_list_return retval = new csParser.implicit_anonymous_function_parameter_list_return();
		retval.start = input.LT(1);
		int implicit_anonymous_function_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal396=null;
		ParserRuleReturnScope implicit_anonymous_function_parameter395 =null;
		ParserRuleReturnScope implicit_anonymous_function_parameter397 =null;

		CommonTree char_literal396_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:461:43: ( implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:462:9: implicit_anonymous_function_parameter ( ',' implicit_anonymous_function_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6597);
			implicit_anonymous_function_parameter395=implicit_anonymous_function_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter395.getTree());

			// /Users/jeremie/ANTLR/cs.g:462:49: ( ',' implicit_anonymous_function_parameter )*
			loop125:
			while (true) {
				int alt125=2;
				int LA125_0 = input.LA(1);
				if ( (LA125_0==74) ) {
					alt125=1;
				}

				switch (alt125) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:462:50: ',' implicit_anonymous_function_parameter
					{
					char_literal396=(Token)match(input,74,FOLLOW_74_in_implicit_anonymous_function_parameter_list6602); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal396_tree = (CommonTree)adaptor.create(char_literal396);
					adaptor.addChild(root_0, char_literal396_tree);
					}

					pushFollow(FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6606);
					implicit_anonymous_function_parameter397=implicit_anonymous_function_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, implicit_anonymous_function_parameter397.getTree());

					}
					break;

				default :
					break loop125;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 113, implicit_anonymous_function_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "implicit_anonymous_function_parameter_list"


	public static class implicit_anonymous_function_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "implicit_anonymous_function_parameter"
	// /Users/jeremie/ANTLR/cs.g:463:1: implicit_anonymous_function_parameter : identifier ;
	public final csParser.implicit_anonymous_function_parameter_return implicit_anonymous_function_parameter() throws RecognitionException {
		csParser.implicit_anonymous_function_parameter_return retval = new csParser.implicit_anonymous_function_parameter_return();
		retval.start = input.LT(1);
		int implicit_anonymous_function_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope identifier398 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:463:38: ( identifier )
			// /Users/jeremie/ANTLR/cs.g:464:9: identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_implicit_anonymous_function_parameter6623);
			identifier398=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier398.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 114, implicit_anonymous_function_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "implicit_anonymous_function_parameter"


	public static class anonymous_function_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "anonymous_function_body"
	// /Users/jeremie/ANTLR/cs.g:465:1: anonymous_function_body : ( expression | block );
	public final csParser.anonymous_function_body_return anonymous_function_body() throws RecognitionException {
		csParser.anonymous_function_body_return retval = new csParser.anonymous_function_body_return();
		retval.start = input.LT(1);
		int anonymous_function_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression399 =null;
		ParserRuleReturnScope block400 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:465:24: ( expression | block )
			int alt126=2;
			int LA126_0 = input.LA(1);
			if ( (LA126_0==Character_literal||LA126_0==FALSE||(LA126_0 >= Hex_number && LA126_0 <= IDENTIFIER)||(LA126_0 >= MINUS && LA126_0 <= NUMBER)||LA126_0==Real_literal||LA126_0==STRINGLITERAL||LA126_0==TRUE||LA126_0==Verbatim_string_literal||LA126_0==61||LA126_0==66||(LA126_0 >= 68 && LA126_0 <= 69)||(LA126_0 >= 71 && LA126_0 <= 72)||LA126_0==75||LA126_0==95||(LA126_0 >= 97 && LA126_0 <= 98)||(LA126_0 >= 100 && LA126_0 <= 103)||(LA126_0 >= 105 && LA126_0 <= 106)||(LA126_0 >= 109 && LA126_0 <= 110)||(LA126_0 >= 114 && LA126_0 <= 117)||(LA126_0 >= 119 && LA126_0 <= 120)||LA126_0==122||LA126_0==126||LA126_0==129||LA126_0==132||LA126_0==135||LA126_0==138||LA126_0==141||(LA126_0 >= 143 && LA126_0 <= 144)||(LA126_0 >= 146 && LA126_0 <= 148)||(LA126_0 >= 150 && LA126_0 <= 152)||LA126_0==154||LA126_0==157||LA126_0==160||LA126_0==162||LA126_0==167||LA126_0==169||(LA126_0 >= 171 && LA126_0 <= 174)||LA126_0==177||LA126_0==180||(LA126_0 >= 183 && LA126_0 <= 187)||(LA126_0 >= 189 && LA126_0 <= 190)||LA126_0==194||LA126_0==196||LA126_0==202) ) {
				alt126=1;
			}
			else if ( (LA126_0==SEMI||LA126_0==197) ) {
				alt126=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 126, 0, input);
				throw nvae;
			}

			switch (alt126) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:466:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_anonymous_function_body6637);
					expression399=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression399.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:467:11: block
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_block_in_anonymous_function_body6649);
					block400=block();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, block400.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 115, anonymous_function_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "anonymous_function_body"


	public static class query_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_expression"
	// /Users/jeremie/ANTLR/cs.g:472:1: query_expression : from_clause query_body ;
	public final csParser.query_expression_return query_expression() throws RecognitionException {
		csParser.query_expression_return retval = new csParser.query_expression_return();
		retval.start = input.LT(1);
		int query_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope from_clause401 =null;
		ParserRuleReturnScope query_body402 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:472:17: ( from_clause query_body )
			// /Users/jeremie/ANTLR/cs.g:473:9: from_clause query_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_from_clause_in_query_expression6668);
			from_clause401=from_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause401.getTree());

			pushFollow(FOLLOW_query_body_in_query_expression6672);
			query_body402=query_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body402.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 116, query_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_expression"


	public static class query_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_body"
	// /Users/jeremie/ANTLR/cs.g:474:1: query_body : ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? ;
	public final csParser.query_body_return query_body() throws RecognitionException {
		csParser.query_body_return retval = new csParser.query_body_return();
		retval.start = input.LT(1);
		int query_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope query_body_clauses403 =null;
		ParserRuleReturnScope select_or_group_clause404 =null;
		ParserRuleReturnScope query_continuation405 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:474:11: ( ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )? )
			// /Users/jeremie/ANTLR/cs.g:476:9: ( query_body_clauses )? select_or_group_clause ( ( 'into' )=> query_continuation )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:476:9: ( query_body_clauses )?
			int alt127=2;
			int LA127_0 = input.LA(1);
			if ( (LA127_0==132||(LA127_0 >= 143 && LA127_0 <= 144)||LA127_0==154||LA127_0==194) ) {
				alt127=1;
			}
			switch (alt127) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:476:9: query_body_clauses
					{
					pushFollow(FOLLOW_query_body_clauses_in_query_body6696);
					query_body_clauses403=query_body_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clauses403.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_select_or_group_clause_in_query_body6701);
			select_or_group_clause404=select_or_group_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_or_group_clause404.getTree());

			// /Users/jeremie/ANTLR/cs.g:476:56: ( ( 'into' )=> query_continuation )?
			int alt128=2;
			int LA128_0 = input.LA(1);
			if ( (LA128_0==141) ) {
				int LA128_1 = input.LA(2);
				if ( (synpred23_cs()) ) {
					alt128=1;
				}
			}
			switch (alt128) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:476:57: ( 'into' )=> query_continuation
					{
					pushFollow(FOLLOW_query_continuation_in_query_body6712);
					query_continuation405=query_continuation();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_continuation405.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 117, query_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_body"


	public static class query_continuation_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_continuation"
	// /Users/jeremie/ANTLR/cs.g:477:1: query_continuation : 'into' identifier query_body ;
	public final csParser.query_continuation_return query_continuation() throws RecognitionException {
		csParser.query_continuation_return retval = new csParser.query_continuation_return();
		retval.start = input.LT(1);
		int query_continuation_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal406=null;
		ParserRuleReturnScope identifier407 =null;
		ParserRuleReturnScope query_body408 =null;

		CommonTree string_literal406_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:477:19: ( 'into' identifier query_body )
			// /Users/jeremie/ANTLR/cs.g:478:9: 'into' identifier query_body
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal406=(Token)match(input,141,FOLLOW_141_in_query_continuation6729); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal406_tree = (CommonTree)adaptor.create(string_literal406);
			adaptor.addChild(root_0, string_literal406_tree);
			}

			pushFollow(FOLLOW_identifier_in_query_continuation6733);
			identifier407=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier407.getTree());

			pushFollow(FOLLOW_query_body_in_query_continuation6737);
			query_body408=query_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body408.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 118, query_continuation_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_continuation"


	public static class query_body_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_body_clauses"
	// /Users/jeremie/ANTLR/cs.g:479:1: query_body_clauses : ( query_body_clause )+ ;
	public final csParser.query_body_clauses_return query_body_clauses() throws RecognitionException {
		csParser.query_body_clauses_return retval = new csParser.query_body_clauses_return();
		retval.start = input.LT(1);
		int query_body_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope query_body_clause409 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:479:19: ( ( query_body_clause )+ )
			// /Users/jeremie/ANTLR/cs.g:480:9: ( query_body_clause )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:480:9: ( query_body_clause )+
			int cnt129=0;
			loop129:
			while (true) {
				int alt129=2;
				int LA129_0 = input.LA(1);
				if ( (LA129_0==132||(LA129_0 >= 143 && LA129_0 <= 144)||LA129_0==154||LA129_0==194) ) {
					alt129=1;
				}

				switch (alt129) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:480:9: query_body_clause
					{
					pushFollow(FOLLOW_query_body_clause_in_query_body_clauses6751);
					query_body_clause409=query_body_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, query_body_clause409.getTree());

					}
					break;

				default :
					if ( cnt129 >= 1 ) break loop129;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(129, input);
					throw eee;
				}
				cnt129++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 119, query_body_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_body_clauses"


	public static class query_body_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "query_body_clause"
	// /Users/jeremie/ANTLR/cs.g:481:1: query_body_clause : ( from_clause | let_clause | where_clause | join_clause | orderby_clause );
	public final csParser.query_body_clause_return query_body_clause() throws RecognitionException {
		csParser.query_body_clause_return retval = new csParser.query_body_clause_return();
		retval.start = input.LT(1);
		int query_body_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope from_clause410 =null;
		ParserRuleReturnScope let_clause411 =null;
		ParserRuleReturnScope where_clause412 =null;
		ParserRuleReturnScope join_clause413 =null;
		ParserRuleReturnScope orderby_clause414 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:481:18: ( from_clause | let_clause | where_clause | join_clause | orderby_clause )
			int alt130=5;
			switch ( input.LA(1) ) {
			case 132:
				{
				alt130=1;
				}
				break;
			case 144:
				{
				alt130=2;
				}
				break;
			case 194:
				{
				alt130=3;
				}
				break;
			case 143:
				{
				alt130=4;
				}
				break;
			case 154:
				{
				alt130=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 130, 0, input);
				throw nvae;
			}
			switch (alt130) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:482:9: from_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_from_clause_in_query_body_clause6767);
					from_clause410=from_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, from_clause410.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:483:11: let_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_let_clause_in_query_body_clause6779);
					let_clause411=let_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, let_clause411.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:484:11: where_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_where_clause_in_query_body_clause6791);
					where_clause412=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause412.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:485:11: join_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_join_clause_in_query_body_clause6803);
					join_clause413=join_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, join_clause413.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:486:11: orderby_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_orderby_clause_in_query_body_clause6815);
					orderby_clause414=orderby_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause414.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 120, query_body_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "query_body_clause"


	public static class from_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "from_clause"
	// /Users/jeremie/ANTLR/cs.g:487:1: from_clause : 'from' ( type )? identifier 'in' expression ;
	public final csParser.from_clause_return from_clause() throws RecognitionException {
		csParser.from_clause_return retval = new csParser.from_clause_return();
		retval.start = input.LT(1);
		int from_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal415=null;
		Token string_literal418=null;
		ParserRuleReturnScope type416 =null;
		ParserRuleReturnScope identifier417 =null;
		ParserRuleReturnScope expression419 =null;

		CommonTree string_literal415_tree=null;
		CommonTree string_literal418_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:487:12: ( 'from' ( type )? identifier 'in' expression )
			// /Users/jeremie/ANTLR/cs.g:488:9: 'from' ( type )? identifier 'in' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal415=(Token)match(input,132,FOLLOW_132_in_from_clause6829); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal415_tree = (CommonTree)adaptor.create(string_literal415);
			adaptor.addChild(root_0, string_literal415_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:488:18: ( type )?
			int alt131=2;
			int LA131_0 = input.LA(1);
			if ( (LA131_0==103||LA131_0==106||LA131_0==109||LA131_0==114||LA131_0==119||LA131_0==129||LA131_0==138||LA131_0==146||LA131_0==151||LA131_0==169||LA131_0==173||LA131_0==177||(LA131_0 >= 185 && LA131_0 <= 186)||LA131_0==189||LA131_0==192) ) {
				alt131=1;
			}
			else if ( (LA131_0==IDENTIFIER||LA131_0==95||(LA131_0 >= 97 && LA131_0 <= 98)||(LA131_0 >= 100 && LA131_0 <= 101)||LA131_0==105||LA131_0==117||LA131_0==120||LA131_0==122||LA131_0==126||LA131_0==132||LA131_0==135||LA131_0==141||(LA131_0 >= 143 && LA131_0 <= 144)||(LA131_0 >= 147 && LA131_0 <= 148)||LA131_0==152||LA131_0==154||LA131_0==157||LA131_0==160||LA131_0==162||LA131_0==167||(LA131_0 >= 171 && LA131_0 <= 172)||LA131_0==183||LA131_0==190||LA131_0==194||LA131_0==196) ) {
				int LA131_2 = input.LA(2);
				if ( (LA131_2==DOT||LA131_2==IDENTIFIER||LA131_2==69||(LA131_2 >= 80 && LA131_2 <= 81)||LA131_2==89||LA131_2==91||LA131_2==95||(LA131_2 >= 97 && LA131_2 <= 98)||(LA131_2 >= 100 && LA131_2 <= 101)||LA131_2==105||LA131_2==117||LA131_2==120||LA131_2==122||LA131_2==126||LA131_2==132||LA131_2==135||LA131_2==141||(LA131_2 >= 143 && LA131_2 <= 144)||(LA131_2 >= 147 && LA131_2 <= 148)||LA131_2==152||LA131_2==154||LA131_2==157||LA131_2==160||LA131_2==162||LA131_2==167||(LA131_2 >= 171 && LA131_2 <= 172)||LA131_2==183||LA131_2==190||LA131_2==194||LA131_2==196) ) {
					alt131=1;
				}
			}
			switch (alt131) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:488:18: type
					{
					pushFollow(FOLLOW_type_in_from_clause6833);
					type416=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type416.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_identifier_in_from_clause6838);
			identifier417=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier417.getTree());

			string_literal418=(Token)match(input,137,FOLLOW_137_in_from_clause6842); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal418_tree = (CommonTree)adaptor.create(string_literal418);
			adaptor.addChild(root_0, string_literal418_tree);
			}

			pushFollow(FOLLOW_expression_in_from_clause6846);
			expression419=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression419.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 121, from_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "from_clause"


	public static class join_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "join_clause"
	// /Users/jeremie/ANTLR/cs.g:489:1: join_clause : 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? ;
	public final csParser.join_clause_return join_clause() throws RecognitionException {
		csParser.join_clause_return retval = new csParser.join_clause_return();
		retval.start = input.LT(1);
		int join_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal420=null;
		Token string_literal423=null;
		Token string_literal425=null;
		Token string_literal427=null;
		Token string_literal429=null;
		ParserRuleReturnScope type421 =null;
		ParserRuleReturnScope identifier422 =null;
		ParserRuleReturnScope expression424 =null;
		ParserRuleReturnScope expression426 =null;
		ParserRuleReturnScope expression428 =null;
		ParserRuleReturnScope identifier430 =null;

		CommonTree string_literal420_tree=null;
		CommonTree string_literal423_tree=null;
		CommonTree string_literal425_tree=null;
		CommonTree string_literal427_tree=null;
		CommonTree string_literal429_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:489:12: ( 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )? )
			// /Users/jeremie/ANTLR/cs.g:490:9: 'join' ( type )? identifier 'in' expression 'on' expression 'equals' expression ( 'into' identifier )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal420=(Token)match(input,143,FOLLOW_143_in_join_clause6861); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal420_tree = (CommonTree)adaptor.create(string_literal420);
			adaptor.addChild(root_0, string_literal420_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:490:18: ( type )?
			int alt132=2;
			int LA132_0 = input.LA(1);
			if ( (LA132_0==103||LA132_0==106||LA132_0==109||LA132_0==114||LA132_0==119||LA132_0==129||LA132_0==138||LA132_0==146||LA132_0==151||LA132_0==169||LA132_0==173||LA132_0==177||(LA132_0 >= 185 && LA132_0 <= 186)||LA132_0==189||LA132_0==192) ) {
				alt132=1;
			}
			else if ( (LA132_0==IDENTIFIER||LA132_0==95||(LA132_0 >= 97 && LA132_0 <= 98)||(LA132_0 >= 100 && LA132_0 <= 101)||LA132_0==105||LA132_0==117||LA132_0==120||LA132_0==122||LA132_0==126||LA132_0==132||LA132_0==135||LA132_0==141||(LA132_0 >= 143 && LA132_0 <= 144)||(LA132_0 >= 147 && LA132_0 <= 148)||LA132_0==152||LA132_0==154||LA132_0==157||LA132_0==160||LA132_0==162||LA132_0==167||(LA132_0 >= 171 && LA132_0 <= 172)||LA132_0==183||LA132_0==190||LA132_0==194||LA132_0==196) ) {
				int LA132_2 = input.LA(2);
				if ( (LA132_2==DOT||LA132_2==IDENTIFIER||LA132_2==69||(LA132_2 >= 80 && LA132_2 <= 81)||LA132_2==89||LA132_2==91||LA132_2==95||(LA132_2 >= 97 && LA132_2 <= 98)||(LA132_2 >= 100 && LA132_2 <= 101)||LA132_2==105||LA132_2==117||LA132_2==120||LA132_2==122||LA132_2==126||LA132_2==132||LA132_2==135||LA132_2==141||(LA132_2 >= 143 && LA132_2 <= 144)||(LA132_2 >= 147 && LA132_2 <= 148)||LA132_2==152||LA132_2==154||LA132_2==157||LA132_2==160||LA132_2==162||LA132_2==167||(LA132_2 >= 171 && LA132_2 <= 172)||LA132_2==183||LA132_2==190||LA132_2==194||LA132_2==196) ) {
					alt132=1;
				}
			}
			switch (alt132) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:490:18: type
					{
					pushFollow(FOLLOW_type_in_join_clause6865);
					type421=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type421.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_identifier_in_join_clause6870);
			identifier422=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier422.getTree());

			string_literal423=(Token)match(input,137,FOLLOW_137_in_join_clause6874); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal423_tree = (CommonTree)adaptor.create(string_literal423);
			adaptor.addChild(root_0, string_literal423_tree);
			}

			pushFollow(FOLLOW_expression_in_join_clause6878);
			expression424=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression424.getTree());

			string_literal425=(Token)match(input,152,FOLLOW_152_in_join_clause6882); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal425_tree = (CommonTree)adaptor.create(string_literal425);
			adaptor.addChild(root_0, string_literal425_tree);
			}

			pushFollow(FOLLOW_expression_in_join_clause6886);
			expression426=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression426.getTree());

			string_literal427=(Token)match(input,122,FOLLOW_122_in_join_clause6890); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal427_tree = (CommonTree)adaptor.create(string_literal427);
			adaptor.addChild(root_0, string_literal427_tree);
			}

			pushFollow(FOLLOW_expression_in_join_clause6894);
			expression428=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression428.getTree());

			// /Users/jeremie/ANTLR/cs.g:490:101: ( 'into' identifier )?
			int alt133=2;
			int LA133_0 = input.LA(1);
			if ( (LA133_0==141) ) {
				alt133=1;
			}
			switch (alt133) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:490:102: 'into' identifier
					{
					string_literal429=(Token)match(input,141,FOLLOW_141_in_join_clause6897); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal429_tree = (CommonTree)adaptor.create(string_literal429);
					adaptor.addChild(root_0, string_literal429_tree);
					}

					pushFollow(FOLLOW_identifier_in_join_clause6899);
					identifier430=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier430.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 122, join_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "join_clause"


	public static class let_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "let_clause"
	// /Users/jeremie/ANTLR/cs.g:491:1: let_clause : 'let' identifier '=' expression ;
	public final csParser.let_clause_return let_clause() throws RecognitionException {
		csParser.let_clause_return retval = new csParser.let_clause_return();
		retval.start = input.LT(1);
		int let_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal431=null;
		Token char_literal433=null;
		ParserRuleReturnScope identifier432 =null;
		ParserRuleReturnScope expression434 =null;

		CommonTree string_literal431_tree=null;
		CommonTree char_literal433_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:491:11: ( 'let' identifier '=' expression )
			// /Users/jeremie/ANTLR/cs.g:492:9: 'let' identifier '=' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal431=(Token)match(input,144,FOLLOW_144_in_let_clause6916); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal431_tree = (CommonTree)adaptor.create(string_literal431);
			adaptor.addChild(root_0, string_literal431_tree);
			}

			pushFollow(FOLLOW_identifier_in_let_clause6920);
			identifier432=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier432.getTree());

			char_literal433=(Token)match(input,85,FOLLOW_85_in_let_clause6924); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal433_tree = (CommonTree)adaptor.create(char_literal433);
			adaptor.addChild(root_0, char_literal433_tree);
			}

			pushFollow(FOLLOW_expression_in_let_clause6928);
			expression434=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression434.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 123, let_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "let_clause"


	public static class orderby_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "orderby_clause"
	// /Users/jeremie/ANTLR/cs.g:493:1: orderby_clause : 'orderby' ordering_list ;
	public final csParser.orderby_clause_return orderby_clause() throws RecognitionException {
		csParser.orderby_clause_return retval = new csParser.orderby_clause_return();
		retval.start = input.LT(1);
		int orderby_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal435=null;
		ParserRuleReturnScope ordering_list436 =null;

		CommonTree string_literal435_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:493:15: ( 'orderby' ordering_list )
			// /Users/jeremie/ANTLR/cs.g:494:9: 'orderby' ordering_list
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal435=(Token)match(input,154,FOLLOW_154_in_orderby_clause6942); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal435_tree = (CommonTree)adaptor.create(string_literal435);
			adaptor.addChild(root_0, string_literal435_tree);
			}

			pushFollow(FOLLOW_ordering_list_in_orderby_clause6946);
			ordering_list436=ordering_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_list436.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 124, orderby_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "orderby_clause"


	public static class ordering_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ordering_list"
	// /Users/jeremie/ANTLR/cs.g:495:1: ordering_list : ordering ( ',' ordering )* ;
	public final csParser.ordering_list_return ordering_list() throws RecognitionException {
		csParser.ordering_list_return retval = new csParser.ordering_list_return();
		retval.start = input.LT(1);
		int ordering_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal438=null;
		ParserRuleReturnScope ordering437 =null;
		ParserRuleReturnScope ordering439 =null;

		CommonTree char_literal438_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:495:14: ( ordering ( ',' ordering )* )
			// /Users/jeremie/ANTLR/cs.g:496:9: ordering ( ',' ordering )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_ordering_in_ordering_list6961);
			ordering437=ordering();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering437.getTree());

			// /Users/jeremie/ANTLR/cs.g:496:20: ( ',' ordering )*
			loop134:
			while (true) {
				int alt134=2;
				int LA134_0 = input.LA(1);
				if ( (LA134_0==74) ) {
					alt134=1;
				}

				switch (alt134) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:496:21: ',' ordering
					{
					char_literal438=(Token)match(input,74,FOLLOW_74_in_ordering_list6966); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal438_tree = (CommonTree)adaptor.create(char_literal438);
					adaptor.addChild(root_0, char_literal438_tree);
					}

					pushFollow(FOLLOW_ordering_in_ordering_list6970);
					ordering439=ordering();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering439.getTree());

					}
					break;

				default :
					break loop134;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 125, ordering_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ordering_list"


	public static class ordering_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ordering"
	// /Users/jeremie/ANTLR/cs.g:497:1: ordering : expression ordering_direction ;
	public final csParser.ordering_return ordering() throws RecognitionException {
		csParser.ordering_return retval = new csParser.ordering_return();
		retval.start = input.LT(1);
		int ordering_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression440 =null;
		ParserRuleReturnScope ordering_direction441 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:497:9: ( expression ordering_direction )
			// /Users/jeremie/ANTLR/cs.g:498:9: expression ordering_direction
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_ordering6987);
			expression440=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression440.getTree());

			pushFollow(FOLLOW_ordering_direction_in_ordering6992);
			ordering_direction441=ordering_direction();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, ordering_direction441.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 126, ordering_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ordering"


	public static class ordering_direction_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "ordering_direction"
	// /Users/jeremie/ANTLR/cs.g:500:1: ordering_direction : ( 'ascending' | 'descending' );
	public final csParser.ordering_direction_return ordering_direction() throws RecognitionException {
		csParser.ordering_direction_return retval = new csParser.ordering_direction_return();
		retval.start = input.LT(1);
		int ordering_direction_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set442=null;

		CommonTree set442_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:500:19: ( 'ascending' | 'descending' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set442=input.LT(1);
			if ( input.LA(1)==100||input.LA(1)==117 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set442));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 127, ordering_direction_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "ordering_direction"


	public static class select_or_group_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "select_or_group_clause"
	// /Users/jeremie/ANTLR/cs.g:503:1: select_or_group_clause : ( select_clause | group_clause );
	public final csParser.select_or_group_clause_return select_or_group_clause() throws RecognitionException {
		csParser.select_or_group_clause_return retval = new csParser.select_or_group_clause_return();
		retval.start = input.LT(1);
		int select_or_group_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope select_clause443 =null;
		ParserRuleReturnScope group_clause444 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:503:23: ( select_clause | group_clause )
			int alt135=2;
			int LA135_0 = input.LA(1);
			if ( (LA135_0==171) ) {
				alt135=1;
			}
			else if ( (LA135_0==135) ) {
				alt135=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 135, 0, input);
				throw nvae;
			}

			switch (alt135) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:504:9: select_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_select_clause_in_select_or_group_clause7042);
					select_clause443=select_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, select_clause443.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:505:11: group_clause
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_group_clause_in_select_or_group_clause7054);
					group_clause444=group_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, group_clause444.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 128, select_or_group_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "select_or_group_clause"


	public static class select_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "select_clause"
	// /Users/jeremie/ANTLR/cs.g:506:1: select_clause : 'select' expression ;
	public final csParser.select_clause_return select_clause() throws RecognitionException {
		csParser.select_clause_return retval = new csParser.select_clause_return();
		retval.start = input.LT(1);
		int select_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal445=null;
		ParserRuleReturnScope expression446 =null;

		CommonTree string_literal445_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:506:14: ( 'select' expression )
			// /Users/jeremie/ANTLR/cs.g:507:9: 'select' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal445=(Token)match(input,171,FOLLOW_171_in_select_clause7069); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal445_tree = (CommonTree)adaptor.create(string_literal445);
			adaptor.addChild(root_0, string_literal445_tree);
			}

			pushFollow(FOLLOW_expression_in_select_clause7073);
			expression446=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression446.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 129, select_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "select_clause"


	public static class group_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "group_clause"
	// /Users/jeremie/ANTLR/cs.g:508:1: group_clause : 'group' expression 'by' expression ;
	public final csParser.group_clause_return group_clause() throws RecognitionException {
		csParser.group_clause_return retval = new csParser.group_clause_return();
		retval.start = input.LT(1);
		int group_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal447=null;
		Token string_literal449=null;
		ParserRuleReturnScope expression448 =null;
		ParserRuleReturnScope expression450 =null;

		CommonTree string_literal447_tree=null;
		CommonTree string_literal449_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:508:13: ( 'group' expression 'by' expression )
			// /Users/jeremie/ANTLR/cs.g:509:9: 'group' expression 'by' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal447=(Token)match(input,135,FOLLOW_135_in_group_clause7088); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal447_tree = (CommonTree)adaptor.create(string_literal447);
			adaptor.addChild(root_0, string_literal447_tree);
			}

			pushFollow(FOLLOW_expression_in_group_clause7092);
			expression448=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression448.getTree());

			string_literal449=(Token)match(input,105,FOLLOW_105_in_group_clause7096); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal449_tree = (CommonTree)adaptor.create(string_literal449);
			adaptor.addChild(root_0, string_literal449_tree);
			}

			pushFollow(FOLLOW_expression_in_group_clause7100);
			expression450=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression450.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 130, group_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "group_clause"


	public static class where_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "where_clause"
	// /Users/jeremie/ANTLR/cs.g:510:1: where_clause : 'where' boolean_expression ;
	public final csParser.where_clause_return where_clause() throws RecognitionException {
		csParser.where_clause_return retval = new csParser.where_clause_return();
		retval.start = input.LT(1);
		int where_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal451=null;
		ParserRuleReturnScope boolean_expression452 =null;

		CommonTree string_literal451_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:510:13: ( 'where' boolean_expression )
			// /Users/jeremie/ANTLR/cs.g:511:9: 'where' boolean_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal451=(Token)match(input,194,FOLLOW_194_in_where_clause7115); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal451_tree = (CommonTree)adaptor.create(string_literal451);
			adaptor.addChild(root_0, string_literal451_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_where_clause7119);
			boolean_expression452=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression452.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 131, where_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "where_clause"


	public static class boolean_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "boolean_expression"
	// /Users/jeremie/ANTLR/cs.g:512:1: boolean_expression : expression ;
	public final csParser.boolean_expression_return boolean_expression() throws RecognitionException {
		csParser.boolean_expression_return retval = new csParser.boolean_expression_return();
		retval.start = input.LT(1);
		int boolean_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression453 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:512:19: ( expression )
			// /Users/jeremie/ANTLR/cs.g:513:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_boolean_expression7134);
			expression453=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression453.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 132, boolean_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "boolean_expression"


	public static class global_attributes_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attributes"
	// /Users/jeremie/ANTLR/cs.g:518:1: global_attributes returns [UnknowNode t] : ( global_attribute )+ ;
	public final csParser.global_attributes_return global_attributes() throws RecognitionException {
		csParser.global_attributes_return retval = new csParser.global_attributes_return();
		retval.start = input.LT(1);
		int global_attributes_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope global_attribute454 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:518:41: ( ( global_attribute )+ )
			// /Users/jeremie/ANTLR/cs.g:519:9: ( global_attribute )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:519:9: ( global_attribute )+
			int cnt136=0;
			loop136:
			while (true) {
				int alt136=2;
				int LA136_0 = input.LA(1);
				if ( (LA136_0==91) ) {
					int LA136_2 = input.LA(2);
					if ( (LA136_2==101||LA136_2==148) ) {
						int LA136_3 = input.LA(3);
						if ( (LA136_3==79) ) {
							alt136=1;
						}

					}

				}

				switch (alt136) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:519:9: global_attribute
					{
					pushFollow(FOLLOW_global_attribute_in_global_attributes7156);
					global_attribute454=global_attribute();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute454.getTree());

					}
					break;

				default :
					if ( cnt136 >= 1 ) break loop136;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(136, input);
					throw eee;
				}
				cnt136++;
			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 133, global_attributes_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attributes"


	public static class global_attribute_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attribute"
	// /Users/jeremie/ANTLR/cs.g:521:1: global_attribute : '[' global_attribute_target_specifier attribute_list ( ',' )? ']' ;
	public final csParser.global_attribute_return global_attribute() throws RecognitionException {
		csParser.global_attribute_return retval = new csParser.global_attribute_return();
		retval.start = input.LT(1);
		int global_attribute_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal455=null;
		Token char_literal458=null;
		Token char_literal459=null;
		ParserRuleReturnScope global_attribute_target_specifier456 =null;
		ParserRuleReturnScope attribute_list457 =null;

		CommonTree char_literal455_tree=null;
		CommonTree char_literal458_tree=null;
		CommonTree char_literal459_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:521:17: ( '[' global_attribute_target_specifier attribute_list ( ',' )? ']' )
			// /Users/jeremie/ANTLR/cs.g:522:9: '[' global_attribute_target_specifier attribute_list ( ',' )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal455=(Token)match(input,91,FOLLOW_91_in_global_attribute7175); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal455_tree = (CommonTree)adaptor.create(char_literal455);
			adaptor.addChild(root_0, char_literal455_tree);
			}

			pushFollow(FOLLOW_global_attribute_target_specifier_in_global_attribute7179);
			global_attribute_target_specifier456=global_attribute_target_specifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target_specifier456.getTree());

			pushFollow(FOLLOW_attribute_list_in_global_attribute7183);
			attribute_list457=attribute_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list457.getTree());

			// /Users/jeremie/ANTLR/cs.g:522:68: ( ',' )?
			int alt137=2;
			int LA137_0 = input.LA(1);
			if ( (LA137_0==74) ) {
				alt137=1;
			}
			switch (alt137) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:522:68: ','
					{
					char_literal458=(Token)match(input,74,FOLLOW_74_in_global_attribute7187); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal458_tree = (CommonTree)adaptor.create(char_literal458);
					adaptor.addChild(root_0, char_literal458_tree);
					}

					}
					break;

			}

			char_literal459=(Token)match(input,92,FOLLOW_92_in_global_attribute7192); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal459_tree = (CommonTree)adaptor.create(char_literal459);
			adaptor.addChild(root_0, char_literal459_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 134, global_attribute_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attribute"


	public static class global_attribute_target_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attribute_target_specifier"
	// /Users/jeremie/ANTLR/cs.g:523:1: global_attribute_target_specifier : global_attribute_target ':' ;
	public final csParser.global_attribute_target_specifier_return global_attribute_target_specifier() throws RecognitionException {
		csParser.global_attribute_target_specifier_return retval = new csParser.global_attribute_target_specifier_return();
		retval.start = input.LT(1);
		int global_attribute_target_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal461=null;
		ParserRuleReturnScope global_attribute_target460 =null;

		CommonTree char_literal461_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:523:34: ( global_attribute_target ':' )
			// /Users/jeremie/ANTLR/cs.g:524:9: global_attribute_target ':'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_global_attribute_target_in_global_attribute_target_specifier7208);
			global_attribute_target460=global_attribute_target();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, global_attribute_target460.getTree());

			char_literal461=(Token)match(input,79,FOLLOW_79_in_global_attribute_target_specifier7212); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal461_tree = (CommonTree)adaptor.create(char_literal461);
			adaptor.addChild(root_0, char_literal461_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 135, global_attribute_target_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attribute_target_specifier"


	public static class global_attribute_target_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "global_attribute_target"
	// /Users/jeremie/ANTLR/cs.g:525:1: global_attribute_target : ( 'assembly' | 'module' );
	public final csParser.global_attribute_target_return global_attribute_target() throws RecognitionException {
		csParser.global_attribute_target_return retval = new csParser.global_attribute_target_return();
		retval.start = input.LT(1);
		int global_attribute_target_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set462=null;

		CommonTree set462_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:525:24: ( 'assembly' | 'module' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set462=input.LT(1);
			if ( input.LA(1)==101||input.LA(1)==148 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set462));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 136, global_attribute_target_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "global_attribute_target"


	public static class attributes_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attributes"
	// /Users/jeremie/ANTLR/cs.g:527:1: attributes returns [UnknowNode t] : ( attribute_sections ) ;
	public final csParser.attributes_return attributes() throws RecognitionException {
		csParser.attributes_return retval = new csParser.attributes_return();
		retval.start = input.LT(1);
		int attributes_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attribute_sections463 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:527:34: ( ( attribute_sections ) )
			// /Users/jeremie/ANTLR/cs.g:528:9: ( attribute_sections )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:528:9: ( attribute_sections )
			// /Users/jeremie/ANTLR/cs.g:528:10: attribute_sections
			{
			pushFollow(FOLLOW_attribute_sections_in_attributes7253);
			attribute_sections463=attribute_sections();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_sections463.getTree());

			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 137, attributes_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attributes"


	public static class attribute_sections_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_sections"
	// /Users/jeremie/ANTLR/cs.g:529:1: attribute_sections : ( attribute_section )+ ;
	public final csParser.attribute_sections_return attribute_sections() throws RecognitionException {
		csParser.attribute_sections_return retval = new csParser.attribute_sections_return();
		retval.start = input.LT(1);
		int attribute_sections_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attribute_section464 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:529:19: ( ( attribute_section )+ )
			// /Users/jeremie/ANTLR/cs.g:530:9: ( attribute_section )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:530:9: ( attribute_section )+
			int cnt138=0;
			loop138:
			while (true) {
				int alt138=2;
				int LA138_0 = input.LA(1);
				if ( (LA138_0==91) ) {
					alt138=1;
				}

				switch (alt138) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:530:9: attribute_section
					{
					pushFollow(FOLLOW_attribute_section_in_attribute_sections7271);
					attribute_section464=attribute_section();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_section464.getTree());

					}
					break;

				default :
					if ( cnt138 >= 1 ) break loop138;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(138, input);
					throw eee;
				}
				cnt138++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 138, attribute_sections_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_sections"


	public static class attribute_section_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_section"
	// /Users/jeremie/ANTLR/cs.g:531:1: attribute_section : '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' ;
	public final csParser.attribute_section_return attribute_section() throws RecognitionException {
		csParser.attribute_section_return retval = new csParser.attribute_section_return();
		retval.start = input.LT(1);
		int attribute_section_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal465=null;
		Token char_literal468=null;
		Token char_literal469=null;
		ParserRuleReturnScope attribute_target_specifier466 =null;
		ParserRuleReturnScope attribute_list467 =null;

		CommonTree char_literal465_tree=null;
		CommonTree char_literal468_tree=null;
		CommonTree char_literal469_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:531:18: ( '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']' )
			// /Users/jeremie/ANTLR/cs.g:532:9: '[' ( attribute_target_specifier )? attribute_list ( ',' )? ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal465=(Token)match(input,91,FOLLOW_91_in_attribute_section7288); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal465_tree = (CommonTree)adaptor.create(char_literal465);
			adaptor.addChild(root_0, char_literal465_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:532:15: ( attribute_target_specifier )?
			int alt139=2;
			int LA139_0 = input.LA(1);
			if ( (LA139_0==126||LA139_0==147||LA139_0==157||LA139_0==162||LA139_0==183) ) {
				int LA139_1 = input.LA(2);
				if ( (LA139_1==79) ) {
					alt139=1;
				}
			}
			else if ( (LA139_0==123||LA139_0==168) ) {
				alt139=1;
			}
			switch (alt139) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:532:15: attribute_target_specifier
					{
					pushFollow(FOLLOW_attribute_target_specifier_in_attribute_section7292);
					attribute_target_specifier466=attribute_target_specifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target_specifier466.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_attribute_list_in_attribute_section7297);
			attribute_list467=attribute_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_list467.getTree());

			// /Users/jeremie/ANTLR/cs.g:532:62: ( ',' )?
			int alt140=2;
			int LA140_0 = input.LA(1);
			if ( (LA140_0==74) ) {
				alt140=1;
			}
			switch (alt140) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:532:62: ','
					{
					char_literal468=(Token)match(input,74,FOLLOW_74_in_attribute_section7301); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal468_tree = (CommonTree)adaptor.create(char_literal468);
					adaptor.addChild(root_0, char_literal468_tree);
					}

					}
					break;

			}

			char_literal469=(Token)match(input,92,FOLLOW_92_in_attribute_section7306); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal469_tree = (CommonTree)adaptor.create(char_literal469);
			adaptor.addChild(root_0, char_literal469_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 139, attribute_section_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_section"


	public static class attribute_target_specifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_target_specifier"
	// /Users/jeremie/ANTLR/cs.g:533:1: attribute_target_specifier : attribute_target ':' ;
	public final csParser.attribute_target_specifier_return attribute_target_specifier() throws RecognitionException {
		csParser.attribute_target_specifier_return retval = new csParser.attribute_target_specifier_return();
		retval.start = input.LT(1);
		int attribute_target_specifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal471=null;
		ParserRuleReturnScope attribute_target470 =null;

		CommonTree char_literal471_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:533:27: ( attribute_target ':' )
			// /Users/jeremie/ANTLR/cs.g:534:9: attribute_target ':'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_target_in_attribute_target_specifier7322);
			attribute_target470=attribute_target();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_target470.getTree());

			char_literal471=(Token)match(input,79,FOLLOW_79_in_attribute_target_specifier7326); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal471_tree = (CommonTree)adaptor.create(char_literal471);
			adaptor.addChild(root_0, char_literal471_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 140, attribute_target_specifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_target_specifier"


	public static class attribute_target_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_target"
	// /Users/jeremie/ANTLR/cs.g:535:1: attribute_target : ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' );
	public final csParser.attribute_target_return attribute_target() throws RecognitionException {
		csParser.attribute_target_return retval = new csParser.attribute_target_return();
		retval.start = input.LT(1);
		int attribute_target_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set472=null;

		CommonTree set472_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:535:17: ( 'field' | 'event' | 'method' | 'param' | 'property' | 'return' | 'type' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set472=input.LT(1);
			if ( input.LA(1)==123||input.LA(1)==126||input.LA(1)==147||input.LA(1)==157||input.LA(1)==162||input.LA(1)==168||input.LA(1)==183 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set472));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 141, attribute_target_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_target"


	public static class attribute_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_list"
	// /Users/jeremie/ANTLR/cs.g:537:1: attribute_list : attribute ( ',' attribute )* ;
	public final csParser.attribute_list_return attribute_list() throws RecognitionException {
		csParser.attribute_list_return retval = new csParser.attribute_list_return();
		retval.start = input.LT(1);
		int attribute_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal474=null;
		ParserRuleReturnScope attribute473 =null;
		ParserRuleReturnScope attribute475 =null;

		CommonTree char_literal474_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:537:15: ( attribute ( ',' attribute )* )
			// /Users/jeremie/ANTLR/cs.g:538:9: attribute ( ',' attribute )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_in_attribute_list7382);
			attribute473=attribute();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute473.getTree());

			// /Users/jeremie/ANTLR/cs.g:538:19: ( ',' attribute )*
			loop141:
			while (true) {
				int alt141=2;
				int LA141_0 = input.LA(1);
				if ( (LA141_0==74) ) {
					int LA141_1 = input.LA(2);
					if ( (LA141_1==IDENTIFIER||LA141_1==95||(LA141_1 >= 97 && LA141_1 <= 98)||(LA141_1 >= 100 && LA141_1 <= 101)||LA141_1==105||LA141_1==117||LA141_1==120||LA141_1==122||LA141_1==126||LA141_1==132||LA141_1==135||LA141_1==141||(LA141_1 >= 143 && LA141_1 <= 144)||(LA141_1 >= 147 && LA141_1 <= 148)||LA141_1==152||LA141_1==154||LA141_1==157||LA141_1==160||LA141_1==162||LA141_1==167||(LA141_1 >= 171 && LA141_1 <= 172)||LA141_1==183||LA141_1==190||LA141_1==194||LA141_1==196) ) {
						alt141=1;
					}

				}

				switch (alt141) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:538:20: ',' attribute
					{
					char_literal474=(Token)match(input,74,FOLLOW_74_in_attribute_list7385); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal474_tree = (CommonTree)adaptor.create(char_literal474);
					adaptor.addChild(root_0, char_literal474_tree);
					}

					pushFollow(FOLLOW_attribute_in_attribute_list7387);
					attribute475=attribute();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute475.getTree());

					}
					break;

				default :
					break loop141;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 142, attribute_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_list"


	public static class attribute_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute"
	// /Users/jeremie/ANTLR/cs.g:539:1: attribute : type_name ( attribute_arguments )? ;
	public final csParser.attribute_return attribute() throws RecognitionException {
		csParser.attribute_return retval = new csParser.attribute_return();
		retval.start = input.LT(1);
		int attribute_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type_name476 =null;
		ParserRuleReturnScope attribute_arguments477 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:539:10: ( type_name ( attribute_arguments )? )
			// /Users/jeremie/ANTLR/cs.g:540:9: type_name ( attribute_arguments )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_attribute7406);
			type_name476=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name476.getTree());

			// /Users/jeremie/ANTLR/cs.g:540:21: ( attribute_arguments )?
			int alt142=2;
			int LA142_0 = input.LA(1);
			if ( (LA142_0==68) ) {
				alt142=1;
			}
			switch (alt142) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:540:21: attribute_arguments
					{
					pushFollow(FOLLOW_attribute_arguments_in_attribute7410);
					attribute_arguments477=attribute_arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_arguments477.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 143, attribute_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute"


	public static class attribute_arguments_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_arguments"
	// /Users/jeremie/ANTLR/cs.g:542:1: attribute_arguments : '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) ;
	public final csParser.attribute_arguments_return attribute_arguments() throws RecognitionException {
		csParser.attribute_arguments_return retval = new csParser.attribute_arguments_return();
		retval.start = input.LT(1);
		int attribute_arguments_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal478=null;
		Token char_literal479=null;
		Token char_literal482=null;
		Token char_literal484=null;
		ParserRuleReturnScope positional_argument480 =null;
		ParserRuleReturnScope named_argument481 =null;
		ParserRuleReturnScope positional_argument483 =null;

		CommonTree char_literal478_tree=null;
		CommonTree char_literal479_tree=null;
		CommonTree char_literal482_tree=null;
		CommonTree char_literal484_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:542:20: ( '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' ) )
			// /Users/jeremie/ANTLR/cs.g:543:9: '(' ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal478=(Token)match(input,68,FOLLOW_68_in_attribute_arguments7428); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal478_tree = (CommonTree)adaptor.create(char_literal478);
			adaptor.addChild(root_0, char_literal478_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:543:15: ( ')' | ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')' )
			int alt144=2;
			int LA144_0 = input.LA(1);
			if ( (LA144_0==RPAREN) ) {
				alt144=1;
			}
			else if ( (LA144_0==Character_literal||LA144_0==FALSE||(LA144_0 >= Hex_number && LA144_0 <= IDENTIFIER)||(LA144_0 >= MINUS && LA144_0 <= NUMBER)||LA144_0==Real_literal||LA144_0==STRINGLITERAL||LA144_0==TRUE||LA144_0==Verbatim_string_literal||LA144_0==61||LA144_0==66||(LA144_0 >= 68 && LA144_0 <= 69)||(LA144_0 >= 71 && LA144_0 <= 72)||LA144_0==75||LA144_0==95||(LA144_0 >= 97 && LA144_0 <= 98)||(LA144_0 >= 100 && LA144_0 <= 103)||(LA144_0 >= 105 && LA144_0 <= 106)||(LA144_0 >= 109 && LA144_0 <= 110)||(LA144_0 >= 114 && LA144_0 <= 117)||(LA144_0 >= 119 && LA144_0 <= 120)||LA144_0==122||LA144_0==126||LA144_0==129||LA144_0==132||LA144_0==135||LA144_0==138||LA144_0==141||(LA144_0 >= 143 && LA144_0 <= 144)||(LA144_0 >= 146 && LA144_0 <= 148)||(LA144_0 >= 150 && LA144_0 <= 152)||LA144_0==154||LA144_0==157||LA144_0==160||LA144_0==162||LA144_0==167||LA144_0==169||(LA144_0 >= 171 && LA144_0 <= 174)||LA144_0==177||LA144_0==180||(LA144_0 >= 183 && LA144_0 <= 187)||(LA144_0 >= 189 && LA144_0 <= 190)||LA144_0==194||LA144_0==196||LA144_0==202) ) {
				alt144=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 144, 0, input);
				throw nvae;
			}

			switch (alt144) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:543:16: ')'
					{
					char_literal479=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments7433); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal479_tree = (CommonTree)adaptor.create(char_literal479);
					adaptor.addChild(root_0, char_literal479_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:544:22: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* ) ')'
					{
					// /Users/jeremie/ANTLR/cs.g:544:22: ( positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )* )
					// /Users/jeremie/ANTLR/cs.g:544:23: positional_argument ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
					{
					pushFollow(FOLLOW_positional_argument_in_attribute_arguments7537);
					positional_argument480=positional_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument480.getTree());

					// /Users/jeremie/ANTLR/cs.g:544:45: ( ( ',' identifier '=' )=> named_argument | ',' positional_argument )*
					loop143:
					while (true) {
						int alt143=3;
						int LA143_0 = input.LA(1);
						if ( (LA143_0==IDENTIFIER||LA143_0==95||(LA143_0 >= 97 && LA143_0 <= 98)||(LA143_0 >= 100 && LA143_0 <= 101)||LA143_0==105||LA143_0==117||LA143_0==120||LA143_0==122||LA143_0==126||LA143_0==132||LA143_0==135||LA143_0==141||(LA143_0 >= 143 && LA143_0 <= 144)||(LA143_0 >= 147 && LA143_0 <= 148)||LA143_0==152||LA143_0==154||LA143_0==157||LA143_0==160||LA143_0==162||LA143_0==167||(LA143_0 >= 171 && LA143_0 <= 172)||LA143_0==183||LA143_0==190||LA143_0==194||LA143_0==196) && (synpred24_cs())) {
							alt143=1;
						}
						else if ( (LA143_0==74) ) {
							alt143=2;
						}

						switch (alt143) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:544:46: ( ',' identifier '=' )=> named_argument
							{
							pushFollow(FOLLOW_named_argument_in_attribute_arguments7556);
							named_argument481=named_argument();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument481.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:545:78: ',' positional_argument
							{
							char_literal482=(Token)match(input,74,FOLLOW_74_in_attribute_arguments7635); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal482_tree = (CommonTree)adaptor.create(char_literal482);
							adaptor.addChild(root_0, char_literal482_tree);
							}

							pushFollow(FOLLOW_positional_argument_in_attribute_arguments7644);
							positional_argument483=positional_argument();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument483.getTree());

							}
							break;

						default :
							break loop143;
						}
					}

					}

					char_literal484=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_attribute_arguments7683); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal484_tree = (CommonTree)adaptor.create(char_literal484);
					adaptor.addChild(root_0, char_literal484_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 144, attribute_arguments_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_arguments"


	public static class positional_argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "positional_argument_list"
	// /Users/jeremie/ANTLR/cs.g:548:1: positional_argument_list : positional_argument ( ',' positional_argument )* ;
	public final csParser.positional_argument_list_return positional_argument_list() throws RecognitionException {
		csParser.positional_argument_list_return retval = new csParser.positional_argument_list_return();
		retval.start = input.LT(1);
		int positional_argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal486=null;
		ParserRuleReturnScope positional_argument485 =null;
		ParserRuleReturnScope positional_argument487 =null;

		CommonTree char_literal486_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:548:25: ( positional_argument ( ',' positional_argument )* )
			// /Users/jeremie/ANTLR/cs.g:549:9: positional_argument ( ',' positional_argument )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_positional_argument_in_positional_argument_list7725);
			positional_argument485=positional_argument();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument485.getTree());

			// /Users/jeremie/ANTLR/cs.g:549:29: ( ',' positional_argument )*
			loop145:
			while (true) {
				int alt145=2;
				int LA145_0 = input.LA(1);
				if ( (LA145_0==74) ) {
					alt145=1;
				}

				switch (alt145) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:549:30: ',' positional_argument
					{
					char_literal486=(Token)match(input,74,FOLLOW_74_in_positional_argument_list7728); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal486_tree = (CommonTree)adaptor.create(char_literal486);
					adaptor.addChild(root_0, char_literal486_tree);
					}

					pushFollow(FOLLOW_positional_argument_in_positional_argument_list7730);
					positional_argument487=positional_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, positional_argument487.getTree());

					}
					break;

				default :
					break loop145;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 145, positional_argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "positional_argument_list"


	public static class positional_argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "positional_argument"
	// /Users/jeremie/ANTLR/cs.g:550:1: positional_argument : attribute_argument_expression ;
	public final csParser.positional_argument_return positional_argument() throws RecognitionException {
		csParser.positional_argument_return retval = new csParser.positional_argument_return();
		retval.start = input.LT(1);
		int positional_argument_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attribute_argument_expression488 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:550:20: ( attribute_argument_expression )
			// /Users/jeremie/ANTLR/cs.g:551:9: attribute_argument_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_attribute_argument_expression_in_positional_argument7748);
			attribute_argument_expression488=attribute_argument_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression488.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 146, positional_argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "positional_argument"


	public static class named_argument_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "named_argument_list"
	// /Users/jeremie/ANTLR/cs.g:552:1: named_argument_list : named_argument ( ',' named_argument )* ;
	public final csParser.named_argument_list_return named_argument_list() throws RecognitionException {
		csParser.named_argument_list_return retval = new csParser.named_argument_list_return();
		retval.start = input.LT(1);
		int named_argument_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal490=null;
		ParserRuleReturnScope named_argument489 =null;
		ParserRuleReturnScope named_argument491 =null;

		CommonTree char_literal490_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:552:20: ( named_argument ( ',' named_argument )* )
			// /Users/jeremie/ANTLR/cs.g:553:9: named_argument ( ',' named_argument )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_named_argument_in_named_argument_list7764);
			named_argument489=named_argument();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument489.getTree());

			// /Users/jeremie/ANTLR/cs.g:553:24: ( ',' named_argument )*
			loop146:
			while (true) {
				int alt146=2;
				int LA146_0 = input.LA(1);
				if ( (LA146_0==74) ) {
					alt146=1;
				}

				switch (alt146) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:553:25: ',' named_argument
					{
					char_literal490=(Token)match(input,74,FOLLOW_74_in_named_argument_list7767); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal490_tree = (CommonTree)adaptor.create(char_literal490);
					adaptor.addChild(root_0, char_literal490_tree);
					}

					pushFollow(FOLLOW_named_argument_in_named_argument_list7769);
					named_argument491=named_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, named_argument491.getTree());

					}
					break;

				default :
					break loop146;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 147, named_argument_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "named_argument_list"


	public static class named_argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "named_argument"
	// /Users/jeremie/ANTLR/cs.g:554:1: named_argument : identifier '=' attribute_argument_expression ;
	public final csParser.named_argument_return named_argument() throws RecognitionException {
		csParser.named_argument_return retval = new csParser.named_argument_return();
		retval.start = input.LT(1);
		int named_argument_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal493=null;
		ParserRuleReturnScope identifier492 =null;
		ParserRuleReturnScope attribute_argument_expression494 =null;

		CommonTree char_literal493_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:554:15: ( identifier '=' attribute_argument_expression )
			// /Users/jeremie/ANTLR/cs.g:555:9: identifier '=' attribute_argument_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_named_argument7787);
			identifier492=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier492.getTree());

			char_literal493=(Token)match(input,85,FOLLOW_85_in_named_argument7791); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal493_tree = (CommonTree)adaptor.create(char_literal493);
			adaptor.addChild(root_0, char_literal493_tree);
			}

			pushFollow(FOLLOW_attribute_argument_expression_in_named_argument7795);
			attribute_argument_expression494=attribute_argument_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, attribute_argument_expression494.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 148, named_argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "named_argument"


	public static class attribute_argument_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "attribute_argument_expression"
	// /Users/jeremie/ANTLR/cs.g:556:1: attribute_argument_expression : expression ;
	public final csParser.attribute_argument_expression_return attribute_argument_expression() throws RecognitionException {
		csParser.attribute_argument_expression_return retval = new csParser.attribute_argument_expression_return();
		retval.start = input.LT(1);
		int attribute_argument_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression495 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:556:30: ( expression )
			// /Users/jeremie/ANTLR/cs.g:557:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_attribute_argument_expression7811);
			expression495=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression495.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 149, attribute_argument_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "attribute_argument_expression"


	public static class class_declaration_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_declaration"
	// /Users/jeremie/ANTLR/cs.g:563:1: class_declaration returns [CsharpNode t] : 'class' a= type_or_generic (b= class_base )? (c= type_parameter_constraints_clauses )? d= class_body ( ';' )? ;
	public final csParser.class_declaration_return class_declaration() throws RecognitionException {
		csParser.class_declaration_return retval = new csParser.class_declaration_return();
		retval.start = input.LT(1);
		int class_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal496=null;
		Token char_literal497=null;
		ParserRuleReturnScope a =null;
		ParserRuleReturnScope b =null;
		ParserRuleReturnScope c =null;
		ParserRuleReturnScope d =null;

		CommonTree string_literal496_tree=null;
		CommonTree char_literal497_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:563:42: ( 'class' a= type_or_generic (b= class_base )? (c= type_parameter_constraints_clauses )? d= class_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:564:9: 'class' a= type_or_generic (b= class_base )? (c= type_parameter_constraints_clauses )? d= class_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal496=(Token)match(input,111,FOLLOW_111_in_class_declaration7836); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal496_tree = (CommonTree)adaptor.create(string_literal496);
			adaptor.addChild(root_0, string_literal496_tree);
			}

			pushFollow(FOLLOW_type_or_generic_in_class_declaration7841);
			a=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

			// /Users/jeremie/ANTLR/cs.g:564:39: (b= class_base )?
			int alt147=2;
			int LA147_0 = input.LA(1);
			if ( (LA147_0==79) ) {
				alt147=1;
			}
			switch (alt147) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:564:39: b= class_base
					{
					pushFollow(FOLLOW_class_base_in_class_declaration7847);
					b=class_base();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, b.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:564:55: (c= type_parameter_constraints_clauses )?
			int alt148=2;
			int LA148_0 = input.LA(1);
			if ( (LA148_0==194) ) {
				alt148=1;
			}
			switch (alt148) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:564:55: c= type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_class_declaration7854);
					c=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, c.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_class_body_in_class_declaration7861);
			d=class_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, d.getTree());

			// /Users/jeremie/ANTLR/cs.g:564:109: ( ';' )?
			int alt149=2;
			int LA149_0 = input.LA(1);
			if ( (LA149_0==SEMI) ) {
				alt149=1;
			}
			switch (alt149) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:564:109: ';'
					{
					char_literal497=(Token)match(input,SEMI,FOLLOW_SEMI_in_class_declaration7865); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal497_tree = (CommonTree)adaptor.create(char_literal497);
					adaptor.addChild(root_0, char_literal497_tree);
					}

					}
					break;

			}

			if ( state.backtracking==0 ) {retval.t = new class_declaration((a!=null?((csParser.type_or_generic_return)a).t:null),(b!=null?((csParser.class_base_return)b).t:null), (c!=null?((csParser.type_parameter_constraints_clauses_return)c).t:null), (d!=null?((csParser.class_body_return)d).t:null));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 150, class_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_declaration"


	public static class class_base_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_base"
	// /Users/jeremie/ANTLR/cs.g:566:1: class_base returns [UnknowNode t] : ( ':' interface_type_list ) ;
	public final csParser.class_base_return class_base() throws RecognitionException {
		csParser.class_base_return retval = new csParser.class_base_return();
		retval.start = input.LT(1);
		int class_base_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal498=null;
		ParserRuleReturnScope interface_type_list499 =null;

		CommonTree char_literal498_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:566:35: ( ( ':' interface_type_list ) )
			// /Users/jeremie/ANTLR/cs.g:569:9: ( ':' interface_type_list )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:569:9: ( ':' interface_type_list )
			// /Users/jeremie/ANTLR/cs.g:569:10: ':' interface_type_list
			{
			char_literal498=(Token)match(input,79,FOLLOW_79_in_class_base7915); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal498_tree = (CommonTree)adaptor.create(char_literal498);
			adaptor.addChild(root_0, char_literal498_tree);
			}

			pushFollow(FOLLOW_interface_type_list_in_class_base7919);
			interface_type_list499=interface_type_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list499.getTree());

			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 151, class_base_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_base"


	public static class interface_type_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_type_list"
	// /Users/jeremie/ANTLR/cs.g:571:1: interface_type_list : type ( ',' type )* ;
	public final csParser.interface_type_list_return interface_type_list() throws RecognitionException {
		csParser.interface_type_list_return retval = new csParser.interface_type_list_return();
		retval.start = input.LT(1);
		int interface_type_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal501=null;
		ParserRuleReturnScope type500 =null;
		ParserRuleReturnScope type502 =null;

		CommonTree char_literal501_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:571:20: ( type ( ',' type )* )
			// /Users/jeremie/ANTLR/cs.g:572:9: type ( ',' type )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_in_interface_type_list7945);
			type500=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type500.getTree());

			// /Users/jeremie/ANTLR/cs.g:572:14: ( ',' type )*
			loop150:
			while (true) {
				int alt150=2;
				int LA150_0 = input.LA(1);
				if ( (LA150_0==74) ) {
					alt150=1;
				}

				switch (alt150) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:572:15: ',' type
					{
					char_literal501=(Token)match(input,74,FOLLOW_74_in_interface_type_list7948); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal501_tree = (CommonTree)adaptor.create(char_literal501);
					adaptor.addChild(root_0, char_literal501_tree);
					}

					pushFollow(FOLLOW_type_in_interface_type_list7952);
					type502=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type502.getTree());

					}
					break;

				default :
					break loop150;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 152, interface_type_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_type_list"


	public static class class_body_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_body"
	// /Users/jeremie/ANTLR/cs.g:574:1: class_body returns [CsharpNode t] : '{' (a= class_member_declarations )? '}' ;
	public final csParser.class_body_return class_body() throws RecognitionException {
		csParser.class_body_return retval = new csParser.class_body_return();
		retval.start = input.LT(1);
		int class_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal503=null;
		Token char_literal504=null;
		ParserRuleReturnScope a =null;

		CommonTree char_literal503_tree=null;
		CommonTree char_literal504_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:574:36: ( '{' (a= class_member_declarations )? '}' )
			// /Users/jeremie/ANTLR/cs.g:575:9: '{' (a= class_member_declarations )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal503=(Token)match(input,197,FOLLOW_197_in_class_body7976); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal503_tree = (CommonTree)adaptor.create(char_literal503);
			adaptor.addChild(root_0, char_literal503_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:575:16: (a= class_member_declarations )?
			int alt151=2;
			int LA151_0 = input.LA(1);
			if ( (LA151_0==ENUM||LA151_0==IDENTIFIER||LA151_0==91||(LA151_0 >= 95 && LA151_0 <= 98)||(LA151_0 >= 100 && LA151_0 <= 101)||LA151_0==103||(LA151_0 >= 105 && LA151_0 <= 106)||LA151_0==109||(LA151_0 >= 111 && LA151_0 <= 112)||LA151_0==114||(LA151_0 >= 116 && LA151_0 <= 117)||(LA151_0 >= 119 && LA151_0 <= 120)||(LA151_0 >= 122 && LA151_0 <= 126)||LA151_0==129||LA151_0==132||(LA151_0 >= 135 && LA151_0 <= 136)||(LA151_0 >= 138 && LA151_0 <= 141)||(LA151_0 >= 143 && LA151_0 <= 144)||(LA151_0 >= 146 && LA151_0 <= 148)||(LA151_0 >= 150 && LA151_0 <= 152)||LA151_0==154||(LA151_0 >= 156 && LA151_0 <= 157)||(LA151_0 >= 159 && LA151_0 <= 165)||LA151_0==167||(LA151_0 >= 169 && LA151_0 <= 173)||(LA151_0 >= 176 && LA151_0 <= 178)||LA151_0==183||(LA151_0 >= 185 && LA151_0 <= 186)||(LA151_0 >= 188 && LA151_0 <= 194)||LA151_0==196||LA151_0==202) ) {
				alt151=1;
			}
			switch (alt151) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:575:16: a= class_member_declarations
					{
					pushFollow(FOLLOW_class_member_declarations_in_class_body7982);
					a=class_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

					}
					break;

			}

			char_literal504=(Token)match(input,201,FOLLOW_201_in_class_body7987); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal504_tree = (CommonTree)adaptor.create(char_literal504);
			adaptor.addChild(root_0, char_literal504_tree);
			}

			if ( state.backtracking==0 ) {retval.t = new class_body ((a!=null?((csParser.class_member_declarations_return)a).t:null)); }
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 153, class_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_body"


	public static class class_member_declarations_return extends ParserRuleReturnScope {
		public CsharpNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "class_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:576:1: class_member_declarations returns [CsharpNode t] : (a= class_member_declaration )+ ;
	public final csParser.class_member_declarations_return class_member_declarations() throws RecognitionException {
		csParser.class_member_declarations_return retval = new csParser.class_member_declarations_return();
		retval.start = input.LT(1);
		int class_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope a =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:576:50: ( (a= class_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:577:9: (a= class_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:577:9: (a= class_member_declaration )+
			int cnt152=0;
			loop152:
			while (true) {
				int alt152=2;
				int LA152_0 = input.LA(1);
				if ( (LA152_0==ENUM||LA152_0==IDENTIFIER||LA152_0==91||(LA152_0 >= 95 && LA152_0 <= 98)||(LA152_0 >= 100 && LA152_0 <= 101)||LA152_0==103||(LA152_0 >= 105 && LA152_0 <= 106)||LA152_0==109||(LA152_0 >= 111 && LA152_0 <= 112)||LA152_0==114||(LA152_0 >= 116 && LA152_0 <= 117)||(LA152_0 >= 119 && LA152_0 <= 120)||(LA152_0 >= 122 && LA152_0 <= 126)||LA152_0==129||LA152_0==132||(LA152_0 >= 135 && LA152_0 <= 136)||(LA152_0 >= 138 && LA152_0 <= 141)||(LA152_0 >= 143 && LA152_0 <= 144)||(LA152_0 >= 146 && LA152_0 <= 148)||(LA152_0 >= 150 && LA152_0 <= 152)||LA152_0==154||(LA152_0 >= 156 && LA152_0 <= 157)||(LA152_0 >= 159 && LA152_0 <= 165)||LA152_0==167||(LA152_0 >= 169 && LA152_0 <= 173)||(LA152_0 >= 176 && LA152_0 <= 178)||LA152_0==183||(LA152_0 >= 185 && LA152_0 <= 186)||(LA152_0 >= 188 && LA152_0 <= 194)||LA152_0==196||LA152_0==202) ) {
					alt152=1;
				}

				switch (alt152) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:577:10: a= class_member_declaration
					{
					pushFollow(FOLLOW_class_member_declaration_in_class_member_declarations8011);
					a=class_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());

					if ( state.backtracking==0 ) { if (retval.t == null) {retval.t =new class_member_declarations(); ((class_member_declarations)retval.t).add((a!=null?((csParser.class_member_declaration_return)a).t:null));} else {((class_member_declarations)retval.t).add((a!=null?((csParser.class_member_declaration_return)a).t:null));} }
					}
					break;

				default :
					if ( cnt152 >= 1 ) break loop152;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(152, input);
					throw eee;
				}
				cnt152++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 154, class_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "class_member_declarations"


	public static class constant_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declaration"
	// /Users/jeremie/ANTLR/cs.g:581:1: constant_declaration : 'const' type constant_declarators ';' ;
	public final csParser.constant_declaration_return constant_declaration() throws RecognitionException {
		csParser.constant_declaration_return retval = new csParser.constant_declaration_return();
		retval.start = input.LT(1);
		int constant_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal505=null;
		Token char_literal508=null;
		ParserRuleReturnScope type506 =null;
		ParserRuleReturnScope constant_declarators507 =null;

		CommonTree string_literal505_tree=null;
		CommonTree char_literal508_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:581:21: ( 'const' type constant_declarators ';' )
			// /Users/jeremie/ANTLR/cs.g:582:9: 'const' type constant_declarators ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal505=(Token)match(input,112,FOLLOW_112_in_constant_declaration8042); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal505_tree = (CommonTree)adaptor.create(string_literal505);
			adaptor.addChild(root_0, string_literal505_tree);
			}

			pushFollow(FOLLOW_type_in_constant_declaration8046);
			type506=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type506.getTree());

			pushFollow(FOLLOW_constant_declarators_in_constant_declaration8050);
			constant_declarators507=constant_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators507.getTree());

			char_literal508=(Token)match(input,SEMI,FOLLOW_SEMI_in_constant_declaration8054); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal508_tree = (CommonTree)adaptor.create(char_literal508);
			adaptor.addChild(root_0, char_literal508_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 155, constant_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declaration"


	public static class constant_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declarators"
	// /Users/jeremie/ANTLR/cs.g:583:1: constant_declarators : constant_declarator ( ',' constant_declarator )* ;
	public final csParser.constant_declarators_return constant_declarators() throws RecognitionException {
		csParser.constant_declarators_return retval = new csParser.constant_declarators_return();
		retval.start = input.LT(1);
		int constant_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal510=null;
		ParserRuleReturnScope constant_declarator509 =null;
		ParserRuleReturnScope constant_declarator511 =null;

		CommonTree char_literal510_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:583:21: ( constant_declarator ( ',' constant_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:584:9: constant_declarator ( ',' constant_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_constant_declarator_in_constant_declarators8069);
			constant_declarator509=constant_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator509.getTree());

			// /Users/jeremie/ANTLR/cs.g:584:29: ( ',' constant_declarator )*
			loop153:
			while (true) {
				int alt153=2;
				int LA153_0 = input.LA(1);
				if ( (LA153_0==74) ) {
					alt153=1;
				}

				switch (alt153) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:584:30: ',' constant_declarator
					{
					char_literal510=(Token)match(input,74,FOLLOW_74_in_constant_declarators8072); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal510_tree = (CommonTree)adaptor.create(char_literal510);
					adaptor.addChild(root_0, char_literal510_tree);
					}

					pushFollow(FOLLOW_constant_declarator_in_constant_declarators8074);
					constant_declarator511=constant_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarator511.getTree());

					}
					break;

				default :
					break loop153;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 156, constant_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declarators"


	public static class constant_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declarator"
	// /Users/jeremie/ANTLR/cs.g:585:1: constant_declarator : identifier ( '=' constant_expression )? ;
	public final csParser.constant_declarator_return constant_declarator() throws RecognitionException {
		csParser.constant_declarator_return retval = new csParser.constant_declarator_return();
		retval.start = input.LT(1);
		int constant_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal513=null;
		ParserRuleReturnScope identifier512 =null;
		ParserRuleReturnScope constant_expression514 =null;

		CommonTree char_literal513_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:585:20: ( identifier ( '=' constant_expression )? )
			// /Users/jeremie/ANTLR/cs.g:586:9: identifier ( '=' constant_expression )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_constant_declarator8091);
			identifier512=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier512.getTree());

			// /Users/jeremie/ANTLR/cs.g:586:22: ( '=' constant_expression )?
			int alt154=2;
			int LA154_0 = input.LA(1);
			if ( (LA154_0==85) ) {
				alt154=1;
			}
			switch (alt154) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:586:23: '=' constant_expression
					{
					char_literal513=(Token)match(input,85,FOLLOW_85_in_constant_declarator8096); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal513_tree = (CommonTree)adaptor.create(char_literal513);
					adaptor.addChild(root_0, char_literal513_tree);
					}

					pushFollow(FOLLOW_constant_expression_in_constant_declarator8100);
					constant_expression514=constant_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression514.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 157, constant_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declarator"


	public static class constant_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_expression"
	// /Users/jeremie/ANTLR/cs.g:587:1: constant_expression : expression ;
	public final csParser.constant_expression_return constant_expression() throws RecognitionException {
		csParser.constant_expression_return retval = new csParser.constant_expression_return();
		retval.start = input.LT(1);
		int constant_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression515 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:587:20: ( expression )
			// /Users/jeremie/ANTLR/cs.g:588:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_constant_expression8117);
			expression515=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression515.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 158, constant_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_expression"


	public static class field_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "field_declaration"
	// /Users/jeremie/ANTLR/cs.g:591:1: field_declaration : variable_declarators ';' ;
	public final csParser.field_declaration_return field_declaration() throws RecognitionException {
		csParser.field_declaration_return retval = new csParser.field_declaration_return();
		retval.start = input.LT(1);
		int field_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal517=null;
		ParserRuleReturnScope variable_declarators516 =null;

		CommonTree char_literal517_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:591:18: ( variable_declarators ';' )
			// /Users/jeremie/ANTLR/cs.g:592:9: variable_declarators ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variable_declarators_in_field_declaration8133);
			variable_declarators516=variable_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators516.getTree());

			char_literal517=(Token)match(input,SEMI,FOLLOW_SEMI_in_field_declaration8137); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal517_tree = (CommonTree)adaptor.create(char_literal517);
			adaptor.addChild(root_0, char_literal517_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 159, field_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "field_declaration"


	public static class variable_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_declarators"
	// /Users/jeremie/ANTLR/cs.g:593:1: variable_declarators : variable_declarator ( ',' variable_declarator )* ;
	public final csParser.variable_declarators_return variable_declarators() throws RecognitionException {
		csParser.variable_declarators_return retval = new csParser.variable_declarators_return();
		retval.start = input.LT(1);
		int variable_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal519=null;
		ParserRuleReturnScope variable_declarator518 =null;
		ParserRuleReturnScope variable_declarator520 =null;

		CommonTree char_literal519_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:593:21: ( variable_declarator ( ',' variable_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:594:9: variable_declarator ( ',' variable_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variable_declarator_in_variable_declarators8159);
			variable_declarator518=variable_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator518.getTree());

			// /Users/jeremie/ANTLR/cs.g:594:29: ( ',' variable_declarator )*
			loop155:
			while (true) {
				int alt155=2;
				int LA155_0 = input.LA(1);
				if ( (LA155_0==74) ) {
					alt155=1;
				}

				switch (alt155) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:594:30: ',' variable_declarator
					{
					char_literal519=(Token)match(input,74,FOLLOW_74_in_variable_declarators8162); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal519_tree = (CommonTree)adaptor.create(char_literal519);
					adaptor.addChild(root_0, char_literal519_tree);
					}

					pushFollow(FOLLOW_variable_declarator_in_variable_declarators8166);
					variable_declarator520=variable_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarator520.getTree());

					}
					break;

				default :
					break loop155;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 160, variable_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_declarators"


	public static class variable_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variable_declarator"
	// /Users/jeremie/ANTLR/cs.g:595:1: variable_declarator : type_name ( '=' variable_initializer )? ;
	public final csParser.variable_declarator_return variable_declarator() throws RecognitionException {
		csParser.variable_declarator_return retval = new csParser.variable_declarator_return();
		retval.start = input.LT(1);
		int variable_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal522=null;
		ParserRuleReturnScope type_name521 =null;
		ParserRuleReturnScope variable_initializer523 =null;

		CommonTree char_literal522_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:595:20: ( type_name ( '=' variable_initializer )? )
			// /Users/jeremie/ANTLR/cs.g:596:9: type_name ( '=' variable_initializer )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_variable_declarator8183);
			type_name521=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name521.getTree());

			// /Users/jeremie/ANTLR/cs.g:596:19: ( '=' variable_initializer )?
			int alt156=2;
			int LA156_0 = input.LA(1);
			if ( (LA156_0==85) ) {
				alt156=1;
			}
			switch (alt156) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:596:20: '=' variable_initializer
					{
					char_literal522=(Token)match(input,85,FOLLOW_85_in_variable_declarator8186); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal522_tree = (CommonTree)adaptor.create(char_literal522);
					adaptor.addChild(root_0, char_literal522_tree);
					}

					pushFollow(FOLLOW_variable_initializer_in_variable_declarator8190);
					variable_initializer523=variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_initializer523.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 161, variable_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variable_declarator"


	public static class method_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_declaration"
	// /Users/jeremie/ANTLR/cs.g:599:1: method_declaration : method_header method_body ;
	public final csParser.method_declaration_return method_declaration() throws RecognitionException {
		csParser.method_declaration_return retval = new csParser.method_declaration_return();
		retval.start = input.LT(1);
		int method_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope method_header524 =null;
		ParserRuleReturnScope method_body525 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:599:19: ( method_header method_body )
			// /Users/jeremie/ANTLR/cs.g:600:9: method_header method_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_method_header_in_method_declaration8225);
			method_header524=method_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, method_header524.getTree());

			pushFollow(FOLLOW_method_body_in_method_declaration8229);
			method_body525=method_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, method_body525.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 162, method_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_declaration"


	public static class method_header_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_header"
	// /Users/jeremie/ANTLR/cs.g:601:1: method_header : member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ;
	public final csParser.method_header_return method_header() throws RecognitionException {
		csParser.method_header_return retval = new csParser.method_header_return();
		retval.start = input.LT(1);
		int method_header_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal527=null;
		Token char_literal529=null;
		ParserRuleReturnScope member_name526 =null;
		ParserRuleReturnScope formal_parameter_list528 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses530 =null;

		CommonTree char_literal527_tree=null;
		CommonTree char_literal529_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:601:14: ( member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? )
			// /Users/jeremie/ANTLR/cs.g:602:9: member_name '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_name_in_method_header8244);
			member_name526=member_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name526.getTree());

			char_literal527=(Token)match(input,68,FOLLOW_68_in_method_header8247); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal527_tree = (CommonTree)adaptor.create(char_literal527);
			adaptor.addChild(root_0, char_literal527_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:602:28: ( formal_parameter_list )?
			int alt157=2;
			int LA157_0 = input.LA(1);
			if ( (LA157_0==IDENTIFIER||LA157_0==91||LA157_0==95||(LA157_0 >= 97 && LA157_0 <= 98)||(LA157_0 >= 100 && LA157_0 <= 101)||LA157_0==103||(LA157_0 >= 105 && LA157_0 <= 106)||LA157_0==109||LA157_0==114||LA157_0==117||(LA157_0 >= 119 && LA157_0 <= 120)||LA157_0==122||LA157_0==126||LA157_0==129||LA157_0==132||LA157_0==135||LA157_0==138||LA157_0==141||(LA157_0 >= 143 && LA157_0 <= 144)||(LA157_0 >= 146 && LA157_0 <= 148)||(LA157_0 >= 151 && LA157_0 <= 152)||(LA157_0 >= 154 && LA157_0 <= 155)||(LA157_0 >= 157 && LA157_0 <= 158)||LA157_0==160||LA157_0==162||(LA157_0 >= 166 && LA157_0 <= 167)||LA157_0==169||(LA157_0 >= 171 && LA157_0 <= 173)||LA157_0==177||LA157_0==180||LA157_0==183||(LA157_0 >= 185 && LA157_0 <= 186)||(LA157_0 >= 189 && LA157_0 <= 190)||LA157_0==192||LA157_0==194||LA157_0==196) ) {
				alt157=1;
			}
			switch (alt157) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:602:28: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_method_header8251);
					formal_parameter_list528=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list528.getTree());

					}
					break;

			}

			char_literal529=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_method_header8256); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal529_tree = (CommonTree)adaptor.create(char_literal529);
			adaptor.addChild(root_0, char_literal529_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:602:59: ( type_parameter_constraints_clauses )?
			int alt158=2;
			int LA158_0 = input.LA(1);
			if ( (LA158_0==194) ) {
				alt158=1;
			}
			switch (alt158) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:602:59: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_method_header8260);
					type_parameter_constraints_clauses530=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses530.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 163, method_header_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_header"


	public static class method_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_body"
	// /Users/jeremie/ANTLR/cs.g:603:1: method_body : block ;
	public final csParser.method_body_return method_body() throws RecognitionException {
		csParser.method_body_return retval = new csParser.method_body_return();
		retval.start = input.LT(1);
		int method_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block531 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:603:12: ( block )
			// /Users/jeremie/ANTLR/cs.g:604:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_method_body8276);
			block531=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block531.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 164, method_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_body"


	public static class member_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "member_name"
	// /Users/jeremie/ANTLR/cs.g:605:1: member_name : qid ;
	public final csParser.member_name_return member_name() throws RecognitionException {
		csParser.member_name_return retval = new csParser.member_name_return();
		retval.start = input.LT(1);
		int member_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope qid532 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:605:12: ( qid )
			// /Users/jeremie/ANTLR/cs.g:606:9: qid
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_qid_in_member_name8291);
			qid532=qid();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, qid532.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 165, member_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "member_name"


	public static class property_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "property_declaration"
	// /Users/jeremie/ANTLR/cs.g:609:1: property_declaration : member_name '{' accessor_declarations '}' ;
	public final csParser.property_declaration_return property_declaration() throws RecognitionException {
		csParser.property_declaration_return retval = new csParser.property_declaration_return();
		retval.start = input.LT(1);
		int property_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal534=null;
		Token char_literal536=null;
		ParserRuleReturnScope member_name533 =null;
		ParserRuleReturnScope accessor_declarations535 =null;

		CommonTree char_literal534_tree=null;
		CommonTree char_literal536_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:609:21: ( member_name '{' accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:610:9: member_name '{' accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_member_name_in_property_declaration8324);
			member_name533=member_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name533.getTree());

			char_literal534=(Token)match(input,197,FOLLOW_197_in_property_declaration8328); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal534_tree = (CommonTree)adaptor.create(char_literal534);
			adaptor.addChild(root_0, char_literal534_tree);
			}

			pushFollow(FOLLOW_accessor_declarations_in_property_declaration8332);
			accessor_declarations535=accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations535.getTree());

			char_literal536=(Token)match(input,201,FOLLOW_201_in_property_declaration8336); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal536_tree = (CommonTree)adaptor.create(char_literal536);
			adaptor.addChild(root_0, char_literal536_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 166, property_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "property_declaration"


	public static class accessor_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "accessor_declarations"
	// /Users/jeremie/ANTLR/cs.g:611:1: accessor_declarations : ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) ;
	public final csParser.accessor_declarations_return accessor_declarations() throws RecognitionException {
		csParser.accessor_declarations_return retval = new csParser.accessor_declarations_return();
		retval.start = input.LT(1);
		int accessor_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes537 =null;
		ParserRuleReturnScope get_accessor_declaration538 =null;
		ParserRuleReturnScope attributes539 =null;
		ParserRuleReturnScope set_accessor_declaration540 =null;
		ParserRuleReturnScope set_accessor_declaration541 =null;
		ParserRuleReturnScope attributes542 =null;
		ParserRuleReturnScope get_accessor_declaration543 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:611:22: ( ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? ) )
			// /Users/jeremie/ANTLR/cs.g:612:9: ( attributes )? ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:612:9: ( attributes )?
			int alt159=2;
			int LA159_0 = input.LA(1);
			if ( (LA159_0==91) ) {
				alt159=1;
			}
			switch (alt159) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:612:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_accessor_declarations8351);
					attributes537=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes537.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:613:17: ( get_accessor_declaration ( attributes )? ( set_accessor_declaration )? | set_accessor_declaration ( attributes )? ( get_accessor_declaration )? )
			int alt164=2;
			switch ( input.LA(1) ) {
			case 140:
			case 161:
			case 163:
			case 164:
				{
				int LA164_1 = input.LA(2);
				if ( (LA164_1==133) ) {
					alt164=1;
				}
				else if ( (LA164_1==172) ) {
					alt164=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 164, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 133:
				{
				alt164=1;
				}
				break;
			case 172:
				{
				alt164=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 164, 0, input);
				throw nvae;
			}
			switch (alt164) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:613:18: get_accessor_declaration ( attributes )? ( set_accessor_declaration )?
					{
					pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations8371);
					get_accessor_declaration538=get_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration538.getTree());

					// /Users/jeremie/ANTLR/cs.g:613:45: ( attributes )?
					int alt160=2;
					int LA160_0 = input.LA(1);
					if ( (LA160_0==91) ) {
						alt160=1;
					}
					switch (alt160) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:613:45: attributes
							{
							pushFollow(FOLLOW_attributes_in_accessor_declarations8375);
							attributes539=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes539.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:613:59: ( set_accessor_declaration )?
					int alt161=2;
					int LA161_0 = input.LA(1);
					if ( (LA161_0==140||LA161_0==161||(LA161_0 >= 163 && LA161_0 <= 164)||LA161_0==172) ) {
						alt161=1;
					}
					switch (alt161) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:613:59: set_accessor_declaration
							{
							pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations8380);
							set_accessor_declaration540=set_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration540.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:614:19: set_accessor_declaration ( attributes )? ( get_accessor_declaration )?
					{
					pushFollow(FOLLOW_set_accessor_declaration_in_accessor_declarations8401);
					set_accessor_declaration541=set_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, set_accessor_declaration541.getTree());

					// /Users/jeremie/ANTLR/cs.g:614:46: ( attributes )?
					int alt162=2;
					int LA162_0 = input.LA(1);
					if ( (LA162_0==91) ) {
						alt162=1;
					}
					switch (alt162) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:614:46: attributes
							{
							pushFollow(FOLLOW_attributes_in_accessor_declarations8405);
							attributes542=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes542.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:614:60: ( get_accessor_declaration )?
					int alt163=2;
					int LA163_0 = input.LA(1);
					if ( (LA163_0==133||LA163_0==140||LA163_0==161||(LA163_0 >= 163 && LA163_0 <= 164)) ) {
						alt163=1;
					}
					switch (alt163) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:614:60: get_accessor_declaration
							{
							pushFollow(FOLLOW_get_accessor_declaration_in_accessor_declarations8410);
							get_accessor_declaration543=get_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, get_accessor_declaration543.getTree());

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 167, accessor_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "accessor_declarations"


	public static class get_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "get_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:615:1: get_accessor_declaration : ( accessor_modifier )? 'get' accessor_body ;
	public final csParser.get_accessor_declaration_return get_accessor_declaration() throws RecognitionException {
		csParser.get_accessor_declaration_return retval = new csParser.get_accessor_declaration_return();
		retval.start = input.LT(1);
		int get_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal545=null;
		ParserRuleReturnScope accessor_modifier544 =null;
		ParserRuleReturnScope accessor_body546 =null;

		CommonTree string_literal545_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:615:25: ( ( accessor_modifier )? 'get' accessor_body )
			// /Users/jeremie/ANTLR/cs.g:616:9: ( accessor_modifier )? 'get' accessor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:616:9: ( accessor_modifier )?
			int alt165=2;
			int LA165_0 = input.LA(1);
			if ( (LA165_0==140||LA165_0==161||(LA165_0 >= 163 && LA165_0 <= 164)) ) {
				alt165=1;
			}
			switch (alt165) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:616:9: accessor_modifier
					{
					pushFollow(FOLLOW_accessor_modifier_in_get_accessor_declaration8427);
					accessor_modifier544=accessor_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier544.getTree());

					}
					break;

			}

			string_literal545=(Token)match(input,133,FOLLOW_133_in_get_accessor_declaration8432); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal545_tree = (CommonTree)adaptor.create(string_literal545);
			adaptor.addChild(root_0, string_literal545_tree);
			}

			pushFollow(FOLLOW_accessor_body_in_get_accessor_declaration8436);
			accessor_body546=accessor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body546.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 168, get_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "get_accessor_declaration"


	public static class set_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "set_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:617:1: set_accessor_declaration : ( accessor_modifier )? 'set' accessor_body ;
	public final csParser.set_accessor_declaration_return set_accessor_declaration() throws RecognitionException {
		csParser.set_accessor_declaration_return retval = new csParser.set_accessor_declaration_return();
		retval.start = input.LT(1);
		int set_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal548=null;
		ParserRuleReturnScope accessor_modifier547 =null;
		ParserRuleReturnScope accessor_body549 =null;

		CommonTree string_literal548_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:617:25: ( ( accessor_modifier )? 'set' accessor_body )
			// /Users/jeremie/ANTLR/cs.g:618:9: ( accessor_modifier )? 'set' accessor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:618:9: ( accessor_modifier )?
			int alt166=2;
			int LA166_0 = input.LA(1);
			if ( (LA166_0==140||LA166_0==161||(LA166_0 >= 163 && LA166_0 <= 164)) ) {
				alt166=1;
			}
			switch (alt166) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:618:9: accessor_modifier
					{
					pushFollow(FOLLOW_accessor_modifier_in_set_accessor_declaration8451);
					accessor_modifier547=accessor_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_modifier547.getTree());

					}
					break;

			}

			string_literal548=(Token)match(input,172,FOLLOW_172_in_set_accessor_declaration8456); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal548_tree = (CommonTree)adaptor.create(string_literal548);
			adaptor.addChild(root_0, string_literal548_tree);
			}

			pushFollow(FOLLOW_accessor_body_in_set_accessor_declaration8460);
			accessor_body549=accessor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_body549.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 169, set_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "set_accessor_declaration"


	public static class accessor_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "accessor_modifier"
	// /Users/jeremie/ANTLR/cs.g:619:1: accessor_modifier : ( 'public' | 'protected' | 'private' | 'internal' );
	public final csParser.accessor_modifier_return accessor_modifier() throws RecognitionException {
		csParser.accessor_modifier_return retval = new csParser.accessor_modifier_return();
		retval.start = input.LT(1);
		int accessor_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set550=null;

		CommonTree set550_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:619:18: ( 'public' | 'protected' | 'private' | 'internal' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set550=input.LT(1);
			if ( input.LA(1)==140||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 164) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set550));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 170, accessor_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "accessor_modifier"


	public static class accessor_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "accessor_body"
	// /Users/jeremie/ANTLR/cs.g:621:1: accessor_body : block ;
	public final csParser.accessor_body_return accessor_body() throws RecognitionException {
		csParser.accessor_body_return retval = new csParser.accessor_body_return();
		retval.start = input.LT(1);
		int accessor_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block551 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:621:14: ( block )
			// /Users/jeremie/ANTLR/cs.g:622:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_accessor_body8502);
			block551=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block551.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 171, accessor_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "accessor_body"


	public static class event_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "event_declaration"
	// /Users/jeremie/ANTLR/cs.g:625:1: event_declaration : 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) ;
	public final csParser.event_declaration_return event_declaration() throws RecognitionException {
		csParser.event_declaration_return retval = new csParser.event_declaration_return();
		retval.start = input.LT(1);
		int event_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal552=null;
		Token char_literal555=null;
		Token char_literal557=null;
		Token char_literal559=null;
		ParserRuleReturnScope type553 =null;
		ParserRuleReturnScope member_name554 =null;
		ParserRuleReturnScope event_accessor_declarations556 =null;
		ParserRuleReturnScope variable_declarators558 =null;

		CommonTree string_literal552_tree=null;
		CommonTree char_literal555_tree=null;
		CommonTree char_literal557_tree=null;
		CommonTree char_literal559_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:625:18: ( 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' ) )
			// /Users/jeremie/ANTLR/cs.g:626:9: 'event' type ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal552=(Token)match(input,123,FOLLOW_123_in_event_declaration8519); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal552_tree = (CommonTree)adaptor.create(string_literal552);
			adaptor.addChild(root_0, string_literal552_tree);
			}

			pushFollow(FOLLOW_type_in_event_declaration8523);
			type553=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type553.getTree());

			// /Users/jeremie/ANTLR/cs.g:627:17: ( ( member_name '{' )=> member_name '{' event_accessor_declarations '}' | variable_declarators ';' )
			int alt167=2;
			int LA167_0 = input.LA(1);
			if ( (LA167_0==103||LA167_0==106||LA167_0==109||LA167_0==114||LA167_0==119||LA167_0==129||LA167_0==138||LA167_0==146||LA167_0==151||LA167_0==169||LA167_0==173||LA167_0==177||(LA167_0 >= 185 && LA167_0 <= 186)||LA167_0==189) && (synpred25_cs())) {
				alt167=1;
			}
			else if ( (LA167_0==IDENTIFIER||LA167_0==95||(LA167_0 >= 97 && LA167_0 <= 98)||(LA167_0 >= 100 && LA167_0 <= 101)||LA167_0==105||LA167_0==117||LA167_0==120||LA167_0==122||LA167_0==126||LA167_0==132||LA167_0==135||LA167_0==141||(LA167_0 >= 143 && LA167_0 <= 144)||(LA167_0 >= 147 && LA167_0 <= 148)||LA167_0==152||LA167_0==154||LA167_0==157||LA167_0==160||LA167_0==162||LA167_0==167||(LA167_0 >= 171 && LA167_0 <= 172)||LA167_0==183||LA167_0==190||LA167_0==194||LA167_0==196) ) {
				int LA167_2 = input.LA(2);
				if ( (synpred25_cs()) ) {
					alt167=1;
				}
				else if ( (true) ) {
					alt167=2;
				}

			}
			else if ( (LA167_0==Character_literal||LA167_0==FALSE||LA167_0==Hex_number||(LA167_0 >= NULL && LA167_0 <= NUMBER)||LA167_0==Real_literal||LA167_0==STRINGLITERAL||LA167_0==TRUE||LA167_0==Verbatim_string_literal) && (synpred25_cs())) {
				alt167=1;
			}

			switch (alt167) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:627:18: ( member_name '{' )=> member_name '{' event_accessor_declarations '}'
					{
					pushFollow(FOLLOW_member_name_in_event_declaration8552);
					member_name554=member_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, member_name554.getTree());

					char_literal555=(Token)match(input,197,FOLLOW_197_in_event_declaration8556); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal555_tree = (CommonTree)adaptor.create(char_literal555);
					adaptor.addChild(root_0, char_literal555_tree);
					}

					pushFollow(FOLLOW_event_accessor_declarations_in_event_declaration8560);
					event_accessor_declarations556=event_accessor_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, event_accessor_declarations556.getTree());

					char_literal557=(Token)match(input,201,FOLLOW_201_in_event_declaration8564); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal557_tree = (CommonTree)adaptor.create(char_literal557);
					adaptor.addChild(root_0, char_literal557_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:628:19: variable_declarators ';'
					{
					pushFollow(FOLLOW_variable_declarators_in_event_declaration8584);
					variable_declarators558=variable_declarators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variable_declarators558.getTree());

					char_literal559=(Token)match(input,SEMI,FOLLOW_SEMI_in_event_declaration8588); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal559_tree = (CommonTree)adaptor.create(char_literal559);
					adaptor.addChild(root_0, char_literal559_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 172, event_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "event_declaration"


	public static class event_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "event_modifiers"
	// /Users/jeremie/ANTLR/cs.g:630:1: event_modifiers : ( modifier )+ ;
	public final csParser.event_modifiers_return event_modifiers() throws RecognitionException {
		csParser.event_modifiers_return retval = new csParser.event_modifiers_return();
		retval.start = input.LT(1);
		int event_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier560 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:630:16: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:631:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:631:9: ( modifier )+
			int cnt168=0;
			loop168:
			while (true) {
				int alt168=2;
				int LA168_0 = input.LA(1);
				if ( (LA168_0==96||LA168_0==125||LA168_0==140||LA168_0==150||LA168_0==156||LA168_0==161||(LA168_0 >= 163 && LA168_0 <= 165)||LA168_0==170||LA168_0==176||LA168_0==188||LA168_0==191||LA168_0==193) ) {
					alt168=1;
				}

				switch (alt168) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:631:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_event_modifiers8628);
					modifier560=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier560.getTree());

					}
					break;

				default :
					if ( cnt168 >= 1 ) break loop168;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(168, input);
					throw eee;
				}
				cnt168++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 173, event_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "event_modifiers"


	public static class event_accessor_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "event_accessor_declarations"
	// /Users/jeremie/ANTLR/cs.g:632:1: event_accessor_declarations : ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) ;
	public final csParser.event_accessor_declarations_return event_accessor_declarations() throws RecognitionException {
		csParser.event_accessor_declarations_return retval = new csParser.event_accessor_declarations_return();
		retval.start = input.LT(1);
		int event_accessor_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes561 =null;
		ParserRuleReturnScope add_accessor_declaration562 =null;
		ParserRuleReturnScope attributes563 =null;
		ParserRuleReturnScope remove_accessor_declaration564 =null;
		ParserRuleReturnScope remove_accessor_declaration565 =null;
		ParserRuleReturnScope attributes566 =null;
		ParserRuleReturnScope add_accessor_declaration567 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:632:28: ( ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) ) )
			// /Users/jeremie/ANTLR/cs.g:633:9: ( attributes )? ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:633:9: ( attributes )?
			int alt169=2;
			int LA169_0 = input.LA(1);
			if ( (LA169_0==91) ) {
				alt169=1;
			}
			switch (alt169) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:633:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_event_accessor_declarations8644);
					attributes561=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes561.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:633:23: ( ( add_accessor_declaration ( attributes )? remove_accessor_declaration ) | ( remove_accessor_declaration ( attributes )? add_accessor_declaration ) )
			int alt172=2;
			int LA172_0 = input.LA(1);
			if ( (LA172_0==97) ) {
				alt172=1;
			}
			else if ( (LA172_0==167) ) {
				alt172=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 172, 0, input);
				throw nvae;
			}

			switch (alt172) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:633:24: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
					{
					// /Users/jeremie/ANTLR/cs.g:633:24: ( add_accessor_declaration ( attributes )? remove_accessor_declaration )
					// /Users/jeremie/ANTLR/cs.g:633:25: add_accessor_declaration ( attributes )? remove_accessor_declaration
					{
					pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations8651);
					add_accessor_declaration562=add_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration562.getTree());

					// /Users/jeremie/ANTLR/cs.g:633:52: ( attributes )?
					int alt170=2;
					int LA170_0 = input.LA(1);
					if ( (LA170_0==91) ) {
						alt170=1;
					}
					switch (alt170) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:633:52: attributes
							{
							pushFollow(FOLLOW_attributes_in_event_accessor_declarations8655);
							attributes563=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes563.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8660);
					remove_accessor_declaration564=remove_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration564.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:634:25: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
					{
					// /Users/jeremie/ANTLR/cs.g:634:25: ( remove_accessor_declaration ( attributes )? add_accessor_declaration )
					// /Users/jeremie/ANTLR/cs.g:634:26: remove_accessor_declaration ( attributes )? add_accessor_declaration
					{
					pushFollow(FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8688);
					remove_accessor_declaration565=remove_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, remove_accessor_declaration565.getTree());

					// /Users/jeremie/ANTLR/cs.g:634:56: ( attributes )?
					int alt171=2;
					int LA171_0 = input.LA(1);
					if ( (LA171_0==91) ) {
						alt171=1;
					}
					switch (alt171) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:634:56: attributes
							{
							pushFollow(FOLLOW_attributes_in_event_accessor_declarations8692);
							attributes566=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes566.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_add_accessor_declaration_in_event_accessor_declarations8697);
					add_accessor_declaration567=add_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, add_accessor_declaration567.getTree());

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 174, event_accessor_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "event_accessor_declarations"


	public static class add_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "add_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:635:1: add_accessor_declaration : 'add' block ;
	public final csParser.add_accessor_declaration_return add_accessor_declaration() throws RecognitionException {
		csParser.add_accessor_declaration_return retval = new csParser.add_accessor_declaration_return();
		retval.start = input.LT(1);
		int add_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal568=null;
		ParserRuleReturnScope block569 =null;

		CommonTree string_literal568_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:635:25: ( 'add' block )
			// /Users/jeremie/ANTLR/cs.g:636:9: 'add' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal568=(Token)match(input,97,FOLLOW_97_in_add_accessor_declaration8714); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal568_tree = (CommonTree)adaptor.create(string_literal568);
			adaptor.addChild(root_0, string_literal568_tree);
			}

			pushFollow(FOLLOW_block_in_add_accessor_declaration8718);
			block569=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block569.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 175, add_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "add_accessor_declaration"


	public static class remove_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "remove_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:637:1: remove_accessor_declaration : 'remove' block ;
	public final csParser.remove_accessor_declaration_return remove_accessor_declaration() throws RecognitionException {
		csParser.remove_accessor_declaration_return retval = new csParser.remove_accessor_declaration_return();
		retval.start = input.LT(1);
		int remove_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal570=null;
		ParserRuleReturnScope block571 =null;

		CommonTree string_literal570_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:637:28: ( 'remove' block )
			// /Users/jeremie/ANTLR/cs.g:638:9: 'remove' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal570=(Token)match(input,167,FOLLOW_167_in_remove_accessor_declaration8733); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal570_tree = (CommonTree)adaptor.create(string_literal570);
			adaptor.addChild(root_0, string_literal570_tree);
			}

			pushFollow(FOLLOW_block_in_remove_accessor_declaration8737);
			block571=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block571.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 176, remove_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "remove_accessor_declaration"


	public static class enum_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_declaration"
	// /Users/jeremie/ANTLR/cs.g:643:1: enum_declaration : 'enum' identifier ( enum_base )? enum_body ( ';' )? ;
	public final csParser.enum_declaration_return enum_declaration() throws RecognitionException {
		csParser.enum_declaration_return retval = new csParser.enum_declaration_return();
		retval.start = input.LT(1);
		int enum_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal572=null;
		Token char_literal576=null;
		ParserRuleReturnScope identifier573 =null;
		ParserRuleReturnScope enum_base574 =null;
		ParserRuleReturnScope enum_body575 =null;

		CommonTree string_literal572_tree=null;
		CommonTree char_literal576_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:643:17: ( 'enum' identifier ( enum_base )? enum_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:644:9: 'enum' identifier ( enum_base )? enum_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal572=(Token)match(input,ENUM,FOLLOW_ENUM_in_enum_declaration8756); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal572_tree = (CommonTree)adaptor.create(string_literal572);
			adaptor.addChild(root_0, string_literal572_tree);
			}

			pushFollow(FOLLOW_identifier_in_enum_declaration8760);
			identifier573=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier573.getTree());

			// /Users/jeremie/ANTLR/cs.g:644:31: ( enum_base )?
			int alt173=2;
			int LA173_0 = input.LA(1);
			if ( (LA173_0==79) ) {
				alt173=1;
			}
			switch (alt173) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:644:31: enum_base
					{
					pushFollow(FOLLOW_enum_base_in_enum_declaration8764);
					enum_base574=enum_base();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_base574.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_enum_body_in_enum_declaration8769);
			enum_body575=enum_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_body575.getTree());

			// /Users/jeremie/ANTLR/cs.g:644:56: ( ';' )?
			int alt174=2;
			int LA174_0 = input.LA(1);
			if ( (LA174_0==SEMI) ) {
				alt174=1;
			}
			switch (alt174) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:644:56: ';'
					{
					char_literal576=(Token)match(input,SEMI,FOLLOW_SEMI_in_enum_declaration8773); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal576_tree = (CommonTree)adaptor.create(char_literal576);
					adaptor.addChild(root_0, char_literal576_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 177, enum_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_declaration"


	public static class enum_base_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_base"
	// /Users/jeremie/ANTLR/cs.g:645:1: enum_base : ':' integral_type ;
	public final csParser.enum_base_return enum_base() throws RecognitionException {
		csParser.enum_base_return retval = new csParser.enum_base_return();
		retval.start = input.LT(1);
		int enum_base_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal577=null;
		ParserRuleReturnScope integral_type578 =null;

		CommonTree char_literal577_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:645:10: ( ':' integral_type )
			// /Users/jeremie/ANTLR/cs.g:646:9: ':' integral_type
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal577=(Token)match(input,79,FOLLOW_79_in_enum_base8789); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal577_tree = (CommonTree)adaptor.create(char_literal577);
			adaptor.addChild(root_0, char_literal577_tree);
			}

			pushFollow(FOLLOW_integral_type_in_enum_base8793);
			integral_type578=integral_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, integral_type578.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 178, enum_base_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_base"


	public static class enum_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_body"
	// /Users/jeremie/ANTLR/cs.g:647:1: enum_body : '{' ( enum_member_declarations ( ',' )? )? '}' ;
	public final csParser.enum_body_return enum_body() throws RecognitionException {
		csParser.enum_body_return retval = new csParser.enum_body_return();
		retval.start = input.LT(1);
		int enum_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal579=null;
		Token char_literal581=null;
		Token char_literal582=null;
		ParserRuleReturnScope enum_member_declarations580 =null;

		CommonTree char_literal579_tree=null;
		CommonTree char_literal581_tree=null;
		CommonTree char_literal582_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:647:10: ( '{' ( enum_member_declarations ( ',' )? )? '}' )
			// /Users/jeremie/ANTLR/cs.g:648:9: '{' ( enum_member_declarations ( ',' )? )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal579=(Token)match(input,197,FOLLOW_197_in_enum_body8808); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal579_tree = (CommonTree)adaptor.create(char_literal579);
			adaptor.addChild(root_0, char_literal579_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:648:13: ( enum_member_declarations ( ',' )? )?
			int alt176=2;
			int LA176_0 = input.LA(1);
			if ( (LA176_0==IDENTIFIER||LA176_0==91||LA176_0==95||(LA176_0 >= 97 && LA176_0 <= 98)||(LA176_0 >= 100 && LA176_0 <= 101)||LA176_0==105||LA176_0==117||LA176_0==120||LA176_0==122||LA176_0==126||LA176_0==132||LA176_0==135||LA176_0==141||(LA176_0 >= 143 && LA176_0 <= 144)||(LA176_0 >= 147 && LA176_0 <= 148)||LA176_0==152||LA176_0==154||LA176_0==157||LA176_0==160||LA176_0==162||LA176_0==167||(LA176_0 >= 171 && LA176_0 <= 172)||LA176_0==183||LA176_0==190||LA176_0==194||LA176_0==196) ) {
				alt176=1;
			}
			switch (alt176) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:648:14: enum_member_declarations ( ',' )?
					{
					pushFollow(FOLLOW_enum_member_declarations_in_enum_body8811);
					enum_member_declarations580=enum_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declarations580.getTree());

					// /Users/jeremie/ANTLR/cs.g:648:39: ( ',' )?
					int alt175=2;
					int LA175_0 = input.LA(1);
					if ( (LA175_0==74) ) {
						alt175=1;
					}
					switch (alt175) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:648:39: ','
							{
							char_literal581=(Token)match(input,74,FOLLOW_74_in_enum_body8813); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal581_tree = (CommonTree)adaptor.create(char_literal581);
							adaptor.addChild(root_0, char_literal581_tree);
							}

							}
							break;

					}

					}
					break;

			}

			char_literal582=(Token)match(input,201,FOLLOW_201_in_enum_body8820); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal582_tree = (CommonTree)adaptor.create(char_literal582);
			adaptor.addChild(root_0, char_literal582_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 179, enum_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_body"


	public static class enum_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:649:1: enum_member_declarations : enum_member_declaration ( ',' enum_member_declaration )* ;
	public final csParser.enum_member_declarations_return enum_member_declarations() throws RecognitionException {
		csParser.enum_member_declarations_return retval = new csParser.enum_member_declarations_return();
		retval.start = input.LT(1);
		int enum_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal584=null;
		ParserRuleReturnScope enum_member_declaration583 =null;
		ParserRuleReturnScope enum_member_declaration585 =null;

		CommonTree char_literal584_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:649:25: ( enum_member_declaration ( ',' enum_member_declaration )* )
			// /Users/jeremie/ANTLR/cs.g:650:9: enum_member_declaration ( ',' enum_member_declaration )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations8835);
			enum_member_declaration583=enum_member_declaration();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration583.getTree());

			// /Users/jeremie/ANTLR/cs.g:650:33: ( ',' enum_member_declaration )*
			loop177:
			while (true) {
				int alt177=2;
				int LA177_0 = input.LA(1);
				if ( (LA177_0==74) ) {
					int LA177_1 = input.LA(2);
					if ( (LA177_1==IDENTIFIER||LA177_1==91||LA177_1==95||(LA177_1 >= 97 && LA177_1 <= 98)||(LA177_1 >= 100 && LA177_1 <= 101)||LA177_1==105||LA177_1==117||LA177_1==120||LA177_1==122||LA177_1==126||LA177_1==132||LA177_1==135||LA177_1==141||(LA177_1 >= 143 && LA177_1 <= 144)||(LA177_1 >= 147 && LA177_1 <= 148)||LA177_1==152||LA177_1==154||LA177_1==157||LA177_1==160||LA177_1==162||LA177_1==167||(LA177_1 >= 171 && LA177_1 <= 172)||LA177_1==183||LA177_1==190||LA177_1==194||LA177_1==196) ) {
						alt177=1;
					}

				}

				switch (alt177) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:650:34: ',' enum_member_declaration
					{
					char_literal584=(Token)match(input,74,FOLLOW_74_in_enum_member_declarations8838); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal584_tree = (CommonTree)adaptor.create(char_literal584);
					adaptor.addChild(root_0, char_literal584_tree);
					}

					pushFollow(FOLLOW_enum_member_declaration_in_enum_member_declarations8840);
					enum_member_declaration585=enum_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_member_declaration585.getTree());

					}
					break;

				default :
					break loop177;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 180, enum_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_member_declarations"


	public static class enum_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "enum_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:651:1: enum_member_declaration : ( attributes )? identifier ( '=' expression )? ;
	public final csParser.enum_member_declaration_return enum_member_declaration() throws RecognitionException {
		csParser.enum_member_declaration_return retval = new csParser.enum_member_declaration_return();
		retval.start = input.LT(1);
		int enum_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal588=null;
		ParserRuleReturnScope attributes586 =null;
		ParserRuleReturnScope identifier587 =null;
		ParserRuleReturnScope expression589 =null;

		CommonTree char_literal588_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:651:24: ( ( attributes )? identifier ( '=' expression )? )
			// /Users/jeremie/ANTLR/cs.g:652:9: ( attributes )? identifier ( '=' expression )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:652:9: ( attributes )?
			int alt178=2;
			int LA178_0 = input.LA(1);
			if ( (LA178_0==91) ) {
				alt178=1;
			}
			switch (alt178) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:652:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_enum_member_declaration8857);
					attributes586=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes586.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_identifier_in_enum_member_declaration8862);
			identifier587=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier587.getTree());

			// /Users/jeremie/ANTLR/cs.g:652:36: ( '=' expression )?
			int alt179=2;
			int LA179_0 = input.LA(1);
			if ( (LA179_0==85) ) {
				alt179=1;
			}
			switch (alt179) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:652:37: '=' expression
					{
					char_literal588=(Token)match(input,85,FOLLOW_85_in_enum_member_declaration8867); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal588_tree = (CommonTree)adaptor.create(char_literal588);
					adaptor.addChild(root_0, char_literal588_tree);
					}

					pushFollow(FOLLOW_expression_in_enum_member_declaration8871);
					expression589=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression589.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 181, enum_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "enum_member_declaration"


	public static class integral_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "integral_type"
	// /Users/jeremie/ANTLR/cs.g:657:1: integral_type : ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' );
	public final csParser.integral_type_return integral_type() throws RecognitionException {
		csParser.integral_type_return retval = new csParser.integral_type_return();
		retval.start = input.LT(1);
		int integral_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set590=null;

		CommonTree set590_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:657:14: ( 'sbyte' | 'byte' | 'short' | 'ushort' | 'int' | 'uint' | 'long' | 'ulong' | 'char' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set590=input.LT(1);
			if ( input.LA(1)==106||input.LA(1)==109||input.LA(1)==138||input.LA(1)==146||input.LA(1)==169||input.LA(1)==173||(input.LA(1) >= 185 && input.LA(1) <= 186)||input.LA(1)==189 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set590));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 182, integral_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "integral_type"


	public static class delegate_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_declaration"
	// /Users/jeremie/ANTLR/cs.g:661:1: delegate_declaration : 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	public final csParser.delegate_declaration_return delegate_declaration() throws RecognitionException {
		csParser.delegate_declaration_return retval = new csParser.delegate_declaration_return();
		retval.start = input.LT(1);
		int delegate_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal591=null;
		Token char_literal595=null;
		Token char_literal597=null;
		Token char_literal599=null;
		ParserRuleReturnScope return_type592 =null;
		ParserRuleReturnScope identifier593 =null;
		ParserRuleReturnScope variant_generic_parameter_list594 =null;
		ParserRuleReturnScope formal_parameter_list596 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses598 =null;

		CommonTree string_literal591_tree=null;
		CommonTree char_literal595_tree=null;
		CommonTree char_literal597_tree=null;
		CommonTree char_literal599_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:661:21: ( 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			// /Users/jeremie/ANTLR/cs.g:662:9: 'delegate' return_type identifier ( variant_generic_parameter_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal591=(Token)match(input,116,FOLLOW_116_in_delegate_declaration8942); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal591_tree = (CommonTree)adaptor.create(string_literal591);
			adaptor.addChild(root_0, string_literal591_tree);
			}

			pushFollow(FOLLOW_return_type_in_delegate_declaration8946);
			return_type592=return_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, return_type592.getTree());

			pushFollow(FOLLOW_identifier_in_delegate_declaration8950);
			identifier593=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier593.getTree());

			// /Users/jeremie/ANTLR/cs.g:662:48: ( variant_generic_parameter_list )?
			int alt180=2;
			int LA180_0 = input.LA(1);
			if ( (LA180_0==81) ) {
				alt180=1;
			}
			switch (alt180) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:662:48: variant_generic_parameter_list
					{
					pushFollow(FOLLOW_variant_generic_parameter_list_in_delegate_declaration8953);
					variant_generic_parameter_list594=variant_generic_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_generic_parameter_list594.getTree());

					}
					break;

			}

			char_literal595=(Token)match(input,68,FOLLOW_68_in_delegate_declaration8975); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal595_tree = (CommonTree)adaptor.create(char_literal595);
			adaptor.addChild(root_0, char_literal595_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:663:23: ( formal_parameter_list )?
			int alt181=2;
			int LA181_0 = input.LA(1);
			if ( (LA181_0==IDENTIFIER||LA181_0==91||LA181_0==95||(LA181_0 >= 97 && LA181_0 <= 98)||(LA181_0 >= 100 && LA181_0 <= 101)||LA181_0==103||(LA181_0 >= 105 && LA181_0 <= 106)||LA181_0==109||LA181_0==114||LA181_0==117||(LA181_0 >= 119 && LA181_0 <= 120)||LA181_0==122||LA181_0==126||LA181_0==129||LA181_0==132||LA181_0==135||LA181_0==138||LA181_0==141||(LA181_0 >= 143 && LA181_0 <= 144)||(LA181_0 >= 146 && LA181_0 <= 148)||(LA181_0 >= 151 && LA181_0 <= 152)||(LA181_0 >= 154 && LA181_0 <= 155)||(LA181_0 >= 157 && LA181_0 <= 158)||LA181_0==160||LA181_0==162||(LA181_0 >= 166 && LA181_0 <= 167)||LA181_0==169||(LA181_0 >= 171 && LA181_0 <= 173)||LA181_0==177||LA181_0==180||LA181_0==183||(LA181_0 >= 185 && LA181_0 <= 186)||(LA181_0 >= 189 && LA181_0 <= 190)||LA181_0==192||LA181_0==194||LA181_0==196) ) {
				alt181=1;
			}
			switch (alt181) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:663:23: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_delegate_declaration8979);
					formal_parameter_list596=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list596.getTree());

					}
					break;

			}

			char_literal597=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_delegate_declaration8984); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal597_tree = (CommonTree)adaptor.create(char_literal597);
			adaptor.addChild(root_0, char_literal597_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:663:54: ( type_parameter_constraints_clauses )?
			int alt182=2;
			int LA182_0 = input.LA(1);
			if ( (LA182_0==194) ) {
				alt182=1;
			}
			switch (alt182) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:663:54: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration8988);
					type_parameter_constraints_clauses598=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses598.getTree());

					}
					break;

			}

			char_literal599=(Token)match(input,SEMI,FOLLOW_SEMI_in_delegate_declaration8993); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal599_tree = (CommonTree)adaptor.create(char_literal599);
			adaptor.addChild(root_0, char_literal599_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 183, delegate_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_declaration"


	public static class delegate_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_modifiers"
	// /Users/jeremie/ANTLR/cs.g:664:1: delegate_modifiers : ( modifier )+ ;
	public final csParser.delegate_modifiers_return delegate_modifiers() throws RecognitionException {
		csParser.delegate_modifiers_return retval = new csParser.delegate_modifiers_return();
		retval.start = input.LT(1);
		int delegate_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier600 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:664:19: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:665:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:665:9: ( modifier )+
			int cnt183=0;
			loop183:
			while (true) {
				int alt183=2;
				int LA183_0 = input.LA(1);
				if ( (LA183_0==96||LA183_0==125||LA183_0==140||LA183_0==150||LA183_0==156||LA183_0==161||(LA183_0 >= 163 && LA183_0 <= 165)||LA183_0==170||LA183_0==176||LA183_0==188||LA183_0==191||LA183_0==193) ) {
					alt183=1;
				}

				switch (alt183) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:665:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_delegate_modifiers9008);
					modifier600=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier600.getTree());

					}
					break;

				default :
					if ( cnt183 >= 1 ) break loop183;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(183, input);
					throw eee;
				}
				cnt183++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 184, delegate_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_modifiers"


	public static class variant_generic_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variant_generic_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:667:1: variant_generic_parameter_list : '<' variant_type_parameters '>' ;
	public final csParser.variant_generic_parameter_list_return variant_generic_parameter_list() throws RecognitionException {
		csParser.variant_generic_parameter_list_return retval = new csParser.variant_generic_parameter_list_return();
		retval.start = input.LT(1);
		int variant_generic_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal601=null;
		Token char_literal603=null;
		ParserRuleReturnScope variant_type_parameters602 =null;

		CommonTree char_literal601_tree=null;
		CommonTree char_literal603_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:667:31: ( '<' variant_type_parameters '>' )
			// /Users/jeremie/ANTLR/cs.g:668:9: '<' variant_type_parameters '>'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal601=(Token)match(input,81,FOLLOW_81_in_variant_generic_parameter_list9025); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal601_tree = (CommonTree)adaptor.create(char_literal601);
			adaptor.addChild(root_0, char_literal601_tree);
			}

			pushFollow(FOLLOW_variant_type_parameters_in_variant_generic_parameter_list9029);
			variant_type_parameters602=variant_type_parameters();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_parameters602.getTree());

			char_literal603=(Token)match(input,GT,FOLLOW_GT_in_variant_generic_parameter_list9033); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal603_tree = (CommonTree)adaptor.create(char_literal603);
			adaptor.addChild(root_0, char_literal603_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 185, variant_generic_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variant_generic_parameter_list"


	public static class variant_type_parameters_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variant_type_parameters"
	// /Users/jeremie/ANTLR/cs.g:669:1: variant_type_parameters : variant_type_variable_name ( ',' variant_type_variable_name )* ;
	public final csParser.variant_type_parameters_return variant_type_parameters() throws RecognitionException {
		csParser.variant_type_parameters_return retval = new csParser.variant_type_parameters_return();
		retval.start = input.LT(1);
		int variant_type_parameters_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal605=null;
		ParserRuleReturnScope variant_type_variable_name604 =null;
		ParserRuleReturnScope variant_type_variable_name606 =null;

		CommonTree char_literal605_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:669:24: ( variant_type_variable_name ( ',' variant_type_variable_name )* )
			// /Users/jeremie/ANTLR/cs.g:670:9: variant_type_variable_name ( ',' variant_type_variable_name )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters9048);
			variant_type_variable_name604=variant_type_variable_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_variable_name604.getTree());

			// /Users/jeremie/ANTLR/cs.g:670:36: ( ',' variant_type_variable_name )*
			loop184:
			while (true) {
				int alt184=2;
				int LA184_0 = input.LA(1);
				if ( (LA184_0==74) ) {
					alt184=1;
				}

				switch (alt184) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:670:37: ',' variant_type_variable_name
					{
					char_literal605=(Token)match(input,74,FOLLOW_74_in_variant_type_parameters9051); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal605_tree = (CommonTree)adaptor.create(char_literal605);
					adaptor.addChild(root_0, char_literal605_tree);
					}

					pushFollow(FOLLOW_variant_type_variable_name_in_variant_type_parameters9053);
					variant_type_variable_name606=variant_type_variable_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_type_variable_name606.getTree());

					}
					break;

				default :
					break loop184;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 186, variant_type_parameters_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variant_type_parameters"


	public static class variant_type_variable_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variant_type_variable_name"
	// /Users/jeremie/ANTLR/cs.g:671:1: variant_type_variable_name : ( attributes )? ( variance_annotation )? type_variable_name ;
	public final csParser.variant_type_variable_name_return variant_type_variable_name() throws RecognitionException {
		csParser.variant_type_variable_name_return retval = new csParser.variant_type_variable_name_return();
		retval.start = input.LT(1);
		int variant_type_variable_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes607 =null;
		ParserRuleReturnScope variance_annotation608 =null;
		ParserRuleReturnScope type_variable_name609 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:671:27: ( ( attributes )? ( variance_annotation )? type_variable_name )
			// /Users/jeremie/ANTLR/cs.g:672:9: ( attributes )? ( variance_annotation )? type_variable_name
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:672:9: ( attributes )?
			int alt185=2;
			int LA185_0 = input.LA(1);
			if ( (LA185_0==91) ) {
				alt185=1;
			}
			switch (alt185) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:672:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_variant_type_variable_name9070);
					attributes607=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes607.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:672:23: ( variance_annotation )?
			int alt186=2;
			int LA186_0 = input.LA(1);
			if ( (LA186_0==137||LA186_0==155) ) {
				alt186=1;
			}
			switch (alt186) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:672:23: variance_annotation
					{
					pushFollow(FOLLOW_variance_annotation_in_variant_type_variable_name9075);
					variance_annotation608=variance_annotation();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variance_annotation608.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_type_variable_name_in_variant_type_variable_name9080);
			type_variable_name609=type_variable_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_variable_name609.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 187, variant_type_variable_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variant_type_variable_name"


	public static class variance_annotation_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "variance_annotation"
	// /Users/jeremie/ANTLR/cs.g:673:1: variance_annotation : ( 'in' | 'out' );
	public final csParser.variance_annotation_return variance_annotation() throws RecognitionException {
		csParser.variance_annotation_return retval = new csParser.variance_annotation_return();
		retval.start = input.LT(1);
		int variance_annotation_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set610=null;

		CommonTree set610_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:673:20: ( 'in' | 'out' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set610=input.LT(1);
			if ( input.LA(1)==137||input.LA(1)==155 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set610));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 188, variance_annotation_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "variance_annotation"


	public static class type_parameter_constraints_clauses_return extends ParserRuleReturnScope {
		public UnknowNode t;
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_parameter_constraints_clauses"
	// /Users/jeremie/ANTLR/cs.g:676:1: type_parameter_constraints_clauses returns [UnknowNode t] : type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* ;
	public final csParser.type_parameter_constraints_clauses_return type_parameter_constraints_clauses() throws RecognitionException {
		csParser.type_parameter_constraints_clauses_return retval = new csParser.type_parameter_constraints_clauses_return();
		retval.start = input.LT(1);
		int type_parameter_constraints_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal612=null;
		ParserRuleReturnScope type_parameter_constraints_clause611 =null;
		ParserRuleReturnScope type_parameter_constraints_clause613 =null;

		CommonTree char_literal612_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:676:59: ( type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )* )
			// /Users/jeremie/ANTLR/cs.g:677:9: type_parameter_constraints_clause ( ',' type_parameter_constraints_clause )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses9120);
			type_parameter_constraints_clause611=type_parameter_constraints_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause611.getTree());

			// /Users/jeremie/ANTLR/cs.g:677:45: ( ',' type_parameter_constraints_clause )*
			loop187:
			while (true) {
				int alt187=2;
				int LA187_0 = input.LA(1);
				if ( (LA187_0==74) ) {
					alt187=1;
				}

				switch (alt187) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:677:46: ',' type_parameter_constraints_clause
					{
					char_literal612=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraints_clauses9125); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal612_tree = (CommonTree)adaptor.create(char_literal612);
					adaptor.addChild(root_0, char_literal612_tree);
					}

					pushFollow(FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses9129);
					type_parameter_constraints_clause613=type_parameter_constraints_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clause613.getTree());

					}
					break;

				default :
					break loop187;
				}
			}

			if ( state.backtracking==0 ) {retval.t =new UnknowNode(root_0);}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 189, type_parameter_constraints_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_parameter_constraints_clauses"


	public static class type_parameter_constraints_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_parameter_constraints_clause"
	// /Users/jeremie/ANTLR/cs.g:678:1: type_parameter_constraints_clause : 'where' type_variable_name ':' type_parameter_constraint_list ;
	public final csParser.type_parameter_constraints_clause_return type_parameter_constraints_clause() throws RecognitionException {
		csParser.type_parameter_constraints_clause_return retval = new csParser.type_parameter_constraints_clause_return();
		retval.start = input.LT(1);
		int type_parameter_constraints_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal614=null;
		Token char_literal616=null;
		ParserRuleReturnScope type_variable_name615 =null;
		ParserRuleReturnScope type_parameter_constraint_list617 =null;

		CommonTree string_literal614_tree=null;
		CommonTree char_literal616_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:678:34: ( 'where' type_variable_name ':' type_parameter_constraint_list )
			// /Users/jeremie/ANTLR/cs.g:679:9: 'where' type_variable_name ':' type_parameter_constraint_list
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal614=(Token)match(input,194,FOLLOW_194_in_type_parameter_constraints_clause9147); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal614_tree = (CommonTree)adaptor.create(string_literal614);
			adaptor.addChild(root_0, string_literal614_tree);
			}

			pushFollow(FOLLOW_type_variable_name_in_type_parameter_constraints_clause9151);
			type_variable_name615=type_variable_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_variable_name615.getTree());

			char_literal616=(Token)match(input,79,FOLLOW_79_in_type_parameter_constraints_clause9155); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal616_tree = (CommonTree)adaptor.create(char_literal616);
			adaptor.addChild(root_0, char_literal616_tree);
			}

			pushFollow(FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause9159);
			type_parameter_constraint_list617=type_parameter_constraint_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraint_list617.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 190, type_parameter_constraints_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_parameter_constraints_clause"


	public static class type_parameter_constraint_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_parameter_constraint_list"
	// /Users/jeremie/ANTLR/cs.g:681:1: type_parameter_constraint_list : ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint );
	public final csParser.type_parameter_constraint_list_return type_parameter_constraint_list() throws RecognitionException {
		csParser.type_parameter_constraint_list_return retval = new csParser.type_parameter_constraint_list_return();
		retval.start = input.LT(1);
		int type_parameter_constraint_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set618=null;
		Token char_literal619=null;
		Token char_literal621=null;
		Token char_literal624=null;
		ParserRuleReturnScope secondary_constraint_list620 =null;
		ParserRuleReturnScope constructor_constraint622 =null;
		ParserRuleReturnScope secondary_constraint_list623 =null;
		ParserRuleReturnScope constructor_constraint625 =null;
		ParserRuleReturnScope constructor_constraint626 =null;

		CommonTree set618_tree=null;
		CommonTree char_literal619_tree=null;
		CommonTree char_literal621_tree=null;
		CommonTree char_literal624_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:681:31: ( ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )? | secondary_constraint_list ( ',' constructor_constraint )? | constructor_constraint )
			int alt191=3;
			switch ( input.LA(1) ) {
			case 111:
			case 178:
				{
				alt191=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				alt191=2;
				}
				break;
			case 150:
				{
				alt191=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 191, 0, input);
				throw nvae;
			}
			switch (alt191) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:682:5: ( 'class' | 'struct' ) ( ',' secondary_constraint_list )? ( ',' constructor_constraint )?
					{
					root_0 = (CommonTree)adaptor.nil();


					set618=input.LT(1);
					if ( input.LA(1)==111||input.LA(1)==178 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set618));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/jeremie/ANTLR/cs.g:682:28: ( ',' secondary_constraint_list )?
					int alt188=2;
					int LA188_0 = input.LA(1);
					if ( (LA188_0==74) ) {
						int LA188_1 = input.LA(2);
						if ( (LA188_1==194) ) {
							int LA188_3 = input.LA(3);
							if ( (LA188_3==DOT||LA188_3==SEMI||LA188_3==74||(LA188_3 >= 80 && LA188_3 <= 81)||LA188_3==197) ) {
								alt188=1;
							}
						}
						else if ( (LA188_1==IDENTIFIER||LA188_1==95||(LA188_1 >= 97 && LA188_1 <= 98)||(LA188_1 >= 100 && LA188_1 <= 101)||LA188_1==105||LA188_1==117||LA188_1==120||LA188_1==122||LA188_1==126||LA188_1==132||LA188_1==135||LA188_1==141||(LA188_1 >= 143 && LA188_1 <= 144)||(LA188_1 >= 147 && LA188_1 <= 148)||LA188_1==152||LA188_1==154||LA188_1==157||LA188_1==160||LA188_1==162||LA188_1==167||(LA188_1 >= 171 && LA188_1 <= 172)||LA188_1==183||LA188_1==190||LA188_1==196) ) {
							alt188=1;
						}
					}
					switch (alt188) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:682:29: ',' secondary_constraint_list
							{
							char_literal619=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraint_list9233); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal619_tree = (CommonTree)adaptor.create(char_literal619);
							adaptor.addChild(root_0, char_literal619_tree);
							}

							pushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list9237);
							secondary_constraint_list620=secondary_constraint_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint_list620.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:682:65: ( ',' constructor_constraint )?
					int alt189=2;
					int LA189_0 = input.LA(1);
					if ( (LA189_0==74) ) {
						int LA189_1 = input.LA(2);
						if ( (LA189_1==150) ) {
							alt189=1;
						}
					}
					switch (alt189) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:682:66: ',' constructor_constraint
							{
							char_literal621=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraint_list9244); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal621_tree = (CommonTree)adaptor.create(char_literal621);
							adaptor.addChild(root_0, char_literal621_tree);
							}

							pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list9248);
							constructor_constraint622=constructor_constraint();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint622.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:683:11: secondary_constraint_list ( ',' constructor_constraint )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list9262);
					secondary_constraint_list623=secondary_constraint_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint_list623.getTree());

					// /Users/jeremie/ANTLR/cs.g:683:39: ( ',' constructor_constraint )?
					int alt190=2;
					int LA190_0 = input.LA(1);
					if ( (LA190_0==74) ) {
						int LA190_1 = input.LA(2);
						if ( (LA190_1==150) ) {
							alt190=1;
						}
					}
					switch (alt190) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:683:40: ',' constructor_constraint
							{
							char_literal624=(Token)match(input,74,FOLLOW_74_in_type_parameter_constraint_list9267); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal624_tree = (CommonTree)adaptor.create(char_literal624);
							adaptor.addChild(root_0, char_literal624_tree);
							}

							pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list9271);
							constructor_constraint625=constructor_constraint();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint625.getTree());

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:684:11: constructor_constraint
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_constructor_constraint_in_type_parameter_constraint_list9285);
					constructor_constraint626=constructor_constraint();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_constraint626.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 191, type_parameter_constraint_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_parameter_constraint_list"


	public static class secondary_constraint_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secondary_constraint_list"
	// /Users/jeremie/ANTLR/cs.g:689:1: secondary_constraint_list : secondary_constraint ( ',' secondary_constraint )* ;
	public final csParser.secondary_constraint_list_return secondary_constraint_list() throws RecognitionException {
		csParser.secondary_constraint_list_return retval = new csParser.secondary_constraint_list_return();
		retval.start = input.LT(1);
		int secondary_constraint_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal628=null;
		ParserRuleReturnScope secondary_constraint627 =null;
		ParserRuleReturnScope secondary_constraint629 =null;

		CommonTree char_literal628_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:689:26: ( secondary_constraint ( ',' secondary_constraint )* )
			// /Users/jeremie/ANTLR/cs.g:690:9: secondary_constraint ( ',' secondary_constraint )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list9304);
			secondary_constraint627=secondary_constraint();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint627.getTree());

			// /Users/jeremie/ANTLR/cs.g:690:30: ( ',' secondary_constraint )*
			loop192:
			while (true) {
				int alt192=2;
				int LA192_0 = input.LA(1);
				if ( (LA192_0==74) ) {
					int LA192_1 = input.LA(2);
					if ( (LA192_1==194) ) {
						int LA192_3 = input.LA(3);
						if ( (LA192_3==DOT||LA192_3==SEMI||LA192_3==74||(LA192_3 >= 80 && LA192_3 <= 81)||LA192_3==197) ) {
							alt192=1;
						}

					}
					else if ( (LA192_1==IDENTIFIER||LA192_1==95||(LA192_1 >= 97 && LA192_1 <= 98)||(LA192_1 >= 100 && LA192_1 <= 101)||LA192_1==105||LA192_1==117||LA192_1==120||LA192_1==122||LA192_1==126||LA192_1==132||LA192_1==135||LA192_1==141||(LA192_1 >= 143 && LA192_1 <= 144)||(LA192_1 >= 147 && LA192_1 <= 148)||LA192_1==152||LA192_1==154||LA192_1==157||LA192_1==160||LA192_1==162||LA192_1==167||(LA192_1 >= 171 && LA192_1 <= 172)||LA192_1==183||LA192_1==190||LA192_1==196) ) {
						alt192=1;
					}

				}

				switch (alt192) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:690:31: ',' secondary_constraint
					{
					char_literal628=(Token)match(input,74,FOLLOW_74_in_secondary_constraint_list9307); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal628_tree = (CommonTree)adaptor.create(char_literal628);
					adaptor.addChild(root_0, char_literal628_tree);
					}

					pushFollow(FOLLOW_secondary_constraint_in_secondary_constraint_list9309);
					secondary_constraint629=secondary_constraint();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, secondary_constraint629.getTree());

					}
					break;

				default :
					break loop192;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 192, secondary_constraint_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "secondary_constraint_list"


	public static class secondary_constraint_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "secondary_constraint"
	// /Users/jeremie/ANTLR/cs.g:691:1: secondary_constraint : type_name ;
	public final csParser.secondary_constraint_return secondary_constraint() throws RecognitionException {
		csParser.secondary_constraint_return retval = new csParser.secondary_constraint_return();
		retval.start = input.LT(1);
		int secondary_constraint_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope type_name630 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:691:21: ( type_name )
			// /Users/jeremie/ANTLR/cs.g:692:9: type_name
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_type_name_in_secondary_constraint9326);
			type_name630=type_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name630.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 193, secondary_constraint_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "secondary_constraint"


	public static class type_variable_name_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "type_variable_name"
	// /Users/jeremie/ANTLR/cs.g:693:1: type_variable_name : identifier ;
	public final csParser.type_variable_name_return type_variable_name() throws RecognitionException {
		csParser.type_variable_name_return retval = new csParser.type_variable_name_return();
		retval.start = input.LT(1);
		int type_variable_name_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope identifier631 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:693:19: ( identifier )
			// /Users/jeremie/ANTLR/cs.g:694:9: identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_type_variable_name9350);
			identifier631=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier631.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 194, type_variable_name_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "type_variable_name"


	public static class constructor_constraint_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_constraint"
	// /Users/jeremie/ANTLR/cs.g:695:1: constructor_constraint : 'new' '(' ')' ;
	public final csParser.constructor_constraint_return constructor_constraint() throws RecognitionException {
		csParser.constructor_constraint_return retval = new csParser.constructor_constraint_return();
		retval.start = input.LT(1);
		int constructor_constraint_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal632=null;
		Token char_literal633=null;
		Token char_literal634=null;

		CommonTree string_literal632_tree=null;
		CommonTree char_literal633_tree=null;
		CommonTree char_literal634_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:695:23: ( 'new' '(' ')' )
			// /Users/jeremie/ANTLR/cs.g:696:9: 'new' '(' ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal632=(Token)match(input,150,FOLLOW_150_in_constructor_constraint9365); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal632_tree = (CommonTree)adaptor.create(string_literal632);
			adaptor.addChild(root_0, string_literal632_tree);
			}

			char_literal633=(Token)match(input,68,FOLLOW_68_in_constructor_constraint9369); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal633_tree = (CommonTree)adaptor.create(char_literal633);
			adaptor.addChild(root_0, char_literal633_tree);
			}

			char_literal634=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_constraint9373); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal634_tree = (CommonTree)adaptor.create(char_literal634);
			adaptor.addChild(root_0, char_literal634_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 195, constructor_constraint_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_constraint"


	public static class return_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "return_type"
	// /Users/jeremie/ANTLR/cs.g:697:1: return_type : ( type | 'void' );
	public final csParser.return_type_return return_type() throws RecognitionException {
		csParser.return_type_return retval = new csParser.return_type_return();
		retval.start = input.LT(1);
		int return_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal636=null;
		ParserRuleReturnScope type635 =null;

		CommonTree string_literal636_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:697:12: ( type | 'void' )
			int alt193=2;
			int LA193_0 = input.LA(1);
			if ( (LA193_0==IDENTIFIER||LA193_0==95||(LA193_0 >= 97 && LA193_0 <= 98)||(LA193_0 >= 100 && LA193_0 <= 101)||LA193_0==103||(LA193_0 >= 105 && LA193_0 <= 106)||LA193_0==109||LA193_0==114||LA193_0==117||(LA193_0 >= 119 && LA193_0 <= 120)||LA193_0==122||LA193_0==126||LA193_0==129||LA193_0==132||LA193_0==135||LA193_0==138||LA193_0==141||(LA193_0 >= 143 && LA193_0 <= 144)||(LA193_0 >= 146 && LA193_0 <= 148)||(LA193_0 >= 151 && LA193_0 <= 152)||LA193_0==154||LA193_0==157||LA193_0==160||LA193_0==162||LA193_0==167||LA193_0==169||(LA193_0 >= 171 && LA193_0 <= 173)||LA193_0==177||LA193_0==183||(LA193_0 >= 185 && LA193_0 <= 186)||(LA193_0 >= 189 && LA193_0 <= 190)||LA193_0==194||LA193_0==196) ) {
				alt193=1;
			}
			else if ( (LA193_0==192) ) {
				int LA193_2 = input.LA(2);
				if ( (LA193_2==69) ) {
					alt193=1;
				}
				else if ( (LA193_2==IDENTIFIER||LA193_2==95||(LA193_2 >= 97 && LA193_2 <= 98)||(LA193_2 >= 100 && LA193_2 <= 101)||LA193_2==105||LA193_2==117||LA193_2==120||LA193_2==122||LA193_2==126||LA193_2==132||LA193_2==135||LA193_2==141||(LA193_2 >= 143 && LA193_2 <= 144)||(LA193_2 >= 147 && LA193_2 <= 148)||LA193_2==152||LA193_2==154||LA193_2==157||LA193_2==160||LA193_2==162||LA193_2==167||(LA193_2 >= 171 && LA193_2 <= 172)||LA193_2==183||LA193_2==190||LA193_2==194||LA193_2==196) ) {
					alt193=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 193, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 193, 0, input);
				throw nvae;
			}

			switch (alt193) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:698:9: type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_type_in_return_type9388);
					type635=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type635.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:699:12: 'void'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal636=(Token)match(input,192,FOLLOW_192_in_return_type9401); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal636_tree = (CommonTree)adaptor.create(string_literal636);
					adaptor.addChild(root_0, string_literal636_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 196, return_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "return_type"


	public static class formal_parameter_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "formal_parameter_list"
	// /Users/jeremie/ANTLR/cs.g:700:1: formal_parameter_list : formal_parameter ( ',' formal_parameter )* ;
	public final csParser.formal_parameter_list_return formal_parameter_list() throws RecognitionException {
		csParser.formal_parameter_list_return retval = new csParser.formal_parameter_list_return();
		retval.start = input.LT(1);
		int formal_parameter_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal638=null;
		ParserRuleReturnScope formal_parameter637 =null;
		ParserRuleReturnScope formal_parameter639 =null;

		CommonTree char_literal638_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:700:22: ( formal_parameter ( ',' formal_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:701:9: formal_parameter ( ',' formal_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_formal_parameter_in_formal_parameter_list9415);
			formal_parameter637=formal_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter637.getTree());

			// /Users/jeremie/ANTLR/cs.g:701:26: ( ',' formal_parameter )*
			loop194:
			while (true) {
				int alt194=2;
				int LA194_0 = input.LA(1);
				if ( (LA194_0==74) ) {
					alt194=1;
				}

				switch (alt194) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:701:27: ',' formal_parameter
					{
					char_literal638=(Token)match(input,74,FOLLOW_74_in_formal_parameter_list9418); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal638_tree = (CommonTree)adaptor.create(char_literal638);
					adaptor.addChild(root_0, char_literal638_tree);
					}

					pushFollow(FOLLOW_formal_parameter_in_formal_parameter_list9420);
					formal_parameter639=formal_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter639.getTree());

					}
					break;

				default :
					break loop194;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 197, formal_parameter_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "formal_parameter_list"


	public static class formal_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "formal_parameter"
	// /Users/jeremie/ANTLR/cs.g:702:1: formal_parameter : ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' );
	public final csParser.formal_parameter_return formal_parameter() throws RecognitionException {
		csParser.formal_parameter_return retval = new csParser.formal_parameter_return();
		retval.start = input.LT(1);
		int formal_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal643=null;
		ParserRuleReturnScope attributes640 =null;
		ParserRuleReturnScope fixed_parameter641 =null;
		ParserRuleReturnScope parameter_array642 =null;

		CommonTree string_literal643_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:702:17: ( ( attributes )? ( fixed_parameter | parameter_array ) | '__arglist' )
			int alt197=2;
			int LA197_0 = input.LA(1);
			if ( (LA197_0==IDENTIFIER||LA197_0==91||(LA197_0 >= 97 && LA197_0 <= 98)||(LA197_0 >= 100 && LA197_0 <= 101)||LA197_0==103||(LA197_0 >= 105 && LA197_0 <= 106)||LA197_0==109||LA197_0==114||LA197_0==117||(LA197_0 >= 119 && LA197_0 <= 120)||LA197_0==122||LA197_0==126||LA197_0==129||LA197_0==132||LA197_0==135||LA197_0==138||LA197_0==141||(LA197_0 >= 143 && LA197_0 <= 144)||(LA197_0 >= 146 && LA197_0 <= 148)||(LA197_0 >= 151 && LA197_0 <= 152)||(LA197_0 >= 154 && LA197_0 <= 155)||(LA197_0 >= 157 && LA197_0 <= 158)||LA197_0==160||LA197_0==162||(LA197_0 >= 166 && LA197_0 <= 167)||LA197_0==169||(LA197_0 >= 171 && LA197_0 <= 173)||LA197_0==177||LA197_0==180||LA197_0==183||(LA197_0 >= 185 && LA197_0 <= 186)||(LA197_0 >= 189 && LA197_0 <= 190)||LA197_0==192||LA197_0==194||LA197_0==196) ) {
				alt197=1;
			}
			else if ( (LA197_0==95) ) {
				int LA197_2 = input.LA(2);
				if ( (LA197_2==DOT||LA197_2==IDENTIFIER||LA197_2==69||(LA197_2 >= 80 && LA197_2 <= 81)||LA197_2==89||LA197_2==91||LA197_2==95||(LA197_2 >= 97 && LA197_2 <= 98)||(LA197_2 >= 100 && LA197_2 <= 101)||LA197_2==105||LA197_2==117||LA197_2==120||LA197_2==122||LA197_2==126||LA197_2==132||LA197_2==135||LA197_2==141||(LA197_2 >= 143 && LA197_2 <= 144)||(LA197_2 >= 147 && LA197_2 <= 148)||LA197_2==152||LA197_2==154||LA197_2==157||LA197_2==160||LA197_2==162||LA197_2==167||(LA197_2 >= 171 && LA197_2 <= 172)||LA197_2==183||LA197_2==190||LA197_2==194||LA197_2==196) ) {
					alt197=1;
				}
				else if ( (LA197_2==RPAREN||LA197_2==74||LA197_2==92) ) {
					alt197=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 197, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 197, 0, input);
				throw nvae;
			}

			switch (alt197) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:703:9: ( attributes )? ( fixed_parameter | parameter_array )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:703:9: ( attributes )?
					int alt195=2;
					int LA195_0 = input.LA(1);
					if ( (LA195_0==91) ) {
						alt195=1;
					}
					switch (alt195) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:703:9: attributes
							{
							pushFollow(FOLLOW_attributes_in_formal_parameter9437);
							attributes640=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes640.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:703:23: ( fixed_parameter | parameter_array )
					int alt196=2;
					int LA196_0 = input.LA(1);
					if ( (LA196_0==IDENTIFIER||LA196_0==95||(LA196_0 >= 97 && LA196_0 <= 98)||(LA196_0 >= 100 && LA196_0 <= 101)||LA196_0==103||(LA196_0 >= 105 && LA196_0 <= 106)||LA196_0==109||LA196_0==114||LA196_0==117||(LA196_0 >= 119 && LA196_0 <= 120)||LA196_0==122||LA196_0==126||LA196_0==129||LA196_0==132||LA196_0==135||LA196_0==138||LA196_0==141||(LA196_0 >= 143 && LA196_0 <= 144)||(LA196_0 >= 146 && LA196_0 <= 148)||(LA196_0 >= 151 && LA196_0 <= 152)||(LA196_0 >= 154 && LA196_0 <= 155)||LA196_0==157||LA196_0==160||LA196_0==162||(LA196_0 >= 166 && LA196_0 <= 167)||LA196_0==169||(LA196_0 >= 171 && LA196_0 <= 173)||LA196_0==177||LA196_0==180||LA196_0==183||(LA196_0 >= 185 && LA196_0 <= 186)||(LA196_0 >= 189 && LA196_0 <= 190)||LA196_0==192||LA196_0==194||LA196_0==196) ) {
						alt196=1;
					}
					else if ( (LA196_0==158) ) {
						alt196=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 196, 0, input);
						throw nvae;
					}

					switch (alt196) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:703:24: fixed_parameter
							{
							pushFollow(FOLLOW_fixed_parameter_in_formal_parameter9443);
							fixed_parameter641=fixed_parameter();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter641.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:703:42: parameter_array
							{
							pushFollow(FOLLOW_parameter_array_in_formal_parameter9447);
							parameter_array642=parameter_array();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_array642.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:704:11: '__arglist'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal643=(Token)match(input,95,FOLLOW_95_in_formal_parameter9461); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal643_tree = (CommonTree)adaptor.create(string_literal643);
					adaptor.addChild(root_0, string_literal643_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 198, formal_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "formal_parameter"


	public static class fixed_parameters_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_parameters"
	// /Users/jeremie/ANTLR/cs.g:705:1: fixed_parameters : fixed_parameter ( ',' fixed_parameter )* ;
	public final csParser.fixed_parameters_return fixed_parameters() throws RecognitionException {
		csParser.fixed_parameters_return retval = new csParser.fixed_parameters_return();
		retval.start = input.LT(1);
		int fixed_parameters_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal645=null;
		ParserRuleReturnScope fixed_parameter644 =null;
		ParserRuleReturnScope fixed_parameter646 =null;

		CommonTree char_literal645_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:705:17: ( fixed_parameter ( ',' fixed_parameter )* )
			// /Users/jeremie/ANTLR/cs.g:706:9: fixed_parameter ( ',' fixed_parameter )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters9483);
			fixed_parameter644=fixed_parameter();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter644.getTree());

			// /Users/jeremie/ANTLR/cs.g:706:27: ( ',' fixed_parameter )*
			loop198:
			while (true) {
				int alt198=2;
				int LA198_0 = input.LA(1);
				if ( (LA198_0==74) ) {
					alt198=1;
				}

				switch (alt198) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:706:28: ',' fixed_parameter
					{
					char_literal645=(Token)match(input,74,FOLLOW_74_in_fixed_parameters9488); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal645_tree = (CommonTree)adaptor.create(char_literal645);
					adaptor.addChild(root_0, char_literal645_tree);
					}

					pushFollow(FOLLOW_fixed_parameter_in_fixed_parameters9492);
					fixed_parameter646=fixed_parameter();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_parameter646.getTree());

					}
					break;

				default :
					break loop198;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 199, fixed_parameters_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_parameters"


	public static class fixed_parameter_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_parameter"
	// /Users/jeremie/ANTLR/cs.g:708:1: fixed_parameter : ( parameter_modifier )? type identifier ( default_argument )? ;
	public final csParser.fixed_parameter_return fixed_parameter() throws RecognitionException {
		csParser.fixed_parameter_return retval = new csParser.fixed_parameter_return();
		retval.start = input.LT(1);
		int fixed_parameter_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope parameter_modifier647 =null;
		ParserRuleReturnScope type648 =null;
		ParserRuleReturnScope identifier649 =null;
		ParserRuleReturnScope default_argument650 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:708:16: ( ( parameter_modifier )? type identifier ( default_argument )? )
			// /Users/jeremie/ANTLR/cs.g:709:9: ( parameter_modifier )? type identifier ( default_argument )?
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:709:9: ( parameter_modifier )?
			int alt199=2;
			int LA199_0 = input.LA(1);
			if ( (LA199_0==155||LA199_0==166||LA199_0==180) ) {
				alt199=1;
			}
			switch (alt199) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:709:9: parameter_modifier
					{
					pushFollow(FOLLOW_parameter_modifier_in_fixed_parameter9510);
					parameter_modifier647=parameter_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, parameter_modifier647.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_type_in_fixed_parameter9515);
			type648=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type648.getTree());

			pushFollow(FOLLOW_identifier_in_fixed_parameter9519);
			identifier649=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier649.getTree());

			// /Users/jeremie/ANTLR/cs.g:709:51: ( default_argument )?
			int alt200=2;
			int LA200_0 = input.LA(1);
			if ( (LA200_0==85) ) {
				alt200=1;
			}
			switch (alt200) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:709:51: default_argument
					{
					pushFollow(FOLLOW_default_argument_in_fixed_parameter9523);
					default_argument650=default_argument();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, default_argument650.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 200, fixed_parameter_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_parameter"


	public static class default_argument_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "default_argument"
	// /Users/jeremie/ANTLR/cs.g:711:1: default_argument : '=' expression ;
	public final csParser.default_argument_return default_argument() throws RecognitionException {
		csParser.default_argument_return retval = new csParser.default_argument_return();
		retval.start = input.LT(1);
		int default_argument_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal651=null;
		ParserRuleReturnScope expression652 =null;

		CommonTree char_literal651_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:711:17: ( '=' expression )
			// /Users/jeremie/ANTLR/cs.g:712:9: '=' expression
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal651=(Token)match(input,85,FOLLOW_85_in_default_argument9540); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal651_tree = (CommonTree)adaptor.create(char_literal651);
			adaptor.addChild(root_0, char_literal651_tree);
			}

			pushFollow(FOLLOW_expression_in_default_argument9542);
			expression652=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression652.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 201, default_argument_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "default_argument"


	public static class parameter_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "parameter_modifier"
	// /Users/jeremie/ANTLR/cs.g:713:1: parameter_modifier : ( 'ref' | 'out' | 'this' );
	public final csParser.parameter_modifier_return parameter_modifier() throws RecognitionException {
		csParser.parameter_modifier_return retval = new csParser.parameter_modifier_return();
		retval.start = input.LT(1);
		int parameter_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set653=null;

		CommonTree set653_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:713:19: ( 'ref' | 'out' | 'this' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set653=input.LT(1);
			if ( input.LA(1)==155||input.LA(1)==166||input.LA(1)==180 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set653));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 202, parameter_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "parameter_modifier"


	public static class parameter_array_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "parameter_array"
	// /Users/jeremie/ANTLR/cs.g:715:1: parameter_array : 'params' type identifier ;
	public final csParser.parameter_array_return parameter_array() throws RecognitionException {
		csParser.parameter_array_return retval = new csParser.parameter_array_return();
		retval.start = input.LT(1);
		int parameter_array_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal654=null;
		ParserRuleReturnScope type655 =null;
		ParserRuleReturnScope identifier656 =null;

		CommonTree string_literal654_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:715:16: ( 'params' type identifier )
			// /Users/jeremie/ANTLR/cs.g:716:9: 'params' type identifier
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal654=(Token)match(input,158,FOLLOW_158_in_parameter_array9579); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal654_tree = (CommonTree)adaptor.create(string_literal654);
			adaptor.addChild(root_0, string_literal654_tree);
			}

			pushFollow(FOLLOW_type_in_parameter_array9583);
			type655=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type655.getTree());

			pushFollow(FOLLOW_identifier_in_parameter_array9587);
			identifier656=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier656.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 203, parameter_array_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "parameter_array"


	public static class interface_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_declaration"
	// /Users/jeremie/ANTLR/cs.g:719:1: interface_declaration : 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? ;
	public final csParser.interface_declaration_return interface_declaration() throws RecognitionException {
		csParser.interface_declaration_return retval = new csParser.interface_declaration_return();
		retval.start = input.LT(1);
		int interface_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal657=null;
		Token char_literal663=null;
		ParserRuleReturnScope identifier658 =null;
		ParserRuleReturnScope variant_generic_parameter_list659 =null;
		ParserRuleReturnScope interface_base660 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses661 =null;
		ParserRuleReturnScope interface_body662 =null;

		CommonTree string_literal657_tree=null;
		CommonTree char_literal663_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:719:22: ( 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:720:9: 'interface' identifier ( variant_generic_parameter_list )? ( interface_base )? ( type_parameter_constraints_clauses )? interface_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal657=(Token)match(input,139,FOLLOW_139_in_interface_declaration9604); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal657_tree = (CommonTree)adaptor.create(string_literal657);
			adaptor.addChild(root_0, string_literal657_tree);
			}

			pushFollow(FOLLOW_identifier_in_interface_declaration9608);
			identifier658=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier658.getTree());

			// /Users/jeremie/ANTLR/cs.g:720:36: ( variant_generic_parameter_list )?
			int alt201=2;
			int LA201_0 = input.LA(1);
			if ( (LA201_0==81) ) {
				alt201=1;
			}
			switch (alt201) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:720:36: variant_generic_parameter_list
					{
					pushFollow(FOLLOW_variant_generic_parameter_list_in_interface_declaration9612);
					variant_generic_parameter_list659=variant_generic_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, variant_generic_parameter_list659.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:721:13: ( interface_base )?
			int alt202=2;
			int LA202_0 = input.LA(1);
			if ( (LA202_0==79) ) {
				alt202=1;
			}
			switch (alt202) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:721:13: interface_base
					{
					pushFollow(FOLLOW_interface_base_in_interface_declaration9628);
					interface_base660=interface_base();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_base660.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:721:31: ( type_parameter_constraints_clauses )?
			int alt203=2;
			int LA203_0 = input.LA(1);
			if ( (LA203_0==194) ) {
				alt203=1;
			}
			switch (alt203) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:721:31: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_declaration9633);
					type_parameter_constraints_clauses661=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses661.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_interface_body_in_interface_declaration9638);
			interface_body662=interface_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_body662.getTree());

			// /Users/jeremie/ANTLR/cs.g:721:86: ( ';' )?
			int alt204=2;
			int LA204_0 = input.LA(1);
			if ( (LA204_0==SEMI) ) {
				alt204=1;
			}
			switch (alt204) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:721:86: ';'
					{
					char_literal663=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_declaration9642); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal663_tree = (CommonTree)adaptor.create(char_literal663);
					adaptor.addChild(root_0, char_literal663_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 204, interface_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_declaration"


	public static class interface_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_modifiers"
	// /Users/jeremie/ANTLR/cs.g:722:1: interface_modifiers : ( modifier )+ ;
	public final csParser.interface_modifiers_return interface_modifiers() throws RecognitionException {
		csParser.interface_modifiers_return retval = new csParser.interface_modifiers_return();
		retval.start = input.LT(1);
		int interface_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier664 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:722:20: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:723:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:723:9: ( modifier )+
			int cnt205=0;
			loop205:
			while (true) {
				int alt205=2;
				int LA205_0 = input.LA(1);
				if ( (LA205_0==96||LA205_0==125||LA205_0==140||LA205_0==150||LA205_0==156||LA205_0==161||(LA205_0 >= 163 && LA205_0 <= 165)||LA205_0==170||LA205_0==176||LA205_0==188||LA205_0==191||LA205_0==193) ) {
					alt205=1;
				}

				switch (alt205) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:723:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_interface_modifiers9659);
					modifier664=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier664.getTree());

					}
					break;

				default :
					if ( cnt205 >= 1 ) break loop205;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(205, input);
					throw eee;
				}
				cnt205++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 205, interface_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_modifiers"


	public static class interface_base_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_base"
	// /Users/jeremie/ANTLR/cs.g:724:1: interface_base : ':' interface_type_list ;
	public final csParser.interface_base_return interface_base() throws RecognitionException {
		csParser.interface_base_return retval = new csParser.interface_base_return();
		retval.start = input.LT(1);
		int interface_base_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal665=null;
		ParserRuleReturnScope interface_type_list666 =null;

		CommonTree char_literal665_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:724:15: ( ':' interface_type_list )
			// /Users/jeremie/ANTLR/cs.g:725:12: ':' interface_type_list
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal665=(Token)match(input,79,FOLLOW_79_in_interface_base9679); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal665_tree = (CommonTree)adaptor.create(char_literal665);
			adaptor.addChild(root_0, char_literal665_tree);
			}

			pushFollow(FOLLOW_interface_type_list_in_interface_base9681);
			interface_type_list666=interface_type_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list666.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 206, interface_base_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_base"


	public static class interface_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_body"
	// /Users/jeremie/ANTLR/cs.g:726:1: interface_body : '{' ( interface_member_declarations )? '}' ;
	public final csParser.interface_body_return interface_body() throws RecognitionException {
		csParser.interface_body_return retval = new csParser.interface_body_return();
		retval.start = input.LT(1);
		int interface_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal667=null;
		Token char_literal669=null;
		ParserRuleReturnScope interface_member_declarations668 =null;

		CommonTree char_literal667_tree=null;
		CommonTree char_literal669_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:726:15: ( '{' ( interface_member_declarations )? '}' )
			// /Users/jeremie/ANTLR/cs.g:727:9: '{' ( interface_member_declarations )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal667=(Token)match(input,197,FOLLOW_197_in_interface_body9696); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal667_tree = (CommonTree)adaptor.create(char_literal667);
			adaptor.addChild(root_0, char_literal667_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:727:15: ( interface_member_declarations )?
			int alt206=2;
			int LA206_0 = input.LA(1);
			if ( (LA206_0==IDENTIFIER||LA206_0==91||(LA206_0 >= 95 && LA206_0 <= 98)||(LA206_0 >= 100 && LA206_0 <= 101)||LA206_0==103||(LA206_0 >= 105 && LA206_0 <= 106)||LA206_0==109||LA206_0==114||LA206_0==117||(LA206_0 >= 119 && LA206_0 <= 120)||(LA206_0 >= 122 && LA206_0 <= 123)||(LA206_0 >= 125 && LA206_0 <= 126)||LA206_0==129||LA206_0==132||LA206_0==135||LA206_0==138||(LA206_0 >= 140 && LA206_0 <= 141)||(LA206_0 >= 143 && LA206_0 <= 144)||(LA206_0 >= 146 && LA206_0 <= 148)||(LA206_0 >= 150 && LA206_0 <= 152)||LA206_0==154||(LA206_0 >= 156 && LA206_0 <= 157)||(LA206_0 >= 160 && LA206_0 <= 165)||LA206_0==167||(LA206_0 >= 169 && LA206_0 <= 173)||(LA206_0 >= 176 && LA206_0 <= 177)||LA206_0==183||(LA206_0 >= 185 && LA206_0 <= 186)||(LA206_0 >= 188 && LA206_0 <= 194)||LA206_0==196) ) {
				alt206=1;
			}
			switch (alt206) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:727:15: interface_member_declarations
					{
					pushFollow(FOLLOW_interface_member_declarations_in_interface_body9700);
					interface_member_declarations668=interface_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declarations668.getTree());

					}
					break;

			}

			char_literal669=(Token)match(input,201,FOLLOW_201_in_interface_body9705); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal669_tree = (CommonTree)adaptor.create(char_literal669);
			adaptor.addChild(root_0, char_literal669_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 207, interface_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_body"


	public static class interface_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:728:1: interface_member_declarations : ( interface_member_declaration )+ ;
	public final csParser.interface_member_declarations_return interface_member_declarations() throws RecognitionException {
		csParser.interface_member_declarations_return retval = new csParser.interface_member_declarations_return();
		retval.start = input.LT(1);
		int interface_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope interface_member_declaration670 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:728:30: ( ( interface_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:729:9: ( interface_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:729:9: ( interface_member_declaration )+
			int cnt207=0;
			loop207:
			while (true) {
				int alt207=2;
				int LA207_0 = input.LA(1);
				if ( (LA207_0==IDENTIFIER||LA207_0==91||(LA207_0 >= 95 && LA207_0 <= 98)||(LA207_0 >= 100 && LA207_0 <= 101)||LA207_0==103||(LA207_0 >= 105 && LA207_0 <= 106)||LA207_0==109||LA207_0==114||LA207_0==117||(LA207_0 >= 119 && LA207_0 <= 120)||(LA207_0 >= 122 && LA207_0 <= 123)||(LA207_0 >= 125 && LA207_0 <= 126)||LA207_0==129||LA207_0==132||LA207_0==135||LA207_0==138||(LA207_0 >= 140 && LA207_0 <= 141)||(LA207_0 >= 143 && LA207_0 <= 144)||(LA207_0 >= 146 && LA207_0 <= 148)||(LA207_0 >= 150 && LA207_0 <= 152)||LA207_0==154||(LA207_0 >= 156 && LA207_0 <= 157)||(LA207_0 >= 160 && LA207_0 <= 165)||LA207_0==167||(LA207_0 >= 169 && LA207_0 <= 173)||(LA207_0 >= 176 && LA207_0 <= 177)||LA207_0==183||(LA207_0 >= 185 && LA207_0 <= 186)||(LA207_0 >= 188 && LA207_0 <= 194)||LA207_0==196) ) {
					alt207=1;
				}

				switch (alt207) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:729:9: interface_member_declaration
					{
					pushFollow(FOLLOW_interface_member_declaration_in_interface_member_declarations9720);
					interface_member_declaration670=interface_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_member_declaration670.getTree());

					}
					break;

				default :
					if ( cnt207 >= 1 ) break loop207;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(207, input);
					throw eee;
				}
				cnt207++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 208, interface_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_member_declarations"


	public static class interface_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:730:1: interface_member_declaration : ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) ;
	public final csParser.interface_member_declaration_return interface_member_declaration() throws RecognitionException {
		csParser.interface_member_declaration_return retval = new csParser.interface_member_declaration_return();
		retval.start = input.LT(1);
		int interface_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal673=null;
		ParserRuleReturnScope attributes671 =null;
		ParserRuleReturnScope modifiers672 =null;
		ParserRuleReturnScope interface_method_declaration674 =null;
		ParserRuleReturnScope interface_event_declaration675 =null;
		ParserRuleReturnScope type676 =null;
		ParserRuleReturnScope interface_method_declaration677 =null;
		ParserRuleReturnScope interface_property_declaration678 =null;
		ParserRuleReturnScope interface_indexer_declaration679 =null;

		CommonTree string_literal673_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:730:29: ( ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) ) )
			// /Users/jeremie/ANTLR/cs.g:731:9: ( attributes )? ( modifiers )? ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:731:9: ( attributes )?
			int alt208=2;
			int LA208_0 = input.LA(1);
			if ( (LA208_0==91) ) {
				alt208=1;
			}
			switch (alt208) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:731:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_interface_member_declaration9736);
					attributes671=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes671.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:731:24: ( modifiers )?
			int alt209=2;
			int LA209_0 = input.LA(1);
			if ( (LA209_0==96||LA209_0==125||LA209_0==140||LA209_0==150||LA209_0==156||LA209_0==161||(LA209_0 >= 163 && LA209_0 <= 165)||LA209_0==170||LA209_0==176||LA209_0==188||LA209_0==191||LA209_0==193) ) {
				alt209=1;
			}
			switch (alt209) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:731:24: modifiers
					{
					pushFollow(FOLLOW_modifiers_in_interface_member_declaration9742);
					modifiers672=modifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers672.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:732:17: ( 'void' interface_method_declaration | interface_event_declaration | type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration ) )
			int alt211=3;
			switch ( input.LA(1) ) {
			case 192:
				{
				int LA211_1 = input.LA(2);
				if ( (LA211_1==IDENTIFIER||LA211_1==95||(LA211_1 >= 97 && LA211_1 <= 98)||(LA211_1 >= 100 && LA211_1 <= 101)||LA211_1==105||LA211_1==117||LA211_1==120||LA211_1==122||LA211_1==126||LA211_1==132||LA211_1==135||LA211_1==141||(LA211_1 >= 143 && LA211_1 <= 144)||(LA211_1 >= 147 && LA211_1 <= 148)||LA211_1==152||LA211_1==154||LA211_1==157||LA211_1==160||LA211_1==162||LA211_1==167||(LA211_1 >= 171 && LA211_1 <= 172)||LA211_1==183||LA211_1==190||LA211_1==194||LA211_1==196) ) {
					alt211=1;
				}
				else if ( (LA211_1==69) ) {
					alt211=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 211, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 123:
				{
				alt211=2;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 196:
				{
				alt211=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 211, 0, input);
				throw nvae;
			}
			switch (alt211) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:732:18: 'void' interface_method_declaration
					{
					string_literal673=(Token)match(input,192,FOLLOW_192_in_interface_member_declaration9762); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal673_tree = (CommonTree)adaptor.create(string_literal673);
					adaptor.addChild(root_0, string_literal673_tree);
					}

					pushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration9766);
					interface_method_declaration674=interface_method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_method_declaration674.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:733:19: interface_event_declaration
					{
					pushFollow(FOLLOW_interface_event_declaration_in_interface_member_declaration9786);
					interface_event_declaration675=interface_event_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_event_declaration675.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:734:19: type ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
					{
					pushFollow(FOLLOW_type_in_interface_member_declaration9806);
					type676=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type676.getTree());

					// /Users/jeremie/ANTLR/cs.g:734:26: ( ( member_name '(' )=> interface_method_declaration | ( member_name '{' )=> interface_property_declaration | interface_indexer_declaration )
					int alt210=3;
					int LA210_0 = input.LA(1);
					if ( (LA210_0==IDENTIFIER||LA210_0==95||(LA210_0 >= 97 && LA210_0 <= 98)||(LA210_0 >= 100 && LA210_0 <= 101)||LA210_0==105||LA210_0==117||LA210_0==120||LA210_0==122||LA210_0==126||LA210_0==132||LA210_0==135||LA210_0==141||(LA210_0 >= 143 && LA210_0 <= 144)||(LA210_0 >= 147 && LA210_0 <= 148)||LA210_0==152||LA210_0==154||LA210_0==157||LA210_0==160||LA210_0==162||LA210_0==167||(LA210_0 >= 171 && LA210_0 <= 172)||LA210_0==183||LA210_0==190||LA210_0==194||LA210_0==196) ) {
						int LA210_1 = input.LA(2);
						if ( (LA210_1==81) && (synpred26_cs())) {
							alt210=1;
						}
						else if ( (LA210_1==68) && (synpred26_cs())) {
							alt210=1;
						}
						else if ( (LA210_1==197) && (synpred27_cs())) {
							alt210=2;
						}

					}
					else if ( (LA210_0==180) ) {
						alt210=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 210, 0, input);
						throw nvae;
					}

					switch (alt210) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:734:28: ( member_name '(' )=> interface_method_declaration
							{
							pushFollow(FOLLOW_interface_method_declaration_in_interface_member_declaration9822);
							interface_method_declaration677=interface_method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_method_declaration677.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:735:28: ( member_name '{' )=> interface_property_declaration
							{
							pushFollow(FOLLOW_interface_property_declaration_in_interface_member_declaration9861);
							interface_property_declaration678=interface_property_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_property_declaration678.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:736:36: interface_indexer_declaration
							{
							pushFollow(FOLLOW_interface_indexer_declaration_in_interface_member_declaration9899);
							interface_indexer_declaration679=interface_indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_indexer_declaration679.getTree());

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 209, interface_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_member_declaration"


	public static class interface_property_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_property_declaration"
	// /Users/jeremie/ANTLR/cs.g:739:1: interface_property_declaration : identifier '{' interface_accessor_declarations '}' ;
	public final csParser.interface_property_declaration_return interface_property_declaration() throws RecognitionException {
		csParser.interface_property_declaration_return retval = new csParser.interface_property_declaration_return();
		retval.start = input.LT(1);
		int interface_property_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal681=null;
		Token char_literal683=null;
		ParserRuleReturnScope identifier680 =null;
		ParserRuleReturnScope interface_accessor_declarations682 =null;

		CommonTree char_literal681_tree=null;
		CommonTree char_literal683_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:739:31: ( identifier '{' interface_accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:740:9: identifier '{' interface_accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_interface_property_declaration9951);
			identifier680=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier680.getTree());

			char_literal681=(Token)match(input,197,FOLLOW_197_in_interface_property_declaration9955); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal681_tree = (CommonTree)adaptor.create(char_literal681);
			adaptor.addChild(root_0, char_literal681_tree);
			}

			pushFollow(FOLLOW_interface_accessor_declarations_in_interface_property_declaration9959);
			interface_accessor_declarations682=interface_accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessor_declarations682.getTree());

			char_literal683=(Token)match(input,201,FOLLOW_201_in_interface_property_declaration9963); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal683_tree = (CommonTree)adaptor.create(char_literal683);
			adaptor.addChild(root_0, char_literal683_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 210, interface_property_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_property_declaration"


	public static class interface_method_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_method_declaration"
	// /Users/jeremie/ANTLR/cs.g:741:1: interface_method_declaration : identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' ;
	public final csParser.interface_method_declaration_return interface_method_declaration() throws RecognitionException {
		csParser.interface_method_declaration_return retval = new csParser.interface_method_declaration_return();
		retval.start = input.LT(1);
		int interface_method_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal686=null;
		Token char_literal688=null;
		Token char_literal690=null;
		ParserRuleReturnScope identifier684 =null;
		ParserRuleReturnScope generic_argument_list685 =null;
		ParserRuleReturnScope formal_parameter_list687 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses689 =null;

		CommonTree char_literal686_tree=null;
		CommonTree char_literal688_tree=null;
		CommonTree char_literal690_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:741:29: ( identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';' )
			// /Users/jeremie/ANTLR/cs.g:742:9: identifier ( generic_argument_list )? '(' ( formal_parameter_list )? ')' ( type_parameter_constraints_clauses )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_interface_method_declaration9978);
			identifier684=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier684.getTree());

			// /Users/jeremie/ANTLR/cs.g:742:22: ( generic_argument_list )?
			int alt212=2;
			int LA212_0 = input.LA(1);
			if ( (LA212_0==81) ) {
				alt212=1;
			}
			switch (alt212) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:742:22: generic_argument_list
					{
					pushFollow(FOLLOW_generic_argument_list_in_interface_method_declaration9982);
					generic_argument_list685=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list685.getTree());

					}
					break;

			}

			char_literal686=(Token)match(input,68,FOLLOW_68_in_interface_method_declaration9997); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal686_tree = (CommonTree)adaptor.create(char_literal686);
			adaptor.addChild(root_0, char_literal686_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:743:19: ( formal_parameter_list )?
			int alt213=2;
			int LA213_0 = input.LA(1);
			if ( (LA213_0==IDENTIFIER||LA213_0==91||LA213_0==95||(LA213_0 >= 97 && LA213_0 <= 98)||(LA213_0 >= 100 && LA213_0 <= 101)||LA213_0==103||(LA213_0 >= 105 && LA213_0 <= 106)||LA213_0==109||LA213_0==114||LA213_0==117||(LA213_0 >= 119 && LA213_0 <= 120)||LA213_0==122||LA213_0==126||LA213_0==129||LA213_0==132||LA213_0==135||LA213_0==138||LA213_0==141||(LA213_0 >= 143 && LA213_0 <= 144)||(LA213_0 >= 146 && LA213_0 <= 148)||(LA213_0 >= 151 && LA213_0 <= 152)||(LA213_0 >= 154 && LA213_0 <= 155)||(LA213_0 >= 157 && LA213_0 <= 158)||LA213_0==160||LA213_0==162||(LA213_0 >= 166 && LA213_0 <= 167)||LA213_0==169||(LA213_0 >= 171 && LA213_0 <= 173)||LA213_0==177||LA213_0==180||LA213_0==183||(LA213_0 >= 185 && LA213_0 <= 186)||(LA213_0 >= 189 && LA213_0 <= 190)||LA213_0==192||LA213_0==194||LA213_0==196) ) {
				alt213=1;
			}
			switch (alt213) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:743:19: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_interface_method_declaration10001);
					formal_parameter_list687=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list687.getTree());

					}
					break;

			}

			char_literal688=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_interface_method_declaration10006); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal688_tree = (CommonTree)adaptor.create(char_literal688);
			adaptor.addChild(root_0, char_literal688_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:743:50: ( type_parameter_constraints_clauses )?
			int alt214=2;
			int LA214_0 = input.LA(1);
			if ( (LA214_0==194) ) {
				alt214=1;
			}
			switch (alt214) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:743:50: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration10010);
					type_parameter_constraints_clauses689=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses689.getTree());

					}
					break;

			}

			char_literal690=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_method_declaration10015); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal690_tree = (CommonTree)adaptor.create(char_literal690);
			adaptor.addChild(root_0, char_literal690_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 211, interface_method_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_method_declaration"


	public static class interface_event_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_event_declaration"
	// /Users/jeremie/ANTLR/cs.g:744:1: interface_event_declaration : 'event' type identifier ';' ;
	public final csParser.interface_event_declaration_return interface_event_declaration() throws RecognitionException {
		csParser.interface_event_declaration_return retval = new csParser.interface_event_declaration_return();
		retval.start = input.LT(1);
		int interface_event_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal691=null;
		Token char_literal694=null;
		ParserRuleReturnScope type692 =null;
		ParserRuleReturnScope identifier693 =null;

		CommonTree string_literal691_tree=null;
		CommonTree char_literal694_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:744:28: ( 'event' type identifier ';' )
			// /Users/jeremie/ANTLR/cs.g:746:9: 'event' type identifier ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal691=(Token)match(input,123,FOLLOW_123_in_interface_event_declaration10040); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal691_tree = (CommonTree)adaptor.create(string_literal691);
			adaptor.addChild(root_0, string_literal691_tree);
			}

			pushFollow(FOLLOW_type_in_interface_event_declaration10044);
			type692=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type692.getTree());

			pushFollow(FOLLOW_identifier_in_interface_event_declaration10048);
			identifier693=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier693.getTree());

			char_literal694=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_event_declaration10052); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal694_tree = (CommonTree)adaptor.create(char_literal694);
			adaptor.addChild(root_0, char_literal694_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 212, interface_event_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_event_declaration"


	public static class interface_indexer_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_indexer_declaration"
	// /Users/jeremie/ANTLR/cs.g:747:1: interface_indexer_declaration : 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' ;
	public final csParser.interface_indexer_declaration_return interface_indexer_declaration() throws RecognitionException {
		csParser.interface_indexer_declaration_return retval = new csParser.interface_indexer_declaration_return();
		retval.start = input.LT(1);
		int interface_indexer_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal695=null;
		Token char_literal696=null;
		Token char_literal698=null;
		Token char_literal699=null;
		Token char_literal701=null;
		ParserRuleReturnScope formal_parameter_list697 =null;
		ParserRuleReturnScope interface_accessor_declarations700 =null;

		CommonTree string_literal695_tree=null;
		CommonTree char_literal696_tree=null;
		CommonTree char_literal698_tree=null;
		CommonTree char_literal699_tree=null;
		CommonTree char_literal701_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:747:30: ( 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:749:9: 'this' '[' formal_parameter_list ']' '{' interface_accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal695=(Token)match(input,180,FOLLOW_180_in_interface_indexer_declaration10078); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal695_tree = (CommonTree)adaptor.create(string_literal695);
			adaptor.addChild(root_0, string_literal695_tree);
			}

			char_literal696=(Token)match(input,91,FOLLOW_91_in_interface_indexer_declaration10082); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal696_tree = (CommonTree)adaptor.create(char_literal696);
			adaptor.addChild(root_0, char_literal696_tree);
			}

			pushFollow(FOLLOW_formal_parameter_list_in_interface_indexer_declaration10086);
			formal_parameter_list697=formal_parameter_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list697.getTree());

			char_literal698=(Token)match(input,92,FOLLOW_92_in_interface_indexer_declaration10090); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal698_tree = (CommonTree)adaptor.create(char_literal698);
			adaptor.addChild(root_0, char_literal698_tree);
			}

			char_literal699=(Token)match(input,197,FOLLOW_197_in_interface_indexer_declaration10094); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal699_tree = (CommonTree)adaptor.create(char_literal699);
			adaptor.addChild(root_0, char_literal699_tree);
			}

			pushFollow(FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration10098);
			interface_accessor_declarations700=interface_accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_accessor_declarations700.getTree());

			char_literal701=(Token)match(input,201,FOLLOW_201_in_interface_indexer_declaration10102); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal701_tree = (CommonTree)adaptor.create(char_literal701);
			adaptor.addChild(root_0, char_literal701_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 213, interface_indexer_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_indexer_declaration"


	public static class interface_accessor_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_accessor_declarations"
	// /Users/jeremie/ANTLR/cs.g:750:1: interface_accessor_declarations : ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) ;
	public final csParser.interface_accessor_declarations_return interface_accessor_declarations() throws RecognitionException {
		csParser.interface_accessor_declarations_return retval = new csParser.interface_accessor_declarations_return();
		retval.start = input.LT(1);
		int interface_accessor_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes702 =null;
		ParserRuleReturnScope interface_get_accessor_declaration703 =null;
		ParserRuleReturnScope attributes704 =null;
		ParserRuleReturnScope interface_set_accessor_declaration705 =null;
		ParserRuleReturnScope interface_set_accessor_declaration706 =null;
		ParserRuleReturnScope attributes707 =null;
		ParserRuleReturnScope interface_get_accessor_declaration708 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:750:32: ( ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? ) )
			// /Users/jeremie/ANTLR/cs.g:751:9: ( attributes )? ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:751:9: ( attributes )?
			int alt215=2;
			int LA215_0 = input.LA(1);
			if ( (LA215_0==91) ) {
				alt215=1;
			}
			switch (alt215) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:751:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_interface_accessor_declarations10117);
					attributes702=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes702.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:752:17: ( interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )? | interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )? )
			int alt220=2;
			int LA220_0 = input.LA(1);
			if ( (LA220_0==133) ) {
				alt220=1;
			}
			else if ( (LA220_0==172) ) {
				alt220=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 220, 0, input);
				throw nvae;
			}

			switch (alt220) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:752:18: interface_get_accessor_declaration ( attributes )? ( interface_set_accessor_declaration )?
					{
					pushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations10140);
					interface_get_accessor_declaration703=interface_get_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_get_accessor_declaration703.getTree());

					// /Users/jeremie/ANTLR/cs.g:752:55: ( attributes )?
					int alt216=2;
					int LA216_0 = input.LA(1);
					if ( (LA216_0==91) ) {
						alt216=1;
					}
					switch (alt216) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:752:55: attributes
							{
							pushFollow(FOLLOW_attributes_in_interface_accessor_declarations10144);
							attributes704=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes704.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:752:69: ( interface_set_accessor_declaration )?
					int alt217=2;
					int LA217_0 = input.LA(1);
					if ( (LA217_0==172) ) {
						alt217=1;
					}
					switch (alt217) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:752:69: interface_set_accessor_declaration
							{
							pushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations10149);
							interface_set_accessor_declaration705=interface_set_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_set_accessor_declaration705.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:753:19: interface_set_accessor_declaration ( attributes )? ( interface_get_accessor_declaration )?
					{
					pushFollow(FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations10170);
					interface_set_accessor_declaration706=interface_set_accessor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_set_accessor_declaration706.getTree());

					// /Users/jeremie/ANTLR/cs.g:753:56: ( attributes )?
					int alt218=2;
					int LA218_0 = input.LA(1);
					if ( (LA218_0==91) ) {
						alt218=1;
					}
					switch (alt218) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:753:56: attributes
							{
							pushFollow(FOLLOW_attributes_in_interface_accessor_declarations10174);
							attributes707=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes707.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:753:70: ( interface_get_accessor_declaration )?
					int alt219=2;
					int LA219_0 = input.LA(1);
					if ( (LA219_0==133) ) {
						alt219=1;
					}
					switch (alt219) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:753:70: interface_get_accessor_declaration
							{
							pushFollow(FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations10179);
							interface_get_accessor_declaration708=interface_get_accessor_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_get_accessor_declaration708.getTree());

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 214, interface_accessor_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_accessor_declarations"


	public static class interface_get_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_get_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:754:1: interface_get_accessor_declaration : 'get' ';' ;
	public final csParser.interface_get_accessor_declaration_return interface_get_accessor_declaration() throws RecognitionException {
		csParser.interface_get_accessor_declaration_return retval = new csParser.interface_get_accessor_declaration_return();
		retval.start = input.LT(1);
		int interface_get_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal709=null;
		Token char_literal710=null;

		CommonTree string_literal709_tree=null;
		CommonTree char_literal710_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:754:35: ( 'get' ';' )
			// /Users/jeremie/ANTLR/cs.g:755:9: 'get' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal709=(Token)match(input,133,FOLLOW_133_in_interface_get_accessor_declaration10196); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal709_tree = (CommonTree)adaptor.create(string_literal709);
			adaptor.addChild(root_0, string_literal709_tree);
			}

			char_literal710=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_get_accessor_declaration10200); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal710_tree = (CommonTree)adaptor.create(char_literal710);
			adaptor.addChild(root_0, char_literal710_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 215, interface_get_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_get_accessor_declaration"


	public static class interface_set_accessor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "interface_set_accessor_declaration"
	// /Users/jeremie/ANTLR/cs.g:756:1: interface_set_accessor_declaration : 'set' ';' ;
	public final csParser.interface_set_accessor_declaration_return interface_set_accessor_declaration() throws RecognitionException {
		csParser.interface_set_accessor_declaration_return retval = new csParser.interface_set_accessor_declaration_return();
		retval.start = input.LT(1);
		int interface_set_accessor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal711=null;
		Token char_literal712=null;

		CommonTree string_literal711_tree=null;
		CommonTree char_literal712_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:756:35: ( 'set' ';' )
			// /Users/jeremie/ANTLR/cs.g:757:9: 'set' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal711=(Token)match(input,172,FOLLOW_172_in_interface_set_accessor_declaration10231); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal711_tree = (CommonTree)adaptor.create(string_literal711);
			adaptor.addChild(root_0, string_literal711_tree);
			}

			char_literal712=(Token)match(input,SEMI,FOLLOW_SEMI_in_interface_set_accessor_declaration10235); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal712_tree = (CommonTree)adaptor.create(char_literal712);
			adaptor.addChild(root_0, char_literal712_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 216, interface_set_accessor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "interface_set_accessor_declaration"


	public static class method_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_modifiers"
	// /Users/jeremie/ANTLR/cs.g:758:1: method_modifiers : ( modifier )+ ;
	public final csParser.method_modifiers_return method_modifiers() throws RecognitionException {
		csParser.method_modifiers_return retval = new csParser.method_modifiers_return();
		retval.start = input.LT(1);
		int method_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope modifier713 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:758:17: ( ( modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:759:9: ( modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:759:9: ( modifier )+
			int cnt221=0;
			loop221:
			while (true) {
				int alt221=2;
				int LA221_0 = input.LA(1);
				if ( (LA221_0==96||LA221_0==125||LA221_0==140||LA221_0==150||LA221_0==156||LA221_0==161||(LA221_0 >= 163 && LA221_0 <= 165)||LA221_0==170||LA221_0==176||LA221_0==188||LA221_0==191||LA221_0==193) ) {
					alt221=1;
				}

				switch (alt221) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:759:9: modifier
					{
					pushFollow(FOLLOW_modifier_in_method_modifiers10266);
					modifier713=modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, modifier713.getTree());

					}
					break;

				default :
					if ( cnt221 >= 1 ) break loop221;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(221, input);
					throw eee;
				}
				cnt221++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 217, method_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_modifiers"


	public static class struct_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_declaration"
	// /Users/jeremie/ANTLR/cs.g:762:1: struct_declaration : 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? ;
	public final csParser.struct_declaration_return struct_declaration() throws RecognitionException {
		csParser.struct_declaration_return retval = new csParser.struct_declaration_return();
		retval.start = input.LT(1);
		int struct_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal714=null;
		Token char_literal719=null;
		ParserRuleReturnScope type_or_generic715 =null;
		ParserRuleReturnScope struct_interfaces716 =null;
		ParserRuleReturnScope type_parameter_constraints_clauses717 =null;
		ParserRuleReturnScope struct_body718 =null;

		CommonTree string_literal714_tree=null;
		CommonTree char_literal719_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:762:19: ( 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )? )
			// /Users/jeremie/ANTLR/cs.g:763:9: 'struct' type_or_generic ( struct_interfaces )? ( type_parameter_constraints_clauses )? struct_body ( ';' )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal714=(Token)match(input,178,FOLLOW_178_in_struct_declaration10292); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal714_tree = (CommonTree)adaptor.create(string_literal714);
			adaptor.addChild(root_0, string_literal714_tree);
			}

			pushFollow(FOLLOW_type_or_generic_in_struct_declaration10296);
			type_or_generic715=type_or_generic();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type_or_generic715.getTree());

			// /Users/jeremie/ANTLR/cs.g:763:38: ( struct_interfaces )?
			int alt222=2;
			int LA222_0 = input.LA(1);
			if ( (LA222_0==79) ) {
				alt222=1;
			}
			switch (alt222) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:763:38: struct_interfaces
					{
					pushFollow(FOLLOW_struct_interfaces_in_struct_declaration10300);
					struct_interfaces716=struct_interfaces();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_interfaces716.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:763:59: ( type_parameter_constraints_clauses )?
			int alt223=2;
			int LA223_0 = input.LA(1);
			if ( (LA223_0==194) ) {
				alt223=1;
			}
			switch (alt223) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:763:59: type_parameter_constraints_clauses
					{
					pushFollow(FOLLOW_type_parameter_constraints_clauses_in_struct_declaration10305);
					type_parameter_constraints_clauses717=type_parameter_constraints_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type_parameter_constraints_clauses717.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_struct_body_in_struct_declaration10310);
			struct_body718=struct_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_body718.getTree());

			// /Users/jeremie/ANTLR/cs.g:763:111: ( ';' )?
			int alt224=2;
			int LA224_0 = input.LA(1);
			if ( (LA224_0==SEMI) ) {
				alt224=1;
			}
			switch (alt224) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:763:111: ';'
					{
					char_literal719=(Token)match(input,SEMI,FOLLOW_SEMI_in_struct_declaration10314); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal719_tree = (CommonTree)adaptor.create(char_literal719);
					adaptor.addChild(root_0, char_literal719_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 218, struct_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_declaration"


	public static class struct_modifiers_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_modifiers"
	// /Users/jeremie/ANTLR/cs.g:764:1: struct_modifiers : ( struct_modifier )+ ;
	public final csParser.struct_modifiers_return struct_modifiers() throws RecognitionException {
		csParser.struct_modifiers_return retval = new csParser.struct_modifiers_return();
		retval.start = input.LT(1);
		int struct_modifiers_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope struct_modifier720 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:764:17: ( ( struct_modifier )+ )
			// /Users/jeremie/ANTLR/cs.g:765:9: ( struct_modifier )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:765:9: ( struct_modifier )+
			int cnt225=0;
			loop225:
			while (true) {
				int alt225=2;
				int LA225_0 = input.LA(1);
				if ( (LA225_0==140||LA225_0==150||LA225_0==161||(LA225_0 >= 163 && LA225_0 <= 164)||LA225_0==188) ) {
					alt225=1;
				}

				switch (alt225) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:765:9: struct_modifier
					{
					pushFollow(FOLLOW_struct_modifier_in_struct_modifiers10330);
					struct_modifier720=struct_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_modifier720.getTree());

					}
					break;

				default :
					if ( cnt225 >= 1 ) break loop225;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(225, input);
					throw eee;
				}
				cnt225++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 219, struct_modifiers_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_modifiers"


	public static class struct_modifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_modifier"
	// /Users/jeremie/ANTLR/cs.g:766:1: struct_modifier : ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' );
	public final csParser.struct_modifier_return struct_modifier() throws RecognitionException {
		csParser.struct_modifier_return retval = new csParser.struct_modifier_return();
		retval.start = input.LT(1);
		int struct_modifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set721=null;

		CommonTree set721_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:766:16: ( 'new' | 'public' | 'protected' | 'internal' | 'private' | 'unsafe' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set721=input.LT(1);
			if ( input.LA(1)==140||input.LA(1)==150||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 164)||input.LA(1)==188 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set721));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 220, struct_modifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_modifier"


	public static class struct_interfaces_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_interfaces"
	// /Users/jeremie/ANTLR/cs.g:768:1: struct_interfaces : ':' interface_type_list ;
	public final csParser.struct_interfaces_return struct_interfaces() throws RecognitionException {
		csParser.struct_interfaces_return retval = new csParser.struct_interfaces_return();
		retval.start = input.LT(1);
		int struct_interfaces_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal722=null;
		ParserRuleReturnScope interface_type_list723 =null;

		CommonTree char_literal722_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:768:18: ( ':' interface_type_list )
			// /Users/jeremie/ANTLR/cs.g:769:9: ':' interface_type_list
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal722=(Token)match(input,79,FOLLOW_79_in_struct_interfaces10381); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal722_tree = (CommonTree)adaptor.create(char_literal722);
			adaptor.addChild(root_0, char_literal722_tree);
			}

			pushFollow(FOLLOW_interface_type_list_in_struct_interfaces10385);
			interface_type_list723=interface_type_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_type_list723.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 221, struct_interfaces_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_interfaces"


	public static class struct_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_body"
	// /Users/jeremie/ANTLR/cs.g:770:1: struct_body : '{' ( struct_member_declarations )? '}' ;
	public final csParser.struct_body_return struct_body() throws RecognitionException {
		csParser.struct_body_return retval = new csParser.struct_body_return();
		retval.start = input.LT(1);
		int struct_body_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal724=null;
		Token char_literal726=null;
		ParserRuleReturnScope struct_member_declarations725 =null;

		CommonTree char_literal724_tree=null;
		CommonTree char_literal726_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:770:12: ( '{' ( struct_member_declarations )? '}' )
			// /Users/jeremie/ANTLR/cs.g:771:9: '{' ( struct_member_declarations )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal724=(Token)match(input,197,FOLLOW_197_in_struct_body10399); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal724_tree = (CommonTree)adaptor.create(char_literal724);
			adaptor.addChild(root_0, char_literal724_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:771:15: ( struct_member_declarations )?
			int alt226=2;
			int LA226_0 = input.LA(1);
			if ( (LA226_0==ENUM||LA226_0==IDENTIFIER||LA226_0==91||(LA226_0 >= 95 && LA226_0 <= 98)||(LA226_0 >= 100 && LA226_0 <= 101)||LA226_0==103||(LA226_0 >= 105 && LA226_0 <= 106)||LA226_0==109||(LA226_0 >= 111 && LA226_0 <= 112)||LA226_0==114||(LA226_0 >= 116 && LA226_0 <= 117)||(LA226_0 >= 119 && LA226_0 <= 120)||(LA226_0 >= 122 && LA226_0 <= 126)||LA226_0==129||LA226_0==132||(LA226_0 >= 135 && LA226_0 <= 136)||(LA226_0 >= 138 && LA226_0 <= 141)||(LA226_0 >= 143 && LA226_0 <= 144)||(LA226_0 >= 146 && LA226_0 <= 148)||(LA226_0 >= 150 && LA226_0 <= 152)||LA226_0==154||(LA226_0 >= 156 && LA226_0 <= 157)||(LA226_0 >= 159 && LA226_0 <= 165)||LA226_0==167||(LA226_0 >= 169 && LA226_0 <= 173)||(LA226_0 >= 176 && LA226_0 <= 178)||LA226_0==183||(LA226_0 >= 185 && LA226_0 <= 186)||(LA226_0 >= 188 && LA226_0 <= 194)||LA226_0==196) ) {
				alt226=1;
			}
			switch (alt226) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:771:15: struct_member_declarations
					{
					pushFollow(FOLLOW_struct_member_declarations_in_struct_body10403);
					struct_member_declarations725=struct_member_declarations();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declarations725.getTree());

					}
					break;

			}

			char_literal726=(Token)match(input,201,FOLLOW_201_in_struct_body10408); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal726_tree = (CommonTree)adaptor.create(char_literal726);
			adaptor.addChild(root_0, char_literal726_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 222, struct_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_body"


	public static class struct_member_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_member_declarations"
	// /Users/jeremie/ANTLR/cs.g:772:1: struct_member_declarations : ( struct_member_declaration )+ ;
	public final csParser.struct_member_declarations_return struct_member_declarations() throws RecognitionException {
		csParser.struct_member_declarations_return retval = new csParser.struct_member_declarations_return();
		retval.start = input.LT(1);
		int struct_member_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope struct_member_declaration727 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:772:27: ( ( struct_member_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:773:9: ( struct_member_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:773:9: ( struct_member_declaration )+
			int cnt227=0;
			loop227:
			while (true) {
				int alt227=2;
				int LA227_0 = input.LA(1);
				if ( (LA227_0==ENUM||LA227_0==IDENTIFIER||LA227_0==91||(LA227_0 >= 95 && LA227_0 <= 98)||(LA227_0 >= 100 && LA227_0 <= 101)||LA227_0==103||(LA227_0 >= 105 && LA227_0 <= 106)||LA227_0==109||(LA227_0 >= 111 && LA227_0 <= 112)||LA227_0==114||(LA227_0 >= 116 && LA227_0 <= 117)||(LA227_0 >= 119 && LA227_0 <= 120)||(LA227_0 >= 122 && LA227_0 <= 126)||LA227_0==129||LA227_0==132||(LA227_0 >= 135 && LA227_0 <= 136)||(LA227_0 >= 138 && LA227_0 <= 141)||(LA227_0 >= 143 && LA227_0 <= 144)||(LA227_0 >= 146 && LA227_0 <= 148)||(LA227_0 >= 150 && LA227_0 <= 152)||LA227_0==154||(LA227_0 >= 156 && LA227_0 <= 157)||(LA227_0 >= 159 && LA227_0 <= 165)||LA227_0==167||(LA227_0 >= 169 && LA227_0 <= 173)||(LA227_0 >= 176 && LA227_0 <= 178)||LA227_0==183||(LA227_0 >= 185 && LA227_0 <= 186)||(LA227_0 >= 188 && LA227_0 <= 194)||LA227_0==196) ) {
					alt227=1;
				}

				switch (alt227) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:773:9: struct_member_declaration
					{
					pushFollow(FOLLOW_struct_member_declaration_in_struct_member_declarations10422);
					struct_member_declaration727=struct_member_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_member_declaration727.getTree());

					}
					break;

				default :
					if ( cnt227 >= 1 ) break loop227;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(227, input);
					throw eee;
				}
				cnt227++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 223, struct_member_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_member_declarations"


	public static class struct_member_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "struct_member_declaration"
	// /Users/jeremie/ANTLR/cs.g:774:1: struct_member_declaration : ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) ;
	public final csParser.struct_member_declaration_return struct_member_declaration() throws RecognitionException {
		csParser.struct_member_declaration_return retval = new csParser.struct_member_declaration_return();
		retval.start = input.LT(1);
		int struct_member_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal729=null;
		Token char_literal732=null;
		Token string_literal734=null;
		Token string_literal741=null;
		Token char_literal747=null;
		ParserRuleReturnScope m =null;
		ParserRuleReturnScope attributes728 =null;
		ParserRuleReturnScope type730 =null;
		ParserRuleReturnScope constant_declarators731 =null;
		ParserRuleReturnScope event_declaration733 =null;
		ParserRuleReturnScope method_declaration735 =null;
		ParserRuleReturnScope interface_declaration736 =null;
		ParserRuleReturnScope class_declaration737 =null;
		ParserRuleReturnScope struct_declaration738 =null;
		ParserRuleReturnScope interface_declaration739 =null;
		ParserRuleReturnScope class_declaration740 =null;
		ParserRuleReturnScope method_declaration742 =null;
		ParserRuleReturnScope type743 =null;
		ParserRuleReturnScope method_declaration744 =null;
		ParserRuleReturnScope property_declaration745 =null;
		ParserRuleReturnScope type_name746 =null;
		ParserRuleReturnScope indexer_declaration748 =null;
		ParserRuleReturnScope indexer_declaration749 =null;
		ParserRuleReturnScope field_declaration750 =null;
		ParserRuleReturnScope operator_declaration751 =null;
		ParserRuleReturnScope struct_declaration752 =null;
		ParserRuleReturnScope enum_declaration753 =null;
		ParserRuleReturnScope delegate_declaration754 =null;
		ParserRuleReturnScope conversion_operator_declaration755 =null;
		ParserRuleReturnScope constructor_declaration756 =null;

		CommonTree string_literal729_tree=null;
		CommonTree char_literal732_tree=null;
		CommonTree string_literal734_tree=null;
		CommonTree string_literal741_tree=null;
		CommonTree char_literal747_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:774:26: ( ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration ) )
			// /Users/jeremie/ANTLR/cs.g:775:9: ( attributes )? (m= modifiers )? ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:775:9: ( attributes )?
			int alt228=2;
			int LA228_0 = input.LA(1);
			if ( (LA228_0==91) ) {
				alt228=1;
			}
			switch (alt228) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:775:9: attributes
					{
					pushFollow(FOLLOW_attributes_in_struct_member_declaration10438);
					attributes728=attributes();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes728.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:775:24: (m= modifiers )?
			int alt229=2;
			int LA229_0 = input.LA(1);
			if ( (LA229_0==96||LA229_0==125||LA229_0==140||LA229_0==150||LA229_0==156||LA229_0==161||(LA229_0 >= 163 && LA229_0 <= 165)||LA229_0==170||LA229_0==176||LA229_0==188||LA229_0==191||LA229_0==193) ) {
				alt229=1;
			}
			switch (alt229) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:775:24: m= modifiers
					{
					pushFollow(FOLLOW_modifiers_in_struct_member_declaration10445);
					m=modifiers();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());

					}
					break;

			}

			// /Users/jeremie/ANTLR/cs.g:776:9: ( 'const' type constant_declarators ';' | event_declaration | 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration ) | interface_declaration | class_declaration | 'void' method_declaration | type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration ) | struct_declaration | enum_declaration | delegate_declaration | conversion_operator_declaration | constructor_declaration )
			int alt232=12;
			switch ( input.LA(1) ) {
			case 112:
				{
				alt232=1;
				}
				break;
			case 123:
				{
				alt232=2;
				}
				break;
			case 159:
				{
				alt232=3;
				}
				break;
			case 139:
				{
				alt232=4;
				}
				break;
			case 111:
				{
				alt232=5;
				}
				break;
			case 192:
				{
				int LA232_6 = input.LA(2);
				if ( (LA232_6==Character_literal||LA232_6==FALSE||(LA232_6 >= Hex_number && LA232_6 <= IDENTIFIER)||(LA232_6 >= NULL && LA232_6 <= NUMBER)||LA232_6==Real_literal||LA232_6==STRINGLITERAL||LA232_6==TRUE||LA232_6==Verbatim_string_literal||LA232_6==95||(LA232_6 >= 97 && LA232_6 <= 98)||(LA232_6 >= 100 && LA232_6 <= 101)||LA232_6==103||(LA232_6 >= 105 && LA232_6 <= 106)||LA232_6==109||LA232_6==114||LA232_6==117||(LA232_6 >= 119 && LA232_6 <= 120)||LA232_6==122||LA232_6==126||LA232_6==129||LA232_6==132||LA232_6==135||LA232_6==138||LA232_6==141||(LA232_6 >= 143 && LA232_6 <= 144)||(LA232_6 >= 146 && LA232_6 <= 148)||(LA232_6 >= 151 && LA232_6 <= 152)||LA232_6==154||LA232_6==157||LA232_6==160||LA232_6==162||LA232_6==167||LA232_6==169||(LA232_6 >= 171 && LA232_6 <= 173)||LA232_6==177||LA232_6==183||(LA232_6 >= 185 && LA232_6 <= 186)||(LA232_6 >= 189 && LA232_6 <= 190)||LA232_6==194||LA232_6==196) ) {
					alt232=6;
				}
				else if ( (LA232_6==69) ) {
					alt232=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 232, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt232=7;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA232_8 = input.LA(2);
				if ( (LA232_8==Character_literal||LA232_8==DOT||LA232_8==FALSE||(LA232_8 >= Hex_number && LA232_8 <= IDENTIFIER)||(LA232_8 >= NULL && LA232_8 <= NUMBER)||LA232_8==Real_literal||LA232_8==STRINGLITERAL||LA232_8==TRUE||LA232_8==Verbatim_string_literal||LA232_8==69||(LA232_8 >= 80 && LA232_8 <= 81)||LA232_8==89||LA232_8==91||LA232_8==95||(LA232_8 >= 97 && LA232_8 <= 98)||(LA232_8 >= 100 && LA232_8 <= 101)||LA232_8==103||(LA232_8 >= 105 && LA232_8 <= 106)||LA232_8==109||LA232_8==114||LA232_8==117||(LA232_8 >= 119 && LA232_8 <= 120)||LA232_8==122||LA232_8==126||LA232_8==129||LA232_8==132||LA232_8==135||LA232_8==138||LA232_8==141||(LA232_8 >= 143 && LA232_8 <= 144)||(LA232_8 >= 146 && LA232_8 <= 148)||(LA232_8 >= 151 && LA232_8 <= 154)||LA232_8==157||LA232_8==160||LA232_8==162||LA232_8==167||LA232_8==169||(LA232_8 >= 171 && LA232_8 <= 173)||LA232_8==177||LA232_8==180||LA232_8==183||(LA232_8 >= 185 && LA232_8 <= 186)||(LA232_8 >= 189 && LA232_8 <= 190)||LA232_8==194||LA232_8==196) ) {
					alt232=7;
				}
				else if ( (LA232_8==68) ) {
					alt232=12;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 232, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 178:
				{
				alt232=8;
				}
				break;
			case ENUM:
				{
				alt232=9;
				}
				break;
			case 116:
				{
				alt232=10;
				}
				break;
			case 124:
			case 136:
				{
				alt232=11;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 232, 0, input);
				throw nvae;
			}
			switch (alt232) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:776:11: 'const' type constant_declarators ';'
					{
					string_literal729=(Token)match(input,112,FOLLOW_112_in_struct_member_declaration10458); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal729_tree = (CommonTree)adaptor.create(string_literal729);
					adaptor.addChild(root_0, string_literal729_tree);
					}

					pushFollow(FOLLOW_type_in_struct_member_declaration10462);
					type730=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type730.getTree());

					pushFollow(FOLLOW_constant_declarators_in_struct_member_declaration10466);
					constant_declarators731=constant_declarators();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators731.getTree());

					char_literal732=(Token)match(input,SEMI,FOLLOW_SEMI_in_struct_member_declaration10470); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal732_tree = (CommonTree)adaptor.create(char_literal732);
					adaptor.addChild(root_0, char_literal732_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:777:11: event_declaration
					{
					pushFollow(FOLLOW_event_declaration_in_struct_member_declaration10482);
					event_declaration733=event_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, event_declaration733.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:778:11: 'partial' ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					{
					string_literal734=(Token)match(input,159,FOLLOW_159_in_struct_member_declaration10510); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal734_tree = (CommonTree)adaptor.create(string_literal734);
					adaptor.addChild(root_0, string_literal734_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:778:21: ( method_declaration | interface_declaration | class_declaration | struct_declaration )
					int alt230=4;
					switch ( input.LA(1) ) {
					case Character_literal:
					case FALSE:
					case Hex_number:
					case IDENTIFIER:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 103:
					case 105:
					case 106:
					case 109:
					case 114:
					case 117:
					case 119:
					case 120:
					case 122:
					case 126:
					case 129:
					case 132:
					case 135:
					case 138:
					case 141:
					case 143:
					case 144:
					case 146:
					case 147:
					case 148:
					case 151:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 169:
					case 171:
					case 172:
					case 173:
					case 177:
					case 183:
					case 185:
					case 186:
					case 189:
					case 190:
					case 194:
					case 196:
						{
						alt230=1;
						}
						break;
					case 139:
						{
						alt230=2;
						}
						break;
					case 111:
						{
						alt230=3;
						}
						break;
					case 178:
						{
						alt230=4;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 230, 0, input);
						throw nvae;
					}
					switch (alt230) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:778:22: method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_struct_member_declaration10513);
							method_declaration735=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration735.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:779:30: interface_declaration
							{
							pushFollow(FOLLOW_interface_declaration_in_struct_member_declaration10545);
							interface_declaration736=interface_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration736.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:780:30: class_declaration
							{
							pushFollow(FOLLOW_class_declaration_in_struct_member_declaration10577);
							class_declaration737=class_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration737.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:781:30: struct_declaration
							{
							pushFollow(FOLLOW_struct_declaration_in_struct_member_declaration10609);
							struct_declaration738=struct_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration738.getTree());

							}
							break;

					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:783:11: interface_declaration
					{
					pushFollow(FOLLOW_interface_declaration_in_struct_member_declaration10623);
					interface_declaration739=interface_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interface_declaration739.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:784:11: class_declaration
					{
					pushFollow(FOLLOW_class_declaration_in_struct_member_declaration10643);
					class_declaration740=class_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, class_declaration740.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:785:11: 'void' method_declaration
					{
					string_literal741=(Token)match(input,192,FOLLOW_192_in_struct_member_declaration10671); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal741_tree = (CommonTree)adaptor.create(string_literal741);
					adaptor.addChild(root_0, string_literal741_tree);
					}

					pushFollow(FOLLOW_method_declaration_in_struct_member_declaration10675);
					method_declaration742=method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration742.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:786:11: type ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
					{
					pushFollow(FOLLOW_type_in_struct_member_declaration10687);
					type743=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type743.getTree());

					// /Users/jeremie/ANTLR/cs.g:786:16: ( ( member_name '(' )=> method_declaration | ( member_name '{' )=> property_declaration | ( member_name '.' 'this' )=> type_name '.' indexer_declaration | indexer_declaration | field_declaration | operator_declaration )
					int alt231=6;
					switch ( input.LA(1) ) {
					case 103:
					case 106:
					case 109:
					case 114:
					case 119:
					case 129:
					case 138:
					case 146:
					case 151:
					case 169:
					case 173:
					case 177:
					case 185:
					case 186:
					case 189:
						{
						int LA231_1 = input.LA(2);
						if ( (synpred28_cs()) ) {
							alt231=1;
						}
						else if ( (synpred29_cs()) ) {
							alt231=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 231, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case IDENTIFIER:
					case 95:
					case 97:
					case 98:
					case 100:
					case 101:
					case 105:
					case 117:
					case 120:
					case 122:
					case 126:
					case 132:
					case 135:
					case 141:
					case 143:
					case 144:
					case 147:
					case 148:
					case 152:
					case 154:
					case 157:
					case 160:
					case 162:
					case 167:
					case 171:
					case 172:
					case 183:
					case 190:
					case 194:
					case 196:
						{
						int LA231_2 = input.LA(2);
						if ( (synpred28_cs()) ) {
							alt231=1;
						}
						else if ( (synpred29_cs()) ) {
							alt231=2;
						}
						else if ( (synpred30_cs()) ) {
							alt231=3;
						}
						else if ( (true) ) {
							alt231=5;
						}

						}
						break;
					case Character_literal:
					case FALSE:
					case Hex_number:
					case NULL:
					case NUMBER:
					case Real_literal:
					case STRINGLITERAL:
					case TRUE:
					case Verbatim_string_literal:
						{
						int LA231_3 = input.LA(2);
						if ( (synpred28_cs()) ) {
							alt231=1;
						}
						else if ( (synpred29_cs()) ) {
							alt231=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 231, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case 180:
						{
						alt231=4;
						}
						break;
					case 153:
						{
						alt231=6;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 231, 0, input);
						throw nvae;
					}
					switch (alt231) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:786:18: ( member_name '(' )=> method_declaration
							{
							pushFollow(FOLLOW_method_declaration_in_struct_member_declaration10701);
							method_declaration744=method_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration744.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:787:22: ( member_name '{' )=> property_declaration
							{
							pushFollow(FOLLOW_property_declaration_in_struct_member_declaration10734);
							property_declaration745=property_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration745.getTree());

							}
							break;
						case 3 :
							// /Users/jeremie/ANTLR/cs.g:788:22: ( member_name '.' 'this' )=> type_name '.' indexer_declaration
							{
							pushFollow(FOLLOW_type_name_in_struct_member_declaration10771);
							type_name746=type_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type_name746.getTree());

							char_literal747=(Token)match(input,DOT,FOLLOW_DOT_in_struct_member_declaration10773); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							char_literal747_tree = (CommonTree)adaptor.create(char_literal747);
							adaptor.addChild(root_0, char_literal747_tree);
							}

							pushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration10775);
							indexer_declaration748=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration748.getTree());

							}
							break;
						case 4 :
							// /Users/jeremie/ANTLR/cs.g:789:22: indexer_declaration
							{
							pushFollow(FOLLOW_indexer_declaration_in_struct_member_declaration10798);
							indexer_declaration749=indexer_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declaration749.getTree());

							}
							break;
						case 5 :
							// /Users/jeremie/ANTLR/cs.g:790:18: field_declaration
							{
							pushFollow(FOLLOW_field_declaration_in_struct_member_declaration10825);
							field_declaration750=field_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration750.getTree());

							}
							break;
						case 6 :
							// /Users/jeremie/ANTLR/cs.g:791:18: operator_declaration
							{
							pushFollow(FOLLOW_operator_declaration_in_struct_member_declaration10850);
							operator_declaration751=operator_declaration();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declaration751.getTree());

							}
							break;

					}

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:795:11: struct_declaration
					{
					pushFollow(FOLLOW_struct_declaration_in_struct_member_declaration10889);
					struct_declaration752=struct_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, struct_declaration752.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:796:11: enum_declaration
					{
					pushFollow(FOLLOW_enum_declaration_in_struct_member_declaration10909);
					enum_declaration753=enum_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, enum_declaration753.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:797:11: delegate_declaration
					{
					pushFollow(FOLLOW_delegate_declaration_in_struct_member_declaration10937);
					delegate_declaration754=delegate_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration754.getTree());

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:798:11: conversion_operator_declaration
					{
					pushFollow(FOLLOW_conversion_operator_declaration_in_struct_member_declaration10957);
					conversion_operator_declaration755=conversion_operator_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declaration755.getTree());

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:799:11: constructor_declaration
					{
					pushFollow(FOLLOW_constructor_declaration_in_struct_member_declaration10969);
					constructor_declaration756=constructor_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declaration756.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 224, struct_member_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "struct_member_declaration"


	public static class indexer_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "indexer_declaration"
	// /Users/jeremie/ANTLR/cs.g:805:1: indexer_declaration : indexer_declarator '{' accessor_declarations '}' ;
	public final csParser.indexer_declaration_return indexer_declaration() throws RecognitionException {
		csParser.indexer_declaration_return retval = new csParser.indexer_declaration_return();
		retval.start = input.LT(1);
		int indexer_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal758=null;
		Token char_literal760=null;
		ParserRuleReturnScope indexer_declarator757 =null;
		ParserRuleReturnScope accessor_declarations759 =null;

		CommonTree char_literal758_tree=null;
		CommonTree char_literal760_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:805:20: ( indexer_declarator '{' accessor_declarations '}' )
			// /Users/jeremie/ANTLR/cs.g:806:9: indexer_declarator '{' accessor_declarations '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_indexer_declarator_in_indexer_declaration11014);
			indexer_declarator757=indexer_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, indexer_declarator757.getTree());

			char_literal758=(Token)match(input,197,FOLLOW_197_in_indexer_declaration11018); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal758_tree = (CommonTree)adaptor.create(char_literal758);
			adaptor.addChild(root_0, char_literal758_tree);
			}

			pushFollow(FOLLOW_accessor_declarations_in_indexer_declaration11022);
			accessor_declarations759=accessor_declarations();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, accessor_declarations759.getTree());

			char_literal760=(Token)match(input,201,FOLLOW_201_in_indexer_declaration11026); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal760_tree = (CommonTree)adaptor.create(char_literal760);
			adaptor.addChild(root_0, char_literal760_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 225, indexer_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "indexer_declaration"


	public static class indexer_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "indexer_declarator"
	// /Users/jeremie/ANTLR/cs.g:807:1: indexer_declarator : 'this' '[' formal_parameter_list ']' ;
	public final csParser.indexer_declarator_return indexer_declarator() throws RecognitionException {
		csParser.indexer_declarator_return retval = new csParser.indexer_declarator_return();
		retval.start = input.LT(1);
		int indexer_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal761=null;
		Token char_literal762=null;
		Token char_literal764=null;
		ParserRuleReturnScope formal_parameter_list763 =null;

		CommonTree string_literal761_tree=null;
		CommonTree char_literal762_tree=null;
		CommonTree char_literal764_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:807:19: ( 'this' '[' formal_parameter_list ']' )
			// /Users/jeremie/ANTLR/cs.g:809:9: 'this' '[' formal_parameter_list ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal761=(Token)match(input,180,FOLLOW_180_in_indexer_declarator11050); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal761_tree = (CommonTree)adaptor.create(string_literal761);
			adaptor.addChild(root_0, string_literal761_tree);
			}

			char_literal762=(Token)match(input,91,FOLLOW_91_in_indexer_declarator11054); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal762_tree = (CommonTree)adaptor.create(char_literal762);
			adaptor.addChild(root_0, char_literal762_tree);
			}

			pushFollow(FOLLOW_formal_parameter_list_in_indexer_declarator11058);
			formal_parameter_list763=formal_parameter_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list763.getTree());

			char_literal764=(Token)match(input,92,FOLLOW_92_in_indexer_declarator11062); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal764_tree = (CommonTree)adaptor.create(char_literal764);
			adaptor.addChild(root_0, char_literal764_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 226, indexer_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "indexer_declarator"


	public static class operator_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "operator_declaration"
	// /Users/jeremie/ANTLR/cs.g:812:1: operator_declaration : operator_declarator operator_body ;
	public final csParser.operator_declaration_return operator_declaration() throws RecognitionException {
		csParser.operator_declaration_return retval = new csParser.operator_declaration_return();
		retval.start = input.LT(1);
		int operator_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope operator_declarator765 =null;
		ParserRuleReturnScope operator_body766 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:812:21: ( operator_declarator operator_body )
			// /Users/jeremie/ANTLR/cs.g:813:9: operator_declarator operator_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_operator_declarator_in_operator_declaration11087);
			operator_declarator765=operator_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_declarator765.getTree());

			pushFollow(FOLLOW_operator_body_in_operator_declaration11091);
			operator_body766=operator_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body766.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 227, operator_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "operator_declaration"


	public static class operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:814:1: operator_declarator : 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) ;
	public final csParser.operator_declarator_return operator_declarator() throws RecognitionException {
		csParser.operator_declarator_return retval = new csParser.operator_declarator_return();
		retval.start = input.LT(1);
		int operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal767=null;
		Token set768=null;
		Token char_literal769=null;
		ParserRuleReturnScope type770 =null;
		ParserRuleReturnScope identifier771 =null;
		ParserRuleReturnScope binary_operator_declarator772 =null;
		ParserRuleReturnScope unary_operator_declarator773 =null;
		ParserRuleReturnScope overloadable_unary_operator774 =null;
		ParserRuleReturnScope unary_operator_declarator775 =null;
		ParserRuleReturnScope overloadable_binary_operator776 =null;
		ParserRuleReturnScope binary_operator_declarator777 =null;

		CommonTree string_literal767_tree=null;
		CommonTree set768_tree=null;
		CommonTree char_literal769_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:814:20: ( 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator ) )
			// /Users/jeremie/ANTLR/cs.g:815:9: 'operator' ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal767=(Token)match(input,153,FOLLOW_153_in_operator_declarator11106); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal767_tree = (CommonTree)adaptor.create(string_literal767);
			adaptor.addChild(root_0, string_literal767_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:816:17: ( ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator ) | overloadable_unary_operator unary_operator_declarator | overloadable_binary_operator binary_operator_declarator )
			int alt234=3;
			switch ( input.LA(1) ) {
			case MINUS:
			case 71:
				{
				alt234=1;
				}
				break;
			case FALSE:
			case TRUE:
			case 61:
			case 72:
			case 75:
			case 202:
				{
				alt234=2;
				}
				break;
			case GT:
			case 62:
			case 63:
			case 66:
			case 69:
			case 77:
			case 81:
			case 82:
			case 84:
			case 86:
			case 88:
			case 93:
			case 198:
				{
				alt234=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 234, 0, input);
				throw nvae;
			}
			switch (alt234) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:816:18: ( '+' | '-' ) '(' type identifier ( binary_operator_declarator | unary_operator_declarator )
					{
					set768=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==71 ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set768));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					char_literal769=(Token)match(input,68,FOLLOW_68_in_operator_declarator11138); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal769_tree = (CommonTree)adaptor.create(char_literal769);
					adaptor.addChild(root_0, char_literal769_tree);
					}

					pushFollow(FOLLOW_type_in_operator_declarator11142);
					type770=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type770.getTree());

					pushFollow(FOLLOW_identifier_in_operator_declarator11146);
					identifier771=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier771.getTree());

					// /Users/jeremie/ANTLR/cs.g:816:56: ( binary_operator_declarator | unary_operator_declarator )
					int alt233=2;
					int LA233_0 = input.LA(1);
					if ( (LA233_0==74) ) {
						alt233=1;
					}
					else if ( (LA233_0==RPAREN) ) {
						alt233=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 233, 0, input);
						throw nvae;
					}

					switch (alt233) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:816:57: binary_operator_declarator
							{
							pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator11149);
							binary_operator_declarator772=binary_operator_declarator();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator772.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:816:86: unary_operator_declarator
							{
							pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator11153);
							unary_operator_declarator773=unary_operator_declarator();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator773.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:817:19: overloadable_unary_operator unary_operator_declarator
					{
					pushFollow(FOLLOW_overloadable_unary_operator_in_operator_declarator11174);
					overloadable_unary_operator774=overloadable_unary_operator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_unary_operator774.getTree());

					pushFollow(FOLLOW_unary_operator_declarator_in_operator_declarator11178);
					unary_operator_declarator775=unary_operator_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_operator_declarator775.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:818:19: overloadable_binary_operator binary_operator_declarator
					{
					pushFollow(FOLLOW_overloadable_binary_operator_in_operator_declarator11198);
					overloadable_binary_operator776=overloadable_binary_operator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, overloadable_binary_operator776.getTree());

					pushFollow(FOLLOW_binary_operator_declarator_in_operator_declarator11202);
					binary_operator_declarator777=binary_operator_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, binary_operator_declarator777.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 228, operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "operator_declarator"


	public static class unary_operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unary_operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:819:1: unary_operator_declarator : ')' ;
	public final csParser.unary_operator_declarator_return unary_operator_declarator() throws RecognitionException {
		csParser.unary_operator_declarator_return retval = new csParser.unary_operator_declarator_return();
		retval.start = input.LT(1);
		int unary_operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal778=null;

		CommonTree char_literal778_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:819:26: ( ')' )
			// /Users/jeremie/ANTLR/cs.g:820:12: ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal778=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_unary_operator_declarator11221); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal778_tree = (CommonTree)adaptor.create(char_literal778);
			adaptor.addChild(root_0, char_literal778_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 229, unary_operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unary_operator_declarator"


	public static class overloadable_unary_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "overloadable_unary_operator"
	// /Users/jeremie/ANTLR/cs.g:821:1: overloadable_unary_operator : ( '!' | '~' | '++' | '--' | 'true' | 'false' );
	public final csParser.overloadable_unary_operator_return overloadable_unary_operator() throws RecognitionException {
		csParser.overloadable_unary_operator_return retval = new csParser.overloadable_unary_operator_return();
		retval.start = input.LT(1);
		int overloadable_unary_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set779=null;

		CommonTree set779_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:821:28: ( '!' | '~' | '++' | '--' | 'true' | 'false' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set779=input.LT(1);
			if ( input.LA(1)==FALSE||input.LA(1)==TRUE||input.LA(1)==61||input.LA(1)==72||input.LA(1)==75||input.LA(1)==202 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set779));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 230, overloadable_unary_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "overloadable_unary_operator"


	public static class binary_operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "binary_operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:823:1: binary_operator_declarator : ',' type identifier ')' ;
	public final csParser.binary_operator_declarator_return binary_operator_declarator() throws RecognitionException {
		csParser.binary_operator_declarator_return retval = new csParser.binary_operator_declarator_return();
		retval.start = input.LT(1);
		int binary_operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal780=null;
		Token char_literal783=null;
		ParserRuleReturnScope type781 =null;
		ParserRuleReturnScope identifier782 =null;

		CommonTree char_literal780_tree=null;
		CommonTree char_literal783_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:823:27: ( ',' type identifier ')' )
			// /Users/jeremie/ANTLR/cs.g:824:9: ',' type identifier ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal780=(Token)match(input,74,FOLLOW_74_in_binary_operator_declarator11278); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal780_tree = (CommonTree)adaptor.create(char_literal780);
			adaptor.addChild(root_0, char_literal780_tree);
			}

			pushFollow(FOLLOW_type_in_binary_operator_declarator11282);
			type781=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type781.getTree());

			pushFollow(FOLLOW_identifier_in_binary_operator_declarator11286);
			identifier782=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier782.getTree());

			char_literal783=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_binary_operator_declarator11290); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal783_tree = (CommonTree)adaptor.create(char_literal783);
			adaptor.addChild(root_0, char_literal783_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 231, binary_operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "binary_operator_declarator"


	public static class overloadable_binary_operator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "overloadable_binary_operator"
	// /Users/jeremie/ANTLR/cs.g:826:1: overloadable_binary_operator : ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' );
	public final csParser.overloadable_binary_operator_return overloadable_binary_operator() throws RecognitionException {
		csParser.overloadable_binary_operator_return retval = new csParser.overloadable_binary_operator_return();
		retval.start = input.LT(1);
		int overloadable_binary_operator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal784=null;
		Token char_literal785=null;
		Token char_literal786=null;
		Token char_literal787=null;
		Token char_literal788=null;
		Token char_literal789=null;
		Token string_literal790=null;
		Token char_literal791=null;
		Token char_literal792=null;
		Token string_literal793=null;
		Token string_literal794=null;
		Token char_literal795=null;
		Token char_literal796=null;
		Token string_literal797=null;
		Token string_literal798=null;

		CommonTree char_literal784_tree=null;
		CommonTree char_literal785_tree=null;
		CommonTree char_literal786_tree=null;
		CommonTree char_literal787_tree=null;
		CommonTree char_literal788_tree=null;
		CommonTree char_literal789_tree=null;
		CommonTree string_literal790_tree=null;
		CommonTree char_literal791_tree=null;
		CommonTree char_literal792_tree=null;
		CommonTree string_literal793_tree=null;
		CommonTree string_literal794_tree=null;
		CommonTree char_literal795_tree=null;
		CommonTree char_literal796_tree=null;
		CommonTree string_literal797_tree=null;
		CommonTree string_literal798_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:826:29: ( '*' | '/' | '%' | '&' | '|' | '^' | '<<' | '>' '>' | '==' | '!=' | '>' | '<' | '>=' | '<=' )
			int alt235=14;
			switch ( input.LA(1) ) {
			case 69:
				{
				alt235=1;
				}
				break;
			case 77:
				{
				alt235=2;
				}
				break;
			case 63:
				{
				alt235=3;
				}
				break;
			case 66:
				{
				alt235=4;
				}
				break;
			case 198:
				{
				alt235=5;
				}
				break;
			case 93:
				{
				alt235=6;
				}
				break;
			case 82:
				{
				alt235=7;
				}
				break;
			case GT:
				{
				int LA235_8 = input.LA(2);
				if ( (LA235_8==GT) ) {
					alt235=8;
				}
				else if ( (LA235_8==74) ) {
					alt235=11;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 235, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 86:
				{
				alt235=9;
				}
				break;
			case 62:
				{
				alt235=10;
				}
				break;
			case 81:
				{
				alt235=12;
				}
				break;
			case 88:
				{
				alt235=13;
				}
				break;
			case 84:
				{
				alt235=14;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 235, 0, input);
				throw nvae;
			}
			switch (alt235) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:827:26: '*'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal784=(Token)match(input,69,FOLLOW_69_in_overloadable_binary_operator11308); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal784_tree = (CommonTree)adaptor.create(char_literal784);
					adaptor.addChild(root_0, char_literal784_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:827:32: '/'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal785=(Token)match(input,77,FOLLOW_77_in_overloadable_binary_operator11312); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal785_tree = (CommonTree)adaptor.create(char_literal785);
					adaptor.addChild(root_0, char_literal785_tree);
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:827:38: '%'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal786=(Token)match(input,63,FOLLOW_63_in_overloadable_binary_operator11316); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal786_tree = (CommonTree)adaptor.create(char_literal786);
					adaptor.addChild(root_0, char_literal786_tree);
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:827:44: '&'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal787=(Token)match(input,66,FOLLOW_66_in_overloadable_binary_operator11320); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal787_tree = (CommonTree)adaptor.create(char_literal787);
					adaptor.addChild(root_0, char_literal787_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:827:50: '|'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal788=(Token)match(input,198,FOLLOW_198_in_overloadable_binary_operator11324); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal788_tree = (CommonTree)adaptor.create(char_literal788);
					adaptor.addChild(root_0, char_literal788_tree);
					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:827:56: '^'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal789=(Token)match(input,93,FOLLOW_93_in_overloadable_binary_operator11328); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal789_tree = (CommonTree)adaptor.create(char_literal789);
					adaptor.addChild(root_0, char_literal789_tree);
					}

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:827:62: '<<'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal790=(Token)match(input,82,FOLLOW_82_in_overloadable_binary_operator11332); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal790_tree = (CommonTree)adaptor.create(string_literal790);
					adaptor.addChild(root_0, string_literal790_tree);
					}

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:827:69: '>' '>'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal791=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator11336); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal791_tree = (CommonTree)adaptor.create(char_literal791);
					adaptor.addChild(root_0, char_literal791_tree);
					}

					char_literal792=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator11338); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal792_tree = (CommonTree)adaptor.create(char_literal792);
					adaptor.addChild(root_0, char_literal792_tree);
					}

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:827:79: '=='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal793=(Token)match(input,86,FOLLOW_86_in_overloadable_binary_operator11342); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal793_tree = (CommonTree)adaptor.create(string_literal793);
					adaptor.addChild(root_0, string_literal793_tree);
					}

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:827:86: '!='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal794=(Token)match(input,62,FOLLOW_62_in_overloadable_binary_operator11346); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal794_tree = (CommonTree)adaptor.create(string_literal794);
					adaptor.addChild(root_0, string_literal794_tree);
					}

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:827:93: '>'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal795=(Token)match(input,GT,FOLLOW_GT_in_overloadable_binary_operator11350); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal795_tree = (CommonTree)adaptor.create(char_literal795);
					adaptor.addChild(root_0, char_literal795_tree);
					}

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:827:99: '<'
					{
					root_0 = (CommonTree)adaptor.nil();


					char_literal796=(Token)match(input,81,FOLLOW_81_in_overloadable_binary_operator11354); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal796_tree = (CommonTree)adaptor.create(char_literal796);
					adaptor.addChild(root_0, char_literal796_tree);
					}

					}
					break;
				case 13 :
					// /Users/jeremie/ANTLR/cs.g:827:105: '>='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal797=(Token)match(input,88,FOLLOW_88_in_overloadable_binary_operator11358); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal797_tree = (CommonTree)adaptor.create(string_literal797);
					adaptor.addChild(root_0, string_literal797_tree);
					}

					}
					break;
				case 14 :
					// /Users/jeremie/ANTLR/cs.g:827:112: '<='
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal798=(Token)match(input,84,FOLLOW_84_in_overloadable_binary_operator11362); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal798_tree = (CommonTree)adaptor.create(string_literal798);
					adaptor.addChild(root_0, string_literal798_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 232, overloadable_binary_operator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "overloadable_binary_operator"


	public static class conversion_operator_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conversion_operator_declaration"
	// /Users/jeremie/ANTLR/cs.g:829:1: conversion_operator_declaration : conversion_operator_declarator operator_body ;
	public final csParser.conversion_operator_declaration_return conversion_operator_declaration() throws RecognitionException {
		csParser.conversion_operator_declaration_return retval = new csParser.conversion_operator_declaration_return();
		retval.start = input.LT(1);
		int conversion_operator_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope conversion_operator_declarator799 =null;
		ParserRuleReturnScope operator_body800 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:829:32: ( conversion_operator_declarator operator_body )
			// /Users/jeremie/ANTLR/cs.g:830:9: conversion_operator_declarator operator_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration11379);
			conversion_operator_declarator799=conversion_operator_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, conversion_operator_declarator799.getTree());

			pushFollow(FOLLOW_operator_body_in_conversion_operator_declaration11383);
			operator_body800=operator_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, operator_body800.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 233, conversion_operator_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conversion_operator_declaration"


	public static class conversion_operator_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "conversion_operator_declarator"
	// /Users/jeremie/ANTLR/cs.g:831:1: conversion_operator_declarator : ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' ;
	public final csParser.conversion_operator_declarator_return conversion_operator_declarator() throws RecognitionException {
		csParser.conversion_operator_declarator_return retval = new csParser.conversion_operator_declarator_return();
		retval.start = input.LT(1);
		int conversion_operator_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set801=null;
		Token string_literal802=null;
		Token char_literal804=null;
		Token char_literal807=null;
		ParserRuleReturnScope type803 =null;
		ParserRuleReturnScope type805 =null;
		ParserRuleReturnScope identifier806 =null;

		CommonTree set801_tree=null;
		CommonTree string_literal802_tree=null;
		CommonTree char_literal804_tree=null;
		CommonTree char_literal807_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:831:31: ( ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')' )
			// /Users/jeremie/ANTLR/cs.g:832:9: ( 'implicit' | 'explicit' ) 'operator' type '(' type identifier ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			set801=input.LT(1);
			if ( input.LA(1)==124||input.LA(1)==136 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set801));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			string_literal802=(Token)match(input,153,FOLLOW_153_in_conversion_operator_declarator11407); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal802_tree = (CommonTree)adaptor.create(string_literal802);
			adaptor.addChild(root_0, string_literal802_tree);
			}

			pushFollow(FOLLOW_type_in_conversion_operator_declarator11411);
			type803=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type803.getTree());

			char_literal804=(Token)match(input,68,FOLLOW_68_in_conversion_operator_declarator11415); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal804_tree = (CommonTree)adaptor.create(char_literal804);
			adaptor.addChild(root_0, char_literal804_tree);
			}

			pushFollow(FOLLOW_type_in_conversion_operator_declarator11419);
			type805=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type805.getTree());

			pushFollow(FOLLOW_identifier_in_conversion_operator_declarator11423);
			identifier806=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier806.getTree());

			char_literal807=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_conversion_operator_declarator11427); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal807_tree = (CommonTree)adaptor.create(char_literal807);
			adaptor.addChild(root_0, char_literal807_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 234, conversion_operator_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "conversion_operator_declarator"


	public static class operator_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "operator_body"
	// /Users/jeremie/ANTLR/cs.g:833:1: operator_body : block ;
	public final csParser.operator_body_return operator_body() throws RecognitionException {
		csParser.operator_body_return retval = new csParser.operator_body_return();
		retval.start = input.LT(1);
		int operator_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block808 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:833:14: ( block )
			// /Users/jeremie/ANTLR/cs.g:834:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_operator_body11442);
			block808=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block808.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 235, operator_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "operator_body"


	public static class constructor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_declaration"
	// /Users/jeremie/ANTLR/cs.g:837:1: constructor_declaration : constructor_declarator constructor_body ;
	public final csParser.constructor_declaration_return constructor_declaration() throws RecognitionException {
		csParser.constructor_declaration_return retval = new csParser.constructor_declaration_return();
		retval.start = input.LT(1);
		int constructor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope constructor_declarator809 =null;
		ParserRuleReturnScope constructor_body810 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:837:24: ( constructor_declarator constructor_body )
			// /Users/jeremie/ANTLR/cs.g:838:9: constructor_declarator constructor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_constructor_declarator_in_constructor_declaration11459);
			constructor_declarator809=constructor_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_declarator809.getTree());

			pushFollow(FOLLOW_constructor_body_in_constructor_declaration11463);
			constructor_body810=constructor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_body810.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 236, constructor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_declaration"


	public static class constructor_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_declarator"
	// /Users/jeremie/ANTLR/cs.g:839:1: constructor_declarator : identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? ;
	public final csParser.constructor_declarator_return constructor_declarator() throws RecognitionException {
		csParser.constructor_declarator_return retval = new csParser.constructor_declarator_return();
		retval.start = input.LT(1);
		int constructor_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal812=null;
		Token char_literal814=null;
		ParserRuleReturnScope identifier811 =null;
		ParserRuleReturnScope formal_parameter_list813 =null;
		ParserRuleReturnScope constructor_initializer815 =null;

		CommonTree char_literal812_tree=null;
		CommonTree char_literal814_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:839:23: ( identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )? )
			// /Users/jeremie/ANTLR/cs.g:840:9: identifier '(' ( formal_parameter_list )? ')' ( constructor_initializer )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_constructor_declarator11478);
			identifier811=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier811.getTree());

			char_literal812=(Token)match(input,68,FOLLOW_68_in_constructor_declarator11482); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal812_tree = (CommonTree)adaptor.create(char_literal812);
			adaptor.addChild(root_0, char_literal812_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:840:28: ( formal_parameter_list )?
			int alt236=2;
			int LA236_0 = input.LA(1);
			if ( (LA236_0==IDENTIFIER||LA236_0==91||LA236_0==95||(LA236_0 >= 97 && LA236_0 <= 98)||(LA236_0 >= 100 && LA236_0 <= 101)||LA236_0==103||(LA236_0 >= 105 && LA236_0 <= 106)||LA236_0==109||LA236_0==114||LA236_0==117||(LA236_0 >= 119 && LA236_0 <= 120)||LA236_0==122||LA236_0==126||LA236_0==129||LA236_0==132||LA236_0==135||LA236_0==138||LA236_0==141||(LA236_0 >= 143 && LA236_0 <= 144)||(LA236_0 >= 146 && LA236_0 <= 148)||(LA236_0 >= 151 && LA236_0 <= 152)||(LA236_0 >= 154 && LA236_0 <= 155)||(LA236_0 >= 157 && LA236_0 <= 158)||LA236_0==160||LA236_0==162||(LA236_0 >= 166 && LA236_0 <= 167)||LA236_0==169||(LA236_0 >= 171 && LA236_0 <= 173)||LA236_0==177||LA236_0==180||LA236_0==183||(LA236_0 >= 185 && LA236_0 <= 186)||(LA236_0 >= 189 && LA236_0 <= 190)||LA236_0==192||LA236_0==194||LA236_0==196) ) {
				alt236=1;
			}
			switch (alt236) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:840:28: formal_parameter_list
					{
					pushFollow(FOLLOW_formal_parameter_list_in_constructor_declarator11486);
					formal_parameter_list813=formal_parameter_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, formal_parameter_list813.getTree());

					}
					break;

			}

			char_literal814=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_declarator11491); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal814_tree = (CommonTree)adaptor.create(char_literal814);
			adaptor.addChild(root_0, char_literal814_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:840:59: ( constructor_initializer )?
			int alt237=2;
			int LA237_0 = input.LA(1);
			if ( (LA237_0==79) ) {
				alt237=1;
			}
			switch (alt237) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:840:59: constructor_initializer
					{
					pushFollow(FOLLOW_constructor_initializer_in_constructor_declarator11495);
					constructor_initializer815=constructor_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constructor_initializer815.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 237, constructor_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_declarator"


	public static class constructor_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_initializer"
	// /Users/jeremie/ANTLR/cs.g:841:1: constructor_initializer : ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' ;
	public final csParser.constructor_initializer_return constructor_initializer() throws RecognitionException {
		csParser.constructor_initializer_return retval = new csParser.constructor_initializer_return();
		retval.start = input.LT(1);
		int constructor_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal816=null;
		Token set817=null;
		Token char_literal818=null;
		Token char_literal820=null;
		ParserRuleReturnScope argument_list819 =null;

		CommonTree char_literal816_tree=null;
		CommonTree set817_tree=null;
		CommonTree char_literal818_tree=null;
		CommonTree char_literal820_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:841:24: ( ':' ( 'base' | 'this' ) '(' ( argument_list )? ')' )
			// /Users/jeremie/ANTLR/cs.g:842:9: ':' ( 'base' | 'this' ) '(' ( argument_list )? ')'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal816=(Token)match(input,79,FOLLOW_79_in_constructor_initializer11511); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal816_tree = (CommonTree)adaptor.create(char_literal816);
			adaptor.addChild(root_0, char_literal816_tree);
			}

			set817=input.LT(1);
			if ( input.LA(1)==102||input.LA(1)==180 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set817));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			char_literal818=(Token)match(input,68,FOLLOW_68_in_constructor_initializer11525); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal818_tree = (CommonTree)adaptor.create(char_literal818);
			adaptor.addChild(root_0, char_literal818_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:842:41: ( argument_list )?
			int alt238=2;
			int LA238_0 = input.LA(1);
			if ( (LA238_0==Character_literal||LA238_0==FALSE||(LA238_0 >= Hex_number && LA238_0 <= IDENTIFIER)||(LA238_0 >= MINUS && LA238_0 <= NUMBER)||LA238_0==Real_literal||LA238_0==STRINGLITERAL||LA238_0==TRUE||LA238_0==Verbatim_string_literal||LA238_0==61||LA238_0==66||(LA238_0 >= 68 && LA238_0 <= 69)||(LA238_0 >= 71 && LA238_0 <= 72)||LA238_0==75||LA238_0==95||(LA238_0 >= 97 && LA238_0 <= 98)||(LA238_0 >= 100 && LA238_0 <= 103)||(LA238_0 >= 105 && LA238_0 <= 106)||(LA238_0 >= 109 && LA238_0 <= 110)||(LA238_0 >= 114 && LA238_0 <= 117)||(LA238_0 >= 119 && LA238_0 <= 120)||LA238_0==122||LA238_0==126||LA238_0==129||LA238_0==132||LA238_0==135||LA238_0==138||LA238_0==141||(LA238_0 >= 143 && LA238_0 <= 144)||(LA238_0 >= 146 && LA238_0 <= 148)||(LA238_0 >= 150 && LA238_0 <= 152)||(LA238_0 >= 154 && LA238_0 <= 155)||LA238_0==157||LA238_0==160||LA238_0==162||(LA238_0 >= 166 && LA238_0 <= 167)||LA238_0==169||(LA238_0 >= 171 && LA238_0 <= 174)||LA238_0==177||LA238_0==180||(LA238_0 >= 183 && LA238_0 <= 187)||(LA238_0 >= 189 && LA238_0 <= 190)||LA238_0==194||LA238_0==196||LA238_0==202) ) {
				alt238=1;
			}
			switch (alt238) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:842:41: argument_list
					{
					pushFollow(FOLLOW_argument_list_in_constructor_initializer11529);
					argument_list819=argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, argument_list819.getTree());

					}
					break;

			}

			char_literal820=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_constructor_initializer11534); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal820_tree = (CommonTree)adaptor.create(char_literal820);
			adaptor.addChild(root_0, char_literal820_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 238, constructor_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_initializer"


	public static class constructor_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constructor_body"
	// /Users/jeremie/ANTLR/cs.g:843:1: constructor_body : block ;
	public final csParser.constructor_body_return constructor_body() throws RecognitionException {
		csParser.constructor_body_return retval = new csParser.constructor_body_return();
		retval.start = input.LT(1);
		int constructor_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block821 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:843:17: ( block )
			// /Users/jeremie/ANTLR/cs.g:844:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_constructor_body11549);
			block821=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block821.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 239, constructor_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constructor_body"


	public static class destructor_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "destructor_declaration"
	// /Users/jeremie/ANTLR/cs.g:853:1: destructor_declaration : '~' identifier '(' ')' destructor_body ;
	public final csParser.destructor_declaration_return destructor_declaration() throws RecognitionException {
		csParser.destructor_declaration_return retval = new csParser.destructor_declaration_return();
		retval.start = input.LT(1);
		int destructor_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal822=null;
		Token char_literal824=null;
		Token char_literal825=null;
		ParserRuleReturnScope identifier823 =null;
		ParserRuleReturnScope destructor_body826 =null;

		CommonTree char_literal822_tree=null;
		CommonTree char_literal824_tree=null;
		CommonTree char_literal825_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:853:23: ( '~' identifier '(' ')' destructor_body )
			// /Users/jeremie/ANTLR/cs.g:854:9: '~' identifier '(' ')' destructor_body
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal822=(Token)match(input,202,FOLLOW_202_in_destructor_declaration11572); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal822_tree = (CommonTree)adaptor.create(char_literal822);
			adaptor.addChild(root_0, char_literal822_tree);
			}

			pushFollow(FOLLOW_identifier_in_destructor_declaration11575);
			identifier823=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier823.getTree());

			char_literal824=(Token)match(input,68,FOLLOW_68_in_destructor_declaration11579); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal824_tree = (CommonTree)adaptor.create(char_literal824);
			adaptor.addChild(root_0, char_literal824_tree);
			}

			char_literal825=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_destructor_declaration11583); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal825_tree = (CommonTree)adaptor.create(char_literal825);
			adaptor.addChild(root_0, char_literal825_tree);
			}

			pushFollow(FOLLOW_destructor_body_in_destructor_declaration11588);
			destructor_body826=destructor_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, destructor_body826.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 240, destructor_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "destructor_declaration"


	public static class destructor_body_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "destructor_body"
	// /Users/jeremie/ANTLR/cs.g:855:1: destructor_body : block ;
	public final csParser.destructor_body_return destructor_body() throws RecognitionException {
		csParser.destructor_body_return retval = new csParser.destructor_body_return();
		retval.start = input.LT(1);
		int destructor_body_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block827 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:855:16: ( block )
			// /Users/jeremie/ANTLR/cs.g:856:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_destructor_body11603);
			block827=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block827.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 241, destructor_body_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "destructor_body"


	public static class invocation_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_expression"
	// /Users/jeremie/ANTLR/cs.g:859:1: invocation_expression : invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments ;
	public final csParser.invocation_expression_return invocation_expression() throws RecognitionException {
		csParser.invocation_expression_return retval = new csParser.invocation_expression_return();
		retval.start = input.LT(1);
		int invocation_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope invocation_start828 =null;
		ParserRuleReturnScope arguments829 =null;
		ParserRuleReturnScope invocation_part830 =null;
		ParserRuleReturnScope invocation_part831 =null;
		ParserRuleReturnScope arguments832 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:859:22: ( invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )
			// /Users/jeremie/ANTLR/cs.g:860:9: invocation_start ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_invocation_start_in_invocation_expression11620);
			invocation_start828=invocation_start();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_start828.getTree());

			// /Users/jeremie/ANTLR/cs.g:860:28: ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )*
			loop239:
			while (true) {
				int alt239=3;
				int LA239_0 = input.LA(1);
				if ( (LA239_0==68) ) {
					int LA239_1 = input.LA(2);
					if ( (synpred31_cs()) ) {
						alt239=1;
					}

				}
				else if ( (LA239_0==DOT||LA239_0==PTR||LA239_0==91) ) {
					alt239=2;
				}

				switch (alt239) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:860:29: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					{
					// /Users/jeremie/ANTLR/cs.g:860:29: ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part )
					// /Users/jeremie/ANTLR/cs.g:860:30: ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part
					{
					pushFollow(FOLLOW_arguments_in_invocation_expression11642);
					arguments829=arguments();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments829.getTree());

					pushFollow(FOLLOW_invocation_part_in_invocation_expression11646);
					invocation_part830=invocation_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part830.getTree());

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:861:51: invocation_part
					{
					pushFollow(FOLLOW_invocation_part_in_invocation_expression11699);
					invocation_part831=invocation_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_part831.getTree());

					}
					break;

				default :
					break loop239;
				}
			}

			pushFollow(FOLLOW_arguments_in_invocation_expression11705);
			arguments832=arguments();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, arguments832.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 242, invocation_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_expression"


	public static class invocation_start_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_start"
	// /Users/jeremie/ANTLR/cs.g:862:1: invocation_start : ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression );
	public final csParser.invocation_start_return invocation_start() throws RecognitionException {
		csParser.invocation_start_return retval = new csParser.invocation_start_return();
		retval.start = input.LT(1);
		int invocation_start_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal836=null;
		Token string_literal837=null;
		Token string_literal839=null;
		ParserRuleReturnScope predefined_type833 =null;
		ParserRuleReturnScope identifier834 =null;
		ParserRuleReturnScope generic_argument_list835 =null;
		ParserRuleReturnScope identifier838 =null;
		ParserRuleReturnScope identifier840 =null;
		ParserRuleReturnScope typeof_expression841 =null;

		CommonTree string_literal836_tree=null;
		CommonTree string_literal837_tree=null;
		CommonTree string_literal839_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:862:17: ( predefined_type | ( identifier '<' )=> identifier generic_argument_list | 'this' | 'base' | identifier ( '::' identifier )? | typeof_expression )
			int alt241=6;
			switch ( input.LA(1) ) {
			case 103:
			case 106:
			case 109:
			case 114:
			case 119:
			case 129:
			case 138:
			case 146:
			case 151:
			case 169:
			case 173:
			case 177:
			case 185:
			case 186:
			case 189:
				{
				alt241=1;
				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				int LA241_2 = input.LA(2);
				if ( (LA241_2==81) && (synpred32_cs())) {
					alt241=2;
				}
				else if ( (LA241_2==DOT||LA241_2==PTR||LA241_2==68||LA241_2==80||LA241_2==91) ) {
					alt241=5;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 241, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 180:
				{
				alt241=3;
				}
				break;
			case 102:
				{
				alt241=4;
				}
				break;
			case 184:
				{
				alt241=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 241, 0, input);
				throw nvae;
			}
			switch (alt241) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:863:9: predefined_type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_predefined_type_in_invocation_start11720);
					predefined_type833=predefined_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predefined_type833.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:864:11: ( identifier '<' )=> identifier generic_argument_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_invocation_start11751);
					identifier834=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier834.getTree());

					pushFollow(FOLLOW_generic_argument_list_in_invocation_start11755);
					generic_argument_list835=generic_argument_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, generic_argument_list835.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:865:11: 'this'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal836=(Token)match(input,180,FOLLOW_180_in_invocation_start11767); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal836_tree = (CommonTree)adaptor.create(string_literal836);
					adaptor.addChild(root_0, string_literal836_tree);
					}

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:866:11: 'base'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal837=(Token)match(input,102,FOLLOW_102_in_invocation_start11780); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal837_tree = (CommonTree)adaptor.create(string_literal837);
					adaptor.addChild(root_0, string_literal837_tree);
					}

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:867:11: identifier ( '::' identifier )?
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_identifier_in_invocation_start11792);
					identifier838=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier838.getTree());

					// /Users/jeremie/ANTLR/cs.g:867:24: ( '::' identifier )?
					int alt240=2;
					int LA240_0 = input.LA(1);
					if ( (LA240_0==80) ) {
						alt240=1;
					}
					switch (alt240) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:867:25: '::' identifier
							{
							string_literal839=(Token)match(input,80,FOLLOW_80_in_invocation_start11797); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal839_tree = (CommonTree)adaptor.create(string_literal839);
							adaptor.addChild(root_0, string_literal839_tree);
							}

							pushFollow(FOLLOW_identifier_in_invocation_start11801);
							identifier840=identifier();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier840.getTree());

							}
							break;

					}

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:868:11: typeof_expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_typeof_expression_in_invocation_start11815);
					typeof_expression841=typeof_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, typeof_expression841.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 243, invocation_start_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_start"


	public static class invocation_part_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_part"
	// /Users/jeremie/ANTLR/cs.g:870:1: invocation_part : ( access_identifier | brackets );
	public final csParser.invocation_part_return invocation_part() throws RecognitionException {
		csParser.invocation_part_return retval = new csParser.invocation_part_return();
		retval.start = input.LT(1);
		int invocation_part_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope access_identifier842 =null;
		ParserRuleReturnScope brackets843 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:870:16: ( access_identifier | brackets )
			int alt242=2;
			int LA242_0 = input.LA(1);
			if ( (LA242_0==DOT||LA242_0==PTR) ) {
				alt242=1;
			}
			else if ( (LA242_0==91) ) {
				alt242=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 242, 0, input);
				throw nvae;
			}

			switch (alt242) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:871:10: access_identifier
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_access_identifier_in_invocation_part11852);
					access_identifier842=access_identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, access_identifier842.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:872:11: brackets
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_brackets_in_invocation_part11864);
					brackets843=brackets();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, brackets843.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 244, invocation_part_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_part"


	public static class statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement"
	// /Users/jeremie/ANTLR/cs.g:876:1: statement : ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement );
	public final csParser.statement_return statement() throws RecognitionException {
		csParser.statement_return retval = new csParser.statement_return();
		retval.start = input.LT(1);
		int statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope declaration_statement844 =null;
		ParserRuleReturnScope labeled_statement845 =null;
		ParserRuleReturnScope embedded_statement846 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:876:10: ( ( declaration_statement )=> declaration_statement | ( identifier ':' )=> labeled_statement | embedded_statement )
			int alt243=3;
			int LA243_0 = input.LA(1);
			if ( (LA243_0==190) ) {
				int LA243_1 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt243=1;
				}
				else if ( (synpred34_cs()) ) {
					alt243=2;
				}
				else if ( (true) ) {
					alt243=3;
				}

			}
			else if ( (LA243_0==120) ) {
				int LA243_2 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt243=1;
				}
				else if ( (synpred34_cs()) ) {
					alt243=2;
				}
				else if ( (true) ) {
					alt243=3;
				}

			}
			else if ( (LA243_0==103||LA243_0==106||LA243_0==109||LA243_0==114||LA243_0==119||LA243_0==129||LA243_0==138||LA243_0==146||LA243_0==151||LA243_0==169||LA243_0==173||LA243_0==177||(LA243_0 >= 185 && LA243_0 <= 186)||LA243_0==189) ) {
				int LA243_3 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt243=1;
				}
				else if ( (true) ) {
					alt243=3;
				}

			}
			else if ( (LA243_0==196) ) {
				int LA243_4 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt243=1;
				}
				else if ( (synpred34_cs()) ) {
					alt243=2;
				}
				else if ( (true) ) {
					alt243=3;
				}

			}
			else if ( (LA243_0==192) && (synpred33_cs())) {
				alt243=1;
			}
			else if ( (LA243_0==112) && (synpred33_cs())) {
				alt243=1;
			}
			else if ( (LA243_0==Character_literal||LA243_0==FALSE||LA243_0==Hex_number||LA243_0==IF||(LA243_0 >= MINUS && LA243_0 <= NUMBER)||LA243_0==Real_literal||(LA243_0 >= SEMI && LA243_0 <= STRINGLITERAL)||LA243_0==TRUE||(LA243_0 >= USING && LA243_0 <= Verbatim_string_literal)||LA243_0==61||LA243_0==66||(LA243_0 >= 68 && LA243_0 <= 69)||(LA243_0 >= 71 && LA243_0 <= 72)||LA243_0==75||LA243_0==102||LA243_0==104||LA243_0==110||LA243_0==113||(LA243_0 >= 115 && LA243_0 <= 116)||LA243_0==118||LA243_0==128||(LA243_0 >= 130 && LA243_0 <= 131)||LA243_0==134||LA243_0==145||LA243_0==150||LA243_0==168||LA243_0==174||(LA243_0 >= 179 && LA243_0 <= 182)||LA243_0==184||(LA243_0 >= 187 && LA243_0 <= 188)||LA243_0==195||LA243_0==197||LA243_0==202) ) {
				alt243=3;
			}
			else if ( (LA243_0==132) ) {
				int LA243_25 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt243=1;
				}
				else if ( (synpred34_cs()) ) {
					alt243=2;
				}
				else if ( (true) ) {
					alt243=3;
				}

			}
			else if ( (LA243_0==IDENTIFIER||LA243_0==95||(LA243_0 >= 97 && LA243_0 <= 98)||(LA243_0 >= 100 && LA243_0 <= 101)||LA243_0==105||LA243_0==117||LA243_0==122||LA243_0==126||LA243_0==135||LA243_0==141||(LA243_0 >= 143 && LA243_0 <= 144)||(LA243_0 >= 147 && LA243_0 <= 148)||LA243_0==152||LA243_0==154||LA243_0==157||LA243_0==160||LA243_0==162||LA243_0==167||(LA243_0 >= 171 && LA243_0 <= 172)||LA243_0==183||LA243_0==194) ) {
				int LA243_45 = input.LA(2);
				if ( (synpred33_cs()) ) {
					alt243=1;
				}
				else if ( (synpred34_cs()) ) {
					alt243=2;
				}
				else if ( (true) ) {
					alt243=3;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 243, 0, input);
				throw nvae;
			}

			switch (alt243) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:877:9: ( declaration_statement )=> declaration_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_declaration_statement_in_statement11888);
					declaration_statement844=declaration_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, declaration_statement844.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:878:11: ( identifier ':' )=> labeled_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_labeled_statement_in_statement11910);
					labeled_statement845=labeled_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, labeled_statement845.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:879:11: embedded_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_embedded_statement_in_statement11922);
					embedded_statement846=embedded_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement846.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 245, statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement"


	public static class embedded_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "embedded_statement"
	// /Users/jeremie/ANTLR/cs.g:881:1: embedded_statement : ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement );
	public final csParser.embedded_statement_return embedded_statement() throws RecognitionException {
		csParser.embedded_statement_return retval = new csParser.embedded_statement_return();
		retval.start = input.LT(1);
		int embedded_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block847 =null;
		ParserRuleReturnScope selection_statement848 =null;
		ParserRuleReturnScope iteration_statement849 =null;
		ParserRuleReturnScope jump_statement850 =null;
		ParserRuleReturnScope try_statement851 =null;
		ParserRuleReturnScope checked_statement852 =null;
		ParserRuleReturnScope unchecked_statement853 =null;
		ParserRuleReturnScope lock_statement854 =null;
		ParserRuleReturnScope using_statement855 =null;
		ParserRuleReturnScope yield_statement856 =null;
		ParserRuleReturnScope unsafe_statement857 =null;
		ParserRuleReturnScope fixed_statement858 =null;
		ParserRuleReturnScope expression_statement859 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:881:19: ( block | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | yield_statement | unsafe_statement | fixed_statement | expression_statement )
			int alt244=13;
			switch ( input.LA(1) ) {
			case SEMI:
			case 197:
				{
				alt244=1;
				}
				break;
			case IF:
			case 179:
				{
				alt244=2;
				}
				break;
			case 118:
			case 130:
			case 131:
			case 195:
				{
				alt244=3;
				}
				break;
			case 104:
			case 113:
			case 134:
			case 168:
			case 181:
				{
				alt244=4;
				}
				break;
			case 182:
				{
				alt244=5;
				}
				break;
			case 110:
				{
				int LA244_6 = input.LA(2);
				if ( (LA244_6==68) ) {
					alt244=13;
				}
				else if ( (LA244_6==SEMI||LA244_6==197) ) {
					alt244=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 244, 6, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 187:
				{
				int LA244_7 = input.LA(2);
				if ( (LA244_7==68) ) {
					alt244=13;
				}
				else if ( (LA244_7==SEMI||LA244_7==197) ) {
					alt244=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 244, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 145:
				{
				alt244=8;
				}
				break;
			case USING:
				{
				alt244=9;
				}
				break;
			case 196:
				{
				int LA244_10 = input.LA(2);
				if ( (LA244_10==104||LA244_10==168) ) {
					alt244=10;
				}
				else if ( (LA244_10==DOT||LA244_10==GT||LA244_10==MINUS||LA244_10==PTR||LA244_10==SEMI||(LA244_10 >= 62 && LA244_10 <= 78)||(LA244_10 >= 80 && LA244_10 <= 91)||(LA244_10 >= 93 && LA244_10 <= 94)||LA244_10==99||LA244_10==142||(LA244_10 >= 198 && LA244_10 <= 200)) ) {
					alt244=13;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 244, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case 188:
				{
				alt244=11;
				}
				break;
			case 128:
				{
				alt244=12;
				}
				break;
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 189:
			case 190:
			case 194:
			case 202:
				{
				alt244=13;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 244, 0, input);
				throw nvae;
			}
			switch (alt244) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:882:9: block
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_block_in_embedded_statement11946);
					block847=block();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, block847.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:883:11: selection_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_selection_statement_in_embedded_statement11958);
					selection_statement848=selection_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, selection_statement848.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:884:11: iteration_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_iteration_statement_in_embedded_statement11978);
					iteration_statement849=iteration_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, iteration_statement849.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:885:11: jump_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_jump_statement_in_embedded_statement11998);
					jump_statement850=jump_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, jump_statement850.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:886:11: try_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_try_statement_in_embedded_statement12026);
					try_statement851=try_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, try_statement851.getTree());

					}
					break;
				case 6 :
					// /Users/jeremie/ANTLR/cs.g:887:11: checked_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_checked_statement_in_embedded_statement12038);
					checked_statement852=checked_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, checked_statement852.getTree());

					}
					break;
				case 7 :
					// /Users/jeremie/ANTLR/cs.g:888:11: unchecked_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_unchecked_statement_in_embedded_statement12050);
					unchecked_statement853=unchecked_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unchecked_statement853.getTree());

					}
					break;
				case 8 :
					// /Users/jeremie/ANTLR/cs.g:889:11: lock_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_lock_statement_in_embedded_statement12062);
					lock_statement854=lock_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_statement854.getTree());

					}
					break;
				case 9 :
					// /Users/jeremie/ANTLR/cs.g:890:11: using_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_using_statement_in_embedded_statement12074);
					using_statement855=using_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, using_statement855.getTree());

					}
					break;
				case 10 :
					// /Users/jeremie/ANTLR/cs.g:891:11: yield_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_yield_statement_in_embedded_statement12087);
					yield_statement856=yield_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, yield_statement856.getTree());

					}
					break;
				case 11 :
					// /Users/jeremie/ANTLR/cs.g:892:11: unsafe_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_unsafe_statement_in_embedded_statement12100);
					unsafe_statement857=unsafe_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unsafe_statement857.getTree());

					}
					break;
				case 12 :
					// /Users/jeremie/ANTLR/cs.g:893:11: fixed_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_fixed_statement_in_embedded_statement12112);
					fixed_statement858=fixed_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_statement858.getTree());

					}
					break;
				case 13 :
					// /Users/jeremie/ANTLR/cs.g:894:11: expression_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_statement_in_embedded_statement12124);
					expression_statement859=expression_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_statement859.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 246, embedded_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "embedded_statement"


	public static class fixed_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_statement"
	// /Users/jeremie/ANTLR/cs.g:896:1: fixed_statement : 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement ;
	public final csParser.fixed_statement_return fixed_statement() throws RecognitionException {
		csParser.fixed_statement_return retval = new csParser.fixed_statement_return();
		retval.start = input.LT(1);
		int fixed_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal860=null;
		Token char_literal861=null;
		Token char_literal864=null;
		ParserRuleReturnScope pointer_type862 =null;
		ParserRuleReturnScope fixed_pointer_declarators863 =null;
		ParserRuleReturnScope embedded_statement865 =null;

		CommonTree string_literal860_tree=null;
		CommonTree char_literal861_tree=null;
		CommonTree char_literal864_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:896:16: ( 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:897:9: 'fixed' '(' pointer_type fixed_pointer_declarators ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal860=(Token)match(input,128,FOLLOW_128_in_fixed_statement12155); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal860_tree = (CommonTree)adaptor.create(string_literal860);
			adaptor.addChild(root_0, string_literal860_tree);
			}

			char_literal861=(Token)match(input,68,FOLLOW_68_in_fixed_statement12159); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal861_tree = (CommonTree)adaptor.create(char_literal861);
			adaptor.addChild(root_0, char_literal861_tree);
			}

			pushFollow(FOLLOW_pointer_type_in_fixed_statement12163);
			pointer_type862=pointer_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, pointer_type862.getTree());

			pushFollow(FOLLOW_fixed_pointer_declarators_in_fixed_statement12165);
			fixed_pointer_declarators863=fixed_pointer_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarators863.getTree());

			char_literal864=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_fixed_statement12169); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal864_tree = (CommonTree)adaptor.create(char_literal864);
			adaptor.addChild(root_0, char_literal864_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_fixed_statement12173);
			embedded_statement865=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement865.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 247, fixed_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_statement"


	public static class fixed_pointer_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_pointer_declarators"
	// /Users/jeremie/ANTLR/cs.g:898:1: fixed_pointer_declarators : fixed_pointer_declarator ( ',' fixed_pointer_declarator )* ;
	public final csParser.fixed_pointer_declarators_return fixed_pointer_declarators() throws RecognitionException {
		csParser.fixed_pointer_declarators_return retval = new csParser.fixed_pointer_declarators_return();
		retval.start = input.LT(1);
		int fixed_pointer_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal867=null;
		ParserRuleReturnScope fixed_pointer_declarator866 =null;
		ParserRuleReturnScope fixed_pointer_declarator868 =null;

		CommonTree char_literal867_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:898:26: ( fixed_pointer_declarator ( ',' fixed_pointer_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:899:9: fixed_pointer_declarator ( ',' fixed_pointer_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators12188);
			fixed_pointer_declarator866=fixed_pointer_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator866.getTree());

			// /Users/jeremie/ANTLR/cs.g:899:36: ( ',' fixed_pointer_declarator )*
			loop245:
			while (true) {
				int alt245=2;
				int LA245_0 = input.LA(1);
				if ( (LA245_0==74) ) {
					alt245=1;
				}

				switch (alt245) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:899:37: ',' fixed_pointer_declarator
					{
					char_literal867=(Token)match(input,74,FOLLOW_74_in_fixed_pointer_declarators12193); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal867_tree = (CommonTree)adaptor.create(char_literal867);
					adaptor.addChild(root_0, char_literal867_tree);
					}

					pushFollow(FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators12197);
					fixed_pointer_declarator868=fixed_pointer_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_declarator868.getTree());

					}
					break;

				default :
					break loop245;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 248, fixed_pointer_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_pointer_declarators"


	public static class fixed_pointer_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_pointer_declarator"
	// /Users/jeremie/ANTLR/cs.g:900:1: fixed_pointer_declarator : identifier '=' fixed_pointer_initializer ;
	public final csParser.fixed_pointer_declarator_return fixed_pointer_declarator() throws RecognitionException {
		csParser.fixed_pointer_declarator_return retval = new csParser.fixed_pointer_declarator_return();
		retval.start = input.LT(1);
		int fixed_pointer_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal870=null;
		ParserRuleReturnScope identifier869 =null;
		ParserRuleReturnScope fixed_pointer_initializer871 =null;

		CommonTree char_literal870_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:900:25: ( identifier '=' fixed_pointer_initializer )
			// /Users/jeremie/ANTLR/cs.g:901:9: identifier '=' fixed_pointer_initializer
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_fixed_pointer_declarator12214);
			identifier869=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier869.getTree());

			char_literal870=(Token)match(input,85,FOLLOW_85_in_fixed_pointer_declarator12218); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal870_tree = (CommonTree)adaptor.create(char_literal870);
			adaptor.addChild(root_0, char_literal870_tree);
			}

			pushFollow(FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator12222);
			fixed_pointer_initializer871=fixed_pointer_initializer();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, fixed_pointer_initializer871.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 249, fixed_pointer_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_pointer_declarator"


	public static class fixed_pointer_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "fixed_pointer_initializer"
	// /Users/jeremie/ANTLR/cs.g:902:1: fixed_pointer_initializer : expression ;
	public final csParser.fixed_pointer_initializer_return fixed_pointer_initializer() throws RecognitionException {
		csParser.fixed_pointer_initializer_return retval = new csParser.fixed_pointer_initializer_return();
		retval.start = input.LT(1);
		int fixed_pointer_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression872 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:902:26: ( expression )
			// /Users/jeremie/ANTLR/cs.g:904:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_fixed_pointer_initializer12246);
			expression872=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression872.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 250, fixed_pointer_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "fixed_pointer_initializer"


	public static class unsafe_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unsafe_statement"
	// /Users/jeremie/ANTLR/cs.g:905:1: unsafe_statement : 'unsafe' block ;
	public final csParser.unsafe_statement_return unsafe_statement() throws RecognitionException {
		csParser.unsafe_statement_return retval = new csParser.unsafe_statement_return();
		retval.start = input.LT(1);
		int unsafe_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal873=null;
		ParserRuleReturnScope block874 =null;

		CommonTree string_literal873_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:905:17: ( 'unsafe' block )
			// /Users/jeremie/ANTLR/cs.g:906:9: 'unsafe' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal873=(Token)match(input,188,FOLLOW_188_in_unsafe_statement12260); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal873_tree = (CommonTree)adaptor.create(string_literal873);
			adaptor.addChild(root_0, string_literal873_tree);
			}

			pushFollow(FOLLOW_block_in_unsafe_statement12264);
			block874=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block874.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 251, unsafe_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unsafe_statement"


	public static class labeled_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "labeled_statement"
	// /Users/jeremie/ANTLR/cs.g:907:1: labeled_statement : identifier ':' statement ;
	public final csParser.labeled_statement_return labeled_statement() throws RecognitionException {
		csParser.labeled_statement_return retval = new csParser.labeled_statement_return();
		retval.start = input.LT(1);
		int labeled_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal876=null;
		ParserRuleReturnScope identifier875 =null;
		ParserRuleReturnScope statement877 =null;

		CommonTree char_literal876_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:907:18: ( identifier ':' statement )
			// /Users/jeremie/ANTLR/cs.g:908:9: identifier ':' statement
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_labeled_statement12278);
			identifier875=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier875.getTree());

			char_literal876=(Token)match(input,79,FOLLOW_79_in_labeled_statement12282); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal876_tree = (CommonTree)adaptor.create(char_literal876);
			adaptor.addChild(root_0, char_literal876_tree);
			}

			pushFollow(FOLLOW_statement_in_labeled_statement12286);
			statement877=statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement877.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 252, labeled_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "labeled_statement"


	public static class declaration_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "declaration_statement"
	// /Users/jeremie/ANTLR/cs.g:909:1: declaration_statement : ( local_variable_declaration | local_constant_declaration ) ';' ;
	public final csParser.declaration_statement_return declaration_statement() throws RecognitionException {
		csParser.declaration_statement_return retval = new csParser.declaration_statement_return();
		retval.start = input.LT(1);
		int declaration_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal880=null;
		ParserRuleReturnScope local_variable_declaration878 =null;
		ParserRuleReturnScope local_constant_declaration879 =null;

		CommonTree char_literal880_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:909:22: ( ( local_variable_declaration | local_constant_declaration ) ';' )
			// /Users/jeremie/ANTLR/cs.g:910:9: ( local_variable_declaration | local_constant_declaration ) ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:910:9: ( local_variable_declaration | local_constant_declaration )
			int alt246=2;
			int LA246_0 = input.LA(1);
			if ( (LA246_0==IDENTIFIER||LA246_0==95||(LA246_0 >= 97 && LA246_0 <= 98)||(LA246_0 >= 100 && LA246_0 <= 101)||LA246_0==103||(LA246_0 >= 105 && LA246_0 <= 106)||LA246_0==109||LA246_0==114||LA246_0==117||(LA246_0 >= 119 && LA246_0 <= 120)||LA246_0==122||LA246_0==126||LA246_0==129||LA246_0==132||LA246_0==135||LA246_0==138||LA246_0==141||(LA246_0 >= 143 && LA246_0 <= 144)||(LA246_0 >= 146 && LA246_0 <= 148)||(LA246_0 >= 151 && LA246_0 <= 152)||LA246_0==154||LA246_0==157||LA246_0==160||LA246_0==162||LA246_0==167||LA246_0==169||(LA246_0 >= 171 && LA246_0 <= 173)||LA246_0==177||LA246_0==183||(LA246_0 >= 185 && LA246_0 <= 186)||(LA246_0 >= 189 && LA246_0 <= 190)||LA246_0==192||LA246_0==194||LA246_0==196) ) {
				alt246=1;
			}
			else if ( (LA246_0==112) ) {
				alt246=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 246, 0, input);
				throw nvae;
			}

			switch (alt246) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:910:10: local_variable_declaration
					{
					pushFollow(FOLLOW_local_variable_declaration_in_declaration_statement12302);
					local_variable_declaration878=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration878.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:911:11: local_constant_declaration
					{
					pushFollow(FOLLOW_local_constant_declaration_in_declaration_statement12315);
					local_constant_declaration879=local_constant_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_constant_declaration879.getTree());

					}
					break;

			}

			char_literal880=(Token)match(input,SEMI,FOLLOW_SEMI_in_declaration_statement12318); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal880_tree = (CommonTree)adaptor.create(char_literal880);
			adaptor.addChild(root_0, char_literal880_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 253, declaration_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "declaration_statement"


	public static class local_variable_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declaration"
	// /Users/jeremie/ANTLR/cs.g:912:1: local_variable_declaration : local_variable_type local_variable_declarators ;
	public final csParser.local_variable_declaration_return local_variable_declaration() throws RecognitionException {
		csParser.local_variable_declaration_return retval = new csParser.local_variable_declaration_return();
		retval.start = input.LT(1);
		int local_variable_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope local_variable_type881 =null;
		ParserRuleReturnScope local_variable_declarators882 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:912:27: ( local_variable_type local_variable_declarators )
			// /Users/jeremie/ANTLR/cs.g:913:9: local_variable_type local_variable_declarators
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_local_variable_type_in_local_variable_declaration12333);
			local_variable_type881=local_variable_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type881.getTree());

			pushFollow(FOLLOW_local_variable_declarators_in_local_variable_declaration12337);
			local_variable_declarators882=local_variable_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarators882.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 254, local_variable_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declaration"


	public static class local_variable_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_type"
	// /Users/jeremie/ANTLR/cs.g:914:1: local_variable_type : ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type );
	public final csParser.local_variable_type_return local_variable_type() throws RecognitionException {
		csParser.local_variable_type_return retval = new csParser.local_variable_type_return();
		retval.start = input.LT(1);
		int local_variable_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal883=null;
		Token string_literal884=null;
		ParserRuleReturnScope type885 =null;

		CommonTree string_literal883_tree=null;
		CommonTree string_literal884_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:914:20: ( ( 'var' )=> 'var' | ( 'dynamic' )=> 'dynamic' | type )
			int alt247=3;
			switch ( input.LA(1) ) {
			case 190:
				{
				int LA247_1 = input.LA(2);
				if ( (synpred35_cs()) ) {
					alt247=1;
				}
				else if ( (true) ) {
					alt247=3;
				}

				}
				break;
			case 120:
				{
				int LA247_2 = input.LA(2);
				if ( (synpred36_cs()) ) {
					alt247=2;
				}
				else if ( (true) ) {
					alt247=3;
				}

				}
				break;
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 103:
			case 105:
			case 106:
			case 109:
			case 114:
			case 117:
			case 119:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 177:
			case 183:
			case 185:
			case 186:
			case 189:
			case 192:
			case 194:
			case 196:
				{
				alt247=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 247, 0, input);
				throw nvae;
			}
			switch (alt247) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:915:9: ( 'var' )=> 'var'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal883=(Token)match(input,190,FOLLOW_190_in_local_variable_type12358); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal883_tree = (CommonTree)adaptor.create(string_literal883);
					adaptor.addChild(root_0, string_literal883_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:916:11: ( 'dynamic' )=> 'dynamic'
					{
					root_0 = (CommonTree)adaptor.nil();


					string_literal884=(Token)match(input,120,FOLLOW_120_in_local_variable_type12376); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal884_tree = (CommonTree)adaptor.create(string_literal884);
					adaptor.addChild(root_0, string_literal884_tree);
					}

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:917:11: type
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_type_in_local_variable_type12388);
					type885=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type885.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 255, local_variable_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_type"


	public static class local_variable_declarators_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declarators"
	// /Users/jeremie/ANTLR/cs.g:918:1: local_variable_declarators : local_variable_declarator ( ',' local_variable_declarator )* ;
	public final csParser.local_variable_declarators_return local_variable_declarators() throws RecognitionException {
		csParser.local_variable_declarators_return retval = new csParser.local_variable_declarators_return();
		retval.start = input.LT(1);
		int local_variable_declarators_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal887=null;
		ParserRuleReturnScope local_variable_declarator886 =null;
		ParserRuleReturnScope local_variable_declarator888 =null;

		CommonTree char_literal887_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:918:27: ( local_variable_declarator ( ',' local_variable_declarator )* )
			// /Users/jeremie/ANTLR/cs.g:919:9: local_variable_declarator ( ',' local_variable_declarator )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators12403);
			local_variable_declarator886=local_variable_declarator();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator886.getTree());

			// /Users/jeremie/ANTLR/cs.g:919:35: ( ',' local_variable_declarator )*
			loop248:
			while (true) {
				int alt248=2;
				int LA248_0 = input.LA(1);
				if ( (LA248_0==74) ) {
					alt248=1;
				}

				switch (alt248) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:919:36: ',' local_variable_declarator
					{
					char_literal887=(Token)match(input,74,FOLLOW_74_in_local_variable_declarators12406); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal887_tree = (CommonTree)adaptor.create(char_literal887);
					adaptor.addChild(root_0, char_literal887_tree);
					}

					pushFollow(FOLLOW_local_variable_declarator_in_local_variable_declarators12408);
					local_variable_declarator888=local_variable_declarator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declarator888.getTree());

					}
					break;

				default :
					break loop248;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 256, local_variable_declarators_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declarators"


	public static class local_variable_declarator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declarator"
	// /Users/jeremie/ANTLR/cs.g:920:1: local_variable_declarator : identifier ( '=' local_variable_initializer )? ;
	public final csParser.local_variable_declarator_return local_variable_declarator() throws RecognitionException {
		csParser.local_variable_declarator_return retval = new csParser.local_variable_declarator_return();
		retval.start = input.LT(1);
		int local_variable_declarator_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal890=null;
		ParserRuleReturnScope identifier889 =null;
		ParserRuleReturnScope local_variable_initializer891 =null;

		CommonTree char_literal890_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:920:26: ( identifier ( '=' local_variable_initializer )? )
			// /Users/jeremie/ANTLR/cs.g:921:9: identifier ( '=' local_variable_initializer )?
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_identifier_in_local_variable_declarator12425);
			identifier889=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier889.getTree());

			// /Users/jeremie/ANTLR/cs.g:921:20: ( '=' local_variable_initializer )?
			int alt249=2;
			int LA249_0 = input.LA(1);
			if ( (LA249_0==85) ) {
				alt249=1;
			}
			switch (alt249) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:921:21: '=' local_variable_initializer
					{
					char_literal890=(Token)match(input,85,FOLLOW_85_in_local_variable_declarator12428); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal890_tree = (CommonTree)adaptor.create(char_literal890);
					adaptor.addChild(root_0, char_literal890_tree);
					}

					pushFollow(FOLLOW_local_variable_initializer_in_local_variable_declarator12432);
					local_variable_initializer891=local_variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer891.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 257, local_variable_declarator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declarator"


	public static class local_variable_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_initializer"
	// /Users/jeremie/ANTLR/cs.g:922:1: local_variable_initializer : ( expression | array_initializer | stackalloc_initializer );
	public final csParser.local_variable_initializer_return local_variable_initializer() throws RecognitionException {
		csParser.local_variable_initializer_return retval = new csParser.local_variable_initializer_return();
		retval.start = input.LT(1);
		int local_variable_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression892 =null;
		ParserRuleReturnScope array_initializer893 =null;
		ParserRuleReturnScope stackalloc_initializer894 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:922:27: ( expression | array_initializer | stackalloc_initializer )
			int alt250=3;
			switch ( input.LA(1) ) {
			case Character_literal:
			case FALSE:
			case Hex_number:
			case IDENTIFIER:
			case MINUS:
			case NULL:
			case NUMBER:
			case Real_literal:
			case STRINGLITERAL:
			case TRUE:
			case Verbatim_string_literal:
			case 61:
			case 66:
			case 68:
			case 69:
			case 71:
			case 72:
			case 75:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 102:
			case 103:
			case 105:
			case 106:
			case 109:
			case 110:
			case 114:
			case 115:
			case 116:
			case 117:
			case 119:
			case 120:
			case 122:
			case 126:
			case 129:
			case 132:
			case 135:
			case 138:
			case 141:
			case 143:
			case 144:
			case 146:
			case 147:
			case 148:
			case 150:
			case 151:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 169:
			case 171:
			case 172:
			case 173:
			case 174:
			case 177:
			case 180:
			case 183:
			case 184:
			case 185:
			case 186:
			case 187:
			case 189:
			case 190:
			case 194:
			case 196:
			case 202:
				{
				alt250=1;
				}
				break;
			case 197:
				{
				alt250=2;
				}
				break;
			case 175:
				{
				alt250=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 250, 0, input);
				throw nvae;
			}
			switch (alt250) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:923:9: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_local_variable_initializer12450);
					expression892=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression892.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:924:11: array_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_array_initializer_in_local_variable_initializer12462);
					array_initializer893=array_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, array_initializer893.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:925:11: stackalloc_initializer
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_stackalloc_initializer_in_local_variable_initializer12475);
					stackalloc_initializer894=stackalloc_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, stackalloc_initializer894.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 258, local_variable_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_initializer"


	public static class stackalloc_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "stackalloc_initializer"
	// /Users/jeremie/ANTLR/cs.g:926:1: stackalloc_initializer : 'stackalloc' unmanaged_type '[' expression ']' ;
	public final csParser.stackalloc_initializer_return stackalloc_initializer() throws RecognitionException {
		csParser.stackalloc_initializer_return retval = new csParser.stackalloc_initializer_return();
		retval.start = input.LT(1);
		int stackalloc_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal895=null;
		Token char_literal897=null;
		Token char_literal899=null;
		ParserRuleReturnScope unmanaged_type896 =null;
		ParserRuleReturnScope expression898 =null;

		CommonTree string_literal895_tree=null;
		CommonTree char_literal897_tree=null;
		CommonTree char_literal899_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:926:23: ( 'stackalloc' unmanaged_type '[' expression ']' )
			// /Users/jeremie/ANTLR/cs.g:927:9: 'stackalloc' unmanaged_type '[' expression ']'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal895=(Token)match(input,175,FOLLOW_175_in_stackalloc_initializer12489); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal895_tree = (CommonTree)adaptor.create(string_literal895);
			adaptor.addChild(root_0, string_literal895_tree);
			}

			pushFollow(FOLLOW_unmanaged_type_in_stackalloc_initializer12493);
			unmanaged_type896=unmanaged_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, unmanaged_type896.getTree());

			char_literal897=(Token)match(input,91,FOLLOW_91_in_stackalloc_initializer12497); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal897_tree = (CommonTree)adaptor.create(char_literal897);
			adaptor.addChild(root_0, char_literal897_tree);
			}

			pushFollow(FOLLOW_expression_in_stackalloc_initializer12501);
			expression898=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression898.getTree());

			char_literal899=(Token)match(input,92,FOLLOW_92_in_stackalloc_initializer12505); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal899_tree = (CommonTree)adaptor.create(char_literal899);
			adaptor.addChild(root_0, char_literal899_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 259, stackalloc_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "stackalloc_initializer"


	public static class local_constant_declaration_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_constant_declaration"
	// /Users/jeremie/ANTLR/cs.g:928:1: local_constant_declaration : 'const' type constant_declarators ;
	public final csParser.local_constant_declaration_return local_constant_declaration() throws RecognitionException {
		csParser.local_constant_declaration_return retval = new csParser.local_constant_declaration_return();
		retval.start = input.LT(1);
		int local_constant_declaration_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal900=null;
		ParserRuleReturnScope type901 =null;
		ParserRuleReturnScope constant_declarators902 =null;

		CommonTree string_literal900_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:928:27: ( 'const' type constant_declarators )
			// /Users/jeremie/ANTLR/cs.g:929:9: 'const' type constant_declarators
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal900=(Token)match(input,112,FOLLOW_112_in_local_constant_declaration12520); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal900_tree = (CommonTree)adaptor.create(string_literal900);
			adaptor.addChild(root_0, string_literal900_tree);
			}

			pushFollow(FOLLOW_type_in_local_constant_declaration12524);
			type901=type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, type901.getTree());

			pushFollow(FOLLOW_constant_declarators_in_local_constant_declaration12528);
			constant_declarators902=constant_declarators();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declarators902.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 260, local_constant_declaration_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_constant_declaration"


	public static class expression_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression_statement"
	// /Users/jeremie/ANTLR/cs.g:930:1: expression_statement : expression ';' ;
	public final csParser.expression_statement_return expression_statement() throws RecognitionException {
		csParser.expression_statement_return retval = new csParser.expression_statement_return();
		retval.start = input.LT(1);
		int expression_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal904=null;
		ParserRuleReturnScope expression903 =null;

		CommonTree char_literal904_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:930:21: ( expression ';' )
			// /Users/jeremie/ANTLR/cs.g:931:9: expression ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_expression_statement12543);
			expression903=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression903.getTree());

			char_literal904=(Token)match(input,SEMI,FOLLOW_SEMI_in_expression_statement12547); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal904_tree = (CommonTree)adaptor.create(char_literal904);
			adaptor.addChild(root_0, char_literal904_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 261, expression_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression_statement"


	public static class statement_expression_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement_expression"
	// /Users/jeremie/ANTLR/cs.g:934:1: statement_expression : expression ;
	public final csParser.statement_expression_return statement_expression() throws RecognitionException {
		csParser.statement_expression_return retval = new csParser.statement_expression_return();
		retval.start = input.LT(1);
		int statement_expression_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope expression905 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:934:21: ( expression )
			// /Users/jeremie/ANTLR/cs.g:935:9: expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_expression_in_statement_expression12564);
			expression905=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression905.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 262, statement_expression_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement_expression"


	public static class selection_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "selection_statement"
	// /Users/jeremie/ANTLR/cs.g:937:1: selection_statement : ( if_statement | switch_statement );
	public final csParser.selection_statement_return selection_statement() throws RecognitionException {
		csParser.selection_statement_return retval = new csParser.selection_statement_return();
		retval.start = input.LT(1);
		int selection_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope if_statement906 =null;
		ParserRuleReturnScope switch_statement907 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:937:20: ( if_statement | switch_statement )
			int alt251=2;
			int LA251_0 = input.LA(1);
			if ( (LA251_0==IF) ) {
				alt251=1;
			}
			else if ( (LA251_0==179) ) {
				alt251=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 251, 0, input);
				throw nvae;
			}

			switch (alt251) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:938:9: if_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_if_statement_in_selection_statement12587);
					if_statement906=if_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, if_statement906.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:939:11: switch_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_switch_statement_in_selection_statement12599);
					switch_statement907=switch_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_statement907.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 263, selection_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "selection_statement"


	public static class if_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "if_statement"
	// /Users/jeremie/ANTLR/cs.g:940:1: if_statement : 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? ;
	public final csParser.if_statement_return if_statement() throws RecognitionException {
		csParser.if_statement_return retval = new csParser.if_statement_return();
		retval.start = input.LT(1);
		int if_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal908=null;
		Token char_literal909=null;
		Token char_literal911=null;
		ParserRuleReturnScope boolean_expression910 =null;
		ParserRuleReturnScope embedded_statement912 =null;
		ParserRuleReturnScope else_statement913 =null;

		CommonTree string_literal908_tree=null;
		CommonTree char_literal909_tree=null;
		CommonTree char_literal911_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:940:13: ( 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )? )
			// /Users/jeremie/ANTLR/cs.g:942:9: 'if' '(' boolean_expression ')' embedded_statement ( ( 'else' )=> else_statement )?
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal908=(Token)match(input,IF,FOLLOW_IF_in_if_statement12623); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal908_tree = (CommonTree)adaptor.create(string_literal908);
			adaptor.addChild(root_0, string_literal908_tree);
			}

			char_literal909=(Token)match(input,68,FOLLOW_68_in_if_statement12627); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal909_tree = (CommonTree)adaptor.create(char_literal909);
			adaptor.addChild(root_0, char_literal909_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_if_statement12631);
			boolean_expression910=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression910.getTree());

			char_literal911=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_if_statement12635); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal911_tree = (CommonTree)adaptor.create(char_literal911);
			adaptor.addChild(root_0, char_literal911_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_if_statement12639);
			embedded_statement912=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement912.getTree());

			// /Users/jeremie/ANTLR/cs.g:942:68: ( ( 'else' )=> else_statement )?
			int alt252=2;
			int LA252_0 = input.LA(1);
			if ( (LA252_0==121) ) {
				int LA252_1 = input.LA(2);
				if ( (synpred37_cs()) ) {
					alt252=1;
				}
			}
			switch (alt252) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:942:69: ( 'else' )=> else_statement
					{
					pushFollow(FOLLOW_else_statement_in_if_statement12648);
					else_statement913=else_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, else_statement913.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 264, if_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "if_statement"


	public static class else_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "else_statement"
	// /Users/jeremie/ANTLR/cs.g:944:1: else_statement : 'else' embedded_statement ;
	public final csParser.else_statement_return else_statement() throws RecognitionException {
		csParser.else_statement_return retval = new csParser.else_statement_return();
		retval.start = input.LT(1);
		int else_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal914=null;
		ParserRuleReturnScope embedded_statement915 =null;

		CommonTree string_literal914_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:944:15: ( 'else' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:945:9: 'else' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal914=(Token)match(input,121,FOLLOW_121_in_else_statement12673); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal914_tree = (CommonTree)adaptor.create(string_literal914);
			adaptor.addChild(root_0, string_literal914_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_else_statement12677);
			embedded_statement915=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement915.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 265, else_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "else_statement"


	public static class switch_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_statement"
	// /Users/jeremie/ANTLR/cs.g:946:1: switch_statement : 'switch' '(' expression ')' switch_block ;
	public final csParser.switch_statement_return switch_statement() throws RecognitionException {
		csParser.switch_statement_return retval = new csParser.switch_statement_return();
		retval.start = input.LT(1);
		int switch_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal916=null;
		Token char_literal917=null;
		Token char_literal919=null;
		ParserRuleReturnScope expression918 =null;
		ParserRuleReturnScope switch_block920 =null;

		CommonTree string_literal916_tree=null;
		CommonTree char_literal917_tree=null;
		CommonTree char_literal919_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:946:17: ( 'switch' '(' expression ')' switch_block )
			// /Users/jeremie/ANTLR/cs.g:947:9: 'switch' '(' expression ')' switch_block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal916=(Token)match(input,179,FOLLOW_179_in_switch_statement12699); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal916_tree = (CommonTree)adaptor.create(string_literal916);
			adaptor.addChild(root_0, string_literal916_tree);
			}

			char_literal917=(Token)match(input,68,FOLLOW_68_in_switch_statement12703); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal917_tree = (CommonTree)adaptor.create(char_literal917);
			adaptor.addChild(root_0, char_literal917_tree);
			}

			pushFollow(FOLLOW_expression_in_switch_statement12707);
			expression918=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression918.getTree());

			char_literal919=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_switch_statement12711); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal919_tree = (CommonTree)adaptor.create(char_literal919);
			adaptor.addChild(root_0, char_literal919_tree);
			}

			pushFollow(FOLLOW_switch_block_in_switch_statement12715);
			switch_block920=switch_block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_block920.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 266, switch_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_statement"


	public static class switch_block_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_block"
	// /Users/jeremie/ANTLR/cs.g:948:1: switch_block : '{' ( switch_sections )? '}' ;
	public final csParser.switch_block_return switch_block() throws RecognitionException {
		csParser.switch_block_return retval = new csParser.switch_block_return();
		retval.start = input.LT(1);
		int switch_block_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal921=null;
		Token char_literal923=null;
		ParserRuleReturnScope switch_sections922 =null;

		CommonTree char_literal921_tree=null;
		CommonTree char_literal923_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:948:13: ( '{' ( switch_sections )? '}' )
			// /Users/jeremie/ANTLR/cs.g:949:9: '{' ( switch_sections )? '}'
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal921=(Token)match(input,197,FOLLOW_197_in_switch_block12730); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal921_tree = (CommonTree)adaptor.create(char_literal921);
			adaptor.addChild(root_0, char_literal921_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:949:15: ( switch_sections )?
			int alt253=2;
			int LA253_0 = input.LA(1);
			if ( (LA253_0==107||LA253_0==115) ) {
				alt253=1;
			}
			switch (alt253) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:949:15: switch_sections
					{
					pushFollow(FOLLOW_switch_sections_in_switch_block12734);
					switch_sections922=switch_sections();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_sections922.getTree());

					}
					break;

			}

			char_literal923=(Token)match(input,201,FOLLOW_201_in_switch_block12739); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal923_tree = (CommonTree)adaptor.create(char_literal923);
			adaptor.addChild(root_0, char_literal923_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 267, switch_block_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_block"


	public static class switch_sections_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_sections"
	// /Users/jeremie/ANTLR/cs.g:950:1: switch_sections : ( switch_section )+ ;
	public final csParser.switch_sections_return switch_sections() throws RecognitionException {
		csParser.switch_sections_return retval = new csParser.switch_sections_return();
		retval.start = input.LT(1);
		int switch_sections_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope switch_section924 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:950:16: ( ( switch_section )+ )
			// /Users/jeremie/ANTLR/cs.g:951:9: ( switch_section )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:951:9: ( switch_section )+
			int cnt254=0;
			loop254:
			while (true) {
				int alt254=2;
				int LA254_0 = input.LA(1);
				if ( (LA254_0==107||LA254_0==115) ) {
					alt254=1;
				}

				switch (alt254) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:951:9: switch_section
					{
					pushFollow(FOLLOW_switch_section_in_switch_sections12754);
					switch_section924=switch_section();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_section924.getTree());

					}
					break;

				default :
					if ( cnt254 >= 1 ) break loop254;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(254, input);
					throw eee;
				}
				cnt254++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 268, switch_sections_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_sections"


	public static class switch_section_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_section"
	// /Users/jeremie/ANTLR/cs.g:952:1: switch_section : switch_labels statement_list ;
	public final csParser.switch_section_return switch_section() throws RecognitionException {
		csParser.switch_section_return retval = new csParser.switch_section_return();
		retval.start = input.LT(1);
		int switch_section_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope switch_labels925 =null;
		ParserRuleReturnScope statement_list926 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:952:15: ( switch_labels statement_list )
			// /Users/jeremie/ANTLR/cs.g:953:9: switch_labels statement_list
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_switch_labels_in_switch_section12770);
			switch_labels925=switch_labels();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_labels925.getTree());

			pushFollow(FOLLOW_statement_list_in_switch_section12774);
			statement_list926=statement_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_list926.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 269, switch_section_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_section"


	public static class switch_labels_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_labels"
	// /Users/jeremie/ANTLR/cs.g:954:1: switch_labels : ( switch_label )+ ;
	public final csParser.switch_labels_return switch_labels() throws RecognitionException {
		csParser.switch_labels_return retval = new csParser.switch_labels_return();
		retval.start = input.LT(1);
		int switch_labels_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope switch_label927 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:954:14: ( ( switch_label )+ )
			// /Users/jeremie/ANTLR/cs.g:955:9: ( switch_label )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:955:9: ( switch_label )+
			int cnt255=0;
			loop255:
			while (true) {
				int alt255=2;
				int LA255_0 = input.LA(1);
				if ( (LA255_0==115) ) {
					int LA255_2 = input.LA(2);
					if ( (LA255_2==79) ) {
						alt255=1;
					}

				}
				else if ( (LA255_0==107) ) {
					alt255=1;
				}

				switch (alt255) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:955:9: switch_label
					{
					pushFollow(FOLLOW_switch_label_in_switch_labels12789);
					switch_label927=switch_label();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, switch_label927.getTree());

					}
					break;

				default :
					if ( cnt255 >= 1 ) break loop255;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(255, input);
					throw eee;
				}
				cnt255++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 270, switch_labels_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_labels"


	public static class switch_label_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "switch_label"
	// /Users/jeremie/ANTLR/cs.g:956:1: switch_label : ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) );
	public final csParser.switch_label_return switch_label() throws RecognitionException {
		csParser.switch_label_return retval = new csParser.switch_label_return();
		retval.start = input.LT(1);
		int switch_label_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal928=null;
		Token char_literal930=null;
		Token string_literal931=null;
		Token char_literal932=null;
		ParserRuleReturnScope constant_expression929 =null;

		CommonTree string_literal928_tree=null;
		CommonTree char_literal930_tree=null;
		CommonTree string_literal931_tree=null;
		CommonTree char_literal932_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:956:13: ( ( 'case' constant_expression ':' ) | ( 'default' ':' ) )
			int alt256=2;
			int LA256_0 = input.LA(1);
			if ( (LA256_0==107) ) {
				alt256=1;
			}
			else if ( (LA256_0==115) ) {
				alt256=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 256, 0, input);
				throw nvae;
			}

			switch (alt256) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:957:9: ( 'case' constant_expression ':' )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:957:9: ( 'case' constant_expression ':' )
					// /Users/jeremie/ANTLR/cs.g:957:10: 'case' constant_expression ':'
					{
					string_literal928=(Token)match(input,107,FOLLOW_107_in_switch_label12806); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal928_tree = (CommonTree)adaptor.create(string_literal928);
					adaptor.addChild(root_0, string_literal928_tree);
					}

					pushFollow(FOLLOW_constant_expression_in_switch_label12810);
					constant_expression929=constant_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression929.getTree());

					char_literal930=(Token)match(input,79,FOLLOW_79_in_switch_label12814); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal930_tree = (CommonTree)adaptor.create(char_literal930);
					adaptor.addChild(root_0, char_literal930_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:958:11: ( 'default' ':' )
					{
					root_0 = (CommonTree)adaptor.nil();


					// /Users/jeremie/ANTLR/cs.g:958:11: ( 'default' ':' )
					// /Users/jeremie/ANTLR/cs.g:958:12: 'default' ':'
					{
					string_literal931=(Token)match(input,115,FOLLOW_115_in_switch_label12828); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal931_tree = (CommonTree)adaptor.create(string_literal931);
					adaptor.addChild(root_0, string_literal931_tree);
					}

					char_literal932=(Token)match(input,79,FOLLOW_79_in_switch_label12832); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal932_tree = (CommonTree)adaptor.create(char_literal932);
					adaptor.addChild(root_0, char_literal932_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 271, switch_label_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "switch_label"


	public static class iteration_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "iteration_statement"
	// /Users/jeremie/ANTLR/cs.g:959:1: iteration_statement : ( while_statement | do_statement | for_statement | foreach_statement );
	public final csParser.iteration_statement_return iteration_statement() throws RecognitionException {
		csParser.iteration_statement_return retval = new csParser.iteration_statement_return();
		retval.start = input.LT(1);
		int iteration_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope while_statement933 =null;
		ParserRuleReturnScope do_statement934 =null;
		ParserRuleReturnScope for_statement935 =null;
		ParserRuleReturnScope foreach_statement936 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:959:20: ( while_statement | do_statement | for_statement | foreach_statement )
			int alt257=4;
			switch ( input.LA(1) ) {
			case 195:
				{
				alt257=1;
				}
				break;
			case 118:
				{
				alt257=2;
				}
				break;
			case 130:
				{
				alt257=3;
				}
				break;
			case 131:
				{
				alt257=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 257, 0, input);
				throw nvae;
			}
			switch (alt257) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:960:9: while_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_while_statement_in_iteration_statement12848);
					while_statement933=while_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, while_statement933.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:961:11: do_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_do_statement_in_iteration_statement12860);
					do_statement934=do_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement934.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:962:11: for_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_for_statement_in_iteration_statement12872);
					for_statement935=for_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_statement935.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:963:11: foreach_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_foreach_statement_in_iteration_statement12884);
					foreach_statement936=foreach_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, foreach_statement936.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 272, iteration_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "iteration_statement"


	public static class while_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "while_statement"
	// /Users/jeremie/ANTLR/cs.g:964:1: while_statement : 'while' '(' boolean_expression ')' embedded_statement ;
	public final csParser.while_statement_return while_statement() throws RecognitionException {
		csParser.while_statement_return retval = new csParser.while_statement_return();
		retval.start = input.LT(1);
		int while_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal937=null;
		Token char_literal938=null;
		Token char_literal940=null;
		ParserRuleReturnScope boolean_expression939 =null;
		ParserRuleReturnScope embedded_statement941 =null;

		CommonTree string_literal937_tree=null;
		CommonTree char_literal938_tree=null;
		CommonTree char_literal940_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:964:16: ( 'while' '(' boolean_expression ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:965:9: 'while' '(' boolean_expression ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal937=(Token)match(input,195,FOLLOW_195_in_while_statement12899); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal937_tree = (CommonTree)adaptor.create(string_literal937);
			adaptor.addChild(root_0, string_literal937_tree);
			}

			char_literal938=(Token)match(input,68,FOLLOW_68_in_while_statement12903); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal938_tree = (CommonTree)adaptor.create(char_literal938);
			adaptor.addChild(root_0, char_literal938_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_while_statement12907);
			boolean_expression939=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression939.getTree());

			char_literal940=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_while_statement12911); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal940_tree = (CommonTree)adaptor.create(char_literal940);
			adaptor.addChild(root_0, char_literal940_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_while_statement12915);
			embedded_statement941=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement941.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 273, while_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "while_statement"


	public static class do_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "do_statement"
	// /Users/jeremie/ANTLR/cs.g:966:1: do_statement : 'do' embedded_statement 'while' '(' boolean_expression ')' ';' ;
	public final csParser.do_statement_return do_statement() throws RecognitionException {
		csParser.do_statement_return retval = new csParser.do_statement_return();
		retval.start = input.LT(1);
		int do_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal942=null;
		Token string_literal944=null;
		Token char_literal945=null;
		Token char_literal947=null;
		Token char_literal948=null;
		ParserRuleReturnScope embedded_statement943 =null;
		ParserRuleReturnScope boolean_expression946 =null;

		CommonTree string_literal942_tree=null;
		CommonTree string_literal944_tree=null;
		CommonTree char_literal945_tree=null;
		CommonTree char_literal947_tree=null;
		CommonTree char_literal948_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:966:13: ( 'do' embedded_statement 'while' '(' boolean_expression ')' ';' )
			// /Users/jeremie/ANTLR/cs.g:967:9: 'do' embedded_statement 'while' '(' boolean_expression ')' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal942=(Token)match(input,118,FOLLOW_118_in_do_statement12930); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal942_tree = (CommonTree)adaptor.create(string_literal942);
			adaptor.addChild(root_0, string_literal942_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_do_statement12934);
			embedded_statement943=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement943.getTree());

			string_literal944=(Token)match(input,195,FOLLOW_195_in_do_statement12938); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal944_tree = (CommonTree)adaptor.create(string_literal944);
			adaptor.addChild(root_0, string_literal944_tree);
			}

			char_literal945=(Token)match(input,68,FOLLOW_68_in_do_statement12942); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal945_tree = (CommonTree)adaptor.create(char_literal945);
			adaptor.addChild(root_0, char_literal945_tree);
			}

			pushFollow(FOLLOW_boolean_expression_in_do_statement12946);
			boolean_expression946=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression946.getTree());

			char_literal947=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_do_statement12950); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal947_tree = (CommonTree)adaptor.create(char_literal947);
			adaptor.addChild(root_0, char_literal947_tree);
			}

			char_literal948=(Token)match(input,SEMI,FOLLOW_SEMI_in_do_statement12954); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal948_tree = (CommonTree)adaptor.create(char_literal948);
			adaptor.addChild(root_0, char_literal948_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 274, do_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "do_statement"


	public static class for_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_statement"
	// /Users/jeremie/ANTLR/cs.g:968:1: for_statement : 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement ;
	public final csParser.for_statement_return for_statement() throws RecognitionException {
		csParser.for_statement_return retval = new csParser.for_statement_return();
		retval.start = input.LT(1);
		int for_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal949=null;
		Token char_literal950=null;
		Token char_literal952=null;
		Token char_literal954=null;
		Token char_literal956=null;
		ParserRuleReturnScope for_initializer951 =null;
		ParserRuleReturnScope for_condition953 =null;
		ParserRuleReturnScope for_iterator955 =null;
		ParserRuleReturnScope embedded_statement957 =null;

		CommonTree string_literal949_tree=null;
		CommonTree char_literal950_tree=null;
		CommonTree char_literal952_tree=null;
		CommonTree char_literal954_tree=null;
		CommonTree char_literal956_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:968:14: ( 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:969:9: 'for' '(' ( for_initializer )? ';' ( for_condition )? ';' ( for_iterator )? ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal949=(Token)match(input,130,FOLLOW_130_in_for_statement12969); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal949_tree = (CommonTree)adaptor.create(string_literal949);
			adaptor.addChild(root_0, string_literal949_tree);
			}

			char_literal950=(Token)match(input,68,FOLLOW_68_in_for_statement12973); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal950_tree = (CommonTree)adaptor.create(char_literal950);
			adaptor.addChild(root_0, char_literal950_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:969:23: ( for_initializer )?
			int alt258=2;
			int LA258_0 = input.LA(1);
			if ( (LA258_0==Character_literal||LA258_0==FALSE||(LA258_0 >= Hex_number && LA258_0 <= IDENTIFIER)||(LA258_0 >= MINUS && LA258_0 <= NUMBER)||LA258_0==Real_literal||LA258_0==STRINGLITERAL||LA258_0==TRUE||LA258_0==Verbatim_string_literal||LA258_0==61||LA258_0==66||(LA258_0 >= 68 && LA258_0 <= 69)||(LA258_0 >= 71 && LA258_0 <= 72)||LA258_0==75||LA258_0==95||(LA258_0 >= 97 && LA258_0 <= 98)||(LA258_0 >= 100 && LA258_0 <= 103)||(LA258_0 >= 105 && LA258_0 <= 106)||(LA258_0 >= 109 && LA258_0 <= 110)||(LA258_0 >= 114 && LA258_0 <= 117)||(LA258_0 >= 119 && LA258_0 <= 120)||LA258_0==122||LA258_0==126||LA258_0==129||LA258_0==132||LA258_0==135||LA258_0==138||LA258_0==141||(LA258_0 >= 143 && LA258_0 <= 144)||(LA258_0 >= 146 && LA258_0 <= 148)||(LA258_0 >= 150 && LA258_0 <= 152)||LA258_0==154||LA258_0==157||LA258_0==160||LA258_0==162||LA258_0==167||LA258_0==169||(LA258_0 >= 171 && LA258_0 <= 174)||LA258_0==177||LA258_0==180||(LA258_0 >= 183 && LA258_0 <= 187)||(LA258_0 >= 189 && LA258_0 <= 190)||LA258_0==192||LA258_0==194||LA258_0==196||LA258_0==202) ) {
				alt258=1;
			}
			switch (alt258) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:969:23: for_initializer
					{
					pushFollow(FOLLOW_for_initializer_in_for_statement12977);
					for_initializer951=for_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_initializer951.getTree());

					}
					break;

			}

			char_literal952=(Token)match(input,SEMI,FOLLOW_SEMI_in_for_statement12982); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal952_tree = (CommonTree)adaptor.create(char_literal952);
			adaptor.addChild(root_0, char_literal952_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:969:48: ( for_condition )?
			int alt259=2;
			int LA259_0 = input.LA(1);
			if ( (LA259_0==Character_literal||LA259_0==FALSE||(LA259_0 >= Hex_number && LA259_0 <= IDENTIFIER)||(LA259_0 >= MINUS && LA259_0 <= NUMBER)||LA259_0==Real_literal||LA259_0==STRINGLITERAL||LA259_0==TRUE||LA259_0==Verbatim_string_literal||LA259_0==61||LA259_0==66||(LA259_0 >= 68 && LA259_0 <= 69)||(LA259_0 >= 71 && LA259_0 <= 72)||LA259_0==75||LA259_0==95||(LA259_0 >= 97 && LA259_0 <= 98)||(LA259_0 >= 100 && LA259_0 <= 103)||(LA259_0 >= 105 && LA259_0 <= 106)||(LA259_0 >= 109 && LA259_0 <= 110)||(LA259_0 >= 114 && LA259_0 <= 117)||(LA259_0 >= 119 && LA259_0 <= 120)||LA259_0==122||LA259_0==126||LA259_0==129||LA259_0==132||LA259_0==135||LA259_0==138||LA259_0==141||(LA259_0 >= 143 && LA259_0 <= 144)||(LA259_0 >= 146 && LA259_0 <= 148)||(LA259_0 >= 150 && LA259_0 <= 152)||LA259_0==154||LA259_0==157||LA259_0==160||LA259_0==162||LA259_0==167||LA259_0==169||(LA259_0 >= 171 && LA259_0 <= 174)||LA259_0==177||LA259_0==180||(LA259_0 >= 183 && LA259_0 <= 187)||(LA259_0 >= 189 && LA259_0 <= 190)||LA259_0==194||LA259_0==196||LA259_0==202) ) {
				alt259=1;
			}
			switch (alt259) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:969:48: for_condition
					{
					pushFollow(FOLLOW_for_condition_in_for_statement12986);
					for_condition953=for_condition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_condition953.getTree());

					}
					break;

			}

			char_literal954=(Token)match(input,SEMI,FOLLOW_SEMI_in_for_statement12991); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal954_tree = (CommonTree)adaptor.create(char_literal954);
			adaptor.addChild(root_0, char_literal954_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:969:71: ( for_iterator )?
			int alt260=2;
			int LA260_0 = input.LA(1);
			if ( (LA260_0==Character_literal||LA260_0==FALSE||(LA260_0 >= Hex_number && LA260_0 <= IDENTIFIER)||(LA260_0 >= MINUS && LA260_0 <= NUMBER)||LA260_0==Real_literal||LA260_0==STRINGLITERAL||LA260_0==TRUE||LA260_0==Verbatim_string_literal||LA260_0==61||LA260_0==66||(LA260_0 >= 68 && LA260_0 <= 69)||(LA260_0 >= 71 && LA260_0 <= 72)||LA260_0==75||LA260_0==95||(LA260_0 >= 97 && LA260_0 <= 98)||(LA260_0 >= 100 && LA260_0 <= 103)||(LA260_0 >= 105 && LA260_0 <= 106)||(LA260_0 >= 109 && LA260_0 <= 110)||(LA260_0 >= 114 && LA260_0 <= 117)||(LA260_0 >= 119 && LA260_0 <= 120)||LA260_0==122||LA260_0==126||LA260_0==129||LA260_0==132||LA260_0==135||LA260_0==138||LA260_0==141||(LA260_0 >= 143 && LA260_0 <= 144)||(LA260_0 >= 146 && LA260_0 <= 148)||(LA260_0 >= 150 && LA260_0 <= 152)||LA260_0==154||LA260_0==157||LA260_0==160||LA260_0==162||LA260_0==167||LA260_0==169||(LA260_0 >= 171 && LA260_0 <= 174)||LA260_0==177||LA260_0==180||(LA260_0 >= 183 && LA260_0 <= 187)||(LA260_0 >= 189 && LA260_0 <= 190)||LA260_0==194||LA260_0==196||LA260_0==202) ) {
				alt260=1;
			}
			switch (alt260) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:969:71: for_iterator
					{
					pushFollow(FOLLOW_for_iterator_in_for_statement12995);
					for_iterator955=for_iterator();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, for_iterator955.getTree());

					}
					break;

			}

			char_literal956=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_for_statement13000); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal956_tree = (CommonTree)adaptor.create(char_literal956);
			adaptor.addChild(root_0, char_literal956_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_for_statement13004);
			embedded_statement957=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement957.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 275, for_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_statement"


	public static class for_initializer_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_initializer"
	// /Users/jeremie/ANTLR/cs.g:970:1: for_initializer : ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list );
	public final csParser.for_initializer_return for_initializer() throws RecognitionException {
		csParser.for_initializer_return retval = new csParser.for_initializer_return();
		retval.start = input.LT(1);
		int for_initializer_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope local_variable_declaration958 =null;
		ParserRuleReturnScope statement_expression_list959 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:970:16: ( ( local_variable_declaration )=> local_variable_declaration | statement_expression_list )
			int alt261=2;
			int LA261_0 = input.LA(1);
			if ( (LA261_0==190) ) {
				int LA261_1 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt261=1;
				}
				else if ( (true) ) {
					alt261=2;
				}

			}
			else if ( (LA261_0==120) ) {
				int LA261_2 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt261=1;
				}
				else if ( (true) ) {
					alt261=2;
				}

			}
			else if ( (LA261_0==103||LA261_0==106||LA261_0==109||LA261_0==114||LA261_0==119||LA261_0==129||LA261_0==138||LA261_0==146||LA261_0==151||LA261_0==169||LA261_0==173||LA261_0==177||(LA261_0 >= 185 && LA261_0 <= 186)||LA261_0==189) ) {
				int LA261_3 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt261=1;
				}
				else if ( (true) ) {
					alt261=2;
				}

			}
			else if ( (LA261_0==132) ) {
				int LA261_4 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt261=1;
				}
				else if ( (true) ) {
					alt261=2;
				}

			}
			else if ( (LA261_0==192) && (synpred38_cs())) {
				alt261=1;
			}
			else if ( (LA261_0==Character_literal||LA261_0==FALSE||LA261_0==Hex_number||(LA261_0 >= MINUS && LA261_0 <= NUMBER)||LA261_0==Real_literal||LA261_0==STRINGLITERAL||LA261_0==TRUE||LA261_0==Verbatim_string_literal||LA261_0==61||LA261_0==66||(LA261_0 >= 68 && LA261_0 <= 69)||(LA261_0 >= 71 && LA261_0 <= 72)||LA261_0==75||LA261_0==102||LA261_0==110||(LA261_0 >= 115 && LA261_0 <= 116)||LA261_0==150||LA261_0==174||LA261_0==180||LA261_0==184||LA261_0==187||LA261_0==202) ) {
				alt261=2;
			}
			else if ( (LA261_0==IDENTIFIER||LA261_0==95||(LA261_0 >= 97 && LA261_0 <= 98)||(LA261_0 >= 100 && LA261_0 <= 101)||LA261_0==105||LA261_0==117||LA261_0==122||LA261_0==126||LA261_0==135||LA261_0==141||(LA261_0 >= 143 && LA261_0 <= 144)||(LA261_0 >= 147 && LA261_0 <= 148)||LA261_0==152||LA261_0==154||LA261_0==157||LA261_0==160||LA261_0==162||LA261_0==167||(LA261_0 >= 171 && LA261_0 <= 172)||LA261_0==183||LA261_0==194||LA261_0==196) ) {
				int LA261_25 = input.LA(2);
				if ( (synpred38_cs()) ) {
					alt261=1;
				}
				else if ( (true) ) {
					alt261=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 261, 0, input);
				throw nvae;
			}

			switch (alt261) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:971:9: ( local_variable_declaration )=> local_variable_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_local_variable_declaration_in_for_initializer13025);
					local_variable_declaration958=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration958.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:972:11: statement_expression_list
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_statement_expression_list_in_for_initializer13037);
					statement_expression_list959=statement_expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list959.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 276, for_initializer_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_initializer"


	public static class for_condition_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_condition"
	// /Users/jeremie/ANTLR/cs.g:974:1: for_condition : boolean_expression ;
	public final csParser.for_condition_return for_condition() throws RecognitionException {
		csParser.for_condition_return retval = new csParser.for_condition_return();
		retval.start = input.LT(1);
		int for_condition_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope boolean_expression960 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:974:14: ( boolean_expression )
			// /Users/jeremie/ANTLR/cs.g:975:9: boolean_expression
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_boolean_expression_in_for_condition13061);
			boolean_expression960=boolean_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_expression960.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 277, for_condition_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_condition"


	public static class for_iterator_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "for_iterator"
	// /Users/jeremie/ANTLR/cs.g:976:1: for_iterator : statement_expression_list ;
	public final csParser.for_iterator_return for_iterator() throws RecognitionException {
		csParser.for_iterator_return retval = new csParser.for_iterator_return();
		retval.start = input.LT(1);
		int for_iterator_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope statement_expression_list961 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:976:13: ( statement_expression_list )
			// /Users/jeremie/ANTLR/cs.g:977:9: statement_expression_list
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_statement_expression_list_in_for_iterator13076);
			statement_expression_list961=statement_expression_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression_list961.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 278, for_iterator_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "for_iterator"


	public static class statement_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "statement_expression_list"
	// /Users/jeremie/ANTLR/cs.g:978:1: statement_expression_list : statement_expression ( ',' statement_expression )* ;
	public final csParser.statement_expression_list_return statement_expression_list() throws RecognitionException {
		csParser.statement_expression_list_return retval = new csParser.statement_expression_list_return();
		retval.start = input.LT(1);
		int statement_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal963=null;
		ParserRuleReturnScope statement_expression962 =null;
		ParserRuleReturnScope statement_expression964 =null;

		CommonTree char_literal963_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:978:26: ( statement_expression ( ',' statement_expression )* )
			// /Users/jeremie/ANTLR/cs.g:979:9: statement_expression ( ',' statement_expression )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_statement_expression_in_statement_expression_list13091);
			statement_expression962=statement_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression962.getTree());

			// /Users/jeremie/ANTLR/cs.g:979:30: ( ',' statement_expression )*
			loop262:
			while (true) {
				int alt262=2;
				int LA262_0 = input.LA(1);
				if ( (LA262_0==74) ) {
					alt262=1;
				}

				switch (alt262) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:979:31: ',' statement_expression
					{
					char_literal963=(Token)match(input,74,FOLLOW_74_in_statement_expression_list13094); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal963_tree = (CommonTree)adaptor.create(char_literal963);
					adaptor.addChild(root_0, char_literal963_tree);
					}

					pushFollow(FOLLOW_statement_expression_in_statement_expression_list13096);
					statement_expression964=statement_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, statement_expression964.getTree());

					}
					break;

				default :
					break loop262;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 279, statement_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "statement_expression_list"


	public static class foreach_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "foreach_statement"
	// /Users/jeremie/ANTLR/cs.g:980:1: foreach_statement : 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement ;
	public final csParser.foreach_statement_return foreach_statement() throws RecognitionException {
		csParser.foreach_statement_return retval = new csParser.foreach_statement_return();
		retval.start = input.LT(1);
		int foreach_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal965=null;
		Token char_literal966=null;
		Token string_literal969=null;
		Token char_literal971=null;
		ParserRuleReturnScope local_variable_type967 =null;
		ParserRuleReturnScope identifier968 =null;
		ParserRuleReturnScope expression970 =null;
		ParserRuleReturnScope embedded_statement972 =null;

		CommonTree string_literal965_tree=null;
		CommonTree char_literal966_tree=null;
		CommonTree string_literal969_tree=null;
		CommonTree char_literal971_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:980:18: ( 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:981:9: 'foreach' '(' local_variable_type identifier 'in' expression ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal965=(Token)match(input,131,FOLLOW_131_in_foreach_statement13113); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal965_tree = (CommonTree)adaptor.create(string_literal965);
			adaptor.addChild(root_0, string_literal965_tree);
			}

			char_literal966=(Token)match(input,68,FOLLOW_68_in_foreach_statement13117); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal966_tree = (CommonTree)adaptor.create(char_literal966);
			adaptor.addChild(root_0, char_literal966_tree);
			}

			pushFollow(FOLLOW_local_variable_type_in_foreach_statement13121);
			local_variable_type967=local_variable_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_type967.getTree());

			pushFollow(FOLLOW_identifier_in_foreach_statement13125);
			identifier968=identifier();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier968.getTree());

			string_literal969=(Token)match(input,137,FOLLOW_137_in_foreach_statement13129); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal969_tree = (CommonTree)adaptor.create(string_literal969);
			adaptor.addChild(root_0, string_literal969_tree);
			}

			pushFollow(FOLLOW_expression_in_foreach_statement13133);
			expression970=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression970.getTree());

			char_literal971=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_foreach_statement13137); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal971_tree = (CommonTree)adaptor.create(char_literal971);
			adaptor.addChild(root_0, char_literal971_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_foreach_statement13141);
			embedded_statement972=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement972.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 280, foreach_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "foreach_statement"


	public static class jump_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "jump_statement"
	// /Users/jeremie/ANTLR/cs.g:982:1: jump_statement : ( break_statement | continue_statement | goto_statement | return_statement | throw_statement );
	public final csParser.jump_statement_return jump_statement() throws RecognitionException {
		csParser.jump_statement_return retval = new csParser.jump_statement_return();
		retval.start = input.LT(1);
		int jump_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope break_statement973 =null;
		ParserRuleReturnScope continue_statement974 =null;
		ParserRuleReturnScope goto_statement975 =null;
		ParserRuleReturnScope return_statement976 =null;
		ParserRuleReturnScope throw_statement977 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:982:15: ( break_statement | continue_statement | goto_statement | return_statement | throw_statement )
			int alt263=5;
			switch ( input.LA(1) ) {
			case 104:
				{
				alt263=1;
				}
				break;
			case 113:
				{
				alt263=2;
				}
				break;
			case 134:
				{
				alt263=3;
				}
				break;
			case 168:
				{
				alt263=4;
				}
				break;
			case 181:
				{
				alt263=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 263, 0, input);
				throw nvae;
			}
			switch (alt263) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:983:9: break_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_break_statement_in_jump_statement13156);
					break_statement973=break_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, break_statement973.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:984:11: continue_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_continue_statement_in_jump_statement13168);
					continue_statement974=continue_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, continue_statement974.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:985:11: goto_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_goto_statement_in_jump_statement13180);
					goto_statement975=goto_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, goto_statement975.getTree());

					}
					break;
				case 4 :
					// /Users/jeremie/ANTLR/cs.g:986:11: return_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_return_statement_in_jump_statement13192);
					return_statement976=return_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, return_statement976.getTree());

					}
					break;
				case 5 :
					// /Users/jeremie/ANTLR/cs.g:987:11: throw_statement
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_throw_statement_in_jump_statement13204);
					throw_statement977=throw_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, throw_statement977.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 281, jump_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "jump_statement"


	public static class break_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "break_statement"
	// /Users/jeremie/ANTLR/cs.g:988:1: break_statement : 'break' ';' ;
	public final csParser.break_statement_return break_statement() throws RecognitionException {
		csParser.break_statement_return retval = new csParser.break_statement_return();
		retval.start = input.LT(1);
		int break_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal978=null;
		Token char_literal979=null;

		CommonTree string_literal978_tree=null;
		CommonTree char_literal979_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:988:16: ( 'break' ';' )
			// /Users/jeremie/ANTLR/cs.g:989:9: 'break' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal978=(Token)match(input,104,FOLLOW_104_in_break_statement13219); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal978_tree = (CommonTree)adaptor.create(string_literal978);
			adaptor.addChild(root_0, string_literal978_tree);
			}

			char_literal979=(Token)match(input,SEMI,FOLLOW_SEMI_in_break_statement13223); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal979_tree = (CommonTree)adaptor.create(char_literal979);
			adaptor.addChild(root_0, char_literal979_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 282, break_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "break_statement"


	public static class continue_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "continue_statement"
	// /Users/jeremie/ANTLR/cs.g:990:1: continue_statement : 'continue' ';' ;
	public final csParser.continue_statement_return continue_statement() throws RecognitionException {
		csParser.continue_statement_return retval = new csParser.continue_statement_return();
		retval.start = input.LT(1);
		int continue_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal980=null;
		Token char_literal981=null;

		CommonTree string_literal980_tree=null;
		CommonTree char_literal981_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:990:19: ( 'continue' ';' )
			// /Users/jeremie/ANTLR/cs.g:991:9: 'continue' ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal980=(Token)match(input,113,FOLLOW_113_in_continue_statement13238); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal980_tree = (CommonTree)adaptor.create(string_literal980);
			adaptor.addChild(root_0, string_literal980_tree);
			}

			char_literal981=(Token)match(input,SEMI,FOLLOW_SEMI_in_continue_statement13242); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal981_tree = (CommonTree)adaptor.create(char_literal981);
			adaptor.addChild(root_0, char_literal981_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 283, continue_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "continue_statement"


	public static class goto_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "goto_statement"
	// /Users/jeremie/ANTLR/cs.g:992:1: goto_statement : 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' ;
	public final csParser.goto_statement_return goto_statement() throws RecognitionException {
		csParser.goto_statement_return retval = new csParser.goto_statement_return();
		retval.start = input.LT(1);
		int goto_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal982=null;
		Token string_literal984=null;
		Token string_literal986=null;
		Token char_literal987=null;
		ParserRuleReturnScope identifier983 =null;
		ParserRuleReturnScope constant_expression985 =null;

		CommonTree string_literal982_tree=null;
		CommonTree string_literal984_tree=null;
		CommonTree string_literal986_tree=null;
		CommonTree char_literal987_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:992:15: ( 'goto' ( identifier | 'case' constant_expression | 'default' ) ';' )
			// /Users/jeremie/ANTLR/cs.g:993:9: 'goto' ( identifier | 'case' constant_expression | 'default' ) ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal982=(Token)match(input,134,FOLLOW_134_in_goto_statement13257); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal982_tree = (CommonTree)adaptor.create(string_literal982);
			adaptor.addChild(root_0, string_literal982_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:993:18: ( identifier | 'case' constant_expression | 'default' )
			int alt264=3;
			switch ( input.LA(1) ) {
			case IDENTIFIER:
			case 95:
			case 97:
			case 98:
			case 100:
			case 101:
			case 105:
			case 117:
			case 120:
			case 122:
			case 126:
			case 132:
			case 135:
			case 141:
			case 143:
			case 144:
			case 147:
			case 148:
			case 152:
			case 154:
			case 157:
			case 160:
			case 162:
			case 167:
			case 171:
			case 172:
			case 183:
			case 190:
			case 194:
			case 196:
				{
				alt264=1;
				}
				break;
			case 107:
				{
				alt264=2;
				}
				break;
			case 115:
				{
				alt264=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 264, 0, input);
				throw nvae;
			}
			switch (alt264) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:993:20: identifier
					{
					pushFollow(FOLLOW_identifier_in_goto_statement13263);
					identifier983=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier983.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:994:28: 'case' constant_expression
					{
					string_literal984=(Token)match(input,107,FOLLOW_107_in_goto_statement13292); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal984_tree = (CommonTree)adaptor.create(string_literal984);
					adaptor.addChild(root_0, string_literal984_tree);
					}

					pushFollow(FOLLOW_constant_expression_in_goto_statement13296);
					constant_expression985=constant_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_expression985.getTree());

					}
					break;
				case 3 :
					// /Users/jeremie/ANTLR/cs.g:995:28: 'default'
					{
					string_literal986=(Token)match(input,115,FOLLOW_115_in_goto_statement13325); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal986_tree = (CommonTree)adaptor.create(string_literal986);
					adaptor.addChild(root_0, string_literal986_tree);
					}

					}
					break;

			}

			char_literal987=(Token)match(input,SEMI,FOLLOW_SEMI_in_goto_statement13330); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal987_tree = (CommonTree)adaptor.create(char_literal987);
			adaptor.addChild(root_0, char_literal987_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 284, goto_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "goto_statement"


	public static class return_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "return_statement"
	// /Users/jeremie/ANTLR/cs.g:996:1: return_statement : 'return' ( expression )? ';' ;
	public final csParser.return_statement_return return_statement() throws RecognitionException {
		csParser.return_statement_return retval = new csParser.return_statement_return();
		retval.start = input.LT(1);
		int return_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal988=null;
		Token char_literal990=null;
		ParserRuleReturnScope expression989 =null;

		CommonTree string_literal988_tree=null;
		CommonTree char_literal990_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:996:17: ( 'return' ( expression )? ';' )
			// /Users/jeremie/ANTLR/cs.g:997:9: 'return' ( expression )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal988=(Token)match(input,168,FOLLOW_168_in_return_statement13345); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal988_tree = (CommonTree)adaptor.create(string_literal988);
			adaptor.addChild(root_0, string_literal988_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:997:20: ( expression )?
			int alt265=2;
			int LA265_0 = input.LA(1);
			if ( (LA265_0==Character_literal||LA265_0==FALSE||(LA265_0 >= Hex_number && LA265_0 <= IDENTIFIER)||(LA265_0 >= MINUS && LA265_0 <= NUMBER)||LA265_0==Real_literal||LA265_0==STRINGLITERAL||LA265_0==TRUE||LA265_0==Verbatim_string_literal||LA265_0==61||LA265_0==66||(LA265_0 >= 68 && LA265_0 <= 69)||(LA265_0 >= 71 && LA265_0 <= 72)||LA265_0==75||LA265_0==95||(LA265_0 >= 97 && LA265_0 <= 98)||(LA265_0 >= 100 && LA265_0 <= 103)||(LA265_0 >= 105 && LA265_0 <= 106)||(LA265_0 >= 109 && LA265_0 <= 110)||(LA265_0 >= 114 && LA265_0 <= 117)||(LA265_0 >= 119 && LA265_0 <= 120)||LA265_0==122||LA265_0==126||LA265_0==129||LA265_0==132||LA265_0==135||LA265_0==138||LA265_0==141||(LA265_0 >= 143 && LA265_0 <= 144)||(LA265_0 >= 146 && LA265_0 <= 148)||(LA265_0 >= 150 && LA265_0 <= 152)||LA265_0==154||LA265_0==157||LA265_0==160||LA265_0==162||LA265_0==167||LA265_0==169||(LA265_0 >= 171 && LA265_0 <= 174)||LA265_0==177||LA265_0==180||(LA265_0 >= 183 && LA265_0 <= 187)||(LA265_0 >= 189 && LA265_0 <= 190)||LA265_0==194||LA265_0==196||LA265_0==202) ) {
				alt265=1;
			}
			switch (alt265) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:997:20: expression
					{
					pushFollow(FOLLOW_expression_in_return_statement13349);
					expression989=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression989.getTree());

					}
					break;

			}

			char_literal990=(Token)match(input,SEMI,FOLLOW_SEMI_in_return_statement13354); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal990_tree = (CommonTree)adaptor.create(char_literal990);
			adaptor.addChild(root_0, char_literal990_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 285, return_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "return_statement"


	public static class throw_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "throw_statement"
	// /Users/jeremie/ANTLR/cs.g:998:1: throw_statement : 'throw' ( expression )? ';' ;
	public final csParser.throw_statement_return throw_statement() throws RecognitionException {
		csParser.throw_statement_return retval = new csParser.throw_statement_return();
		retval.start = input.LT(1);
		int throw_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal991=null;
		Token char_literal993=null;
		ParserRuleReturnScope expression992 =null;

		CommonTree string_literal991_tree=null;
		CommonTree char_literal993_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:998:16: ( 'throw' ( expression )? ';' )
			// /Users/jeremie/ANTLR/cs.g:999:9: 'throw' ( expression )? ';'
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal991=(Token)match(input,181,FOLLOW_181_in_throw_statement13369); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal991_tree = (CommonTree)adaptor.create(string_literal991);
			adaptor.addChild(root_0, string_literal991_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:999:19: ( expression )?
			int alt266=2;
			int LA266_0 = input.LA(1);
			if ( (LA266_0==Character_literal||LA266_0==FALSE||(LA266_0 >= Hex_number && LA266_0 <= IDENTIFIER)||(LA266_0 >= MINUS && LA266_0 <= NUMBER)||LA266_0==Real_literal||LA266_0==STRINGLITERAL||LA266_0==TRUE||LA266_0==Verbatim_string_literal||LA266_0==61||LA266_0==66||(LA266_0 >= 68 && LA266_0 <= 69)||(LA266_0 >= 71 && LA266_0 <= 72)||LA266_0==75||LA266_0==95||(LA266_0 >= 97 && LA266_0 <= 98)||(LA266_0 >= 100 && LA266_0 <= 103)||(LA266_0 >= 105 && LA266_0 <= 106)||(LA266_0 >= 109 && LA266_0 <= 110)||(LA266_0 >= 114 && LA266_0 <= 117)||(LA266_0 >= 119 && LA266_0 <= 120)||LA266_0==122||LA266_0==126||LA266_0==129||LA266_0==132||LA266_0==135||LA266_0==138||LA266_0==141||(LA266_0 >= 143 && LA266_0 <= 144)||(LA266_0 >= 146 && LA266_0 <= 148)||(LA266_0 >= 150 && LA266_0 <= 152)||LA266_0==154||LA266_0==157||LA266_0==160||LA266_0==162||LA266_0==167||LA266_0==169||(LA266_0 >= 171 && LA266_0 <= 174)||LA266_0==177||LA266_0==180||(LA266_0 >= 183 && LA266_0 <= 187)||(LA266_0 >= 189 && LA266_0 <= 190)||LA266_0==194||LA266_0==196||LA266_0==202) ) {
				alt266=1;
			}
			switch (alt266) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:999:19: expression
					{
					pushFollow(FOLLOW_expression_in_throw_statement13373);
					expression992=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression992.getTree());

					}
					break;

			}

			char_literal993=(Token)match(input,SEMI,FOLLOW_SEMI_in_throw_statement13378); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal993_tree = (CommonTree)adaptor.create(char_literal993);
			adaptor.addChild(root_0, char_literal993_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 286, throw_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "throw_statement"


	public static class try_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "try_statement"
	// /Users/jeremie/ANTLR/cs.g:1000:1: try_statement : 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) ;
	public final csParser.try_statement_return try_statement() throws RecognitionException {
		csParser.try_statement_return retval = new csParser.try_statement_return();
		retval.start = input.LT(1);
		int try_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal994=null;
		ParserRuleReturnScope block995 =null;
		ParserRuleReturnScope catch_clauses996 =null;
		ParserRuleReturnScope finally_clause997 =null;
		ParserRuleReturnScope finally_clause998 =null;

		CommonTree string_literal994_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1000:14: ( 'try' block ( catch_clauses ( finally_clause )? | finally_clause ) )
			// /Users/jeremie/ANTLR/cs.g:1001:7: 'try' block ( catch_clauses ( finally_clause )? | finally_clause )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal994=(Token)match(input,182,FOLLOW_182_in_try_statement13391); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal994_tree = (CommonTree)adaptor.create(string_literal994);
			adaptor.addChild(root_0, string_literal994_tree);
			}

			pushFollow(FOLLOW_block_in_try_statement13395);
			block995=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block995.getTree());

			// /Users/jeremie/ANTLR/cs.g:1001:23: ( catch_clauses ( finally_clause )? | finally_clause )
			int alt268=2;
			int LA268_0 = input.LA(1);
			if ( (LA268_0==108) ) {
				alt268=1;
			}
			else if ( (LA268_0==127) ) {
				alt268=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 268, 0, input);
				throw nvae;
			}

			switch (alt268) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1001:25: catch_clauses ( finally_clause )?
					{
					pushFollow(FOLLOW_catch_clauses_in_try_statement13401);
					catch_clauses996=catch_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, catch_clauses996.getTree());

					// /Users/jeremie/ANTLR/cs.g:1001:41: ( finally_clause )?
					int alt267=2;
					int LA267_0 = input.LA(1);
					if ( (LA267_0==127) ) {
						alt267=1;
					}
					switch (alt267) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1001:41: finally_clause
							{
							pushFollow(FOLLOW_finally_clause_in_try_statement13405);
							finally_clause997=finally_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause997.getTree());

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:1002:45: finally_clause
					{
					pushFollow(FOLLOW_finally_clause_in_try_statement13452);
					finally_clause998=finally_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, finally_clause998.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 287, try_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "try_statement"


	public static class catch_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "catch_clauses"
	// /Users/jeremie/ANTLR/cs.g:1004:1: catch_clauses : 'catch' ( specific_catch_clauses | general_catch_clause ) ;
	public final csParser.catch_clauses_return catch_clauses() throws RecognitionException {
		csParser.catch_clauses_return retval = new csParser.catch_clauses_return();
		retval.start = input.LT(1);
		int catch_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal999=null;
		ParserRuleReturnScope specific_catch_clauses1000 =null;
		ParserRuleReturnScope general_catch_clause1001 =null;

		CommonTree string_literal999_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1004:14: ( 'catch' ( specific_catch_clauses | general_catch_clause ) )
			// /Users/jeremie/ANTLR/cs.g:1005:9: 'catch' ( specific_catch_clauses | general_catch_clause )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal999=(Token)match(input,108,FOLLOW_108_in_catch_clauses13468); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal999_tree = (CommonTree)adaptor.create(string_literal999);
			adaptor.addChild(root_0, string_literal999_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:1005:19: ( specific_catch_clauses | general_catch_clause )
			int alt269=2;
			int LA269_0 = input.LA(1);
			if ( (LA269_0==68) ) {
				alt269=1;
			}
			else if ( (LA269_0==SEMI||LA269_0==197) ) {
				alt269=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 269, 0, input);
				throw nvae;
			}

			switch (alt269) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1005:20: specific_catch_clauses
					{
					pushFollow(FOLLOW_specific_catch_clauses_in_catch_clauses13473);
					specific_catch_clauses1000=specific_catch_clauses();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clauses1000.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:1005:45: general_catch_clause
					{
					pushFollow(FOLLOW_general_catch_clause_in_catch_clauses13477);
					general_catch_clause1001=general_catch_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause1001.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 288, catch_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "catch_clauses"


	public static class specific_catch_clauses_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "specific_catch_clauses"
	// /Users/jeremie/ANTLR/cs.g:1006:1: specific_catch_clauses : specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* ;
	public final csParser.specific_catch_clauses_return specific_catch_clauses() throws RecognitionException {
		csParser.specific_catch_clauses_return retval = new csParser.specific_catch_clauses_return();
		retval.start = input.LT(1);
		int specific_catch_clauses_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1003=null;
		ParserRuleReturnScope specific_catch_clause1002 =null;
		ParserRuleReturnScope specific_catch_clause1004 =null;
		ParserRuleReturnScope general_catch_clause1005 =null;

		CommonTree string_literal1003_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1006:23: ( specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )* )
			// /Users/jeremie/ANTLR/cs.g:1007:9: specific_catch_clause ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses13493);
			specific_catch_clause1002=specific_catch_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause1002.getTree());

			// /Users/jeremie/ANTLR/cs.g:1007:33: ( 'catch' ( specific_catch_clause | general_catch_clause ) )*
			loop271:
			while (true) {
				int alt271=2;
				int LA271_0 = input.LA(1);
				if ( (LA271_0==108) ) {
					alt271=1;
				}

				switch (alt271) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1007:34: 'catch' ( specific_catch_clause | general_catch_clause )
					{
					string_literal1003=(Token)match(input,108,FOLLOW_108_in_specific_catch_clauses13498); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1003_tree = (CommonTree)adaptor.create(string_literal1003);
					adaptor.addChild(root_0, string_literal1003_tree);
					}

					// /Users/jeremie/ANTLR/cs.g:1007:44: ( specific_catch_clause | general_catch_clause )
					int alt270=2;
					int LA270_0 = input.LA(1);
					if ( (LA270_0==68) ) {
						alt270=1;
					}
					else if ( (LA270_0==SEMI||LA270_0==197) ) {
						alt270=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 270, 0, input);
						throw nvae;
					}

					switch (alt270) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1007:45: specific_catch_clause
							{
							pushFollow(FOLLOW_specific_catch_clause_in_specific_catch_clauses13503);
							specific_catch_clause1004=specific_catch_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, specific_catch_clause1004.getTree());

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:1007:69: general_catch_clause
							{
							pushFollow(FOLLOW_general_catch_clause_in_specific_catch_clauses13507);
							general_catch_clause1005=general_catch_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, general_catch_clause1005.getTree());

							}
							break;

					}

					}
					break;

				default :
					break loop271;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 289, specific_catch_clauses_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "specific_catch_clauses"


	public static class specific_catch_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "specific_catch_clause"
	// /Users/jeremie/ANTLR/cs.g:1008:1: specific_catch_clause : '(' class_type ( identifier )? ')' block ;
	public final csParser.specific_catch_clause_return specific_catch_clause() throws RecognitionException {
		csParser.specific_catch_clause_return retval = new csParser.specific_catch_clause_return();
		retval.start = input.LT(1);
		int specific_catch_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1006=null;
		Token char_literal1009=null;
		ParserRuleReturnScope class_type1007 =null;
		ParserRuleReturnScope identifier1008 =null;
		ParserRuleReturnScope block1010 =null;

		CommonTree char_literal1006_tree=null;
		CommonTree char_literal1009_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1008:22: ( '(' class_type ( identifier )? ')' block )
			// /Users/jeremie/ANTLR/cs.g:1009:9: '(' class_type ( identifier )? ')' block
			{
			root_0 = (CommonTree)adaptor.nil();


			char_literal1006=(Token)match(input,68,FOLLOW_68_in_specific_catch_clause13524); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1006_tree = (CommonTree)adaptor.create(char_literal1006);
			adaptor.addChild(root_0, char_literal1006_tree);
			}

			pushFollow(FOLLOW_class_type_in_specific_catch_clause13528);
			class_type1007=class_type();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, class_type1007.getTree());

			// /Users/jeremie/ANTLR/cs.g:1009:28: ( identifier )?
			int alt272=2;
			int LA272_0 = input.LA(1);
			if ( (LA272_0==IDENTIFIER||LA272_0==95||(LA272_0 >= 97 && LA272_0 <= 98)||(LA272_0 >= 100 && LA272_0 <= 101)||LA272_0==105||LA272_0==117||LA272_0==120||LA272_0==122||LA272_0==126||LA272_0==132||LA272_0==135||LA272_0==141||(LA272_0 >= 143 && LA272_0 <= 144)||(LA272_0 >= 147 && LA272_0 <= 148)||LA272_0==152||LA272_0==154||LA272_0==157||LA272_0==160||LA272_0==162||LA272_0==167||(LA272_0 >= 171 && LA272_0 <= 172)||LA272_0==183||LA272_0==190||LA272_0==194||LA272_0==196) ) {
				alt272=1;
			}
			switch (alt272) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1009:28: identifier
					{
					pushFollow(FOLLOW_identifier_in_specific_catch_clause13532);
					identifier1008=identifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, identifier1008.getTree());

					}
					break;

			}

			char_literal1009=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_specific_catch_clause13537); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1009_tree = (CommonTree)adaptor.create(char_literal1009);
			adaptor.addChild(root_0, char_literal1009_tree);
			}

			pushFollow(FOLLOW_block_in_specific_catch_clause13541);
			block1010=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1010.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 290, specific_catch_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "specific_catch_clause"


	public static class general_catch_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "general_catch_clause"
	// /Users/jeremie/ANTLR/cs.g:1010:1: general_catch_clause : block ;
	public final csParser.general_catch_clause_return general_catch_clause() throws RecognitionException {
		csParser.general_catch_clause_return retval = new csParser.general_catch_clause_return();
		retval.start = input.LT(1);
		int general_catch_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope block1011 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1010:21: ( block )
			// /Users/jeremie/ANTLR/cs.g:1011:9: block
			{
			root_0 = (CommonTree)adaptor.nil();


			pushFollow(FOLLOW_block_in_general_catch_clause13556);
			block1011=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1011.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 291, general_catch_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "general_catch_clause"


	public static class finally_clause_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "finally_clause"
	// /Users/jeremie/ANTLR/cs.g:1012:1: finally_clause : 'finally' block ;
	public final csParser.finally_clause_return finally_clause() throws RecognitionException {
		csParser.finally_clause_return retval = new csParser.finally_clause_return();
		retval.start = input.LT(1);
		int finally_clause_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1012=null;
		ParserRuleReturnScope block1013 =null;

		CommonTree string_literal1012_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1012:15: ( 'finally' block )
			// /Users/jeremie/ANTLR/cs.g:1013:9: 'finally' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1012=(Token)match(input,127,FOLLOW_127_in_finally_clause13571); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1012_tree = (CommonTree)adaptor.create(string_literal1012);
			adaptor.addChild(root_0, string_literal1012_tree);
			}

			pushFollow(FOLLOW_block_in_finally_clause13575);
			block1013=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1013.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 292, finally_clause_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "finally_clause"


	public static class checked_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "checked_statement"
	// /Users/jeremie/ANTLR/cs.g:1014:1: checked_statement : 'checked' block ;
	public final csParser.checked_statement_return checked_statement() throws RecognitionException {
		csParser.checked_statement_return retval = new csParser.checked_statement_return();
		retval.start = input.LT(1);
		int checked_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1014=null;
		ParserRuleReturnScope block1015 =null;

		CommonTree string_literal1014_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1014:18: ( 'checked' block )
			// /Users/jeremie/ANTLR/cs.g:1015:9: 'checked' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1014=(Token)match(input,110,FOLLOW_110_in_checked_statement13590); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1014_tree = (CommonTree)adaptor.create(string_literal1014);
			adaptor.addChild(root_0, string_literal1014_tree);
			}

			pushFollow(FOLLOW_block_in_checked_statement13594);
			block1015=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1015.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 293, checked_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "checked_statement"


	public static class unchecked_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unchecked_statement"
	// /Users/jeremie/ANTLR/cs.g:1016:1: unchecked_statement : 'unchecked' block ;
	public final csParser.unchecked_statement_return unchecked_statement() throws RecognitionException {
		csParser.unchecked_statement_return retval = new csParser.unchecked_statement_return();
		retval.start = input.LT(1);
		int unchecked_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1016=null;
		ParserRuleReturnScope block1017 =null;

		CommonTree string_literal1016_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1016:20: ( 'unchecked' block )
			// /Users/jeremie/ANTLR/cs.g:1017:9: 'unchecked' block
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1016=(Token)match(input,187,FOLLOW_187_in_unchecked_statement13609); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1016_tree = (CommonTree)adaptor.create(string_literal1016);
			adaptor.addChild(root_0, string_literal1016_tree);
			}

			pushFollow(FOLLOW_block_in_unchecked_statement13613);
			block1017=block();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, block1017.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 294, unchecked_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unchecked_statement"


	public static class lock_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "lock_statement"
	// /Users/jeremie/ANTLR/cs.g:1018:1: lock_statement : 'lock' '(' expression ')' embedded_statement ;
	public final csParser.lock_statement_return lock_statement() throws RecognitionException {
		csParser.lock_statement_return retval = new csParser.lock_statement_return();
		retval.start = input.LT(1);
		int lock_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1018=null;
		Token char_literal1019=null;
		Token char_literal1021=null;
		ParserRuleReturnScope expression1020 =null;
		ParserRuleReturnScope embedded_statement1022 =null;

		CommonTree string_literal1018_tree=null;
		CommonTree char_literal1019_tree=null;
		CommonTree char_literal1021_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1018:15: ( 'lock' '(' expression ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:1019:9: 'lock' '(' expression ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1018=(Token)match(input,145,FOLLOW_145_in_lock_statement13628); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1018_tree = (CommonTree)adaptor.create(string_literal1018);
			adaptor.addChild(root_0, string_literal1018_tree);
			}

			char_literal1019=(Token)match(input,68,FOLLOW_68_in_lock_statement13632); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1019_tree = (CommonTree)adaptor.create(char_literal1019);
			adaptor.addChild(root_0, char_literal1019_tree);
			}

			pushFollow(FOLLOW_expression_in_lock_statement13635);
			expression1020=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1020.getTree());

			char_literal1021=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_lock_statement13639); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1021_tree = (CommonTree)adaptor.create(char_literal1021);
			adaptor.addChild(root_0, char_literal1021_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_lock_statement13643);
			embedded_statement1022=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1022.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 295, lock_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "lock_statement"


	public static class using_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "using_statement"
	// /Users/jeremie/ANTLR/cs.g:1020:1: using_statement : 'using' '(' resource_acquisition ')' embedded_statement ;
	public final csParser.using_statement_return using_statement() throws RecognitionException {
		csParser.using_statement_return retval = new csParser.using_statement_return();
		retval.start = input.LT(1);
		int using_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1023=null;
		Token char_literal1024=null;
		Token char_literal1026=null;
		ParserRuleReturnScope resource_acquisition1025 =null;
		ParserRuleReturnScope embedded_statement1027 =null;

		CommonTree string_literal1023_tree=null;
		CommonTree char_literal1024_tree=null;
		CommonTree char_literal1026_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1020:16: ( 'using' '(' resource_acquisition ')' embedded_statement )
			// /Users/jeremie/ANTLR/cs.g:1021:9: 'using' '(' resource_acquisition ')' embedded_statement
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1023=(Token)match(input,USING,FOLLOW_USING_in_using_statement13658); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1023_tree = (CommonTree)adaptor.create(string_literal1023);
			adaptor.addChild(root_0, string_literal1023_tree);
			}

			char_literal1024=(Token)match(input,68,FOLLOW_68_in_using_statement13662); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1024_tree = (CommonTree)adaptor.create(char_literal1024);
			adaptor.addChild(root_0, char_literal1024_tree);
			}

			pushFollow(FOLLOW_resource_acquisition_in_using_statement13667);
			resource_acquisition1025=resource_acquisition();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, resource_acquisition1025.getTree());

			char_literal1026=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_using_statement13671); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			char_literal1026_tree = (CommonTree)adaptor.create(char_literal1026);
			adaptor.addChild(root_0, char_literal1026_tree);
			}

			pushFollow(FOLLOW_embedded_statement_in_using_statement13676);
			embedded_statement1027=embedded_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, embedded_statement1027.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 296, using_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "using_statement"


	public static class resource_acquisition_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "resource_acquisition"
	// /Users/jeremie/ANTLR/cs.g:1022:1: resource_acquisition : ( ( local_variable_declaration )=> local_variable_declaration | expression );
	public final csParser.resource_acquisition_return resource_acquisition() throws RecognitionException {
		csParser.resource_acquisition_return retval = new csParser.resource_acquisition_return();
		retval.start = input.LT(1);
		int resource_acquisition_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope local_variable_declaration1028 =null;
		ParserRuleReturnScope expression1029 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1022:21: ( ( local_variable_declaration )=> local_variable_declaration | expression )
			int alt273=2;
			int LA273_0 = input.LA(1);
			if ( (LA273_0==190) ) {
				int LA273_1 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt273=1;
				}
				else if ( (true) ) {
					alt273=2;
				}

			}
			else if ( (LA273_0==120) ) {
				int LA273_2 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt273=1;
				}
				else if ( (true) ) {
					alt273=2;
				}

			}
			else if ( (LA273_0==103||LA273_0==106||LA273_0==109||LA273_0==114||LA273_0==119||LA273_0==129||LA273_0==138||LA273_0==146||LA273_0==151||LA273_0==169||LA273_0==173||LA273_0==177||(LA273_0 >= 185 && LA273_0 <= 186)||LA273_0==189) ) {
				int LA273_3 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt273=1;
				}
				else if ( (true) ) {
					alt273=2;
				}

			}
			else if ( (LA273_0==132) ) {
				int LA273_4 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt273=1;
				}
				else if ( (true) ) {
					alt273=2;
				}

			}
			else if ( (LA273_0==192) && (synpred39_cs())) {
				alt273=1;
			}
			else if ( (LA273_0==Character_literal||LA273_0==FALSE||LA273_0==Hex_number||(LA273_0 >= MINUS && LA273_0 <= NUMBER)||LA273_0==Real_literal||LA273_0==STRINGLITERAL||LA273_0==TRUE||LA273_0==Verbatim_string_literal||LA273_0==61||LA273_0==66||(LA273_0 >= 68 && LA273_0 <= 69)||(LA273_0 >= 71 && LA273_0 <= 72)||LA273_0==75||LA273_0==102||LA273_0==110||(LA273_0 >= 115 && LA273_0 <= 116)||LA273_0==150||LA273_0==174||LA273_0==180||LA273_0==184||LA273_0==187||LA273_0==202) ) {
				alt273=2;
			}
			else if ( (LA273_0==IDENTIFIER||LA273_0==95||(LA273_0 >= 97 && LA273_0 <= 98)||(LA273_0 >= 100 && LA273_0 <= 101)||LA273_0==105||LA273_0==117||LA273_0==122||LA273_0==126||LA273_0==135||LA273_0==141||(LA273_0 >= 143 && LA273_0 <= 144)||(LA273_0 >= 147 && LA273_0 <= 148)||LA273_0==152||LA273_0==154||LA273_0==157||LA273_0==160||LA273_0==162||LA273_0==167||(LA273_0 >= 171 && LA273_0 <= 172)||LA273_0==183||LA273_0==194||LA273_0==196) ) {
				int LA273_25 = input.LA(2);
				if ( (synpred39_cs()) ) {
					alt273=1;
				}
				else if ( (true) ) {
					alt273=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 273, 0, input);
				throw nvae;
			}

			switch (alt273) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1023:9: ( local_variable_declaration )=> local_variable_declaration
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_local_variable_declaration_in_resource_acquisition13697);
					local_variable_declaration1028=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration1028.getTree());

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:1024:11: expression
					{
					root_0 = (CommonTree)adaptor.nil();


					pushFollow(FOLLOW_expression_in_resource_acquisition13709);
					expression1029=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1029.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 297, resource_acquisition_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "resource_acquisition"


	public static class yield_statement_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "yield_statement"
	// /Users/jeremie/ANTLR/cs.g:1025:1: yield_statement : 'yield' ( 'return' expression ';' | 'break' ';' ) ;
	public final csParser.yield_statement_return yield_statement() throws RecognitionException {
		csParser.yield_statement_return retval = new csParser.yield_statement_return();
		retval.start = input.LT(1);
		int yield_statement_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1030=null;
		Token string_literal1031=null;
		Token char_literal1033=null;
		Token string_literal1034=null;
		Token char_literal1035=null;
		ParserRuleReturnScope expression1032 =null;

		CommonTree string_literal1030_tree=null;
		CommonTree string_literal1031_tree=null;
		CommonTree char_literal1033_tree=null;
		CommonTree string_literal1034_tree=null;
		CommonTree char_literal1035_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1025:16: ( 'yield' ( 'return' expression ';' | 'break' ';' ) )
			// /Users/jeremie/ANTLR/cs.g:1026:9: 'yield' ( 'return' expression ';' | 'break' ';' )
			{
			root_0 = (CommonTree)adaptor.nil();


			string_literal1030=(Token)match(input,196,FOLLOW_196_in_yield_statement13724); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			string_literal1030_tree = (CommonTree)adaptor.create(string_literal1030);
			adaptor.addChild(root_0, string_literal1030_tree);
			}

			// /Users/jeremie/ANTLR/cs.g:1026:19: ( 'return' expression ';' | 'break' ';' )
			int alt274=2;
			int LA274_0 = input.LA(1);
			if ( (LA274_0==168) ) {
				alt274=1;
			}
			else if ( (LA274_0==104) ) {
				alt274=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 274, 0, input);
				throw nvae;
			}

			switch (alt274) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1026:20: 'return' expression ';'
					{
					string_literal1031=(Token)match(input,168,FOLLOW_168_in_yield_statement13729); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1031_tree = (CommonTree)adaptor.create(string_literal1031);
					adaptor.addChild(root_0, string_literal1031_tree);
					}

					pushFollow(FOLLOW_expression_in_yield_statement13733);
					expression1032=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1032.getTree());

					char_literal1033=(Token)match(input,SEMI,FOLLOW_SEMI_in_yield_statement13737); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1033_tree = (CommonTree)adaptor.create(char_literal1033);
					adaptor.addChild(root_0, char_literal1033_tree);
					}

					}
					break;
				case 2 :
					// /Users/jeremie/ANTLR/cs.g:1027:21: 'break' ';'
					{
					string_literal1034=(Token)match(input,104,FOLLOW_104_in_yield_statement13759); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					string_literal1034_tree = (CommonTree)adaptor.create(string_literal1034);
					adaptor.addChild(root_0, string_literal1034_tree);
					}

					char_literal1035=(Token)match(input,SEMI,FOLLOW_SEMI_in_yield_statement13763); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1035_tree = (CommonTree)adaptor.create(char_literal1035);
					adaptor.addChild(root_0, char_literal1035_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 298, yield_statement_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "yield_statement"


	public static class predefined_type_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "predefined_type"
	// /Users/jeremie/ANTLR/cs.g:1033:1: predefined_type : ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' );
	public final csParser.predefined_type_return predefined_type() throws RecognitionException {
		csParser.predefined_type_return retval = new csParser.predefined_type_return();
		retval.start = input.LT(1);
		int predefined_type_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1036=null;

		CommonTree set1036_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1033:16: ( 'bool' | 'byte' | 'char' | 'decimal' | 'double' | 'float' | 'int' | 'long' | 'object' | 'sbyte' | 'short' | 'string' | 'uint' | 'ulong' | 'ushort' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1036=input.LT(1);
			if ( input.LA(1)==103||input.LA(1)==106||input.LA(1)==109||input.LA(1)==114||input.LA(1)==119||input.LA(1)==129||input.LA(1)==138||input.LA(1)==146||input.LA(1)==151||input.LA(1)==169||input.LA(1)==173||input.LA(1)==177||(input.LA(1) >= 185 && input.LA(1) <= 186)||input.LA(1)==189 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1036));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 299, predefined_type_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "predefined_type"


	public static class identifier_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "identifier"
	// /Users/jeremie/ANTLR/cs.g:1037:1: identifier : ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	public final csParser.identifier_return identifier() throws RecognitionException {
		csParser.identifier_return retval = new csParser.identifier_return();
		retval.start = input.LT(1);
		int identifier_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1037=null;

		CommonTree set1037_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1037:11: ( IDENTIFIER | 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1037=input.LT(1);
			if ( input.LA(1)==IDENTIFIER||input.LA(1)==95||(input.LA(1) >= 97 && input.LA(1) <= 98)||(input.LA(1) >= 100 && input.LA(1) <= 101)||input.LA(1)==105||input.LA(1)==117||input.LA(1)==120||input.LA(1)==122||input.LA(1)==126||input.LA(1)==132||input.LA(1)==135||input.LA(1)==141||(input.LA(1) >= 143 && input.LA(1) <= 144)||(input.LA(1) >= 147 && input.LA(1) <= 148)||input.LA(1)==152||input.LA(1)==154||input.LA(1)==157||input.LA(1)==160||input.LA(1)==162||input.LA(1)==167||(input.LA(1) >= 171 && input.LA(1) <= 172)||input.LA(1)==183||input.LA(1)==190||input.LA(1)==194||input.LA(1)==196 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1037));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 300, identifier_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "identifier"


	public static class keyword_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "keyword"
	// /Users/jeremie/ANTLR/cs.g:1041:1: keyword : ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' );
	public final csParser.keyword_return keyword() throws RecognitionException {
		csParser.keyword_return retval = new csParser.keyword_return();
		retval.start = input.LT(1);
		int keyword_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1038=null;

		CommonTree set1038_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1041:8: ( 'abstract' | 'as' | 'base' | 'bool' | 'break' | 'byte' | 'case' | 'catch' | 'char' | 'checked' | 'class' | 'const' | 'continue' | 'decimal' | 'default' | 'delegate' | 'do' | 'double' | 'else' | 'enum' | 'event' | 'explicit' | 'extern' | 'false' | 'finally' | 'fixed' | 'float' | 'for' | 'foreach' | 'goto' | 'if' | 'implicit' | 'in' | 'int' | 'interface' | 'internal' | 'is' | 'lock' | 'long' | 'namespace' | 'new' | 'null' | 'object' | 'operator' | 'out' | 'override' | 'params' | 'private' | 'protected' | 'public' | 'readonly' | 'ref' | 'return' | 'sbyte' | 'sealed' | 'short' | 'sizeof' | 'stackalloc' | 'static' | 'string' | 'struct' | 'switch' | 'this' | 'throw' | 'true' | 'try' | 'typeof' | 'uint' | 'ulong' | 'unchecked' | 'unsafe' | 'ushort' | 'using' | 'virtual' | 'void' | 'volatile' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1038=input.LT(1);
			if ( input.LA(1)==ENUM||input.LA(1)==FALSE||input.LA(1)==IF||input.LA(1)==NULL||input.LA(1)==TRUE||input.LA(1)==USING||input.LA(1)==96||input.LA(1)==99||(input.LA(1) >= 102 && input.LA(1) <= 104)||(input.LA(1) >= 106 && input.LA(1) <= 116)||(input.LA(1) >= 118 && input.LA(1) <= 119)||input.LA(1)==121||(input.LA(1) >= 123 && input.LA(1) <= 125)||(input.LA(1) >= 127 && input.LA(1) <= 131)||input.LA(1)==134||(input.LA(1) >= 136 && input.LA(1) <= 140)||input.LA(1)==142||(input.LA(1) >= 145 && input.LA(1) <= 146)||(input.LA(1) >= 149 && input.LA(1) <= 151)||input.LA(1)==153||(input.LA(1) >= 155 && input.LA(1) <= 156)||input.LA(1)==158||input.LA(1)==161||(input.LA(1) >= 163 && input.LA(1) <= 166)||(input.LA(1) >= 168 && input.LA(1) <= 170)||(input.LA(1) >= 173 && input.LA(1) <= 182)||(input.LA(1) >= 184 && input.LA(1) <= 189)||(input.LA(1) >= 191 && input.LA(1) <= 193) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1038));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 301, keyword_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "keyword"


	public static class also_keyword_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "also_keyword"
	// /Users/jeremie/ANTLR/cs.g:1044:1: also_keyword : ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' );
	public final csParser.also_keyword_return also_keyword() throws RecognitionException {
		csParser.also_keyword_return retval = new csParser.also_keyword_return();
		retval.start = input.LT(1);
		int also_keyword_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1039=null;

		CommonTree set1039_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1044:13: ( 'add' | 'alias' | 'assembly' | 'module' | 'field' | 'event' | 'method' | 'param' | 'property' | 'type' | 'yield' | 'from' | 'into' | 'join' | 'on' | 'where' | 'orderby' | 'group' | 'by' | 'ascending' | 'descending' | 'equals' | 'select' | 'pragma' | 'let' | 'remove' | 'set' | 'var' | '__arglist' | 'dynamic' )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1039=input.LT(1);
			if ( input.LA(1)==95||(input.LA(1) >= 97 && input.LA(1) <= 98)||(input.LA(1) >= 100 && input.LA(1) <= 101)||input.LA(1)==105||input.LA(1)==117||input.LA(1)==120||(input.LA(1) >= 122 && input.LA(1) <= 123)||input.LA(1)==126||input.LA(1)==132||input.LA(1)==135||input.LA(1)==141||(input.LA(1) >= 143 && input.LA(1) <= 144)||(input.LA(1) >= 147 && input.LA(1) <= 148)||input.LA(1)==152||input.LA(1)==154||input.LA(1)==157||input.LA(1)==160||input.LA(1)==162||input.LA(1)==167||(input.LA(1) >= 171 && input.LA(1) <= 172)||input.LA(1)==183||input.LA(1)==190||input.LA(1)==194||input.LA(1)==196 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1039));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 302, also_keyword_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "also_keyword"


	public static class literal_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "literal"
	// /Users/jeremie/ANTLR/cs.g:1049:1: literal : ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL );
	public final csParser.literal_return literal() throws RecognitionException {
		csParser.literal_return retval = new csParser.literal_return();
		retval.start = input.LT(1);
		int literal_StartIndex = input.index();

		CommonTree root_0 = null;

		Token set1040=null;

		CommonTree set1040_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1049:8: ( Real_literal | NUMBER | Hex_number | Character_literal | STRINGLITERAL | Verbatim_string_literal | TRUE | FALSE | NULL )
			// /Users/jeremie/ANTLR/cs.g:
			{
			root_0 = (CommonTree)adaptor.nil();


			set1040=input.LT(1);
			if ( input.LA(1)==Character_literal||input.LA(1)==FALSE||input.LA(1)==Hex_number||(input.LA(1) >= NULL && input.LA(1) <= NUMBER)||input.LA(1)==Real_literal||input.LA(1)==STRINGLITERAL||input.LA(1)==TRUE||input.LA(1)==Verbatim_string_literal ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (CommonTree)adaptor.create(set1040));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 303, literal_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "literal"


	public static class assignment_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "assignment_list"
	// /Users/jeremie/ANTLR/cs.g:1258:1: assignment_list : ( assignment ';' )+ ;
	public final csParser.assignment_list_return assignment_list() throws RecognitionException {
		csParser.assignment_list_return retval = new csParser.assignment_list_return();
		retval.start = input.LT(1);
		int assignment_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1042=null;
		ParserRuleReturnScope assignment1041 =null;

		CommonTree char_literal1042_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1258:16: ( ( assignment ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1259:9: ( assignment ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1259:9: ( assignment ';' )+
			int cnt275=0;
			loop275:
			while (true) {
				int alt275=2;
				int LA275_0 = input.LA(1);
				if ( (LA275_0==Character_literal||LA275_0==FALSE||(LA275_0 >= Hex_number && LA275_0 <= IDENTIFIER)||(LA275_0 >= MINUS && LA275_0 <= NUMBER)||LA275_0==Real_literal||LA275_0==STRINGLITERAL||LA275_0==TRUE||LA275_0==Verbatim_string_literal||LA275_0==61||LA275_0==66||(LA275_0 >= 68 && LA275_0 <= 69)||(LA275_0 >= 71 && LA275_0 <= 72)||LA275_0==75||LA275_0==95||(LA275_0 >= 97 && LA275_0 <= 98)||(LA275_0 >= 100 && LA275_0 <= 103)||(LA275_0 >= 105 && LA275_0 <= 106)||(LA275_0 >= 109 && LA275_0 <= 110)||(LA275_0 >= 114 && LA275_0 <= 117)||(LA275_0 >= 119 && LA275_0 <= 120)||LA275_0==122||LA275_0==126||LA275_0==129||LA275_0==132||LA275_0==135||LA275_0==138||LA275_0==141||(LA275_0 >= 143 && LA275_0 <= 144)||(LA275_0 >= 146 && LA275_0 <= 148)||(LA275_0 >= 150 && LA275_0 <= 152)||LA275_0==154||LA275_0==157||LA275_0==160||LA275_0==162||LA275_0==167||LA275_0==169||(LA275_0 >= 171 && LA275_0 <= 174)||LA275_0==177||LA275_0==180||(LA275_0 >= 183 && LA275_0 <= 187)||(LA275_0 >= 189 && LA275_0 <= 190)||LA275_0==194||LA275_0==196||LA275_0==202) ) {
					alt275=1;
				}

				switch (alt275) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1259:10: assignment ';'
					{
					pushFollow(FOLLOW_assignment_in_assignment_list16976);
					assignment1041=assignment();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, assignment1041.getTree());

					char_literal1042=(Token)match(input,SEMI,FOLLOW_SEMI_in_assignment_list16978); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1042_tree = (CommonTree)adaptor.create(char_literal1042);
					adaptor.addChild(root_0, char_literal1042_tree);
					}

					}
					break;

				default :
					if ( cnt275 >= 1 ) break loop275;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(275, input);
					throw eee;
				}
				cnt275++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 304, assignment_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "assignment_list"


	public static class field_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "field_declarations"
	// /Users/jeremie/ANTLR/cs.g:1260:1: field_declarations : ( ( attributes )? ( modifiers )? type field_declaration )+ ;
	public final csParser.field_declarations_return field_declarations() throws RecognitionException {
		csParser.field_declarations_return retval = new csParser.field_declarations_return();
		retval.start = input.LT(1);
		int field_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes1043 =null;
		ParserRuleReturnScope modifiers1044 =null;
		ParserRuleReturnScope type1045 =null;
		ParserRuleReturnScope field_declaration1046 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1260:19: ( ( ( attributes )? ( modifiers )? type field_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1261:9: ( ( attributes )? ( modifiers )? type field_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1261:9: ( ( attributes )? ( modifiers )? type field_declaration )+
			int cnt278=0;
			loop278:
			while (true) {
				int alt278=2;
				int LA278_0 = input.LA(1);
				if ( (LA278_0==IDENTIFIER||LA278_0==91||(LA278_0 >= 95 && LA278_0 <= 98)||(LA278_0 >= 100 && LA278_0 <= 101)||LA278_0==103||(LA278_0 >= 105 && LA278_0 <= 106)||LA278_0==109||LA278_0==114||LA278_0==117||(LA278_0 >= 119 && LA278_0 <= 120)||LA278_0==122||(LA278_0 >= 125 && LA278_0 <= 126)||LA278_0==129||LA278_0==132||LA278_0==135||LA278_0==138||(LA278_0 >= 140 && LA278_0 <= 141)||(LA278_0 >= 143 && LA278_0 <= 144)||(LA278_0 >= 146 && LA278_0 <= 148)||(LA278_0 >= 150 && LA278_0 <= 152)||LA278_0==154||(LA278_0 >= 156 && LA278_0 <= 157)||(LA278_0 >= 160 && LA278_0 <= 165)||LA278_0==167||(LA278_0 >= 169 && LA278_0 <= 173)||(LA278_0 >= 176 && LA278_0 <= 177)||LA278_0==183||(LA278_0 >= 185 && LA278_0 <= 186)||(LA278_0 >= 188 && LA278_0 <= 194)||LA278_0==196) ) {
					alt278=1;
				}

				switch (alt278) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1261:10: ( attributes )? ( modifiers )? type field_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1261:10: ( attributes )?
					int alt276=2;
					int LA276_0 = input.LA(1);
					if ( (LA276_0==91) ) {
						alt276=1;
					}
					switch (alt276) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1261:10: attributes
							{
							pushFollow(FOLLOW_attributes_in_field_declarations16996);
							attributes1043=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1043.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1261:24: ( modifiers )?
					int alt277=2;
					int LA277_0 = input.LA(1);
					if ( (LA277_0==96||LA277_0==125||LA277_0==140||LA277_0==150||LA277_0==156||LA277_0==161||(LA277_0 >= 163 && LA277_0 <= 165)||LA277_0==170||LA277_0==176||LA277_0==188||LA277_0==191||LA277_0==193) ) {
						alt277=1;
					}
					switch (alt277) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1261:24: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_field_declarations17001);
							modifiers1044=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1044.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_type_in_field_declarations17006);
					type1045=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1045.getTree());

					pushFollow(FOLLOW_field_declaration_in_field_declarations17010);
					field_declaration1046=field_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, field_declaration1046.getTree());

					}
					break;

				default :
					if ( cnt278 >= 1 ) break loop278;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(278, input);
					throw eee;
				}
				cnt278++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 305, field_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "field_declarations"


	public static class property_declaration_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "property_declaration_list"
	// /Users/jeremie/ANTLR/cs.g:1262:1: property_declaration_list : ( ( attributes )? ( modifiers )? type property_declaration )+ ;
	public final csParser.property_declaration_list_return property_declaration_list() throws RecognitionException {
		csParser.property_declaration_list_return retval = new csParser.property_declaration_list_return();
		retval.start = input.LT(1);
		int property_declaration_list_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes1047 =null;
		ParserRuleReturnScope modifiers1048 =null;
		ParserRuleReturnScope type1049 =null;
		ParserRuleReturnScope property_declaration1050 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1262:26: ( ( ( attributes )? ( modifiers )? type property_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1263:9: ( ( attributes )? ( modifiers )? type property_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1263:9: ( ( attributes )? ( modifiers )? type property_declaration )+
			int cnt281=0;
			loop281:
			while (true) {
				int alt281=2;
				int LA281_0 = input.LA(1);
				if ( (LA281_0==IDENTIFIER||LA281_0==91||(LA281_0 >= 95 && LA281_0 <= 98)||(LA281_0 >= 100 && LA281_0 <= 101)||LA281_0==103||(LA281_0 >= 105 && LA281_0 <= 106)||LA281_0==109||LA281_0==114||LA281_0==117||(LA281_0 >= 119 && LA281_0 <= 120)||LA281_0==122||(LA281_0 >= 125 && LA281_0 <= 126)||LA281_0==129||LA281_0==132||LA281_0==135||LA281_0==138||(LA281_0 >= 140 && LA281_0 <= 141)||(LA281_0 >= 143 && LA281_0 <= 144)||(LA281_0 >= 146 && LA281_0 <= 148)||(LA281_0 >= 150 && LA281_0 <= 152)||LA281_0==154||(LA281_0 >= 156 && LA281_0 <= 157)||(LA281_0 >= 160 && LA281_0 <= 165)||LA281_0==167||(LA281_0 >= 169 && LA281_0 <= 173)||(LA281_0 >= 176 && LA281_0 <= 177)||LA281_0==183||(LA281_0 >= 185 && LA281_0 <= 186)||(LA281_0 >= 188 && LA281_0 <= 194)||LA281_0==196) ) {
					alt281=1;
				}

				switch (alt281) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1263:10: ( attributes )? ( modifiers )? type property_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1263:10: ( attributes )?
					int alt279=2;
					int LA279_0 = input.LA(1);
					if ( (LA279_0==91) ) {
						alt279=1;
					}
					switch (alt279) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1263:10: attributes
							{
							pushFollow(FOLLOW_attributes_in_property_declaration_list17028);
							attributes1047=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1047.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1263:24: ( modifiers )?
					int alt280=2;
					int LA280_0 = input.LA(1);
					if ( (LA280_0==96||LA280_0==125||LA280_0==140||LA280_0==150||LA280_0==156||LA280_0==161||(LA280_0 >= 163 && LA280_0 <= 165)||LA280_0==170||LA280_0==176||LA280_0==188||LA280_0==191||LA280_0==193) ) {
						alt280=1;
					}
					switch (alt280) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1263:24: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_property_declaration_list17033);
							modifiers1048=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1048.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_type_in_property_declaration_list17038);
					type1049=type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, type1049.getTree());

					pushFollow(FOLLOW_property_declaration_in_property_declaration_list17042);
					property_declaration1050=property_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, property_declaration1050.getTree());

					}
					break;

				default :
					if ( cnt281 >= 1 ) break loop281;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(281, input);
					throw eee;
				}
				cnt281++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 306, property_declaration_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "property_declaration_list"


	public static class constant_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "constant_declarations"
	// /Users/jeremie/ANTLR/cs.g:1264:1: constant_declarations : ( constant_declaration )+ ;
	public final csParser.constant_declarations_return constant_declarations() throws RecognitionException {
		csParser.constant_declarations_return retval = new csParser.constant_declarations_return();
		retval.start = input.LT(1);
		int constant_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope constant_declaration1051 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1264:22: ( ( constant_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1265:9: ( constant_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1265:9: ( constant_declaration )+
			int cnt282=0;
			loop282:
			while (true) {
				int alt282=2;
				int LA282_0 = input.LA(1);
				if ( (LA282_0==112) ) {
					alt282=1;
				}

				switch (alt282) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1265:9: constant_declaration
					{
					pushFollow(FOLLOW_constant_declaration_in_constant_declarations17059);
					constant_declaration1051=constant_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, constant_declaration1051.getTree());

					}
					break;

				default :
					if ( cnt282 >= 1 ) break loop282;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(282, input);
					throw eee;
				}
				cnt282++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 307, constant_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "constant_declarations"


	public static class literals_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "literals"
	// /Users/jeremie/ANTLR/cs.g:1266:1: literals : ( literal )+ ;
	public final csParser.literals_return literals() throws RecognitionException {
		csParser.literals_return retval = new csParser.literals_return();
		retval.start = input.LT(1);
		int literals_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope literal1052 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1266:9: ( ( literal )+ )
			// /Users/jeremie/ANTLR/cs.g:1267:9: ( literal )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1267:9: ( literal )+
			int cnt283=0;
			loop283:
			while (true) {
				int alt283=2;
				int LA283_0 = input.LA(1);
				if ( (LA283_0==Character_literal||LA283_0==FALSE||LA283_0==Hex_number||(LA283_0 >= NULL && LA283_0 <= NUMBER)||LA283_0==Real_literal||LA283_0==STRINGLITERAL||LA283_0==TRUE||LA283_0==Verbatim_string_literal) ) {
					alt283=1;
				}

				switch (alt283) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1267:9: literal
					{
					pushFollow(FOLLOW_literal_in_literals17074);
					literal1052=literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal1052.getTree());

					}
					break;

				default :
					if ( cnt283 >= 1 ) break loop283;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(283, input);
					throw eee;
				}
				cnt283++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 308, literals_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "literals"


	public static class delegate_declaration_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "delegate_declaration_list"
	// /Users/jeremie/ANTLR/cs.g:1268:1: delegate_declaration_list : ( ( attributes )? ( modifiers )? delegate_declaration )+ ;
	public final csParser.delegate_declaration_list_return delegate_declaration_list() throws RecognitionException {
		csParser.delegate_declaration_list_return retval = new csParser.delegate_declaration_list_return();
		retval.start = input.LT(1);
		int delegate_declaration_list_StartIndex = input.index();

		CommonTree root_0 = null;

		ParserRuleReturnScope attributes1053 =null;
		ParserRuleReturnScope modifiers1054 =null;
		ParserRuleReturnScope delegate_declaration1055 =null;


		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1268:26: ( ( ( attributes )? ( modifiers )? delegate_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1269:9: ( ( attributes )? ( modifiers )? delegate_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1269:9: ( ( attributes )? ( modifiers )? delegate_declaration )+
			int cnt286=0;
			loop286:
			while (true) {
				int alt286=2;
				int LA286_0 = input.LA(1);
				if ( (LA286_0==91||LA286_0==96||LA286_0==116||LA286_0==125||LA286_0==140||LA286_0==150||LA286_0==156||LA286_0==161||(LA286_0 >= 163 && LA286_0 <= 165)||LA286_0==170||LA286_0==176||LA286_0==188||LA286_0==191||LA286_0==193) ) {
					alt286=1;
				}

				switch (alt286) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1269:10: ( attributes )? ( modifiers )? delegate_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1269:10: ( attributes )?
					int alt284=2;
					int LA284_0 = input.LA(1);
					if ( (LA284_0==91) ) {
						alt284=1;
					}
					switch (alt284) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1269:10: attributes
							{
							pushFollow(FOLLOW_attributes_in_delegate_declaration_list17091);
							attributes1053=attributes();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, attributes1053.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1269:24: ( modifiers )?
					int alt285=2;
					int LA285_0 = input.LA(1);
					if ( (LA285_0==96||LA285_0==125||LA285_0==140||LA285_0==150||LA285_0==156||LA285_0==161||(LA285_0 >= 163 && LA285_0 <= 165)||LA285_0==170||LA285_0==176||LA285_0==188||LA285_0==191||LA285_0==193) ) {
						alt285=1;
					}
					switch (alt285) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1269:24: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_delegate_declaration_list17096);
							modifiers1054=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1054.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_delegate_declaration_in_delegate_declaration_list17101);
					delegate_declaration1055=delegate_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delegate_declaration1055.getTree());

					}
					break;

				default :
					if ( cnt286 >= 1 ) break loop286;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(286, input);
					throw eee;
				}
				cnt286++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 309, delegate_declaration_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "delegate_declaration_list"


	public static class local_variable_declaration_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_declaration_list"
	// /Users/jeremie/ANTLR/cs.g:1270:1: local_variable_declaration_list : ( local_variable_declaration ';' )+ ;
	public final csParser.local_variable_declaration_list_return local_variable_declaration_list() throws RecognitionException {
		csParser.local_variable_declaration_list_return retval = new csParser.local_variable_declaration_list_return();
		retval.start = input.LT(1);
		int local_variable_declaration_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1057=null;
		ParserRuleReturnScope local_variable_declaration1056 =null;

		CommonTree char_literal1057_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 310) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1270:32: ( ( local_variable_declaration ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1271:9: ( local_variable_declaration ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1271:9: ( local_variable_declaration ';' )+
			int cnt287=0;
			loop287:
			while (true) {
				int alt287=2;
				int LA287_0 = input.LA(1);
				if ( (LA287_0==IDENTIFIER||LA287_0==95||(LA287_0 >= 97 && LA287_0 <= 98)||(LA287_0 >= 100 && LA287_0 <= 101)||LA287_0==103||(LA287_0 >= 105 && LA287_0 <= 106)||LA287_0==109||LA287_0==114||LA287_0==117||(LA287_0 >= 119 && LA287_0 <= 120)||LA287_0==122||LA287_0==126||LA287_0==129||LA287_0==132||LA287_0==135||LA287_0==138||LA287_0==141||(LA287_0 >= 143 && LA287_0 <= 144)||(LA287_0 >= 146 && LA287_0 <= 148)||(LA287_0 >= 151 && LA287_0 <= 152)||LA287_0==154||LA287_0==157||LA287_0==160||LA287_0==162||LA287_0==167||LA287_0==169||(LA287_0 >= 171 && LA287_0 <= 173)||LA287_0==177||LA287_0==183||(LA287_0 >= 185 && LA287_0 <= 186)||(LA287_0 >= 189 && LA287_0 <= 190)||LA287_0==192||LA287_0==194||LA287_0==196) ) {
					alt287=1;
				}

				switch (alt287) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1271:10: local_variable_declaration ';'
					{
					pushFollow(FOLLOW_local_variable_declaration_in_local_variable_declaration_list17119);
					local_variable_declaration1056=local_variable_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_declaration1056.getTree());

					char_literal1057=(Token)match(input,SEMI,FOLLOW_SEMI_in_local_variable_declaration_list17121); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1057_tree = (CommonTree)adaptor.create(char_literal1057);
					adaptor.addChild(root_0, char_literal1057_tree);
					}

					}
					break;

				default :
					if ( cnt287 >= 1 ) break loop287;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(287, input);
					throw eee;
				}
				cnt287++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 310, local_variable_declaration_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_declaration_list"


	public static class local_variable_initializer_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "local_variable_initializer_list"
	// /Users/jeremie/ANTLR/cs.g:1272:1: local_variable_initializer_list : ( local_variable_initializer ';' )+ ;
	public final csParser.local_variable_initializer_list_return local_variable_initializer_list() throws RecognitionException {
		csParser.local_variable_initializer_list_return retval = new csParser.local_variable_initializer_list_return();
		retval.start = input.LT(1);
		int local_variable_initializer_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1059=null;
		ParserRuleReturnScope local_variable_initializer1058 =null;

		CommonTree char_literal1059_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 311) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1272:32: ( ( local_variable_initializer ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1273:9: ( local_variable_initializer ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1273:9: ( local_variable_initializer ';' )+
			int cnt288=0;
			loop288:
			while (true) {
				int alt288=2;
				int LA288_0 = input.LA(1);
				if ( (LA288_0==Character_literal||LA288_0==FALSE||(LA288_0 >= Hex_number && LA288_0 <= IDENTIFIER)||(LA288_0 >= MINUS && LA288_0 <= NUMBER)||LA288_0==Real_literal||LA288_0==STRINGLITERAL||LA288_0==TRUE||LA288_0==Verbatim_string_literal||LA288_0==61||LA288_0==66||(LA288_0 >= 68 && LA288_0 <= 69)||(LA288_0 >= 71 && LA288_0 <= 72)||LA288_0==75||LA288_0==95||(LA288_0 >= 97 && LA288_0 <= 98)||(LA288_0 >= 100 && LA288_0 <= 103)||(LA288_0 >= 105 && LA288_0 <= 106)||(LA288_0 >= 109 && LA288_0 <= 110)||(LA288_0 >= 114 && LA288_0 <= 117)||(LA288_0 >= 119 && LA288_0 <= 120)||LA288_0==122||LA288_0==126||LA288_0==129||LA288_0==132||LA288_0==135||LA288_0==138||LA288_0==141||(LA288_0 >= 143 && LA288_0 <= 144)||(LA288_0 >= 146 && LA288_0 <= 148)||(LA288_0 >= 150 && LA288_0 <= 152)||LA288_0==154||LA288_0==157||LA288_0==160||LA288_0==162||LA288_0==167||LA288_0==169||(LA288_0 >= 171 && LA288_0 <= 175)||LA288_0==177||LA288_0==180||(LA288_0 >= 183 && LA288_0 <= 187)||(LA288_0 >= 189 && LA288_0 <= 190)||LA288_0==194||(LA288_0 >= 196 && LA288_0 <= 197)||LA288_0==202) ) {
					alt288=1;
				}

				switch (alt288) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1273:10: local_variable_initializer ';'
					{
					pushFollow(FOLLOW_local_variable_initializer_in_local_variable_initializer_list17139);
					local_variable_initializer1058=local_variable_initializer();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, local_variable_initializer1058.getTree());

					char_literal1059=(Token)match(input,SEMI,FOLLOW_SEMI_in_local_variable_initializer_list17141); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1059_tree = (CommonTree)adaptor.create(char_literal1059);
					adaptor.addChild(root_0, char_literal1059_tree);
					}

					}
					break;

				default :
					if ( cnt288 >= 1 ) break loop288;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(288, input);
					throw eee;
				}
				cnt288++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 311, local_variable_initializer_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "local_variable_initializer_list"


	public static class expression_list_test_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "expression_list_test"
	// /Users/jeremie/ANTLR/cs.g:1274:1: expression_list_test : ( expression ';' )+ ;
	public final csParser.expression_list_test_return expression_list_test() throws RecognitionException {
		csParser.expression_list_test_return retval = new csParser.expression_list_test_return();
		retval.start = input.LT(1);
		int expression_list_test_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1061=null;
		ParserRuleReturnScope expression1060 =null;

		CommonTree char_literal1061_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 312) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1274:21: ( ( expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1275:9: ( expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1275:9: ( expression ';' )+
			int cnt289=0;
			loop289:
			while (true) {
				int alt289=2;
				int LA289_0 = input.LA(1);
				if ( (LA289_0==Character_literal||LA289_0==FALSE||(LA289_0 >= Hex_number && LA289_0 <= IDENTIFIER)||(LA289_0 >= MINUS && LA289_0 <= NUMBER)||LA289_0==Real_literal||LA289_0==STRINGLITERAL||LA289_0==TRUE||LA289_0==Verbatim_string_literal||LA289_0==61||LA289_0==66||(LA289_0 >= 68 && LA289_0 <= 69)||(LA289_0 >= 71 && LA289_0 <= 72)||LA289_0==75||LA289_0==95||(LA289_0 >= 97 && LA289_0 <= 98)||(LA289_0 >= 100 && LA289_0 <= 103)||(LA289_0 >= 105 && LA289_0 <= 106)||(LA289_0 >= 109 && LA289_0 <= 110)||(LA289_0 >= 114 && LA289_0 <= 117)||(LA289_0 >= 119 && LA289_0 <= 120)||LA289_0==122||LA289_0==126||LA289_0==129||LA289_0==132||LA289_0==135||LA289_0==138||LA289_0==141||(LA289_0 >= 143 && LA289_0 <= 144)||(LA289_0 >= 146 && LA289_0 <= 148)||(LA289_0 >= 150 && LA289_0 <= 152)||LA289_0==154||LA289_0==157||LA289_0==160||LA289_0==162||LA289_0==167||LA289_0==169||(LA289_0 >= 171 && LA289_0 <= 174)||LA289_0==177||LA289_0==180||(LA289_0 >= 183 && LA289_0 <= 187)||(LA289_0 >= 189 && LA289_0 <= 190)||LA289_0==194||LA289_0==196||LA289_0==202) ) {
					alt289=1;
				}

				switch (alt289) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1275:10: expression ';'
					{
					pushFollow(FOLLOW_expression_in_expression_list_test17159);
					expression1060=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1060.getTree());

					char_literal1061=(Token)match(input,SEMI,FOLLOW_SEMI_in_expression_list_test17161); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1061_tree = (CommonTree)adaptor.create(char_literal1061);
					adaptor.addChild(root_0, char_literal1061_tree);
					}

					}
					break;

				default :
					if ( cnt289 >= 1 ) break loop289;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(289, input);
					throw eee;
				}
				cnt289++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 312, expression_list_test_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "expression_list_test"


	public static class unary_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "unary_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1276:1: unary_expression_list : ( unary_expression ';' )+ ;
	public final csParser.unary_expression_list_return unary_expression_list() throws RecognitionException {
		csParser.unary_expression_list_return retval = new csParser.unary_expression_list_return();
		retval.start = input.LT(1);
		int unary_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1063=null;
		ParserRuleReturnScope unary_expression1062 =null;

		CommonTree char_literal1063_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 313) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1276:22: ( ( unary_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1277:9: ( unary_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1277:9: ( unary_expression ';' )+
			int cnt290=0;
			loop290:
			while (true) {
				int alt290=2;
				int LA290_0 = input.LA(1);
				if ( (LA290_0==Character_literal||LA290_0==FALSE||(LA290_0 >= Hex_number && LA290_0 <= IDENTIFIER)||(LA290_0 >= MINUS && LA290_0 <= NUMBER)||LA290_0==Real_literal||LA290_0==STRINGLITERAL||LA290_0==TRUE||LA290_0==Verbatim_string_literal||LA290_0==61||LA290_0==66||(LA290_0 >= 68 && LA290_0 <= 69)||(LA290_0 >= 71 && LA290_0 <= 72)||LA290_0==75||LA290_0==95||(LA290_0 >= 97 && LA290_0 <= 98)||(LA290_0 >= 100 && LA290_0 <= 103)||(LA290_0 >= 105 && LA290_0 <= 106)||(LA290_0 >= 109 && LA290_0 <= 110)||(LA290_0 >= 114 && LA290_0 <= 117)||(LA290_0 >= 119 && LA290_0 <= 120)||LA290_0==122||LA290_0==126||LA290_0==129||LA290_0==132||LA290_0==135||LA290_0==138||LA290_0==141||(LA290_0 >= 143 && LA290_0 <= 144)||(LA290_0 >= 146 && LA290_0 <= 148)||(LA290_0 >= 150 && LA290_0 <= 152)||LA290_0==154||LA290_0==157||LA290_0==160||LA290_0==162||LA290_0==167||LA290_0==169||(LA290_0 >= 171 && LA290_0 <= 174)||LA290_0==177||LA290_0==180||(LA290_0 >= 183 && LA290_0 <= 187)||(LA290_0 >= 189 && LA290_0 <= 190)||LA290_0==194||LA290_0==196||LA290_0==202) ) {
					alt290=1;
				}

				switch (alt290) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1277:10: unary_expression ';'
					{
					pushFollow(FOLLOW_unary_expression_in_unary_expression_list17179);
					unary_expression1062=unary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, unary_expression1062.getTree());

					char_literal1063=(Token)match(input,SEMI,FOLLOW_SEMI_in_unary_expression_list17181); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1063_tree = (CommonTree)adaptor.create(char_literal1063);
					adaptor.addChild(root_0, char_literal1063_tree);
					}

					}
					break;

				default :
					if ( cnt290 >= 1 ) break loop290;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(290, input);
					throw eee;
				}
				cnt290++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 313, unary_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "unary_expression_list"


	public static class invocation_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "invocation_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1278:1: invocation_expression_list : ( invocation_expression ';' )+ ;
	public final csParser.invocation_expression_list_return invocation_expression_list() throws RecognitionException {
		csParser.invocation_expression_list_return retval = new csParser.invocation_expression_list_return();
		retval.start = input.LT(1);
		int invocation_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1065=null;
		ParserRuleReturnScope invocation_expression1064 =null;

		CommonTree char_literal1065_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 314) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1278:27: ( ( invocation_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1279:9: ( invocation_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1279:9: ( invocation_expression ';' )+
			int cnt291=0;
			loop291:
			while (true) {
				int alt291=2;
				int LA291_0 = input.LA(1);
				if ( (LA291_0==IDENTIFIER||LA291_0==95||(LA291_0 >= 97 && LA291_0 <= 98)||(LA291_0 >= 100 && LA291_0 <= 103)||(LA291_0 >= 105 && LA291_0 <= 106)||LA291_0==109||LA291_0==114||LA291_0==117||(LA291_0 >= 119 && LA291_0 <= 120)||LA291_0==122||LA291_0==126||LA291_0==129||LA291_0==132||LA291_0==135||LA291_0==138||LA291_0==141||(LA291_0 >= 143 && LA291_0 <= 144)||(LA291_0 >= 146 && LA291_0 <= 148)||(LA291_0 >= 151 && LA291_0 <= 152)||LA291_0==154||LA291_0==157||LA291_0==160||LA291_0==162||LA291_0==167||LA291_0==169||(LA291_0 >= 171 && LA291_0 <= 173)||LA291_0==177||LA291_0==180||(LA291_0 >= 183 && LA291_0 <= 186)||(LA291_0 >= 189 && LA291_0 <= 190)||LA291_0==194||LA291_0==196) ) {
					alt291=1;
				}

				switch (alt291) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1279:10: invocation_expression ';'
					{
					pushFollow(FOLLOW_invocation_expression_in_invocation_expression_list17199);
					invocation_expression1064=invocation_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, invocation_expression1064.getTree());

					char_literal1065=(Token)match(input,SEMI,FOLLOW_SEMI_in_invocation_expression_list17201); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1065_tree = (CommonTree)adaptor.create(char_literal1065);
					adaptor.addChild(root_0, char_literal1065_tree);
					}

					}
					break;

				default :
					if ( cnt291 >= 1 ) break loop291;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(291, input);
					throw eee;
				}
				cnt291++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 314, invocation_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "invocation_expression_list"


	public static class primary_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "primary_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1280:1: primary_expression_list : ( primary_expression ';' )+ ;
	public final csParser.primary_expression_list_return primary_expression_list() throws RecognitionException {
		csParser.primary_expression_list_return retval = new csParser.primary_expression_list_return();
		retval.start = input.LT(1);
		int primary_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1067=null;
		ParserRuleReturnScope primary_expression1066 =null;

		CommonTree char_literal1067_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 315) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1280:24: ( ( primary_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1281:9: ( primary_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1281:9: ( primary_expression ';' )+
			int cnt292=0;
			loop292:
			while (true) {
				int alt292=2;
				int LA292_0 = input.LA(1);
				if ( (LA292_0==Character_literal||LA292_0==FALSE||(LA292_0 >= Hex_number && LA292_0 <= IDENTIFIER)||(LA292_0 >= NULL && LA292_0 <= NUMBER)||LA292_0==Real_literal||LA292_0==STRINGLITERAL||LA292_0==TRUE||LA292_0==Verbatim_string_literal||LA292_0==68||LA292_0==95||(LA292_0 >= 97 && LA292_0 <= 98)||(LA292_0 >= 100 && LA292_0 <= 103)||(LA292_0 >= 105 && LA292_0 <= 106)||(LA292_0 >= 109 && LA292_0 <= 110)||(LA292_0 >= 114 && LA292_0 <= 117)||(LA292_0 >= 119 && LA292_0 <= 120)||LA292_0==122||LA292_0==126||LA292_0==129||LA292_0==132||LA292_0==135||LA292_0==138||LA292_0==141||(LA292_0 >= 143 && LA292_0 <= 144)||(LA292_0 >= 146 && LA292_0 <= 148)||(LA292_0 >= 150 && LA292_0 <= 152)||LA292_0==154||LA292_0==157||LA292_0==160||LA292_0==162||LA292_0==167||LA292_0==169||(LA292_0 >= 171 && LA292_0 <= 174)||LA292_0==177||LA292_0==180||(LA292_0 >= 183 && LA292_0 <= 187)||(LA292_0 >= 189 && LA292_0 <= 190)||LA292_0==194||LA292_0==196) ) {
					alt292=1;
				}

				switch (alt292) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1281:10: primary_expression ';'
					{
					pushFollow(FOLLOW_primary_expression_in_primary_expression_list17219);
					primary_expression1066=primary_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, primary_expression1066.getTree());

					char_literal1067=(Token)match(input,SEMI,FOLLOW_SEMI_in_primary_expression_list17221); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1067_tree = (CommonTree)adaptor.create(char_literal1067);
					adaptor.addChild(root_0, char_literal1067_tree);
					}

					}
					break;

				default :
					if ( cnt292 >= 1 ) break loop292;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(292, input);
					throw eee;
				}
				cnt292++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 315, primary_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "primary_expression_list"


	public static class non_assignment_expression_list_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "non_assignment_expression_list"
	// /Users/jeremie/ANTLR/cs.g:1282:1: non_assignment_expression_list : ( non_assignment_expression ';' )+ ;
	public final csParser.non_assignment_expression_list_return non_assignment_expression_list() throws RecognitionException {
		csParser.non_assignment_expression_list_return retval = new csParser.non_assignment_expression_list_return();
		retval.start = input.LT(1);
		int non_assignment_expression_list_StartIndex = input.index();

		CommonTree root_0 = null;

		Token char_literal1069=null;
		ParserRuleReturnScope non_assignment_expression1068 =null;

		CommonTree char_literal1069_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 316) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1282:31: ( ( non_assignment_expression ';' )+ )
			// /Users/jeremie/ANTLR/cs.g:1283:9: ( non_assignment_expression ';' )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1283:9: ( non_assignment_expression ';' )+
			int cnt293=0;
			loop293:
			while (true) {
				int alt293=2;
				int LA293_0 = input.LA(1);
				if ( (LA293_0==Character_literal||LA293_0==FALSE||(LA293_0 >= Hex_number && LA293_0 <= IDENTIFIER)||(LA293_0 >= MINUS && LA293_0 <= NUMBER)||LA293_0==Real_literal||LA293_0==STRINGLITERAL||LA293_0==TRUE||LA293_0==Verbatim_string_literal||LA293_0==61||LA293_0==66||(LA293_0 >= 68 && LA293_0 <= 69)||(LA293_0 >= 71 && LA293_0 <= 72)||LA293_0==75||LA293_0==95||(LA293_0 >= 97 && LA293_0 <= 98)||(LA293_0 >= 100 && LA293_0 <= 103)||(LA293_0 >= 105 && LA293_0 <= 106)||(LA293_0 >= 109 && LA293_0 <= 110)||(LA293_0 >= 114 && LA293_0 <= 117)||(LA293_0 >= 119 && LA293_0 <= 120)||LA293_0==122||LA293_0==126||LA293_0==129||LA293_0==132||LA293_0==135||LA293_0==138||LA293_0==141||(LA293_0 >= 143 && LA293_0 <= 144)||(LA293_0 >= 146 && LA293_0 <= 148)||(LA293_0 >= 150 && LA293_0 <= 152)||LA293_0==154||LA293_0==157||LA293_0==160||LA293_0==162||LA293_0==167||LA293_0==169||(LA293_0 >= 171 && LA293_0 <= 174)||LA293_0==177||LA293_0==180||(LA293_0 >= 183 && LA293_0 <= 187)||(LA293_0 >= 189 && LA293_0 <= 190)||LA293_0==194||LA293_0==196||LA293_0==202) ) {
					alt293=1;
				}

				switch (alt293) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1283:10: non_assignment_expression ';'
					{
					pushFollow(FOLLOW_non_assignment_expression_in_non_assignment_expression_list17239);
					non_assignment_expression1068=non_assignment_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, non_assignment_expression1068.getTree());

					char_literal1069=(Token)match(input,SEMI,FOLLOW_SEMI_in_non_assignment_expression_list17241); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					char_literal1069_tree = (CommonTree)adaptor.create(char_literal1069);
					adaptor.addChild(root_0, char_literal1069_tree);
					}

					}
					break;

				default :
					if ( cnt293 >= 1 ) break loop293;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(293, input);
					throw eee;
				}
				cnt293++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 316, non_assignment_expression_list_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "non_assignment_expression_list"


	public static class method_declarations_return extends ParserRuleReturnScope {
		CommonTree tree;
		@Override
		public CommonTree getTree() { return tree; }
	};


	// $ANTLR start "method_declarations"
	// /Users/jeremie/ANTLR/cs.g:1284:1: method_declarations : ( ( modifiers )? ( 'void' | type ) method_declaration )+ ;
	public final csParser.method_declarations_return method_declarations() throws RecognitionException {
		csParser.method_declarations_return retval = new csParser.method_declarations_return();
		retval.start = input.LT(1);
		int method_declarations_StartIndex = input.index();

		CommonTree root_0 = null;

		Token string_literal1071=null;
		ParserRuleReturnScope modifiers1070 =null;
		ParserRuleReturnScope type1072 =null;
		ParserRuleReturnScope method_declaration1073 =null;

		CommonTree string_literal1071_tree=null;

		try {
			if ( state.backtracking>0 && alreadyParsedRule(input, 317) ) { return retval; }

			// /Users/jeremie/ANTLR/cs.g:1284:20: ( ( ( modifiers )? ( 'void' | type ) method_declaration )+ )
			// /Users/jeremie/ANTLR/cs.g:1285:9: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			{
			root_0 = (CommonTree)adaptor.nil();


			// /Users/jeremie/ANTLR/cs.g:1285:9: ( ( modifiers )? ( 'void' | type ) method_declaration )+
			int cnt296=0;
			loop296:
			while (true) {
				int alt296=2;
				int LA296_0 = input.LA(1);
				if ( (LA296_0==IDENTIFIER||(LA296_0 >= 95 && LA296_0 <= 98)||(LA296_0 >= 100 && LA296_0 <= 101)||LA296_0==103||(LA296_0 >= 105 && LA296_0 <= 106)||LA296_0==109||LA296_0==114||LA296_0==117||(LA296_0 >= 119 && LA296_0 <= 120)||LA296_0==122||(LA296_0 >= 125 && LA296_0 <= 126)||LA296_0==129||LA296_0==132||LA296_0==135||LA296_0==138||(LA296_0 >= 140 && LA296_0 <= 141)||(LA296_0 >= 143 && LA296_0 <= 144)||(LA296_0 >= 146 && LA296_0 <= 148)||(LA296_0 >= 150 && LA296_0 <= 152)||LA296_0==154||(LA296_0 >= 156 && LA296_0 <= 157)||(LA296_0 >= 160 && LA296_0 <= 165)||LA296_0==167||(LA296_0 >= 169 && LA296_0 <= 173)||(LA296_0 >= 176 && LA296_0 <= 177)||LA296_0==183||(LA296_0 >= 185 && LA296_0 <= 186)||(LA296_0 >= 188 && LA296_0 <= 194)||LA296_0==196) ) {
					alt296=1;
				}

				switch (alt296) {
				case 1 :
					// /Users/jeremie/ANTLR/cs.g:1285:10: ( modifiers )? ( 'void' | type ) method_declaration
					{
					// /Users/jeremie/ANTLR/cs.g:1285:10: ( modifiers )?
					int alt294=2;
					int LA294_0 = input.LA(1);
					if ( (LA294_0==96||LA294_0==125||LA294_0==140||LA294_0==150||LA294_0==156||LA294_0==161||(LA294_0 >= 163 && LA294_0 <= 165)||LA294_0==170||LA294_0==176||LA294_0==188||LA294_0==191||LA294_0==193) ) {
						alt294=1;
					}
					switch (alt294) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1285:10: modifiers
							{
							pushFollow(FOLLOW_modifiers_in_method_declarations17259);
							modifiers1070=modifiers();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, modifiers1070.getTree());

							}
							break;

					}

					// /Users/jeremie/ANTLR/cs.g:1285:21: ( 'void' | type )
					int alt295=2;
					int LA295_0 = input.LA(1);
					if ( (LA295_0==192) ) {
						int LA295_1 = input.LA(2);
						if ( (LA295_1==Character_literal||LA295_1==FALSE||(LA295_1 >= Hex_number && LA295_1 <= IDENTIFIER)||(LA295_1 >= NULL && LA295_1 <= NUMBER)||LA295_1==Real_literal||LA295_1==STRINGLITERAL||LA295_1==TRUE||LA295_1==Verbatim_string_literal||LA295_1==95||(LA295_1 >= 97 && LA295_1 <= 98)||(LA295_1 >= 100 && LA295_1 <= 101)||LA295_1==103||(LA295_1 >= 105 && LA295_1 <= 106)||LA295_1==109||LA295_1==114||LA295_1==117||(LA295_1 >= 119 && LA295_1 <= 120)||LA295_1==122||LA295_1==126||LA295_1==129||LA295_1==132||LA295_1==135||LA295_1==138||LA295_1==141||(LA295_1 >= 143 && LA295_1 <= 144)||(LA295_1 >= 146 && LA295_1 <= 148)||(LA295_1 >= 151 && LA295_1 <= 152)||LA295_1==154||LA295_1==157||LA295_1==160||LA295_1==162||LA295_1==167||LA295_1==169||(LA295_1 >= 171 && LA295_1 <= 173)||LA295_1==177||LA295_1==183||(LA295_1 >= 185 && LA295_1 <= 186)||(LA295_1 >= 189 && LA295_1 <= 190)||LA295_1==194||LA295_1==196) ) {
							alt295=1;
						}
						else if ( (LA295_1==69) ) {
							alt295=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 295, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA295_0==IDENTIFIER||LA295_0==95||(LA295_0 >= 97 && LA295_0 <= 98)||(LA295_0 >= 100 && LA295_0 <= 101)||LA295_0==103||(LA295_0 >= 105 && LA295_0 <= 106)||LA295_0==109||LA295_0==114||LA295_0==117||(LA295_0 >= 119 && LA295_0 <= 120)||LA295_0==122||LA295_0==126||LA295_0==129||LA295_0==132||LA295_0==135||LA295_0==138||LA295_0==141||(LA295_0 >= 143 && LA295_0 <= 144)||(LA295_0 >= 146 && LA295_0 <= 148)||(LA295_0 >= 151 && LA295_0 <= 152)||LA295_0==154||LA295_0==157||LA295_0==160||LA295_0==162||LA295_0==167||LA295_0==169||(LA295_0 >= 171 && LA295_0 <= 173)||LA295_0==177||LA295_0==183||(LA295_0 >= 185 && LA295_0 <= 186)||(LA295_0 >= 189 && LA295_0 <= 190)||LA295_0==194||LA295_0==196) ) {
						alt295=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 295, 0, input);
						throw nvae;
					}

					switch (alt295) {
						case 1 :
							// /Users/jeremie/ANTLR/cs.g:1285:22: 'void'
							{
							string_literal1071=(Token)match(input,192,FOLLOW_192_in_method_declarations17263); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							string_literal1071_tree = (CommonTree)adaptor.create(string_literal1071);
							adaptor.addChild(root_0, string_literal1071_tree);
							}

							}
							break;
						case 2 :
							// /Users/jeremie/ANTLR/cs.g:1285:31: type
							{
							pushFollow(FOLLOW_type_in_method_declarations17267);
							type1072=type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, type1072.getTree());

							}
							break;

					}

					pushFollow(FOLLOW_method_declaration_in_method_declarations17270);
					method_declaration1073=method_declaration();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, method_declaration1073.getTree());

					}
					break;

				default :
					if ( cnt296 >= 1 ) break loop296;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(296, input);
					throw eee;
				}
				cnt296++;
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
			if ( state.backtracking>0 ) { memoize(input, 317, method_declarations_StartIndex); }

		}
		return retval;
	}
	// $ANTLR end "method_declarations"

	// $ANTLR start synpred1_cs
	public final void synpred1_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:58:10: ( 'partial' )
		// /Users/jeremie/ANTLR/cs.g:58:11: 'partial'
		{
		match(input,159,FOLLOW_159_in_synpred1_cs485); if (state.failed) return;
		}

	}
	// $ANTLR end synpred1_cs

	// $ANTLR start synpred2_cs
	public final void synpred2_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:88:20: ( member_name '(' )
		// /Users/jeremie/ANTLR/cs.g:88:21: member_name '('
		{
		pushFollow(FOLLOW_member_name_in_synpred2_cs1071);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,68,FOLLOW_68_in_synpred2_cs1075); if (state.failed) return;
		}

	}
	// $ANTLR end synpred2_cs

	// $ANTLR start synpred3_cs
	public final void synpred3_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:89:22: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:89:23: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred3_cs1106);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,197,FOLLOW_197_in_synpred3_cs1110); if (state.failed) return;
		}

	}
	// $ANTLR end synpred3_cs

	// $ANTLR start synpred4_cs
	public final void synpred4_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:90:22: ( member_name '.' 'this' )
		// /Users/jeremie/ANTLR/cs.g:90:23: member_name '.' 'this'
		{
		pushFollow(FOLLOW_member_name_in_synpred4_cs1139);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,DOT,FOLLOW_DOT_in_synpred4_cs1143); if (state.failed) return;
		match(input,180,FOLLOW_180_in_synpred4_cs1147); if (state.failed) return;
		}

	}
	// $ANTLR end synpred4_cs

	// $ANTLR start synpred5_cs
	public final void synpred5_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:114:9: ( 'this' brackets )
		// /Users/jeremie/ANTLR/cs.g:114:10: 'this' brackets
		{
		match(input,180,FOLLOW_180_in_synpred5_cs1520); if (state.failed) return;
		pushFollow(FOLLOW_brackets_in_synpred5_cs1525);
		brackets();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred5_cs

	// $ANTLR start synpred6_cs
	public final void synpred6_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:115:11: ( 'base' brackets )
		// /Users/jeremie/ANTLR/cs.g:115:12: 'base' brackets
		{
		match(input,102,FOLLOW_102_in_synpred6_cs1552); if (state.failed) return;
		pushFollow(FOLLOW_brackets_in_synpred6_cs1556);
		brackets();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred6_cs

	// $ANTLR start synpred7_cs
	public final void synpred7_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:117:21: ( object_creation_expression ( '.' | '->' | '[' ) )
		// /Users/jeremie/ANTLR/cs.g:117:22: object_creation_expression ( '.' | '->' | '[' )
		{
		pushFollow(FOLLOW_object_creation_expression_in_synpred7_cs1606);
		object_creation_expression();
		state._fsp--;
		if (state.failed) return;
		if ( input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred7_cs

	// $ANTLR start synpred8_cs
	public final void synpred8_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:121:35: ( delegate_creation_expression )
		// /Users/jeremie/ANTLR/cs.g:121:36: delegate_creation_expression
		{
		pushFollow(FOLLOW_delegate_creation_expression_in_synpred8_cs1787);
		delegate_creation_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred8_cs

	// $ANTLR start synpred9_cs
	public final void synpred9_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:133:11: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:133:12: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred9_cs2166);
		identifier();
		state._fsp--;
		if (state.failed) return;
		match(input,81,FOLLOW_81_in_synpred9_cs2171); if (state.failed) return;
		}

	}
	// $ANTLR end synpred9_cs

	// $ANTLR start synpred10_cs
	public final void synpred10_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:171:18: ( '(' type ')' )
		// /Users/jeremie/ANTLR/cs.g:171:19: '(' type ')'
		{
		match(input,68,FOLLOW_68_in_synpred10_cs2612); if (state.failed) return;
		pushFollow(FOLLOW_type_in_synpred10_cs2616);
		type();
		state._fsp--;
		if (state.failed) return;
		match(input,RPAREN,FOLLOW_RPAREN_in_synpred10_cs2620); if (state.failed) return;
		}

	}
	// $ANTLR end synpred10_cs

	// $ANTLR start synpred11_cs
	public final void synpred11_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:199:9: ( array_creation_expression )
		// /Users/jeremie/ANTLR/cs.g:199:10: array_creation_expression
		{
		pushFollow(FOLLOW_array_creation_expression_in_synpred11_cs3198);
		array_creation_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred11_cs

	// $ANTLR start synpred12_cs
	public final void synpred12_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:208:46: ( arguments ( '[' | '.' | '->' ) )
		// /Users/jeremie/ANTLR/cs.g:208:47: arguments ( '[' | '.' | '->' )
		{
		pushFollow(FOLLOW_arguments_in_synpred12_cs3425);
		arguments();
		state._fsp--;
		if (state.failed) return;
		if ( input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred12_cs

	// $ANTLR start synpred13_cs
	public final void synpred13_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:279:27: ( unbound_type_name )
		// /Users/jeremie/ANTLR/cs.g:279:28: unbound_type_name
		{
		pushFollow(FOLLOW_unbound_type_name_in_synpred13_cs4452);
		unbound_type_name();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred13_cs

	// $ANTLR start synpred14_cs
	public final void synpred14_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:289:19: ( generic_dimension_specifier '.' )
		// /Users/jeremie/ANTLR/cs.g:289:20: generic_dimension_specifier '.'
		{
		pushFollow(FOLLOW_generic_dimension_specifier_in_synpred14_cs4615);
		generic_dimension_specifier();
		state._fsp--;
		if (state.failed) return;
		match(input,DOT,FOLLOW_DOT_in_synpred14_cs4619); if (state.failed) return;
		}

	}
	// $ANTLR end synpred14_cs

	// $ANTLR start synpred15_cs
	public final void synpred15_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:312:10: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:312:11: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred15_cs4847);
		identifier();
		state._fsp--;
		if (state.failed) return;
		match(input,81,FOLLOW_81_in_synpred15_cs4851); if (state.failed) return;
		}

	}
	// $ANTLR end synpred15_cs

	// $ANTLR start synpred16_cs
	public final void synpred16_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:321:11: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:321:12: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred16_cs4948);
		identifier();
		state._fsp--;
		if (state.failed) return;
		match(input,81,FOLLOW_81_in_synpred16_cs4953); if (state.failed) return;
		}

	}
	// $ANTLR end synpred16_cs

	// $ANTLR start synpred17_cs
	public final void synpred17_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:338:11: ( ( predefined_type | type_name ) rank_specifiers )
		// /Users/jeremie/ANTLR/cs.g:338:12: ( predefined_type | type_name ) rank_specifiers
		{
		// /Users/jeremie/ANTLR/cs.g:338:12: ( predefined_type | type_name )
		int alt297=2;
		int LA297_0 = input.LA(1);
		if ( (LA297_0==103||LA297_0==106||LA297_0==109||LA297_0==114||LA297_0==119||LA297_0==129||LA297_0==138||LA297_0==146||LA297_0==151||LA297_0==169||LA297_0==173||LA297_0==177||(LA297_0 >= 185 && LA297_0 <= 186)||LA297_0==189) ) {
			alt297=1;
		}
		else if ( (LA297_0==IDENTIFIER||LA297_0==95||(LA297_0 >= 97 && LA297_0 <= 98)||(LA297_0 >= 100 && LA297_0 <= 101)||LA297_0==105||LA297_0==117||LA297_0==120||LA297_0==122||LA297_0==126||LA297_0==132||LA297_0==135||LA297_0==141||(LA297_0 >= 143 && LA297_0 <= 144)||(LA297_0 >= 147 && LA297_0 <= 148)||LA297_0==152||LA297_0==154||LA297_0==157||LA297_0==160||LA297_0==162||LA297_0==167||(LA297_0 >= 171 && LA297_0 <= 172)||LA297_0==183||LA297_0==190||LA297_0==194||LA297_0==196) ) {
			alt297=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 297, 0, input);
			throw nvae;
		}

		switch (alt297) {
			case 1 :
				// /Users/jeremie/ANTLR/cs.g:338:13: predefined_type
				{
				pushFollow(FOLLOW_predefined_type_in_synpred17_cs5121);
				predefined_type();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				// /Users/jeremie/ANTLR/cs.g:338:31: type_name
				{
				pushFollow(FOLLOW_type_name_in_synpred17_cs5125);
				type_name();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}

		pushFollow(FOLLOW_rank_specifiers_in_synpred17_cs5129);
		rank_specifiers();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred17_cs

	// $ANTLR start synpred18_cs
	public final void synpred18_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:339:11: ( ( predefined_type | type_name ) ( ( '*' )+ | '?' ) )
		// /Users/jeremie/ANTLR/cs.g:339:12: ( predefined_type | type_name ) ( ( '*' )+ | '?' )
		{
		// /Users/jeremie/ANTLR/cs.g:339:12: ( predefined_type | type_name )
		int alt298=2;
		int LA298_0 = input.LA(1);
		if ( (LA298_0==103||LA298_0==106||LA298_0==109||LA298_0==114||LA298_0==119||LA298_0==129||LA298_0==138||LA298_0==146||LA298_0==151||LA298_0==169||LA298_0==173||LA298_0==177||(LA298_0 >= 185 && LA298_0 <= 186)||LA298_0==189) ) {
			alt298=1;
		}
		else if ( (LA298_0==IDENTIFIER||LA298_0==95||(LA298_0 >= 97 && LA298_0 <= 98)||(LA298_0 >= 100 && LA298_0 <= 101)||LA298_0==105||LA298_0==117||LA298_0==120||LA298_0==122||LA298_0==126||LA298_0==132||LA298_0==135||LA298_0==141||(LA298_0 >= 143 && LA298_0 <= 144)||(LA298_0 >= 147 && LA298_0 <= 148)||LA298_0==152||LA298_0==154||LA298_0==157||LA298_0==160||LA298_0==162||LA298_0==167||(LA298_0 >= 171 && LA298_0 <= 172)||LA298_0==183||LA298_0==190||LA298_0==194||LA298_0==196) ) {
			alt298=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 298, 0, input);
			throw nvae;
		}

		switch (alt298) {
			case 1 :
				// /Users/jeremie/ANTLR/cs.g:339:13: predefined_type
				{
				pushFollow(FOLLOW_predefined_type_in_synpred18_cs5163);
				predefined_type();
				state._fsp--;
				if (state.failed) return;
				}
				break;
			case 2 :
				// /Users/jeremie/ANTLR/cs.g:339:31: type_name
				{
				pushFollow(FOLLOW_type_name_in_synpred18_cs5167);
				type_name();
				state._fsp--;
				if (state.failed) return;
				}
				break;

		}

		// /Users/jeremie/ANTLR/cs.g:339:43: ( ( '*' )+ | '?' )
		int alt300=2;
		int LA300_0 = input.LA(1);
		if ( (LA300_0==69) ) {
			alt300=1;
		}
		else if ( (LA300_0==89) ) {
			alt300=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 300, 0, input);
			throw nvae;
		}

		switch (alt300) {
			case 1 :
				// /Users/jeremie/ANTLR/cs.g:339:44: ( '*' )+
				{
				// /Users/jeremie/ANTLR/cs.g:339:44: ( '*' )+
				int cnt299=0;
				loop299:
				while (true) {
					int alt299=2;
					int LA299_0 = input.LA(1);
					if ( (LA299_0==69) ) {
						alt299=1;
					}

					switch (alt299) {
					case 1 :
						// /Users/jeremie/ANTLR/cs.g:339:44: '*'
						{
						match(input,69,FOLLOW_69_in_synpred18_cs5172); if (state.failed) return;
						}
						break;

					default :
						if ( cnt299 >= 1 ) break loop299;
						if (state.backtracking>0) {state.failed=true; return;}
						EarlyExitException eee = new EarlyExitException(299, input);
						throw eee;
					}
					cnt299++;
				}

				}
				break;
			case 2 :
				// /Users/jeremie/ANTLR/cs.g:339:51: '?'
				{
				match(input,89,FOLLOW_89_in_synpred18_cs5177); if (state.failed) return;
				}
				break;

		}

		}

	}
	// $ANTLR end synpred18_cs

	// $ANTLR start synpred19_cs
	public final void synpred19_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:376:9: ( unary_expression assignment_operator )
		// /Users/jeremie/ANTLR/cs.g:376:10: unary_expression assignment_operator
		{
		pushFollow(FOLLOW_unary_expression_in_synpred19_cs5522);
		unary_expression();
		state._fsp--;
		if (state.failed) return;
		pushFollow(FOLLOW_assignment_operator_in_synpred19_cs5526);
		assignment_operator();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred19_cs

	// $ANTLR start synpred20_cs
	public final void synpred20_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:385:9: ( cast_expression )
		// /Users/jeremie/ANTLR/cs.g:385:10: cast_expression
		{
		pushFollow(FOLLOW_cast_expression_in_synpred20_cs5633);
		cast_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred20_cs

	// $ANTLR start synpred21_cs
	public final void synpred21_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:411:9: ( anonymous_function_signature '=>' )
		// /Users/jeremie/ANTLR/cs.g:411:10: anonymous_function_signature '=>'
		{
		pushFollow(FOLLOW_anonymous_function_signature_in_synpred21_cs5975);
		anonymous_function_signature();
		state._fsp--;
		if (state.failed) return;
		match(input,87,FOLLOW_87_in_synpred21_cs5979); if (state.failed) return;
		}

	}
	// $ANTLR end synpred21_cs

	// $ANTLR start synpred22_cs
	public final void synpred22_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:412:11: ( query_expression )
		// /Users/jeremie/ANTLR/cs.g:412:12: query_expression
		{
		pushFollow(FOLLOW_query_expression_in_synpred22_cs6004);
		query_expression();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred22_cs

	// $ANTLR start synpred23_cs
	public final void synpred23_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:476:57: ( 'into' )
		// /Users/jeremie/ANTLR/cs.g:476:58: 'into'
		{
		match(input,141,FOLLOW_141_in_synpred23_cs6707); if (state.failed) return;
		}

	}
	// $ANTLR end synpred23_cs

	// $ANTLR start synpred24_cs
	public final void synpred24_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:544:46: ( ',' identifier '=' )
		// /Users/jeremie/ANTLR/cs.g:544:47: ',' identifier '='
		{
		match(input,74,FOLLOW_74_in_synpred24_cs7543); if (state.failed) return;
		pushFollow(FOLLOW_identifier_in_synpred24_cs7547);
		identifier();
		state._fsp--;
		if (state.failed) return;
		match(input,85,FOLLOW_85_in_synpred24_cs7551); if (state.failed) return;
		}

	}
	// $ANTLR end synpred24_cs

	// $ANTLR start synpred25_cs
	public final void synpred25_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:627:18: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:627:19: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred25_cs8543);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,197,FOLLOW_197_in_synpred25_cs8547); if (state.failed) return;
		}

	}
	// $ANTLR end synpred25_cs

	// $ANTLR start synpred26_cs
	public final void synpred26_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:734:28: ( member_name '(' )
		// /Users/jeremie/ANTLR/cs.g:734:29: member_name '('
		{
		pushFollow(FOLLOW_member_name_in_synpred26_cs9813);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,68,FOLLOW_68_in_synpred26_cs9817); if (state.failed) return;
		}

	}
	// $ANTLR end synpred26_cs

	// $ANTLR start synpred27_cs
	public final void synpred27_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:735:28: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:735:29: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred27_cs9852);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,197,FOLLOW_197_in_synpred27_cs9856); if (state.failed) return;
		}

	}
	// $ANTLR end synpred27_cs

	// $ANTLR start synpred28_cs
	public final void synpred28_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:786:18: ( member_name '(' )
		// /Users/jeremie/ANTLR/cs.g:786:19: member_name '('
		{
		pushFollow(FOLLOW_member_name_in_synpred28_cs10692);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,68,FOLLOW_68_in_synpred28_cs10696); if (state.failed) return;
		}

	}
	// $ANTLR end synpred28_cs

	// $ANTLR start synpred29_cs
	public final void synpred29_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:787:22: ( member_name '{' )
		// /Users/jeremie/ANTLR/cs.g:787:23: member_name '{'
		{
		pushFollow(FOLLOW_member_name_in_synpred29_cs10725);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,197,FOLLOW_197_in_synpred29_cs10729); if (state.failed) return;
		}

	}
	// $ANTLR end synpred29_cs

	// $ANTLR start synpred30_cs
	public final void synpred30_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:788:22: ( member_name '.' 'this' )
		// /Users/jeremie/ANTLR/cs.g:788:23: member_name '.' 'this'
		{
		pushFollow(FOLLOW_member_name_in_synpred30_cs10758);
		member_name();
		state._fsp--;
		if (state.failed) return;
		match(input,DOT,FOLLOW_DOT_in_synpred30_cs10762); if (state.failed) return;
		match(input,180,FOLLOW_180_in_synpred30_cs10766); if (state.failed) return;
		}

	}
	// $ANTLR end synpred30_cs

	// $ANTLR start synpred31_cs
	public final void synpred31_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:860:30: ( arguments ( '[' | '.' | '->' ) )
		// /Users/jeremie/ANTLR/cs.g:860:31: arguments ( '[' | '.' | '->' )
		{
		pushFollow(FOLLOW_arguments_in_synpred31_cs11627);
		arguments();
		state._fsp--;
		if (state.failed) return;
		if ( input.LA(1)==DOT||input.LA(1)==PTR||input.LA(1)==91 ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		}

	}
	// $ANTLR end synpred31_cs

	// $ANTLR start synpred32_cs
	public final void synpred32_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:864:11: ( identifier '<' )
		// /Users/jeremie/ANTLR/cs.g:864:12: identifier '<'
		{
		pushFollow(FOLLOW_identifier_in_synpred32_cs11734);
		identifier();
		state._fsp--;
		if (state.failed) return;
		match(input,81,FOLLOW_81_in_synpred32_cs11739); if (state.failed) return;
		}

	}
	// $ANTLR end synpred32_cs

	// $ANTLR start synpred33_cs
	public final void synpred33_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:877:9: ( declaration_statement )
		// /Users/jeremie/ANTLR/cs.g:877:10: declaration_statement
		{
		pushFollow(FOLLOW_declaration_statement_in_synpred33_cs11883);
		declaration_statement();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred33_cs

	// $ANTLR start synpred34_cs
	public final void synpred34_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:878:11: ( identifier ':' )
		// /Users/jeremie/ANTLR/cs.g:878:12: identifier ':'
		{
		pushFollow(FOLLOW_identifier_in_synpred34_cs11901);
		identifier();
		state._fsp--;
		if (state.failed) return;
		match(input,79,FOLLOW_79_in_synpred34_cs11905); if (state.failed) return;
		}

	}
	// $ANTLR end synpred34_cs

	// $ANTLR start synpred35_cs
	public final void synpred35_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:915:9: ( 'var' )
		// /Users/jeremie/ANTLR/cs.g:915:10: 'var'
		{
		match(input,190,FOLLOW_190_in_synpred35_cs12353); if (state.failed) return;
		}

	}
	// $ANTLR end synpred35_cs

	// $ANTLR start synpred36_cs
	public final void synpred36_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:916:11: ( 'dynamic' )
		// /Users/jeremie/ANTLR/cs.g:916:12: 'dynamic'
		{
		match(input,120,FOLLOW_120_in_synpred36_cs12371); if (state.failed) return;
		}

	}
	// $ANTLR end synpred36_cs

	// $ANTLR start synpred37_cs
	public final void synpred37_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:942:69: ( 'else' )
		// /Users/jeremie/ANTLR/cs.g:942:70: 'else'
		{
		match(input,121,FOLLOW_121_in_synpred37_cs12643); if (state.failed) return;
		}

	}
	// $ANTLR end synpred37_cs

	// $ANTLR start synpred38_cs
	public final void synpred38_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:971:9: ( local_variable_declaration )
		// /Users/jeremie/ANTLR/cs.g:971:10: local_variable_declaration
		{
		pushFollow(FOLLOW_local_variable_declaration_in_synpred38_cs13020);
		local_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred38_cs

	// $ANTLR start synpred39_cs
	public final void synpred39_cs_fragment() throws RecognitionException {
		// /Users/jeremie/ANTLR/cs.g:1023:9: ( local_variable_declaration )
		// /Users/jeremie/ANTLR/cs.g:1023:10: local_variable_declaration
		{
		pushFollow(FOLLOW_local_variable_declaration_in_synpred39_cs13692);
		local_variable_declaration();
		state._fsp--;
		if (state.failed) return;
		}

	}
	// $ANTLR end synpred39_cs

	// Delegated rules

	public final boolean synpred24_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred24_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred9_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred9_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred19_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred19_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred2_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred2_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred15_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred15_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred4_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred4_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred12_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred12_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred32_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred32_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred29_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred29_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred18_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred18_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred16_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred16_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred10_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred10_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred5_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred5_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred28_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred28_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred17_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred17_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred14_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred14_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred6_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred6_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred25_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred25_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred37_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred37_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred31_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred31_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred22_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred22_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred11_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred11_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred7_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred7_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred34_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred34_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred23_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred23_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred36_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred36_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred21_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred21_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred13_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred13_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred8_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred8_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred33_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred33_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred26_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred26_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred30_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred30_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred38_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred38_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred35_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred35_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred3_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred3_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred39_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred39_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred1_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred27_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred27_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred20_cs() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred20_cs_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA52 dfa52 = new DFA52(this);
	protected DFA73 dfa73 = new DFA73(this);
	protected DFA74 dfa74 = new DFA74(this);
	static final String DFA52_eotS =
		"\5\uffff";
	static final String DFA52_eofS =
		"\1\2\3\uffff\1\2";
	static final String DFA52_minS =
		"\1\12\1\5\2\uffff\1\12";
	static final String DFA52_maxS =
		"\1\u00c9\1\u00ca\2\uffff\1\u00c9";
	static final String DFA52_acceptS =
		"\2\uffff\1\1\1\2\1\uffff";
	static final String DFA52_specialS =
		"\5\uffff}>";
	static final String[] DFA52_transitionS = {
			"\1\3\12\uffff\1\2\5\uffff\1\2\6\uffff\1\2\12\uffff\1\3\1\uffff\1\2\2"+
			"\uffff\1\2\13\uffff\6\2\1\3\13\2\1\uffff\6\2\1\uffff\3\2\1\1\4\2\1\uffff"+
			"\5\2\3\uffff\1\2\13\uffff\1\2\2\uffff\1\2\1\uffff\1\2\3\uffff\1\2\5\uffff"+
			"\1\2\2\uffff\1\2\5\uffff\4\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\12\uffff\1\2\6\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\6\2",
			"\1\3\16\uffff\1\3\5\uffff\2\3\6\uffff\3\3\13\uffff\1\3\2\uffff\1\3\1"+
			"\uffff\1\3\4\uffff\1\3\2\uffff\1\3\4\uffff\1\3\1\uffff\2\3\1\uffff\2"+
			"\3\1\uffff\1\2\1\3\20\uffff\1\4\2\uffff\1\3\1\uffff\2\3\1\uffff\4\3\1"+
			"\uffff\2\3\2\uffff\2\3\3\uffff\4\3\1\uffff\2\3\1\uffff\1\3\3\uffff\1"+
			"\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff"+
			"\2\3\1\uffff\3\3\1\uffff\3\3\1\uffff\1\3\2\uffff\1\3\2\uffff\1\3\1\uffff"+
			"\1\3\4\uffff\1\3\1\uffff\1\3\1\uffff\4\3\2\uffff\1\3\2\uffff\1\3\2\uffff"+
			"\5\3\1\uffff\2\3\3\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
			"",
			"",
			"\1\3\12\uffff\1\2\5\uffff\1\2\6\uffff\1\2\12\uffff\1\3\1\uffff\1\2\2"+
			"\uffff\1\2\13\uffff\6\2\1\3\13\2\1\uffff\6\2\1\uffff\3\2\1\1\4\2\1\uffff"+
			"\5\2\3\uffff\1\2\13\uffff\1\2\2\uffff\1\2\1\uffff\1\2\3\uffff\1\2\5\uffff"+
			"\1\2\2\uffff\1\2\5\uffff\4\2\2\uffff\2\2\3\uffff\1\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\3\uffff\2\2\12\uffff\1\2\6\uffff"+
			"\1\2\3\uffff\1\2\1\uffff\6\2"
	};

	static final short[] DFA52_eot = DFA.unpackEncodedString(DFA52_eotS);
	static final short[] DFA52_eof = DFA.unpackEncodedString(DFA52_eofS);
	static final char[] DFA52_min = DFA.unpackEncodedStringToUnsignedChars(DFA52_minS);
	static final char[] DFA52_max = DFA.unpackEncodedStringToUnsignedChars(DFA52_maxS);
	static final short[] DFA52_accept = DFA.unpackEncodedString(DFA52_acceptS);
	static final short[] DFA52_special = DFA.unpackEncodedString(DFA52_specialS);
	static final short[][] DFA52_transition;

	static {
		int numStates = DFA52_transitionS.length;
		DFA52_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA52_transition[i] = DFA.unpackEncodedString(DFA52_transitionS[i]);
		}
	}

	protected class DFA52 extends DFA {

		public DFA52(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 52;
			this.eot = DFA52_eot;
			this.eof = DFA52_eof;
			this.min = DFA52_min;
			this.max = DFA52_max;
			this.accept = DFA52_accept;
			this.special = DFA52_special;
			this.transition = DFA52_transition;
		}
		@Override
		public String getDescription() {
			return "206:41: ( ( rank_specifiers )? ( array_initializer )? | ( ( ( arguments ( '[' | '.' | '->' ) )=> arguments invocation_part ) | invocation_part )* arguments )";
		}
	}

	static final String DFA73_eotS =
		"\16\uffff";
	static final String DFA73_eofS =
		"\16\uffff";
	static final String DFA73_minS =
		"\1\33\1\12\1\uffff\1\57\1\33\1\25\1\33\1\uffff\1\12\2\uffff\1\12\2\25";
	static final String DFA73_maxS =
		"\1\u00c4\1\133\1\uffff\1\105\3\u00c4\1\uffff\1\133\2\uffff\1\133\2\u00c4";
	static final String DFA73_acceptS =
		"\2\uffff\1\2\4\uffff\1\3\1\uffff\2\1\3\uffff";
	static final String DFA73_specialS =
		"\5\uffff\1\2\6\uffff\1\1\1\0}>";
	static final String[] DFA73_transitionS = {
			"\1\1\103\uffff\1\1\1\uffff\2\1\1\uffff\2\1\1\uffff\1\2\1\uffff\1\1\1"+
			"\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\1\1\uffff\1\2\1\1\1\uffff\1\1\3"+
			"\uffff\1\1\2\uffff\1\2\2\uffff\1\1\2\uffff\1\1\2\uffff\1\2\2\uffff\1"+
			"\1\1\uffff\2\1\1\uffff\1\2\2\1\2\uffff\1\2\1\1\1\uffff\1\1\2\uffff\1"+
			"\1\2\uffff\1\1\1\uffff\1\1\4\uffff\1\1\1\uffff\1\2\1\uffff\2\1\1\2\3"+
			"\uffff\1\2\5\uffff\1\1\1\uffff\2\2\2\uffff\1\2\1\1\1\uffff\1\3\1\uffff"+
			"\1\1\1\uffff\1\1",
			"\1\6\44\uffff\1\2\25\uffff\1\2\12\uffff\1\4\1\5\7\uffff\1\2\1\uffff"+
			"\1\2",
			"",
			"\1\7\25\uffff\1\2",
			"\1\10\103\uffff\1\10\1\uffff\2\10\1\uffff\2\10\3\uffff\1\10\13\uffff"+
			"\1\10\2\uffff\1\10\1\uffff\1\10\3\uffff\1\10\5\uffff\1\10\2\uffff\1\10"+
			"\5\uffff\1\10\1\uffff\2\10\2\uffff\2\10\3\uffff\1\10\1\uffff\1\10\2\uffff"+
			"\1\10\2\uffff\1\10\1\uffff\1\10\4\uffff\1\10\3\uffff\2\10\12\uffff\1"+
			"\10\6\uffff\1\10\3\uffff\1\10\1\uffff\1\10",
			"\1\12\5\uffff\1\2\56\uffff\1\11\24\uffff\1\2\1\uffff\2\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\2\2\1\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\5\uffff\1\2\1\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2",
			"\1\13\103\uffff\1\13\1\uffff\2\13\1\uffff\2\13\3\uffff\1\13\13\uffff"+
			"\1\13\2\uffff\1\13\1\uffff\1\13\3\uffff\1\13\5\uffff\1\13\2\uffff\1\13"+
			"\5\uffff\1\13\1\uffff\2\13\2\uffff\2\13\3\uffff\1\13\1\uffff\1\13\2\uffff"+
			"\1\13\2\uffff\1\13\1\uffff\1\13\4\uffff\1\13\3\uffff\2\13\12\uffff\1"+
			"\13\6\uffff\1\13\3\uffff\1\13\1\uffff\1\13",
			"",
			"\1\6\44\uffff\1\2\25\uffff\1\2\13\uffff\1\14\7\uffff\1\2\1\uffff\1\2",
			"",
			"",
			"\1\6\44\uffff\1\2\25\uffff\1\2\13\uffff\1\15\7\uffff\1\2\1\uffff\1\2",
			"\1\12\5\uffff\1\2\56\uffff\1\11\24\uffff\1\2\1\uffff\2\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\2\2\1\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\5\uffff\1\2\1\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2",
			"\1\12\5\uffff\1\2\56\uffff\1\11\24\uffff\1\2\1\uffff\2\2\1\uffff\2\2"+
			"\1\uffff\1\2\1\uffff\2\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\1\uffff"+
			"\2\2\1\uffff\1\2\3\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\2\2\1\uffff\3\2\2\uffff\2\2\1\uffff\1\2\2\uffff"+
			"\1\2\2\uffff\1\2\1\uffff\1\2\4\uffff\1\2\1\uffff\1\2\1\uffff\3\2\3\uffff"+
			"\1\2\5\uffff\1\2\1\uffff\2\2\2\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff"+
			"\1\2"
	};

	static final short[] DFA73_eot = DFA.unpackEncodedString(DFA73_eotS);
	static final short[] DFA73_eof = DFA.unpackEncodedString(DFA73_eofS);
	static final char[] DFA73_min = DFA.unpackEncodedStringToUnsignedChars(DFA73_minS);
	static final char[] DFA73_max = DFA.unpackEncodedStringToUnsignedChars(DFA73_maxS);
	static final short[] DFA73_accept = DFA.unpackEncodedString(DFA73_acceptS);
	static final short[] DFA73_special = DFA.unpackEncodedString(DFA73_specialS);
	static final short[][] DFA73_transition;

	static {
		int numStates = DFA73_transitionS.length;
		DFA73_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA73_transition[i] = DFA.unpackEncodedString(DFA73_transitionS[i]);
		}
	}

	protected class DFA73 extends DFA {

		public DFA73(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 73;
			this.eot = DFA73_eot;
			this.eof = DFA73_eof;
			this.min = DFA73_min;
			this.max = DFA73_max;
			this.accept = DFA73_accept;
			this.special = DFA73_special;
			this.transition = DFA73_transition;
		}
		@Override
		public String getDescription() {
			return "279:26: ( ( unbound_type_name )=> unbound_type_name | type | 'void' )";
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA73_13 = input.LA(1);
						 
						int index73_13 = input.index();
						input.rewind();
						s = -1;
						if ( (LA73_13==74) && (synpred13_cs())) {s = 9;}
						else if ( (LA73_13==GT) && (synpred13_cs())) {s = 10;}
						else if ( (LA73_13==IDENTIFIER||LA73_13==95||(LA73_13 >= 97 && LA73_13 <= 98)||(LA73_13 >= 100 && LA73_13 <= 101)||LA73_13==103||(LA73_13 >= 105 && LA73_13 <= 106)||LA73_13==109||LA73_13==114||LA73_13==117||(LA73_13 >= 119 && LA73_13 <= 120)||LA73_13==122||LA73_13==126||LA73_13==129||LA73_13==132||LA73_13==135||LA73_13==138||LA73_13==141||(LA73_13 >= 143 && LA73_13 <= 144)||(LA73_13 >= 146 && LA73_13 <= 148)||(LA73_13 >= 151 && LA73_13 <= 152)||LA73_13==154||LA73_13==157||LA73_13==160||LA73_13==162||LA73_13==167||LA73_13==169||(LA73_13 >= 171 && LA73_13 <= 173)||LA73_13==177||LA73_13==183||(LA73_13 >= 185 && LA73_13 <= 186)||(LA73_13 >= 189 && LA73_13 <= 190)||LA73_13==192||LA73_13==194||LA73_13==196) ) {s = 2;}
						 
						input.seek(index73_13);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA73_12 = input.LA(1);
						 
						int index73_12 = input.index();
						input.rewind();
						s = -1;
						if ( (LA73_12==74) && (synpred13_cs())) {s = 9;}
						else if ( (LA73_12==GT) && (synpred13_cs())) {s = 10;}
						else if ( (LA73_12==IDENTIFIER||LA73_12==95||(LA73_12 >= 97 && LA73_12 <= 98)||(LA73_12 >= 100 && LA73_12 <= 101)||LA73_12==103||(LA73_12 >= 105 && LA73_12 <= 106)||LA73_12==109||LA73_12==114||LA73_12==117||(LA73_12 >= 119 && LA73_12 <= 120)||LA73_12==122||LA73_12==126||LA73_12==129||LA73_12==132||LA73_12==135||LA73_12==138||LA73_12==141||(LA73_12 >= 143 && LA73_12 <= 144)||(LA73_12 >= 146 && LA73_12 <= 148)||(LA73_12 >= 151 && LA73_12 <= 152)||LA73_12==154||LA73_12==157||LA73_12==160||LA73_12==162||LA73_12==167||LA73_12==169||(LA73_12 >= 171 && LA73_12 <= 173)||LA73_12==177||LA73_12==183||(LA73_12 >= 185 && LA73_12 <= 186)||(LA73_12 >= 189 && LA73_12 <= 190)||LA73_12==192||LA73_12==194||LA73_12==196) ) {s = 2;}
						 
						input.seek(index73_12);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA73_5 = input.LA(1);
						 
						int index73_5 = input.index();
						input.rewind();
						s = -1;
						if ( (LA73_5==74) && (synpred13_cs())) {s = 9;}
						else if ( (LA73_5==GT) && (synpred13_cs())) {s = 10;}
						else if ( (LA73_5==IDENTIFIER||LA73_5==95||(LA73_5 >= 97 && LA73_5 <= 98)||(LA73_5 >= 100 && LA73_5 <= 101)||LA73_5==103||(LA73_5 >= 105 && LA73_5 <= 106)||LA73_5==109||LA73_5==114||LA73_5==117||(LA73_5 >= 119 && LA73_5 <= 120)||LA73_5==122||LA73_5==126||LA73_5==129||LA73_5==132||LA73_5==135||LA73_5==138||LA73_5==141||(LA73_5 >= 143 && LA73_5 <= 144)||(LA73_5 >= 146 && LA73_5 <= 148)||(LA73_5 >= 151 && LA73_5 <= 152)||LA73_5==154||LA73_5==157||LA73_5==160||LA73_5==162||LA73_5==167||LA73_5==169||(LA73_5 >= 171 && LA73_5 <= 173)||LA73_5==177||LA73_5==183||(LA73_5 >= 185 && LA73_5 <= 186)||(LA73_5 >= 189 && LA73_5 <= 190)||LA73_5==192||LA73_5==194||LA73_5==196) ) {s = 2;}
						 
						input.seek(index73_5);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 73, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA74_eotS =
		"\7\uffff";
	static final String DFA74_eofS =
		"\4\uffff\1\5\2\uffff";
	static final String DFA74_minS =
		"\1\12\1\25\1\uffff\1\25\1\12\2\uffff";
	static final String DFA74_maxS =
		"\1\121\1\112\1\uffff\1\112\1\57\2\uffff";
	static final String DFA74_acceptS =
		"\2\uffff\1\2\2\uffff\1\3\1\1";
	static final String DFA74_specialS =
		"\4\uffff\1\0\2\uffff}>";
	static final String[] DFA74_transitionS = {
			"\1\2\106\uffff\1\1",
			"\1\4\64\uffff\1\3",
			"",
			"\1\4\64\uffff\1\3",
			"\1\6\44\uffff\1\5",
			"",
			""
	};

	static final short[] DFA74_eot = DFA.unpackEncodedString(DFA74_eotS);
	static final short[] DFA74_eof = DFA.unpackEncodedString(DFA74_eofS);
	static final char[] DFA74_min = DFA.unpackEncodedStringToUnsignedChars(DFA74_minS);
	static final char[] DFA74_max = DFA.unpackEncodedStringToUnsignedChars(DFA74_maxS);
	static final short[] DFA74_accept = DFA.unpackEncodedString(DFA74_acceptS);
	static final short[] DFA74_special = DFA.unpackEncodedString(DFA74_specialS);
	static final short[][] DFA74_transition;

	static {
		int numStates = DFA74_transitionS.length;
		DFA74_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA74_transition[i] = DFA.unpackEncodedString(DFA74_transitionS[i]);
		}
	}

	protected class DFA74 extends DFA {

		public DFA74(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 74;
			this.eot = DFA74_eot;
			this.eof = DFA74_eof;
			this.min = DFA74_min;
			this.max = DFA74_max;
			this.accept = DFA74_accept;
			this.special = DFA74_special;
			this.transition = DFA74_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 289:17: ( ( ( generic_dimension_specifier '.' )=> generic_dimension_specifier unbound_type_name_part ) | unbound_type_name_part )*";
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA74_4 = input.LA(1);
						 
						int index74_4 = input.index();
						input.rewind();
						s = -1;
						if ( (LA74_4==EOF||LA74_4==RPAREN) ) {s = 5;}
						else if ( (LA74_4==DOT) && (synpred14_cs())) {s = 6;}
						 
						input.seek(index74_4);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 74, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	public static final BitSet FOLLOW_namespace_body_in_compilation_unit88 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_149_in_namespace_declaration114 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_qualified_identifier_in_namespace_declaration118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_namespace_block_in_namespace_declaration122 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_namespace_declaration126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_namespace_block142 = new BitSet(new long[]{0x0200000000020000L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000202L});
	public static final BitSet FOLLOW_namespace_body_in_namespace_block146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_namespace_block151 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extern_alias_directives_in_namespace_body173 = new BitSet(new long[]{0x0200000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_using_directives_in_namespace_body180 = new BitSet(new long[]{0x0000000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_global_attributes_in_namespace_body187 = new BitSet(new long[]{0x0000000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_member_declarations_in_namespace_body194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_extern_alias_directive_in_extern_alias_directives225 = new BitSet(new long[]{0x0000000000000002L,0x2000000000000000L});
	public static final BitSet FOLLOW_125_in_extern_alias_directive242 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_98_in_extern_alias_directive246 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_extern_alias_directive250 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_extern_alias_directive253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_using_directive_in_using_directives272 = new BitSet(new long[]{0x0200000000000002L});
	public static final BitSet FOLLOW_using_alias_directive_in_using_directive291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_using_namespace_directive_in_using_directive303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_in_using_alias_directive319 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_using_alias_directive330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_using_alias_directive334 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_namespace_or_type_name_in_using_alias_directive338 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_using_alias_directive342 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_in_using_namespace_directive357 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_namespace_name_in_using_namespace_directive361 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_using_namespace_directive365 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_member_declaration_in_namespace_member_declarations387 = new BitSet(new long[]{0x0000000000020002L,0x2010800108000000L,0x9005043A90601800L,0x0000000000000002L});
	public static final BitSet FOLLOW_namespace_declaration_in_namespace_member_declaration423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_namespace_member_declaration439 = new BitSet(new long[]{0x0000000000020000L,0x2010800100000000L,0x9005043A90401800L,0x0000000000000002L});
	public static final BitSet FOLLOW_modifiers_in_namespace_member_declaration446 = new BitSet(new long[]{0x0000000000020000L,0x0010800000000000L,0x0004000080000800L});
	public static final BitSet FOLLOW_type_declaration_in_namespace_member_declaration453 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_159_in_type_declaration490 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L,0x0004000000000800L});
	public static final BitSet FOLLOW_class_declaration_in_type_declaration495 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_type_declaration563 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_type_declaration631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_type_declaration648 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_type_declaration663 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_type_declaration677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_declaration_in_type_declaration691 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_declaration_in_type_declaration705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_qualified_identifier733 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_DOT_in_qualified_identifier736 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_qualified_identifier738 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_namespace_or_type_name_in_namespace_name756 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_modifiers777 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_class_member_declaration877 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B780000000L,0xF6873EBFB5DDBD92L,0x0000000000000417L});
	public static final BitSet FOLLOW_modifiers_in_class_member_declaration890 = new BitSet(new long[]{0x0000000008020000L,0x5DB5A6B680000000L,0x66863A85A59DAD92L,0x0000000000000415L});
	public static final BitSet FOLLOW_112_in_class_member_declaration903 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_class_member_declaration907 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_class_member_declaration911 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_class_member_declaration915 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_159_in_class_member_declaration929 = new BitSet(new long[]{0x042900180C100020L,0x45A4A6B680000000L,0x66863A85259DAC92L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_class_member_declaration932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_class_member_declaration964 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_class_member_declaration996 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_class_member_declaration1028 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_class_member_declaration1045 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_class_member_declaration1050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_class_member_declaration1066 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66923A85279DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_class_member_declaration1082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_declaration_in_class_member_declaration1115 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_name_in_class_member_declaration1152 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_class_member_declaration1154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_indexer_declaration_in_class_member_declaration1156 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_indexer_declaration_in_class_member_declaration1177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_field_declaration_in_class_member_declaration1206 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_operator_declaration_in_class_member_declaration1233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_class_member_declaration1293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_class_member_declaration1323 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_declaration_in_class_member_declaration1345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_event_declaration_in_class_member_declaration1361 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_class_member_declaration1391 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_declaration_in_class_member_declaration1413 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conversion_operator_declaration_in_class_member_declaration1435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_declaration_in_class_member_declaration1449 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_destructor_declaration_in_class_member_declaration1471 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_primary_expression1530 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_primary_expression1534 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1538 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_180_in_primary_expression1561 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_primary_expression1565 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1569 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_start_in_primary_expression1582 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1586 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_150_in_primary_expression1599 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000035L});
	public static final BitSet FOLLOW_object_creation_expression_in_primary_expression1662 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_primary_expression_part_in_primary_expression1666 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L});
	public static final BitSet FOLLOW_delegate_creation_expression_in_primary_expression1792 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_creation_expression_in_primary_expression1828 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_object_creation_expression_in_primary_expression1864 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sizeof_expression_in_primary_expression1933 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_checked_expression_in_primary_expression1993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unchecked_expression_in_primary_expression2033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_default_value_expression_in_primary_expression2071 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_method_expression_in_primary_expression2105 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_primary_expression_start2153 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_primary_expression_start2176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_primary_expression_start2180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_primary_expression_start2192 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_primary_expression_start2195 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_primary_expression_start2199 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_primary_expression_start2213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_102_in_primary_expression_start2226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_paren_expression_in_primary_expression_start2238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeof_expression_in_primary_expression_start2250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_literal_in_primary_expression_start2275 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_identifier_in_primary_expression_part2300 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_brackets_or_arguments_in_primary_expression_part2312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_operator_in_access_identifier2327 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_access_identifier2331 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_brackets_in_brackets_or_arguments2367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_brackets_or_arguments2371 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_91_in_brackets2386 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6900009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_list_in_brackets2390 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_brackets2395 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_paren_expression2426 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_paren_expression2430 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_paren_expression2434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_arguments2450 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_list_in_arguments2454 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_arguments2459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_argument_in_argument_list2475 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_argument_list2478 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_in_argument_list2480 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_argument_name_in_argument2497 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_value_in_argument2501 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_argument_value_in_argument2513 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_argument_name2527 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_argument_name2531 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_argument_value2546 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ref_variable_reference_in_argument_value2559 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_155_in_argument_value2572 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_variable_reference_in_argument_value2576 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_166_in_ref_variable_reference2591 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_68_in_ref_variable_reference2627 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_ref_variable_reference2631 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_ref_variable_reference2635 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927AC525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_ref_variable_reference_in_ref_variable_reference2640 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_reference_in_ref_variable_reference2644 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_reference_in_ref_variable_reference2869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_variable_reference2893 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rank_specifier_in_rank_specifiers2908 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_rank_specifier2933 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000400L});
	public static final BitSet FOLLOW_dim_separators_in_rank_specifier2937 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_rank_specifier2942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_dim_separators2958 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_delegate_creation_expression2985 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_delegate_creation_expression2989 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_name_in_delegate_creation_expression2993 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_delegate_creation_expression2997 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_object_initializer_in_anonymous_object_creation_expression3022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_anonymous_object_initializer3038 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000214L});
	public static final BitSet FOLLOW_member_declarator_list_in_anonymous_object_initializer3042 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_anonymous_object_initializer3047 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_anonymous_object_initializer3052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_declarator_in_member_declarator_list3067 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_member_declarator_list3071 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_member_declarator_in_member_declarator_list3073 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_member_declarator3092 = new BitSet(new long[]{0x0000000000000400L,0x0000000000220000L});
	public static final BitSet FOLLOW_generic_argument_list_in_member_declarator3097 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_member_declarator3135 = new BitSet(new long[]{0x042900180C100020L,0x45BC66F680000010L,0x6F927A8525DDA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_primary_or_array_creation_expression_in_member_declarator3139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_member_declarator3177 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_member_declarator3181 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_creation_expression_in_primary_or_array_creation_expression3203 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_primary_expression_in_primary_or_array_creation_expression3215 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_150_in_array_creation_expression3240 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_array_creation_expression3262 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_91_in_array_creation_expression3267 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_list_in_array_creation_expression3271 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_array_creation_expression3275 = new BitSet(new long[]{0x0000200000000402L,0x0000000008000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_rank_specifiers_in_array_creation_expression3322 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_array_initializer_in_array_creation_expression3327 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_array_creation_expression3440 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_invocation_part_in_array_creation_expression3444 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_invocation_part_in_array_creation_expression3491 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_arguments_in_array_creation_expression3497 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_initializer_in_array_creation_expression3631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rank_specifier_in_array_creation_expression3701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_array_initializer_in_array_creation_expression3731 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_array_initializer3794 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F680000DB4L,0x6F927A8525DDA492L,0x0000000000000634L});
	public static final BitSet FOLLOW_variable_initializer_list_in_array_initializer3798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_array_initializer3803 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_array_initializer3808 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list3823 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_variable_initializer_list3826 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_variable_initializer_in_variable_initializer_list3828 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_variable_initializer3845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_initializer_in_variable_initializer3856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_174_in_sizeof_expression3871 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_sizeof_expression3875 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_unmanaged_type_in_sizeof_expression3879 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_sizeof_expression3883 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_110_in_checked_expression3898 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_checked_expression3902 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_checked_expression3906 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_checked_expression3910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_187_in_unchecked_expression3926 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_unchecked_expression3930 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_unchecked_expression3934 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_unchecked_expression3938 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_115_in_default_value_expression3954 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_default_value_expression3958 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_default_value_expression3962 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_default_value_expression3966 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_116_in_anonymous_method_expression3981 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_explicit_anonymous_function_signature_in_anonymous_method_expression3985 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_anonymous_method_expression3990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_explicit_anonymous_function_signature4004 = new BitSet(new long[]{0x0000800008000000L,0x45A426B680000000L,0x66823AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_explicit_anonymous_function_signature4008 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_explicit_anonymous_function_signature4013 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list4028 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_explicit_anonymous_function_parameter_list4033 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_in_explicit_anonymous_function_parameter_list4037 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_anonymous_function_parameter_modifier_in_explicit_anonymous_function_parameter4062 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_explicit_anonymous_function_parameter4067 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_explicit_anonymous_function_parameter4071 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_object_creation_expression4116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_68_in_object_creation_expression4139 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_list_in_object_creation_expression4143 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_object_creation_expression4148 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression4152 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_or_collection_initializer_in_object_creation_expression4177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_object_or_collection_initializer4203 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F680000DB4L,0x6F927A8525DDA492L,0x0000000000000634L});
	public static final BitSet FOLLOW_object_initializer_in_object_or_collection_initializer4207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_collection_initializer_in_object_or_collection_initializer4228 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_element_initializer_list_in_collection_initializer4245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_collection_initializer4249 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_collection_initializer4254 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_element_initializer_in_element_initializer_list4270 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_element_initializer_list4274 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_element_initializer_in_element_initializer_list4276 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_non_assignment_expression_in_element_initializer4294 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_element_initializer4307 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_list_in_element_initializer4311 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_element_initializer4315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_initializer_list_in_object_initializer4337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_object_initializer4342 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_object_initializer4347 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_initializer_in_member_initializer_list4363 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_member_initializer_list4367 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_member_initializer_in_member_initializer_list4369 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_member_initializer4386 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_member_initializer4390 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_initializer_value_in_member_initializer4394 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_initializer_value4410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_or_collection_initializer_in_initializer_value4423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_184_in_typeof_expression4442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_typeof_expression4446 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_unbound_type_name_in_typeof_expression4457 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_type_in_typeof_expression4503 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_192_in_typeof_expression4550 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_typeof_expression4555 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unbound_type_name_start_in_unbound_type_name4591 = new BitSet(new long[]{0x0000000000000400L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name4624 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name4628 = new BitSet(new long[]{0x0000000000000400L,0x0000000000020000L});
	public static final BitSet FOLLOW_unbound_type_name_part_in_unbound_type_name4649 = new BitSet(new long[]{0x0000000000000400L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_dimension_specifier_in_unbound_type_name4680 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_unbound_type_name_start4704 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_unbound_type_name_start4707 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_unbound_type_name_start4709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOT_in_unbound_type_name_part4725 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_unbound_type_name_part4729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_generic_dimension_specifier4744 = new BitSet(new long[]{0x0000000000200000L,0x0000000000000400L});
	public static final BitSet FOLLOW_commas_in_generic_dimension_specifier4748 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_generic_dimension_specifier4753 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_commas4769 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_namespace_or_type_name_in_type_name4792 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name4808 = new BitSet(new long[]{0x0000000000000402L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_namespace_or_type_name4813 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name4815 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_DOT_in_namespace_or_type_name4820 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_namespace_or_type_name4824 = new BitSet(new long[]{0x0000000000000402L});
	public static final BitSet FOLLOW_identifier_in_type_or_generic4856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_type_or_generic4860 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_type_or_generic4872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_qid_start_in_qid4907 = new BitSet(new long[]{0x0000200000000402L});
	public static final BitSet FOLLOW_qid_part_in_qid4911 = new BitSet(new long[]{0x0000200000000402L});
	public static final BitSet FOLLOW_predefined_type_in_qid_start4935 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_qid_start4965 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_qid_start4969 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_qid_start4983 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_qid_start4988 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_qid_start4992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_literal_in_qid_start5006 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_identifier_in_qid_part5048 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_generic_argument_list5065 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_arguments_in_generic_argument_list5069 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_generic_argument_list5073 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_type_arguments5089 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_arguments5092 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_type_arguments5094 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_predefined_type_in_type5135 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_type_name_in_type5139 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_rank_specifiers_in_type5144 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_type5148 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_predefined_type_in_type5184 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_type_name_in_type5188 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_69_in_type5194 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_89_in_type5199 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_type5213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_name_in_type5217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_type5230 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_type5232 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_predefined_type_in_non_nullable_type5259 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000020L});
	public static final BitSet FOLLOW_type_name_in_non_nullable_type5263 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000020L});
	public static final BitSet FOLLOW_rank_specifiers_in_non_nullable_type5286 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_non_nullable_type5290 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_non_nullable_type5320 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_192_in_non_nullable_type5353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_69_in_non_nullable_type5357 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_type_in_non_array_type5382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_array_type5396 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_unmanaged_type5410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_class_type5424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_pointer_type5438 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_block5457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_block5469 = new BitSet(new long[]{0x262D001C1C100020L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000063DL});
	public static final BitSet FOLLOW_statement_list_in_block5473 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_block5478 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_in_statement_list5492 = new BitSet(new long[]{0x262D001C1C100022L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043DL});
	public static final BitSet FOLLOW_assignment_in_expression5531 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_non_assignment_expression_in_expression5551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_expression_list5574 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_expression_list5578 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_expression_list5582 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_unary_expression_in_assignment5599 = new BitSet(new long[]{0x0000000000200000L,0x0000000040285249L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_assignment_operator_in_assignment5603 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_assignment5607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cast_expression_in_unary_expression5638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_primary_or_array_creation_expression_in_unary_expression5650 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000900L});
	public static final BitSet FOLLOW_72_in_unary_expression5654 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
	public static final BitSet FOLLOW_75_in_unary_expression5659 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_71_in_unary_expression5672 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5676 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINUS_in_unary_expression5689 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_61_in_unary_expression5706 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5710 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_202_in_unary_expression5723 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression5727 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pre_increment_expression_in_unary_expression5740 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pre_decrement_expression_in_unary_expression5753 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pointer_indirection_expression_in_unary_expression5766 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_addressof_expression_in_unary_expression5778 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_cast_expression5802 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_cast_expression5806 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_cast_expression5810 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_cast_expression5814 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_assignment_operator5829 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_73_in_assignment_operator5833 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_76_in_assignment_operator5837 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_70_in_assignment_operator5841 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_78_in_assignment_operator5845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_64_in_assignment_operator5849 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_67_in_assignment_operator5853 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_199_in_assignment_operator5857 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_94_in_assignment_operator5861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_83_in_assignment_operator5865 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GT_in_assignment_operator5869 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_88_in_assignment_operator5871 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_72_in_pre_increment_expression5887 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_pre_increment_expression5891 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_75_in_pre_decrement_expression5907 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_pre_decrement_expression5911 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_69_in_pointer_indirection_expression5926 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_pointer_indirection_expression5930 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_66_in_addressof_expression5945 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_addressof_expression5949 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_lambda_expression_in_non_assignment_expression5991 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_expression_in_non_assignment_expression6009 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conditional_expression_in_non_assignment_expression6022 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression6050 = new BitSet(new long[]{0x8000000000000002L,0x0000000000002020L});
	public static final BitSet FOLLOW_set_in_multiplicative_expression6055 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_multiplicative_expression6065 = new BitSet(new long[]{0x8000000000000002L,0x0000000000002020L});
	public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression6089 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_additive_expression6092 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_multiplicative_expression_in_additive_expression6100 = new BitSet(new long[]{0x0000000400000002L,0x0000000000000080L});
	public static final BitSet FOLLOW_additive_expression_in_shift_expression6118 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L});
	public static final BitSet FOLLOW_82_in_shift_expression6122 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_GT_in_shift_expression6124 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_shift_expression6126 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_additive_expression_in_shift_expression6129 = new BitSet(new long[]{0x0000000000200002L,0x0000000000040000L});
	public static final BitSet FOLLOW_shift_expression_in_relational_expression6146 = new BitSet(new long[]{0x0000000000200002L,0x0000000801120000L,0x0000000000004000L});
	public static final BitSet FOLLOW_set_in_relational_expression6174 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_shift_expression_in_relational_expression6191 = new BitSet(new long[]{0x0000000000200002L,0x0000000801120000L,0x0000000000004000L});
	public static final BitSet FOLLOW_set_in_relational_expression6221 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_non_nullable_type_in_relational_expression6229 = new BitSet(new long[]{0x0000000000200002L,0x0000000801120000L,0x0000000000004000L});
	public static final BitSet FOLLOW_relational_expression_in_equality_expression6264 = new BitSet(new long[]{0x4000000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_set_in_equality_expression6278 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_relational_expression_in_equality_expression6286 = new BitSet(new long[]{0x4000000000000002L,0x0000000000400000L});
	public static final BitSet FOLLOW_equality_expression_in_and_expression6303 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
	public static final BitSet FOLLOW_66_in_and_expression6306 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_equality_expression_in_and_expression6310 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
	public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression6327 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
	public static final BitSet FOLLOW_93_in_exclusive_or_expression6330 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_and_expression_in_exclusive_or_expression6334 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L});
	public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression6351 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_198_in_inclusive_or_expression6356 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_exclusive_or_expression_in_inclusive_or_expression6360 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression6377 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_65_in_conditional_and_expression6382 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_inclusive_or_expression_in_conditional_and_expression6386 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
	public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression6403 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_200_in_conditional_or_expression6407 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_conditional_and_expression_in_conditional_or_expression6411 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression6429 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_90_in_null_coalescing_expression6434 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_conditional_or_expression_in_null_coalescing_expression6438 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
	public static final BitSet FOLLOW_null_coalescing_expression_in_conditional_expression6455 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_89_in_conditional_expression6460 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_conditional_expression6464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_conditional_expression6468 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_conditional_expression6472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_function_signature_in_lambda_expression6499 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_87_in_lambda_expression6503 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_anonymous_function_body_in_lambda_expression6507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_anonymous_function_signature6521 = new BitSet(new long[]{0x0000800008000000L,0x45A426B680000000L,0x66823AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_explicit_anonymous_function_parameter_list_in_anonymous_function_signature6531 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6551 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_anonymous_function_signature6562 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_list_in_anonymous_function_signature6574 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6597 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_implicit_anonymous_function_parameter_list6602 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_implicit_anonymous_function_parameter_in_implicit_anonymous_function_parameter_list6606 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_implicit_anonymous_function_parameter6623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_anonymous_function_body6637 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_anonymous_function_body6649 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_from_clause_in_query_expression6668 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080004018090L,0x0000000000000004L});
	public static final BitSet FOLLOW_query_body_in_query_expression6672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_body_clauses_in_query_body6696 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080000000080L});
	public static final BitSet FOLLOW_select_or_group_clause_in_query_body6701 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_query_continuation_in_query_body6712 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_141_in_query_continuation6729 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_query_continuation6733 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080004018090L,0x0000000000000004L});
	public static final BitSet FOLLOW_query_body_in_query_continuation6737 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_body_clause_in_query_body_clauses6751 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000004018010L,0x0000000000000004L});
	public static final BitSet FOLLOW_from_clause_in_query_body_clause6767 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_let_clause_in_query_body_clause6779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_where_clause_in_query_body_clause6791 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_join_clause_in_query_body_clause6803 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_orderby_clause_in_query_body_clause6815 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_132_in_from_clause6829 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_from_clause6833 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_from_clause6838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_137_in_from_clause6842 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_from_clause6846 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_143_in_join_clause6861 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_join_clause6865 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_join_clause6870 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_137_in_join_clause6874 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_join_clause6878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_152_in_join_clause6882 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_join_clause6886 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_122_in_join_clause6890 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_join_clause6894 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_141_in_join_clause6897 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_join_clause6899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_144_in_let_clause6916 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_let_clause6920 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_let_clause6924 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_let_clause6928 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_154_in_orderby_clause6942 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_ordering_list_in_orderby_clause6946 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ordering_in_ordering_list6961 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_ordering_list6966 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_ordering_in_ordering_list6970 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_ordering6987 = new BitSet(new long[]{0x0000000000000000L,0x0020001000000000L});
	public static final BitSet FOLLOW_ordering_direction_in_ordering6992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_select_clause_in_select_or_group_clause7042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_group_clause_in_select_or_group_clause7054 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_171_in_select_clause7069 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_select_clause7073 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_135_in_group_clause7088 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_group_clause7092 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_105_in_group_clause7096 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_group_clause7100 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_194_in_where_clause7115 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_where_clause7119 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_boolean_expression7134 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_global_attribute_in_global_attributes7156 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_global_attribute7175 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_global_attribute_target_specifier_in_global_attribute7179 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_list_in_global_attribute7183 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000400L});
	public static final BitSet FOLLOW_74_in_global_attribute7187 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_global_attribute7192 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_global_attribute_target_in_global_attribute_target_specifier7208 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_global_attribute_target_specifier7212 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_sections_in_attributes7253 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_section_in_attribute_sections7271 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_attribute_section7288 = new BitSet(new long[]{0x0000000008000000L,0x4D20023680000000L,0x408019852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_target_specifier_in_attribute_section7292 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_list_in_attribute_section7297 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000400L});
	public static final BitSet FOLLOW_74_in_attribute_section7301 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_attribute_section7306 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_target_in_attribute_target_specifier7322 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_attribute_target_specifier7326 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attribute_in_attribute_list7382 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_attribute_list7385 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_attribute_in_attribute_list7387 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_attribute7406 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
	public static final BitSet FOLLOW_attribute_arguments_in_attribute7410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_attribute_arguments7428 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_RPAREN_in_attribute_arguments7433 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_positional_argument_in_attribute_arguments7537 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_named_argument_in_attribute_arguments7556 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_74_in_attribute_arguments7635 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_positional_argument_in_attribute_arguments7644 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000400L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_RPAREN_in_attribute_arguments7683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_positional_argument_in_positional_argument_list7725 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_positional_argument_list7728 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_positional_argument_in_positional_argument_list7730 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attribute_argument_expression_in_positional_argument7748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_named_argument_in_named_argument_list7764 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_named_argument_list7767 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_named_argument_in_named_argument_list7769 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_named_argument7787 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_named_argument7791 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_attribute_argument_expression_in_named_argument7795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_attribute_argument_expression7811 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_111_in_class_declaration7836 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_class_declaration7841 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_class_base_in_class_declaration7847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_class_declaration7854 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_class_body_in_class_declaration7861 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_class_declaration7865 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_class_base7915 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_interface_type_list_in_class_base7919 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_interface_type_list7945 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_interface_type_list7948 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_interface_type_list7952 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_197_in_class_body7976 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000617L});
	public static final BitSet FOLLOW_class_member_declarations_in_class_body7982 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_class_body7987 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_member_declaration_in_class_member_declarations8011 = new BitSet(new long[]{0x0000000008020002L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000417L});
	public static final BitSet FOLLOW_112_in_constant_declaration8042 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_constant_declaration8046 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_constant_declaration8050 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_constant_declaration8054 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constant_declarator_in_constant_declarators8069 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_constant_declarators8072 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarator_in_constant_declarators8074 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_constant_declarator8091 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_constant_declarator8096 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_constant_expression_in_constant_declarator8100 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_constant_expression8117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_declarators_in_field_declaration8133 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_field_declaration8137 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_declarator_in_variable_declarators8159 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_variable_declarators8162 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_variable_declarator_in_variable_declarators8166 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_variable_declarator8183 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_variable_declarator8186 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_variable_initializer_in_variable_declarator8190 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_method_header_in_method_declaration8225 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_method_body_in_method_declaration8229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_method_header8244 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_method_header8247 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_method_header8251 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_method_header8256 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_method_header8260 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_method_body8276 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_qid_in_member_name8291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_property_declaration8324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_property_declaration8328 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000101A00001020L});
	public static final BitSet FOLLOW_accessor_declarations_in_property_declaration8332 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_property_declaration8336 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_accessor_declarations8351 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000101A00001020L});
	public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations8371 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000101A00001000L});
	public static final BitSet FOLLOW_attributes_in_accessor_declarations8375 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000101A00001000L});
	public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations8380 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_accessor_declaration_in_accessor_declarations8401 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000001A00001020L});
	public static final BitSet FOLLOW_attributes_in_accessor_declarations8405 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001A00001020L});
	public static final BitSet FOLLOW_get_accessor_declaration_in_accessor_declarations8410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_accessor_modifier_in_get_accessor_declaration8427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_133_in_get_accessor_declaration8432 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_accessor_body_in_get_accessor_declaration8436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_accessor_modifier_in_set_accessor_declaration8451 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_172_in_set_accessor_declaration8456 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_accessor_body_in_set_accessor_declaration8460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_accessor_body8502 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_123_in_event_declaration8519 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_event_declaration8523 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_member_name_in_event_declaration8552 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_event_declaration8556 = new BitSet(new long[]{0x0000000000000000L,0x0000000208000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_event_accessor_declarations_in_event_declaration8560 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_event_declaration8564 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variable_declarators_in_event_declaration8584 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_event_declaration8588 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_event_modifiers8628 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_event_accessor_declarations8644 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations8651 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_attributes_in_event_accessor_declarations8655 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_remove_accessor_declaration_in_event_accessor_declarations8688 = new BitSet(new long[]{0x0000000000000000L,0x0000000208000000L});
	public static final BitSet FOLLOW_attributes_in_event_accessor_declarations8692 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_add_accessor_declaration_in_event_accessor_declarations8697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_97_in_add_accessor_declaration8714 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_add_accessor_declaration8718 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_167_in_remove_accessor_declaration8733 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_remove_accessor_declaration8737 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ENUM_in_enum_declaration8756 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_enum_declaration8760 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_enum_base_in_enum_declaration8764 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_enum_body_in_enum_declaration8769 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_enum_declaration8773 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_enum_base8789 = new BitSet(new long[]{0x0000000000000000L,0x0000240000000000L,0x2600220000040400L});
	public static final BitSet FOLLOW_integral_type_in_enum_base8793 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_enum_body8808 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852519A090L,0x0000000000000214L});
	public static final BitSet FOLLOW_enum_member_declarations_in_enum_body8811 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_74_in_enum_body8813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_enum_body8820 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations8835 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_enum_member_declarations8838 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_enum_member_declaration_in_enum_member_declarations8840 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attributes_in_enum_member_declaration8857 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_enum_member_declaration8862 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_enum_member_declaration8867 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_enum_member_declaration8871 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_116_in_delegate_declaration8942 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_return_type_in_delegate_declaration8946 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_delegate_declaration8950 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020010L});
	public static final BitSet FOLLOW_variant_generic_parameter_list_in_delegate_declaration8953 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_delegate_declaration8975 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_delegate_declaration8979 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_delegate_declaration8984 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_delegate_declaration8988 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_delegate_declaration8993 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_delegate_modifiers9008 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_variant_generic_parameter_list9025 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852D19A290L,0x0000000000000014L});
	public static final BitSet FOLLOW_variant_type_parameters_in_variant_generic_parameter_list9029 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_variant_generic_parameter_list9033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters9048 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_variant_type_parameters9051 = new BitSet(new long[]{0x0000000008000000L,0x4520023688000000L,0x408018852D19A290L,0x0000000000000014L});
	public static final BitSet FOLLOW_variant_type_variable_name_in_variant_type_parameters9053 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attributes_in_variant_type_variable_name9070 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852D19A290L,0x0000000000000014L});
	public static final BitSet FOLLOW_variance_annotation_in_variant_type_variable_name9075 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_variable_name_in_variant_type_variable_name9080 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses9120 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraints_clauses9125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clause_in_type_parameter_constraints_clauses9129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_194_in_type_parameter_constraints_clause9147 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_variable_name_in_type_parameter_constraints_clause9151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_type_parameter_constraints_clause9155 = new BitSet(new long[]{0x0000000008000000L,0x4520823680000000L,0x408418852559A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_parameter_constraint_list_in_type_parameter_constraints_clause9159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_type_parameter_constraint_list9222 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraint_list9233 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list9237 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraint_list9244 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list9248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secondary_constraint_list_in_type_parameter_constraint_list9262 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_type_parameter_constraint_list9267 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list9271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_constraint_in_type_parameter_constraint_list9285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list9304 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_secondary_constraint_list9307 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_secondary_constraint_in_secondary_constraint_list9309 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_type_name_in_secondary_constraint9326 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_type_variable_name9350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_150_in_constructor_constraint9365 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_constructor_constraint9369 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_constructor_constraint9373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_return_type9388 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_return_type9401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_formal_parameter_in_formal_parameter_list9415 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_formal_parameter_list9418 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_in_formal_parameter_list9420 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_attributes_in_formal_parameter9437 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_fixed_parameter_in_formal_parameter9443 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_parameter_array_in_formal_parameter9447 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_95_in_formal_parameter9461 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters9483 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_fixed_parameters9488 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66923AC52D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_fixed_parameter_in_fixed_parameters9492 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_parameter_modifier_in_fixed_parameter9510 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_fixed_parameter9515 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_fixed_parameter9519 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_default_argument_in_fixed_parameter9523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_85_in_default_argument9540 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_default_argument9542 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_158_in_parameter_array9579 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_parameter_array9583 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_parameter_array9587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_139_in_interface_declaration9604 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_interface_declaration9608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000028000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_variant_generic_parameter_list_in_interface_declaration9612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_interface_base_in_interface_declaration9628 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_declaration9633 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_interface_body_in_interface_declaration9638 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_interface_declaration9642 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_interface_modifiers9659 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_interface_base9679 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_interface_type_list_in_interface_base9681 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_interface_body9696 = new BitSet(new long[]{0x0000000008000000L,0x6DA426B788000000L,0xF6833EBF35DDB492L,0x0000000000000217L});
	public static final BitSet FOLLOW_interface_member_declarations_in_interface_body9700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_interface_body9705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_member_declaration_in_interface_member_declarations9720 = new BitSet(new long[]{0x0000000008000002L,0x6DA426B788000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_attributes_in_interface_member_declaration9736 = new BitSet(new long[]{0x0000000008000000L,0x6DA426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_interface_member_declaration9742 = new BitSet(new long[]{0x0000000008000000L,0x4DA426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_192_in_interface_member_declaration9762 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration9766 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_event_declaration_in_interface_member_declaration9786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_interface_member_declaration9806 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x409018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_interface_method_declaration_in_interface_member_declaration9822 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_property_declaration_in_interface_member_declaration9861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_indexer_declaration_in_interface_member_declaration9899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_interface_property_declaration9951 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_interface_property_declaration9955 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000100000000020L});
	public static final BitSet FOLLOW_interface_accessor_declarations_in_interface_property_declaration9959 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_interface_property_declaration9963 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_interface_method_declaration9978 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020010L});
	public static final BitSet FOLLOW_generic_argument_list_in_interface_method_declaration9982 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_interface_method_declaration9997 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_interface_method_declaration10001 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_interface_method_declaration10006 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_interface_method_declaration10010 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_method_declaration10015 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_123_in_interface_event_declaration10040 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_interface_event_declaration10044 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_interface_event_declaration10048 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_event_declaration10052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_interface_indexer_declaration10078 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_interface_indexer_declaration10082 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_interface_indexer_declaration10086 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_interface_indexer_declaration10090 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_interface_indexer_declaration10094 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000100000000020L});
	public static final BitSet FOLLOW_interface_accessor_declarations_in_interface_indexer_declaration10098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_interface_indexer_declaration10102 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations10117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000020L});
	public static final BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations10140 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations10144 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations10149 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_set_accessor_declaration_in_interface_accessor_declarations10170 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_attributes_in_interface_accessor_declarations10174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_interface_get_accessor_declaration_in_interface_accessor_declarations10179 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_133_in_interface_get_accessor_declaration10196 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_get_accessor_declaration10200 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_172_in_interface_set_accessor_declaration10231 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_interface_set_accessor_declaration10235 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_in_method_modifiers10266 = new BitSet(new long[]{0x0000000000000002L,0x2000000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_178_in_struct_declaration10292 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_or_generic_in_struct_declaration10296 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_struct_interfaces_in_struct_declaration10300 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000024L});
	public static final BitSet FOLLOW_type_parameter_constraints_clauses_in_struct_declaration10305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_struct_body_in_struct_declaration10310 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_SEMI_in_struct_declaration10314 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_modifier_in_struct_modifiers10330 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x1000001A00401000L});
	public static final BitSet FOLLOW_79_in_struct_interfaces10381 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_interface_type_list_in_struct_interfaces10385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_struct_body10399 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000217L});
	public static final BitSet FOLLOW_struct_member_declarations_in_struct_body10403 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_struct_body10408 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_member_declaration_in_struct_member_declarations10422 = new BitSet(new long[]{0x0000000008020002L,0x7DB5A6B788000000L,0xF6873EBFB5DDBD92L,0x0000000000000017L});
	public static final BitSet FOLLOW_attributes_in_struct_member_declaration10438 = new BitSet(new long[]{0x0000000008020000L,0x7DB5A6B780000000L,0xF6873EBFB5DDBD92L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_struct_member_declaration10445 = new BitSet(new long[]{0x0000000008020000L,0x5DB5A6B680000000L,0x66863A85A59DAD92L,0x0000000000000015L});
	public static final BitSet FOLLOW_112_in_struct_member_declaration10458 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_struct_member_declaration10462 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_struct_member_declaration10466 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_struct_member_declaration10470 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_event_declaration_in_struct_member_declaration10482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_159_in_struct_member_declaration10510 = new BitSet(new long[]{0x042900180C100020L,0x45A4A6B680000000L,0x66863A85259DAC92L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration10513 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_struct_member_declaration10545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_struct_member_declaration10577 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_struct_member_declaration10609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interface_declaration_in_struct_member_declaration10623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_class_declaration_in_struct_member_declaration10643 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_192_in_struct_member_declaration10671 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration10675 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_struct_member_declaration10687 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66923A85279DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_struct_member_declaration10701 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_property_declaration_in_struct_member_declaration10734 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_name_in_struct_member_declaration10771 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_struct_member_declaration10773 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_indexer_declaration_in_struct_member_declaration10775 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_indexer_declaration_in_struct_member_declaration10798 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_field_declaration_in_struct_member_declaration10825 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_operator_declaration_in_struct_member_declaration10850 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_struct_declaration_in_struct_member_declaration10889 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_enum_declaration_in_struct_member_declaration10909 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_declaration_in_struct_member_declaration10937 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conversion_operator_declaration_in_struct_member_declaration10957 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_declaration_in_struct_member_declaration10969 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_indexer_declarator_in_indexer_declaration11014 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_indexer_declaration11018 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L,0x0000101A00001020L});
	public static final BitSet FOLLOW_accessor_declarations_in_indexer_declaration11022 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_indexer_declaration11026 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_indexer_declarator11050 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_indexer_declarator11054 = new BitSet(new long[]{0x0000000008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_indexer_declarator11058 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_indexer_declarator11062 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_operator_declarator_in_operator_declaration11087 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_operator_body_in_operator_declaration11091 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_153_in_operator_declarator11106 = new BitSet(new long[]{0xE020000400300000L,0x00000000215629A4L,0x0000000000000000L,0x0000000000000440L});
	public static final BitSet FOLLOW_set_in_operator_declarator11128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_operator_declarator11138 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_operator_declarator11142 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_operator_declarator11146 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator11149 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator11153 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_overloadable_unary_operator_in_operator_declarator11174 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_unary_operator_declarator_in_operator_declarator11178 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_overloadable_binary_operator_in_operator_declarator11198 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_binary_operator_declarator_in_operator_declarator11202 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RPAREN_in_unary_operator_declarator11221 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_binary_operator_declarator11278 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_binary_operator_declarator11282 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_binary_operator_declarator11286 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_binary_operator_declarator11290 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_69_in_overloadable_binary_operator11308 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_77_in_overloadable_binary_operator11312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_63_in_overloadable_binary_operator11316 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_66_in_overloadable_binary_operator11320 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_198_in_overloadable_binary_operator11324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_93_in_overloadable_binary_operator11328 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_82_in_overloadable_binary_operator11332 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GT_in_overloadable_binary_operator11336 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_GT_in_overloadable_binary_operator11338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_86_in_overloadable_binary_operator11342 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_62_in_overloadable_binary_operator11346 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GT_in_overloadable_binary_operator11350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_81_in_overloadable_binary_operator11354 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_88_in_overloadable_binary_operator11358 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_84_in_overloadable_binary_operator11362 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_conversion_operator_declarator_in_conversion_operator_declaration11379 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_operator_body_in_conversion_operator_declaration11383 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_conversion_operator_declarator11398 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_153_in_conversion_operator_declarator11407 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_conversion_operator_declarator11411 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_conversion_operator_declarator11415 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_conversion_operator_declarator11419 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_conversion_operator_declarator11423 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_conversion_operator_declarator11427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_operator_body11442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_declarator_in_constructor_declaration11459 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_constructor_body_in_constructor_declaration11463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_constructor_declarator11478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_constructor_declarator11482 = new BitSet(new long[]{0x0000800008000000L,0x45A426B688000000L,0x66923AC56D9DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_formal_parameter_list_in_constructor_declarator11486 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_constructor_declarator11491 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
	public static final BitSet FOLLOW_constructor_initializer_in_constructor_declarator11495 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_79_in_constructor_initializer11511 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_set_in_constructor_initializer11515 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_constructor_initializer11525 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927AC52DDDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_argument_list_in_constructor_initializer11529 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_constructor_initializer11534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_constructor_body11549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_202_in_destructor_declaration11572 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_destructor_declaration11575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_destructor_declaration11579 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_destructor_declaration11583 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_destructor_body_in_destructor_declaration11588 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_destructor_body11603 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_invocation_start_in_invocation_expression11620 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_arguments_in_invocation_expression11642 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_invocation_part_in_invocation_expression11646 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_invocation_part_in_invocation_expression11699 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000010L});
	public static final BitSet FOLLOW_arguments_in_invocation_expression11705 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_invocation_start11720 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_invocation_start11751 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_generic_argument_list_in_invocation_start11755 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_invocation_start11767 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_102_in_invocation_start11780 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_invocation_start11792 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
	public static final BitSet FOLLOW_80_in_invocation_start11797 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_invocation_start11801 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_typeof_expression_in_invocation_start11815 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_access_identifier_in_invocation_part11852 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_brackets_in_invocation_part11864 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_statement_in_statement11888 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_labeled_statement_in_statement11910 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_embedded_statement_in_statement11922 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_embedded_statement11946 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_selection_statement_in_embedded_statement11958 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_iteration_statement_in_embedded_statement11978 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_jump_statement_in_embedded_statement11998 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_try_statement_in_embedded_statement12026 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_checked_statement_in_embedded_statement12038 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unchecked_statement_in_embedded_statement12050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_lock_statement_in_embedded_statement12062 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_using_statement_in_embedded_statement12074 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_yield_statement_in_embedded_statement12087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unsafe_statement_in_embedded_statement12100 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fixed_statement_in_embedded_statement12112 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_statement_in_embedded_statement12124 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_128_in_fixed_statement12155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_fixed_statement12159 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_pointer_type_in_fixed_statement12163 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_fixed_pointer_declarators_in_fixed_statement12165 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_fixed_statement12169 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_fixed_statement12173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators12188 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_fixed_pointer_declarators12193 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_fixed_pointer_declarator_in_fixed_pointer_declarators12197 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_fixed_pointer_declarator12214 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_fixed_pointer_declarator12218 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_fixed_pointer_initializer_in_fixed_pointer_declarator12222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_fixed_pointer_initializer12246 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_188_in_unsafe_statement12260 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_unsafe_statement12264 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_labeled_statement12278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_labeled_statement12282 = new BitSet(new long[]{0x262D001C1C100020L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043DL});
	public static final BitSet FOLLOW_statement_in_labeled_statement12286 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_declaration_statement12302 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_local_constant_declaration_in_declaration_statement12315 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_declaration_statement12318 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_type_in_local_variable_declaration12333 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_local_variable_declarators_in_local_variable_declaration12337 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_190_in_local_variable_type12358 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_120_in_local_variable_type12376 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_type_in_local_variable_type12388 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators12403 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_local_variable_declarators12406 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_local_variable_declarator_in_local_variable_declarators12408 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_identifier_in_local_variable_declarator12425 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_local_variable_declarator12428 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F92FA8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_declarator12432 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_local_variable_initializer12450 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_initializer_in_local_variable_initializer12462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_stackalloc_initializer_in_local_variable_initializer12475 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_175_in_stackalloc_initializer12489 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_unmanaged_type_in_stackalloc_initializer12493 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_91_in_stackalloc_initializer12497 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_stackalloc_initializer12501 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_92_in_stackalloc_initializer12505 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_112_in_local_constant_declaration12520 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_local_constant_declaration12524 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_constant_declarators_in_local_constant_declaration12528 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_expression_statement12543 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_expression_statement12547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_statement_expression12564 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_if_statement_in_selection_statement12587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_switch_statement_in_selection_statement12599 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IF_in_if_statement12623 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_if_statement12627 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_if_statement12631 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_if_statement12635 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_if_statement12639 = new BitSet(new long[]{0x0000000000000002L,0x0200000000000000L});
	public static final BitSet FOLLOW_else_statement_in_if_statement12648 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_121_in_else_statement12673 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_else_statement12677 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_179_in_switch_statement12699 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_switch_statement12703 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_switch_statement12707 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_switch_statement12711 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_switch_block_in_switch_statement12715 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_197_in_switch_block12730 = new BitSet(new long[]{0x0000000000000000L,0x0008080000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_switch_sections_in_switch_block12734 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_201_in_switch_block12739 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_switch_section_in_switch_sections12754 = new BitSet(new long[]{0x0000000000000002L,0x0008080000000000L});
	public static final BitSet FOLLOW_switch_labels_in_switch_section12770 = new BitSet(new long[]{0x262D001C1C100020L,0x45FF67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043DL});
	public static final BitSet FOLLOW_statement_list_in_switch_section12774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_switch_label_in_switch_labels12789 = new BitSet(new long[]{0x0000000000000002L,0x0008080000000000L});
	public static final BitSet FOLLOW_107_in_switch_label12806 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_constant_expression_in_switch_label12810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_switch_label12814 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_115_in_switch_label12828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_switch_label12832 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_while_statement_in_iteration_statement12848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_do_statement_in_iteration_statement12860 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_for_statement_in_iteration_statement12872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_foreach_statement_in_iteration_statement12884 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_195_in_while_statement12899 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_while_statement12903 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_while_statement12907 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_while_statement12911 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_while_statement12915 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_118_in_do_statement12930 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_do_statement12934 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_195_in_do_statement12938 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_do_statement12942 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_boolean_expression_in_do_statement12946 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_do_statement12950 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_do_statement12954 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_130_in_for_statement12969 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_for_statement12973 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000415L});
	public static final BitSet FOLLOW_for_initializer_in_for_statement12977 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_for_statement12982 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_for_condition_in_for_statement12986 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_for_statement12991 = new BitSet(new long[]{0x2429801C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_for_iterator_in_for_statement12995 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_for_statement13000 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_for_statement13004 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_for_initializer13025 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_expression_list_in_for_initializer13037 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_boolean_expression_in_for_condition13061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_expression_list_in_for_iterator13076 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_statement_expression_in_statement_expression_list13091 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_74_in_statement_expression_list13094 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_statement_expression_in_statement_expression_list13096 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
	public static final BitSet FOLLOW_131_in_foreach_statement13113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_foreach_statement13117 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_local_variable_type_in_foreach_statement13121 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_foreach_statement13125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_137_in_foreach_statement13129 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_foreach_statement13133 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_foreach_statement13137 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_foreach_statement13141 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_break_statement_in_jump_statement13156 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_continue_statement_in_jump_statement13168 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_goto_statement_in_jump_statement13180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_return_statement_in_jump_statement13192 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_throw_statement_in_jump_statement13204 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_104_in_break_statement13219 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_break_statement13223 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_113_in_continue_statement13238 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_continue_statement13242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_134_in_goto_statement13257 = new BitSet(new long[]{0x0000000008000000L,0x45280A3680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_goto_statement13263 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_107_in_goto_statement13292 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_constant_expression_in_goto_statement13296 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_115_in_goto_statement13325 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_goto_statement13330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_168_in_return_statement13345 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_return_statement13349 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_return_statement13354 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_181_in_throw_statement13369 = new BitSet(new long[]{0x242D001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_throw_statement13373 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_throw_statement13378 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_182_in_try_statement13391 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_try_statement13395 = new BitSet(new long[]{0x0000000000000000L,0x8000100000000000L});
	public static final BitSet FOLLOW_catch_clauses_in_try_statement13401 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L});
	public static final BitSet FOLLOW_finally_clause_in_try_statement13405 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_finally_clause_in_try_statement13452 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_108_in_catch_clauses13468 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_specific_catch_clauses_in_catch_clauses13473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_general_catch_clause_in_catch_clauses13477 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses13493 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
	public static final BitSet FOLLOW_108_in_specific_catch_clauses13498 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_specific_catch_clause_in_specific_catch_clauses13503 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
	public static final BitSet FOLLOW_general_catch_clause_in_specific_catch_clauses13507 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
	public static final BitSet FOLLOW_68_in_specific_catch_clause13524 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_class_type_in_specific_catch_clause13528 = new BitSet(new long[]{0x0000800008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_specific_catch_clause13532 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_specific_catch_clause13537 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_specific_catch_clause13541 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_general_catch_clause13556 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_127_in_finally_clause13571 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_finally_clause13575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_110_in_checked_statement13590 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_checked_statement13594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_187_in_unchecked_statement13609 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_block_in_unchecked_statement13613 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_145_in_lock_statement13628 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_lock_statement13632 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_lock_statement13635 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_lock_statement13639 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_lock_statement13643 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_in_using_statement13658 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_using_statement13662 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000415L});
	public static final BitSet FOLLOW_resource_acquisition_in_using_statement13667 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_using_statement13671 = new BitSet(new long[]{0x262D001C1C100020L,0x45FE67F6800009B4L,0x7FFA7B8525DFA4DFL,0x000000000000043CL});
	public static final BitSet FOLLOW_embedded_statement_in_using_statement13676 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_resource_acquisition13697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_resource_acquisition13709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_196_in_yield_statement13724 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_168_in_yield_statement13729 = new BitSet(new long[]{0x2429001C0C100020L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_expression_in_yield_statement13733 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_yield_statement13737 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_104_in_yield_statement13759 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_yield_statement13763 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assignment_in_assignment_list16976 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_assignment_list16978 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_attributes_in_field_declarations16996 = new BitSet(new long[]{0x0000000008000000L,0x65A426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_field_declarations17001 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_field_declarations17006 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_field_declaration_in_field_declarations17010 = new BitSet(new long[]{0x0000000008000002L,0x65A426B788000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_attributes_in_property_declaration_list17028 = new BitSet(new long[]{0x0000000008000000L,0x65A426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_modifiers_in_property_declaration_list17033 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_property_declaration_list17038 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_property_declaration_in_property_declaration_list17042 = new BitSet(new long[]{0x0000000008000002L,0x65A426B788000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_constant_declaration_in_constant_declarations17059 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L});
	public static final BitSet FOLLOW_literal_in_literals17074 = new BitSet(new long[]{0x0429001804100022L});
	public static final BitSet FOLLOW_attributes_in_delegate_declaration_list17091 = new BitSet(new long[]{0x0000000000000000L,0x2010000100000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_modifiers_in_delegate_declaration_list17096 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_delegate_declaration_in_delegate_declaration_list17101 = new BitSet(new long[]{0x0000000000000002L,0x2010000108000000L,0x9001043A10401000L,0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_local_variable_declaration_list17119 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_local_variable_declaration_list17121 = new BitSet(new long[]{0x0000000008000002L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_local_variable_initializer_in_local_variable_initializer_list17139 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_local_variable_initializer_list17141 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F92FA8525DDA492L,0x0000000000000434L});
	public static final BitSet FOLLOW_expression_in_expression_list_test17159 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_expression_list_test17161 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_unary_expression_in_unary_expression_list17179 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_unary_expression_list17181 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_invocation_expression_in_invocation_expression_list17199 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_invocation_expression_list17201 = new BitSet(new long[]{0x0000000008000002L,0x45A426F680000000L,0x67923A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_primary_expression_in_primary_expression_list17219 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_primary_expression_list17221 = new BitSet(new long[]{0x042900180C100022L,0x45BC66F680000010L,0x6F927A8525DDA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_non_assignment_expression_in_non_assignment_expression_list17239 = new BitSet(new long[]{0x0004000000000000L});
	public static final BitSet FOLLOW_SEMI_in_non_assignment_expression_list17241 = new BitSet(new long[]{0x2429001C0C100022L,0x45BC66F6800009B4L,0x6F927A8525DDA492L,0x0000000000000414L});
	public static final BitSet FOLLOW_modifiers_in_method_declarations17259 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_192_in_method_declarations17263 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_type_in_method_declarations17267 = new BitSet(new long[]{0x042900180C100020L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000014L});
	public static final BitSet FOLLOW_method_declaration_in_method_declarations17270 = new BitSet(new long[]{0x0000000008000002L,0x65A426B780000000L,0xF6833EBF35DDB492L,0x0000000000000017L});
	public static final BitSet FOLLOW_159_in_synpred1_cs485 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred2_cs1071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_synpred2_cs1075 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred3_cs1106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred3_cs1110 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred4_cs1139 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_synpred4_cs1143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_180_in_synpred4_cs1147 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_180_in_synpred5_cs1520 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_synpred5_cs1525 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_102_in_synpred6_cs1552 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_brackets_in_synpred6_cs1556 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_object_creation_expression_in_synpred7_cs1606 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred7_cs1610 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delegate_creation_expression_in_synpred8_cs1787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred9_cs2166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred9_cs2171 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_68_in_synpred10_cs2612 = new BitSet(new long[]{0x0000000008000000L,0x45A426B680000000L,0x66823A85259DA492L,0x0000000000000015L});
	public static final BitSet FOLLOW_type_in_synpred10_cs2616 = new BitSet(new long[]{0x0000800000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred10_cs2620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_array_creation_expression_in_synpred11_cs3198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_synpred12_cs3425 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred12_cs3429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unbound_type_name_in_synpred13_cs4452 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_generic_dimension_specifier_in_synpred14_cs4615 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_synpred14_cs4619 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred15_cs4847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred15_cs4851 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred16_cs4948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred16_cs4953 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_synpred17_cs5121 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_type_name_in_synpred17_cs5125 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_rank_specifiers_in_synpred17_cs5129 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predefined_type_in_synpred18_cs5163 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_type_name_in_synpred18_cs5167 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000020L});
	public static final BitSet FOLLOW_69_in_synpred18_cs5172 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
	public static final BitSet FOLLOW_89_in_synpred18_cs5177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_unary_expression_in_synpred19_cs5522 = new BitSet(new long[]{0x0000000000200000L,0x0000000040285249L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_assignment_operator_in_synpred19_cs5526 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cast_expression_in_synpred20_cs5633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_anonymous_function_signature_in_synpred21_cs5975 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_87_in_synpred21_cs5979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_query_expression_in_synpred22_cs6004 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_141_in_synpred23_cs6707 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_74_in_synpred24_cs7543 = new BitSet(new long[]{0x0000000008000000L,0x4520023680000000L,0x408018852519A090L,0x0000000000000014L});
	public static final BitSet FOLLOW_identifier_in_synpred24_cs7547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_85_in_synpred24_cs7551 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred25_cs8543 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred25_cs8547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred26_cs9813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_synpred26_cs9817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred27_cs9852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred27_cs9856 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred28_cs10692 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_68_in_synpred28_cs10696 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred29_cs10725 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_197_in_synpred29_cs10729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_member_name_in_synpred30_cs10758 = new BitSet(new long[]{0x0000000000000400L});
	public static final BitSet FOLLOW_DOT_in_synpred30_cs10762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_180_in_synpred30_cs10766 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_arguments_in_synpred31_cs11627 = new BitSet(new long[]{0x0000200000000400L,0x0000000008000000L});
	public static final BitSet FOLLOW_set_in_synpred31_cs11631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred32_cs11734 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_81_in_synpred32_cs11739 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_declaration_statement_in_synpred33_cs11883 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_identifier_in_synpred34_cs11901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_79_in_synpred34_cs11905 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_190_in_synpred35_cs12353 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_120_in_synpred36_cs12371 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_121_in_synpred37_cs12643 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_synpred38_cs13020 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_local_variable_declaration_in_synpred39_cs13692 = new BitSet(new long[]{0x0000000000000002L});
}
